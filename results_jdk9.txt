[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 11, 2017, 9:51:10 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}core...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:247:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:255:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] two warnings found
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 7 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsonCodecMakerBenchmark.scala:22:25: Unused import
[warn] import scala.reflect.io.Streamable
[warn]                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:12:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:13:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:14:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:15:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:16:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readValueAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("A")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("B")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("C")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:75: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val googleMapsAPICodec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:64: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, req0, req1)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val twitterAPICodec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:14:18: local val v1 in value arraysFormat is never used
[warn]     implicit val v1: Format[Array[BigInt]] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:20:18: local val v1 in value bitSetsFormat is never used
[warn]     implicit val v1: Reads[BitSet] = Reads[BitSet](js => JsSuccess(BitSet(js.as[Array[Int]]: _*)))
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:21:18: local val v2 in value bitSetsFormat is never used
[warn]     implicit val v2: Reads[mutable.BitSet] =
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:28:18: local val v1 in value mapsFormat is never used
[warn]     implicit val v1: OFormat[HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:31:18: local val v2 in value mapsFormat is never used
[warn]     implicit val v2: OFormat[Map[Int, HashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:18: local val v1 in value mutableMapsFormat is never used
[warn]     implicit val v1: OFormat[mutable.HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:46:18: local val v2 in value mutableMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.Map[Int, mutable.OpenHashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:63:18: local val v1 in value intAndLongMapsFormat is never used
[warn]     implicit val v1: OFormat[IntMap[Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:68:18: local val v2 in value intAndLongMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.LongMap[LongMap[Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:80:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:87:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:88:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:89:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:94:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:95:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:96:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:108:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:109:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:111:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] 20 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 295 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Done packaging.
[info] Compiling 123 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[error] WARNING: An illegal reflective access operation has occurred
[error] WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/tmp/sbt_7eb0817c/target/1ea93b88/jmh-core-1.19.jar) to field java.io.PrintStream.charOut
[error] WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
[error] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[error] WARNING: All illegal access operations will be denied in a future release
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 971326.399 ops/s
[info] # Warmup Iteration   2: 1378974.509 ops/s
[info] # Warmup Iteration   3: 1462794.964 ops/s
[info] # Warmup Iteration   4: 1444819.903 ops/s
[info] # Warmup Iteration   5: 1449174.708 ops/s
[info] Iteration   1: 1448402.633 ops/s
[info]                  ·gc.alloc.rate:                   2112.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              2296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2016.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2191.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1439703.180 ops/s
[info]                  ·gc.alloc.rate:                   2100.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              2296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2215.820 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1431745.542 ops/s
[info]                  ·gc.alloc.rate:                   2088.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              2296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2234.800 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1458105.409 ops/s
[info]                  ·gc.alloc.rate:                   2127.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              2296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2377.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2566.220 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1449174.125 ops/s
[info]                  ·gc.alloc.rate:                   2114.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              2296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2040.264 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2215.899 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1445426.178 ±(99.9%) 38678.459 ops/s [Average]
[info]   (min, avg, max) = (1431745.542, 1445426.178, 1458105.409), stdev = 10044.673
[info]   CI (99.9%): [1406747.719, 1484104.637] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2108.484 ±(99.9%) 56.597 MB/sec [Average]
[info]   (min, avg, max) = (2088.480, 2108.484, 2127.001), stdev = 14.698
[info]   CI (99.9%): [2051.887, 2165.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2296.000, 2296.000, 2296.000), stdev = 0.001
[info]   CI (99.9%): [2296.000, 2296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.073 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.073, 0.137), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   2098.689 ±(99.9%) 600.748 MB/sec [Average]
[info]   (min, avg, max) = (2016.327, 2098.689, 2377.331), stdev = 156.012
[info]   CI (99.9%): [1497.941, 2699.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2284.765 ±(99.9%) 608.796 B/op [Average]
[info]   (min, avg, max) = (2191.084, 2284.765, 2566.220), stdev = 158.102
[info]   CI (99.9%): [1675.969, 2893.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.84% complete, ETA 00:31:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33416.888 ops/s
[info] # Warmup Iteration   2: 196681.568 ops/s
[info] # Warmup Iteration   3: 198879.273 ops/s
[info] # Warmup Iteration   4: 202493.934 ops/s
[info] # Warmup Iteration   5: 203724.233 ops/s
[info] Iteration   1: 202218.851 ops/s
[info]                  ·gc.alloc.rate:                   357.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              2784.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2514.533 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 204068.141 ops/s
[info]                  ·gc.alloc.rate:                   360.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              2784.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2491.753 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 202258.490 ops/s
[info]                  ·gc.alloc.rate:                   357.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              2784.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      650.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5059.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 175560.962 ops/s
[info]                  ·gc.alloc.rate:                   310.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              2784.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.810 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2929.167 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 203120.768 ops/s
[info]                  ·gc.alloc.rate:                   359.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              2784.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.778 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2531.782 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   197445.443 ±(99.9%) 47197.916 ops/s [Average]
[info]   (min, avg, max) = (175560.962, 197445.443, 204068.141), stdev = 12257.149
[info]   CI (99.9%): [150247.527, 244643.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   349.267 ±(99.9%) 83.363 MB/sec [Average]
[info]   (min, avg, max) = (310.614, 349.267, 360.947), stdev = 21.649
[info]   CI (99.9%): [265.904, 432.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   2784.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2784.002, 2784.002, 2784.002), stdev = 0.001
[info]   CI (99.9%): [2784.002, 2784.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.508 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.312), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.625 ±(99.9%) 3.943 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.625, 2.430), stdev = 1.024
[info]   CI (99.9%): [≈ 0, 4.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   389.976 ±(99.9%) 560.260 MB/sec [Average]
[info]   (min, avg, max) = (323.007, 389.976, 650.229), stdev = 145.498
[info]   CI (99.9%): [≈ 0, 950.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   3105.257 ±(99.9%) 4262.980 B/op [Average]
[info]   (min, avg, max) = (2491.753, 3105.257, 5059.049), stdev = 1107.082
[info]   CI (99.9%): [≈ 0, 7368.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.68% complete, ETA 00:31:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 425674.913 ops/s
[info] # Warmup Iteration   2: 450352.628 ops/s
[info] # Warmup Iteration   3: 460439.850 ops/s
[info] # Warmup Iteration   4: 459654.876 ops/s
[info] # Warmup Iteration   5: 462149.622 ops/s
[info] Iteration   1: 460786.826 ops/s
[info]                  ·gc.alloc.rate:                   299.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 873.690 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 456938.341 ops/s
[info]                  ·gc.alloc.rate:                   297.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1132.297 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 462071.873 ops/s
[info]                  ·gc.alloc.rate:                   300.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1119.689 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 457460.407 ops/s
[info]                  ·gc.alloc.rate:                   297.705 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1127.560 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 461928.584 ops/s
[info]                  ·gc.alloc.rate:                   300.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              1024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.367 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1116.639 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   459837.206 ±(99.9%) 9495.169 ops/s [Average]
[info]   (min, avg, max) = (456938.341, 459837.206, 462071.873), stdev = 2465.865
[info]   CI (99.9%): [450342.037, 469332.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   299.103 ±(99.9%) 5.872 MB/sec [Average]
[info]   (min, avg, max) = (297.247, 299.103, 300.610), stdev = 1.525
[info]   CI (99.9%): [293.231, 304.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1024.001, 1024.001, 1024.001), stdev = 0.001
[info]   CI (99.9%): [1024.001, 1024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.638 ±(99.9%) 5.182 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.638, 3.044), stdev = 1.346
[info]   CI (99.9%): [≈ 0, 5.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2.197 ±(99.9%) 17.855 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.197, 10.488), stdev = 4.637
[info]   CI (99.9%): [≈ 0, 20.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   313.662 ±(99.9%) 124.691 MB/sec [Average]
[info]   (min, avg, max) = (255.744, 313.662, 328.701), stdev = 32.382
[info]   CI (99.9%): [188.971, 438.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1073.975 ±(99.9%) 431.791 B/op [Average]
[info]   (min, avg, max) = (873.690, 1073.975, 1132.297), stdev = 112.135
[info]   CI (99.9%): [642.184, 1505.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.52% complete, ETA 00:31:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1696771.797 ops/s
[info] # Warmup Iteration   2: 1774445.916 ops/s
[info] # Warmup Iteration   3: 1778524.616 ops/s
[info] # Warmup Iteration   4: 1842620.847 ops/s
[info] # Warmup Iteration   5: 1865151.701 ops/s
[info] Iteration   1: 1849235.423 ops/s
[info]                  ·gc.alloc.rate:                   629.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 556.740 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1853740.329 ops/s
[info]                  ·gc.alloc.rate:                   631.256 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 556.519 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1838809.528 ops/s
[info]                  ·gc.alloc.rate:                   626.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 562.171 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1843211.931 ops/s
[info]                  ·gc.alloc.rate:                   627.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 561.959 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1834218.378 ops/s
[info]                  ·gc.alloc.rate:                   624.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 566.432 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1843843.118 ±(99.9%) 30160.817 ops/s [Average]
[info]   (min, avg, max) = (1834218.378, 1843843.118, 1853740.329), stdev = 7832.668
[info]   CI (99.9%): [1813682.301, 1874003.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   627.903 ±(99.9%) 10.301 MB/sec [Average]
[info]   (min, avg, max) = (624.632, 627.903, 631.256), stdev = 2.675
[info]   CI (99.9%): [617.602, 638.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   0.036 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.036, 0.071), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   656.897 ±(99.9%) 8.906 MB/sec [Average]
[info]   (min, avg, max) = (654.156, 656.897, 660.097), stdev = 2.313
[info]   CI (99.9%): [647.992, 665.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   560.764 ±(99.9%) 16.079 B/op [Average]
[info]   (min, avg, max) = (556.519, 560.764, 566.432), stdev = 4.176
[info]   CI (99.9%): [544.685, 576.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.36% complete, ETA 00:30:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4251467.484 ops/s
[info] # Warmup Iteration   2: 4440279.993 ops/s
[info] # Warmup Iteration   3: 4565219.008 ops/s
[info] # Warmup Iteration   4: 4639271.904 ops/s
[info] # Warmup Iteration   5: 4660604.466 ops/s
[info] Iteration   1: 4673332.024 ops/s
[info]                  ·gc.alloc.rate:                   474.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.378 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4617203.173 ops/s
[info]                  ·gc.alloc.rate:                   469.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 223.207 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4653169.976 ops/s
[info]                  ·gc.alloc.rate:                   473.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.627 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4656105.572 ops/s
[info]                  ·gc.alloc.rate:                   473.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 221.569 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4552165.482 ops/s
[info]                  ·gc.alloc.rate:                   462.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              160.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.430 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   4630395.245 ±(99.9%) 185842.971 ops/s [Average]
[info]   (min, avg, max) = (4552165.482, 4630395.245, 4673332.024), stdev = 48262.829
[info]   CI (99.9%): [4444552.274, 4816238.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   470.661 ±(99.9%) 18.790 MB/sec [Average]
[info]   (min, avg, max) = (462.741, 470.661, 474.926), stdev = 4.880
[info]   CI (99.9%): [451.871, 489.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (160.000, 160.000, 160.000), stdev = 0.001
[info]   CI (99.9%): [160.000, 160.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   0.004 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.014), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   458.580 ±(99.9%) 690.729 MB/sec [Average]
[info]   (min, avg, max) = (327.050, 458.580, 655.439), stdev = 179.380
[info]   CI (99.9%): [≈ 0, 1149.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   155.842 ±(99.9%) 233.974 B/op [Average]
[info]   (min, avg, max) = (110.378, 155.842, 223.207), stdev = 60.762
[info]   CI (99.9%): [≈ 0, 389.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.20% complete, ETA 00:30:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12887.710 ops/s
[info] # Warmup Iteration   2: 107350.236 ops/s
[info] # Warmup Iteration   3: 117448.320 ops/s
[info] # Warmup Iteration   4: 120659.557 ops/s
[info] # Warmup Iteration   5: 120054.370 ops/s
[info] Iteration   1: 121124.473 ops/s
[info]                  ·gc.alloc.rate:                   771.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      980.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12745.606 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 119467.553 ops/s
[info]                  ·gc.alloc.rate:                   761.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8661.276 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 121306.244 ops/s
[info]                  ·gc.alloc.rate:                   773.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8564.637 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 121580.689 ops/s
[info]                  ·gc.alloc.rate:                   774.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12887.627 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 119248.910 ops/s
[info]                  ·gc.alloc.rate:                   760.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.238 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8791.911 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   120545.574 ±(99.9%) 4230.749 ops/s [Average]
[info]   (min, avg, max) = (119248.910, 120545.574, 121580.689), stdev = 1098.712
[info]   CI (99.9%): [116314.825, 124776.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   768.303 ±(99.9%) 26.669 MB/sec [Average]
[info]   (min, avg, max) = (760.210, 768.303, 774.881), stdev = 6.926
[info]   CI (99.9%): [741.633, 794.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   10032.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10032.003, 10032.003, 10032.004), stdev = 0.001
[info]   CI (99.9%): [10032.003, 10032.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.489 ±(99.9%) 1.368 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.489, 0.823), stdev = 0.355
[info]   CI (99.9%): [≈ 0, 1.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   791.953 ±(99.9%) 689.662 MB/sec [Average]
[info]   (min, avg, max) = (657.397, 791.953, 995.452), stdev = 179.103
[info]   CI (99.9%): [102.291, 1481.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10330.211 ±(99.9%) 8747.718 B/op [Average]
[info]   (min, avg, max) = (8564.637, 10330.211, 12887.627), stdev = 2271.755
[info]   CI (99.9%): [1582.493, 19077.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.04% complete, ETA 00:30:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 385112.947 ops/s
[info] # Warmup Iteration   2: 569088.009 ops/s
[info] # Warmup Iteration   3: 594206.530 ops/s
[info] # Warmup Iteration   4: 587650.509 ops/s
[info] # Warmup Iteration   5: 587172.579 ops/s
[info] Iteration   1: 595801.634 ops/s
[info]                  ·gc.alloc.rate:                   1538.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.607 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3506.955 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 594223.973 ops/s
[info]                  ·gc.alloc.rate:                   1534.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1670.572 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4424.100 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 592228.726 ops/s
[info]                  ·gc.alloc.rate:                   1529.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3572.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 578851.274 ops/s
[info]                  ·gc.alloc.rate:                   1494.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1686.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4586.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 590179.164 ops/s
[info]                  ·gc.alloc.rate:                   1523.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.149 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3608.698 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce":
[info]   590256.954 ±(99.9%) 25864.190 ops/s [Average]
[info]   (min, avg, max) = (578851.274, 590256.954, 595801.634), stdev = 6716.848
[info]   CI (99.9%): [564392.764, 616121.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1524.220 ±(99.9%) 66.824 MB/sec [Average]
[info]   (min, avg, max) = (1494.778, 1524.220, 1538.485), stdev = 17.354
[info]   CI (99.9%): [1457.396, 1591.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4064.001, 4064.001, 4064.001), stdev = 0.001
[info]   CI (99.9%): [4064.001, 4064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.144 ±(99.9%) 0.244 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.144, 0.221), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1476.502 ±(99.9%) 711.889 MB/sec [Average]
[info]   (min, avg, max) = (1327.607, 1476.502, 1686.779), stdev = 184.875
[info]   CI (99.9%): [764.613, 2188.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3939.650 ±(99.9%) 2004.592 B/op [Average]
[info]   (min, avg, max) = (3506.955, 3939.650, 4586.013), stdev = 520.586
[info]   CI (99.9%): [1935.058, 5944.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 5.88% complete, ETA 00:29:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 548589.712 ops/s
[info] # Warmup Iteration   2: 1312714.519 ops/s
[info] # Warmup Iteration   3: 1311619.289 ops/s
[info] # Warmup Iteration   4: 1327386.173 ops/s
[info] # Warmup Iteration   5: 1329981.777 ops/s
[info] Iteration   1: 1330342.494 ops/s
[info]                  ·gc.alloc.rate:                   946.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.615 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1170.685 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1320534.488 ops/s
[info]                  ·gc.alloc.rate:                   939.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.907 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1185.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1308518.178 ops/s
[info]                  ·gc.alloc.rate:                   931.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.642 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1202.223 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1314011.282 ops/s
[info]                  ·gc.alloc.rate:                   935.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1201.997 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1308932.470 ops/s
[info]                  ·gc.alloc.rate:                   931.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1211.843 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1316467.782 ±(99.9%) 35242.190 ops/s [Average]
[info]   (min, avg, max) = (1308518.178, 1316467.782, 1330342.494), stdev = 9152.285
[info]   CI (99.9%): [1281225.592, 1351709.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   936.907 ±(99.9%) 25.085 MB/sec [Average]
[info]   (min, avg, max) = (931.274, 936.907, 946.770), stdev = 6.515
[info]   CI (99.9%): [911.822, 961.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.090 ±(99.9%) 0.108 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.090, 0.124), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   999.152 ±(99.9%) 27.600 MB/sec [Average]
[info]   (min, avg, max) = (989.615, 999.152, 1007.795), stdev = 7.168
[info]   CI (99.9%): [971.551, 1026.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1194.497 ±(99.9%) 62.702 B/op [Average]
[info]   (min, avg, max) = (1170.685, 1194.497, 1211.843), stdev = 16.284
[info]   CI (99.9%): [1131.794, 1257.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 6.72% complete, ETA 00:29:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1682086.859 ops/s
[info] # Warmup Iteration   2: 2437459.197 ops/s
[info] # Warmup Iteration   3: 2508744.464 ops/s
[info] # Warmup Iteration   4: 2499366.003 ops/s
[info] # Warmup Iteration   5: 2478233.702 ops/s
[info] Iteration   1: 2501346.565 ops/s
[info]                  ·gc.alloc.rate:      165.278 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2495647.051 ops/s
[info]                  ·gc.alloc.rate:                   164.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.774 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 161.316 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2455649.247 ops/s
[info]                  ·gc.alloc.rate:                   162.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.817 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 163.951 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2448002.020 ops/s
[info]                  ·gc.alloc.rate:      161.792 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2501486.933 ops/s
[info]                  ·gc.alloc.rate:                   165.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160.938 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2480426.363 ±(99.9%) 101479.542 ops/s [Average]
[info]   (min, avg, max) = (2448002.020, 2480426.363, 2501486.933), stdev = 26353.915
[info]   CI (99.9%): [2378946.821, 2581905.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   163.904 ±(99.9%) 6.636 MB/sec [Average]
[info]   (min, avg, max) = (161.792, 163.904, 165.280), stdev = 1.723
[info]   CI (99.9%): [157.268, 170.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.004 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   153.472 ±(99.9%) 539.474 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.472, 255.817), stdev = 140.100
[info]   CI (99.9%): [≈ 0, 692.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   97.241 ±(99.9%) 341.845 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 97.241, 163.951), stdev = 88.776
[info]   CI (99.9%): [≈ 0, 439.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 7.56% complete, ETA 00:29:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27470.571 ops/s
[info] # Warmup Iteration   2: 126137.142 ops/s
[info] # Warmup Iteration   3: 123714.898 ops/s
[info] # Warmup Iteration   4: 128200.164 ops/s
[info] # Warmup Iteration   5: 129426.800 ops/s
[info] Iteration   1: 129029.360 ops/s
[info]                  ·gc.alloc.rate:                   1019.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              12440.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12062.171 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 129741.487 ops/s
[info]                  ·gc.alloc.rate:                   1025.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              12440.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.636 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12076.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 130352.189 ops/s
[info]                  ·gc.alloc.rate:                   1030.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              12440.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12068.360 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 131013.807 ops/s
[info]                  ·gc.alloc.rate:                   1035.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              12440.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.342 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12063.405 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 130160.316 ops/s
[info]                  ·gc.alloc.rate:                   1028.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              12440.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12182.723 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay":
[info]   130059.432 ±(99.9%) 2835.426 ops/s [Average]
[info]   (min, avg, max) = (129029.360, 130059.432, 131013.807), stdev = 736.351
[info]   CI (99.9%): [127224.006, 132894.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1028.085 ±(99.9%) 22.478 MB/sec [Average]
[info]   (min, avg, max) = (1019.935, 1028.085, 1035.696), stdev = 5.837
[info]   CI (99.9%): [1005.607, 1050.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   12440.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12440.003, 12440.003, 12440.003), stdev = 0.001
[info]   CI (99.9%): [12440.003, 12440.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.706 ±(99.9%) 1.597 B/op [Average]
[info]   (min, avg, max) = (0.252, 0.706, 1.257), stdev = 0.415
[info]   CI (99.9%): [≈ 0, 2.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   999.205 ±(99.9%) 28.021 MB/sec [Average]
[info]   (min, avg, max) = (988.958, 999.205, 1007.418), stdev = 7.277
[info]   CI (99.9%): [971.184, 1027.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   12090.542 ±(99.9%) 199.535 B/op [Average]
[info]   (min, avg, max) = (12062.171, 12090.542, 12182.723), stdev = 51.819
[info]   CI (99.9%): [11891.006, 12290.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.40% complete, ETA 00:29:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 799908.980 ops/s
[info] # Warmup Iteration   2: 1138519.605 ops/s
[info] # Warmup Iteration   3: 1169526.855 ops/s
[info] # Warmup Iteration   4: 1180830.921 ops/s
[info] # Warmup Iteration   5: 1187412.385 ops/s
[info] Iteration   1: 1185539.970 ops/s
[info]                  ·gc.alloc.rate:                   1861.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2006.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2664.824 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1179495.090 ops/s
[info]                  ·gc.alloc.rate:                   1852.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2245.291 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1165823.814 ops/s
[info]                  ·gc.alloc.rate:                   1830.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2027.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2738.221 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1191617.526 ops/s
[info]                  ·gc.alloc.rate:                   1871.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.558 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2238.250 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1173694.796 ops/s
[info]                  ·gc.alloc.rate:                   1843.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.595 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2732.430 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1179234.239 ±(99.9%) 38684.170 ops/s [Average]
[info]   (min, avg, max) = (1165823.814, 1179234.239, 1191617.526), stdev = 10046.156
[info]   CI (99.9%): [1140550.069, 1217918.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1851.908 ±(99.9%) 61.005 MB/sec [Average]
[info]   (min, avg, max) = (1830.604, 1851.908, 1871.529), stdev = 15.843
[info]   CI (99.9%): [1790.903, 1912.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.000, 2472.000, 2472.000), stdev = 0.001
[info]   CI (99.9%): [2472.000, 2472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.067 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.067, 0.112), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1889.846 ±(99.9%) 708.954 MB/sec [Average]
[info]   (min, avg, max) = (1682.609, 1889.846, 2037.595), stdev = 184.113
[info]   CI (99.9%): [1180.892, 2598.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2523.803 ±(99.9%) 997.637 B/op [Average]
[info]   (min, avg, max) = (2238.250, 2523.803, 2738.221), stdev = 259.083
[info]   CI (99.9%): [1526.166, 3521.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.24% complete, ETA 00:28:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 833168.939 ops/s
[info] # Warmup Iteration   2: 1888173.826 ops/s
[info] # Warmup Iteration   3: 1965899.268 ops/s
[info] # Warmup Iteration   4: 1964111.568 ops/s
[info] # Warmup Iteration   5: 1945847.409 ops/s
[info] Iteration   1: 1959758.188 ops/s
[info]                  ·gc.alloc.rate:                   1374.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1071.549 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1941546.170 ops/s
[info]                  ·gc.alloc.rate:                   1361.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.552 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1087.531 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1948863.990 ops/s
[info]                  ·gc.alloc.rate:                   1366.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1087.782 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1967510.705 ops/s
[info]                  ·gc.alloc.rate:                   1379.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.387 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1081.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1951012.187 ops/s
[info]                  ·gc.alloc.rate:                   1369.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.851 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1364.310 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1953738.248 ±(99.9%) 38782.543 ops/s [Average]
[info]   (min, avg, max) = (1941546.170, 1953738.248, 1967510.705), stdev = 10071.703
[info]   CI (99.9%): [1914955.706, 1992520.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1370.526 ±(99.9%) 27.023 MB/sec [Average]
[info]   (min, avg, max) = (1361.868, 1370.526, 1379.896), stdev = 7.018
[info]   CI (99.9%): [1343.503, 1397.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.050 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.050, 0.067), stdev = 0.012
[info]   CI (99.9%): [0.004, 0.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1413.223 ±(99.9%) 600.259 MB/sec [Average]
[info]   (min, avg, max) = (1334.480, 1413.223, 1691.851), stdev = 155.885
[info]   CI (99.9%): [812.964, 2013.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1138.473 ±(99.9%) 486.794 B/op [Average]
[info]   (min, avg, max) = (1071.549, 1138.473, 1364.310), stdev = 126.419
[info]   CI (99.9%): [651.679, 1625.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 12.000), stdev = 2.950
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.08% complete, ETA 00:28:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5553761.632 ops/s
[info] # Warmup Iteration   2: 6252604.752 ops/s
[info] # Warmup Iteration   3: 6387391.817 ops/s
[info] # Warmup Iteration   4: 6379548.108 ops/s
[info] # Warmup Iteration   5: 6485994.295 ops/s
[info] Iteration   1: 6443007.286 ops/s
[info]                  ·gc.alloc.rate:                   818.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.526 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6457220.546 ops/s
[info]                  ·gc.alloc.rate:                   820.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160.408 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6457684.761 ops/s
[info]                  ·gc.alloc.rate:                   820.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241.578 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6408661.230 ops/s
[info]                  ·gc.alloc.rate:                   814.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      663.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 162.859 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6360791.313 ops/s
[info]                  ·gc.alloc.rate:                   808.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 164.576 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6425473.027 ±(99.9%) 158991.400 ops/s [Average]
[info]   (min, avg, max) = (6360791.313, 6425473.027, 6457684.761), stdev = 41289.562
[info]   CI (99.9%): [6266481.627, 6584464.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   816.468 ±(99.9%) 20.315 MB/sec [Average]
[info]   (min, avg, max) = (808.176, 816.468, 820.609), stdev = 5.276
[info]   CI (99.9%): [796.153, 836.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.011 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.020), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   792.391 ±(99.9%) 687.255 MB/sec [Average]
[info]   (min, avg, max) = (658.048, 792.391, 991.207), stdev = 178.478
[info]   CI (99.9%): [105.136, 1479.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   193.986 ±(99.9%) 165.514 B/op [Average]
[info]   (min, avg, max) = (160.408, 193.986, 241.578), stdev = 42.984
[info]   CI (99.9%): [28.471, 359.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.92% complete, ETA 00:28:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90477.105 ops/s
[info] # Warmup Iteration   2: 450353.047 ops/s
[info] # Warmup Iteration   3: 458259.812 ops/s
[info] # Warmup Iteration   4: 453227.144 ops/s
[info] # Warmup Iteration   5: 454847.129 ops/s
[info] Iteration   1: 460107.203 ops/s
[info]                  ·gc.alloc.rate:                   1162.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3396.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 449691.678 ops/s
[info]                  ·gc.alloc.rate:                   1135.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3497.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 457647.612 ops/s
[info]                  ·gc.alloc.rate:                   1155.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.340 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4603.428 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 455693.820 ops/s
[info]                  ·gc.alloc.rate:                   1151.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.388 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3479.686 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 454471.601 ops/s
[info]                  ·gc.alloc.rate:                   1147.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4668.970 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   455522.383 ±(99.9%) 14996.248 ops/s [Average]
[info]   (min, avg, max) = (449691.678, 455522.383, 460107.203), stdev = 3894.478
[info]   CI (99.9%): [440526.135, 470518.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1150.624 ±(99.9%) 37.822 MB/sec [Average]
[info]   (min, avg, max) = (1135.913, 1150.624, 1162.209), stdev = 9.822
[info]   CI (99.9%): [1112.802, 1188.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   3976.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3976.001, 3976.001, 3976.001), stdev = 0.001
[info]   CI (99.9%): [3976.001, 3976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.216 ±(99.9%) 0.338 B/op [Average]
[info]   (min, avg, max) = (0.142, 0.216, 0.358), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.142 ±(99.9%) 724.746 MB/sec [Average]
[info]   (min, avg, max) = (992.785, 1137.142, 1348.076), stdev = 188.214
[info]   CI (99.9%): [412.396, 1861.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   3929.134 ±(99.9%) 2491.357 B/op [Average]
[info]   (min, avg, max) = (3396.389, 3929.134, 4668.970), stdev = 646.997
[info]   CI (99.9%): [1437.777, 6420.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 11.76% complete, ETA 00:27:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 379909.884 ops/s
[info] # Warmup Iteration   2: 625913.636 ops/s
[info] # Warmup Iteration   3: 650723.418 ops/s
[info] # Warmup Iteration   4: 656555.805 ops/s
[info] # Warmup Iteration   5: 646319.898 ops/s
[info] Iteration   1: 653986.175 ops/s
[info]                  ·gc.alloc.rate:                   2118.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2349.626 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5652.373 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 656054.053 ops/s
[info]                  ·gc.alloc.rate:                   2124.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2026.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4862.805 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 646237.299 ops/s
[info]                  ·gc.alloc.rate:                   2092.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4951.125 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 651835.943 ops/s
[info]                  ·gc.alloc.rate:                   2110.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2037.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4919.842 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 659084.759 ops/s
[info]                  ·gc.alloc.rate:                   2133.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2039.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4870.535 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce":
[info]   653439.646 ±(99.9%) 18611.679 ops/s [Average]
[info]   (min, avg, max) = (646237.299, 653439.646, 659084.759), stdev = 4833.394
[info]   CI (99.9%): [634827.967, 672051.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2115.763 ±(99.9%) 60.518 MB/sec [Average]
[info]   (min, avg, max) = (2092.195, 2115.763, 2133.867), stdev = 15.716
[info]   CI (99.9%): [2055.246, 2176.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5096.001, 5096.001, 5096.001), stdev = 0.001
[info]   CI (99.9%): [5096.001, 5096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.181 ±(99.9%) 0.380 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.181, 0.302), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   2097.211 ±(99.9%) 543.662 MB/sec [Average]
[info]   (min, avg, max) = (2026.859, 2097.211, 2349.626), stdev = 141.187
[info]   CI (99.9%): [1553.550, 2640.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5051.336 ±(99.9%) 1301.283 B/op [Average]
[info]   (min, avg, max) = (4862.805, 5051.336, 5652.373), stdev = 337.939
[info]   CI (99.9%): [3750.053, 6352.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 8.800, 11.000), stdev = 1.304
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 12.61% complete, ETA 00:27:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 552841.155 ops/s
[info] # Warmup Iteration   2: 1290982.176 ops/s
[info] # Warmup Iteration   3: 1295542.888 ops/s
[info] # Warmup Iteration   4: 1314503.486 ops/s
[info] # Warmup Iteration   5: 1306785.656 ops/s
[info] Iteration   1: 1305721.723 ops/s
[info]                  ·gc.alloc.rate:                   1227.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1603.466 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1308982.161 ops/s
[info]                  ·gc.alloc.rate:                   1230.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1609.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1314781.358 ops/s
[info]                  ·gc.alloc.rate:                   1236.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1206.468 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1314936.264 ops/s
[info]                  ·gc.alloc.rate:                   1236.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1613.768 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1308503.014 ops/s
[info]                  ·gc.alloc.rate:                   1230.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1626.517 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1310584.904 ±(99.9%) 15770.977 ops/s [Average]
[info]   (min, avg, max) = (1305721.723, 1310584.904, 1314936.264), stdev = 4095.673
[info]   CI (99.9%): [1294813.927, 1326355.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1232.507 ±(99.9%) 14.932 MB/sec [Average]
[info]   (min, avg, max) = (1227.974, 1232.507, 1236.616), stdev = 3.878
[info]   CI (99.9%): [1217.575, 1247.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.060 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.060, 0.075), stdev = 0.014
[info]   CI (99.9%): [0.007, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1275.476 ±(99.9%) 576.722 MB/sec [Average]
[info]   (min, avg, max) = (1007.996, 1275.476, 1352.361), stdev = 149.773
[info]   CI (99.9%): [698.754, 1852.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1531.858 ±(99.9%) 701.193 B/op [Average]
[info]   (min, avg, max) = (1206.468, 1531.858, 1626.517), stdev = 182.098
[info]   CI (99.9%): [830.665, 2233.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 13.45% complete, ETA 00:27:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1907358.731 ops/s
[info] # Warmup Iteration   2: 2596949.830 ops/s
[info] # Warmup Iteration   3: 2642799.504 ops/s
[info] # Warmup Iteration   4: 2610793.101 ops/s
[info] # Warmup Iteration   5: 2651511.680 ops/s
[info] Iteration   1: 2633749.546 ops/s
[info]                  ·gc.alloc.rate:                   1097.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 591.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2643844.154 ops/s
[info]                  ·gc.alloc.rate:                   1101.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 591.823 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2606972.434 ops/s
[info]                  ·gc.alloc.rate:                   1086.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.161 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 804.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2622677.735 ops/s
[info]                  ·gc.alloc.rate:                   1093.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.461 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 602.189 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2643798.978 ops/s
[info]                  ·gc.alloc.rate:                   1101.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 599.985 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2630208.569 ±(99.9%) 60265.910 ops/s [Average]
[info]   (min, avg, max) = (2606972.434, 2630208.569, 2643844.154), stdev = 15650.865
[info]   CI (99.9%): [2569942.660, 2690474.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1096.224 ±(99.9%) 25.184 MB/sec [Average]
[info]   (min, avg, max) = (1086.503, 1096.224, 1101.944), stdev = 6.540
[info]   CI (99.9%): [1071.040, 1121.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.037, 0.050), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1065.327 ±(99.9%) 575.091 MB/sec [Average]
[info]   (min, avg, max) = (989.055, 1065.327, 1332.161), stdev = 149.349
[info]   CI (99.9%): [490.235, 1640.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   637.885 ±(99.9%) 358.760 B/op [Average]
[info]   (min, avg, max) = (591.105, 637.885, 804.321), stdev = 93.169
[info]   CI (99.9%): [279.125, 996.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 14.29% complete, ETA 00:27:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38402.899 ops/s
[info] # Warmup Iteration   2: 225507.317 ops/s
[info] # Warmup Iteration   3: 222471.764 ops/s
[info] # Warmup Iteration   4: 228415.186 ops/s
[info] # Warmup Iteration   5: 226192.167 ops/s
[info] Iteration   1: 229393.165 ops/s
[info]                  ·gc.alloc.rate:                   1401.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1663.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11414.406 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 229251.283 ops/s
[info]                  ·gc.alloc.rate:                   1400.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9201.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 228975.429 ops/s
[info]                  ·gc.alloc.rate:                   1398.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9248.882 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 229579.345 ops/s
[info]                  ·gc.alloc.rate:                   1402.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.225 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9256.479 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 227635.431 ops/s
[info]                  ·gc.alloc.rate:                   1390.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.435 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9358.626 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay":
[info]   228966.931 ±(99.9%) 2989.244 ops/s [Average]
[info]   (min, avg, max) = (227635.431, 228966.931, 229579.345), stdev = 776.297
[info]   CI (99.9%): [225977.687, 231956.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1398.817 ±(99.9%) 18.373 MB/sec [Average]
[info]   (min, avg, max) = (1390.657, 1398.817, 1402.668), stdev = 4.771
[info]   CI (99.9%): [1380.444, 1417.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9616.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9616.002, 9616.002, 9616.002), stdev = 0.001
[info]   CI (99.9%): [9616.002, 9616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.429 ±(99.9%) 0.778 B/op [Average]
[info]   (min, avg, max) = (0.285, 0.429, 0.715), stdev = 0.202
[info]   CI (99.9%): [≈ 0, 1.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1410.540 ±(99.9%) 544.646 MB/sec [Average]
[info]   (min, avg, max) = (1340.254, 1410.540, 1663.404), stdev = 141.443
[info]   CI (99.9%): [865.894, 1955.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   9695.952 ±(99.9%) 3705.681 B/op [Average]
[info]   (min, avg, max) = (9201.365, 9695.952, 11414.406), stdev = 962.353
[info]   CI (99.9%): [5990.271, 13401.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce
[info] # Run progress: 15.13% complete, ETA 00:26:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 380388.585 ops/s
[info] # Warmup Iteration   2: 446183.590 ops/s
[info] # Warmup Iteration   3: 447280.726 ops/s
[info] # Warmup Iteration   4: 443510.935 ops/s
[info] # Warmup Iteration   5: 450063.438 ops/s
[info] Iteration   1: 442189.021 ops/s
[info]                  ·gc.alloc.rate:                   986.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      985.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3507.891 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 451703.957 ops/s
[info]                  ·gc.alloc.rate:                   1007.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.571 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3447.958 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 449744.167 ops/s
[info]                  ·gc.alloc.rate:                   1003.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3483.978 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 448234.747 ops/s
[info]                  ·gc.alloc.rate:                   1000.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3509.716 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 448097.019 ops/s
[info]                  ·gc.alloc.rate:                   999.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3527.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce":
[info]   447993.782 ±(99.9%) 13694.605 ops/s [Average]
[info]   (min, avg, max) = (442189.021, 447993.782, 451703.957), stdev = 3556.446
[info]   CI (99.9%): [434299.177, 461688.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate":
[info]   999.593 ±(99.9%) 30.637 MB/sec [Average]
[info]   (min, avg, max) = (986.648, 999.593, 1007.952), stdev = 7.956
[info]   CI (99.9%): [968.956, 1030.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm":
[info]   3512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3512.001, 3512.001, 3512.001), stdev = 0.001
[info]   CI (99.9%): [3512.001, 3512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.131 ±(99.9%) 0.414 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.290), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   994.817 ±(99.9%) 28.625 MB/sec [Average]
[info]   (min, avg, max) = (985.494, 994.817, 1003.979), stdev = 7.434
[info]   CI (99.9%): [966.192, 1023.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3495.339 ±(99.9%) 117.907 B/op [Average]
[info]   (min, avg, max) = (3447.958, 3495.339, 3527.152), stdev = 30.620
[info]   CI (99.9%): [3377.432, 3613.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson
[info] # Run progress: 15.97% complete, ETA 00:26:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 397205.906 ops/s
[info] # Warmup Iteration   2: 593566.686 ops/s
[info] # Warmup Iteration   3: 612369.061 ops/s
[info] # Warmup Iteration   4: 609606.263 ops/s
[info] # Warmup Iteration   5: 602270.395 ops/s
[info] Iteration   1: 607671.978 ops/s
[info]                  ·gc.alloc.rate:                   796.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1706.194 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 594265.508 ops/s
[info]                  ·gc.alloc.rate:                   779.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2629.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 609839.383 ops/s
[info]                  ·gc.alloc.rate:                   799.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1717.404 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 601179.648 ops/s
[info]                  ·gc.alloc.rate:                   788.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2623.768 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 609555.751 ops/s
[info]                  ·gc.alloc.rate:                   799.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1730.270 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson":
[info]   604502.454 ±(99.9%) 25823.772 ops/s [Average]
[info]   (min, avg, max) = (594265.508, 604502.454, 609839.383), stdev = 6706.352
[info]   CI (99.9%): [578678.681, 630326.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate":
[info]   792.612 ±(99.9%) 33.773 MB/sec [Average]
[info]   (min, avg, max) = (779.254, 792.612, 799.603), stdev = 8.771
[info]   CI (99.9%): [758.839, 826.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm":
[info]   2064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2064.001, 2064.001, 2064.001), stdev = 0.001
[info]   CI (99.9%): [2064.001, 2064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.152 ±(99.9%) 0.460 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.152, 0.331), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   797.732 ±(99.9%) 701.958 MB/sec [Average]
[info]   (min, avg, max) = (658.634, 797.732, 1001.978), stdev = 182.296
[info]   CI (99.9%): [95.774, 1499.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2081.406 ±(99.9%) 1916.661 B/op [Average]
[info]   (min, avg, max) = (1706.194, 2081.406, 2629.392), stdev = 497.751
[info]   CI (99.9%): [164.745, 3998.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter
[info] # Run progress: 16.81% complete, ETA 00:26:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 610785.184 ops/s
[info] # Warmup Iteration   2: 651074.580 ops/s
[info] # Warmup Iteration   3: 653896.867 ops/s
[info] # Warmup Iteration   4: 661974.902 ops/s
[info] # Warmup Iteration   5: 665098.272 ops/s
[info] Iteration   1: 661646.513 ops/s
[info]                  ·gc.alloc.rate:                   564.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1557.603 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 651210.398 ops/s
[info]                  ·gc.alloc.rate:                   556.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.908 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1582.570 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 659257.389 ops/s
[info]                  ·gc.alloc.rate:                   563.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1565.630 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 657795.208 ops/s
[info]                  ·gc.alloc.rate:                   561.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 784.952 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 654937.203 ops/s
[info]                  ·gc.alloc.rate:                   559.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1581.575 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter":
[info]   656969.342 ±(99.9%) 15532.966 ops/s [Average]
[info]   (min, avg, max) = (651210.398, 656969.342, 661646.513), stdev = 4033.862
[info]   CI (99.9%): [641436.376, 672502.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate":
[info]   561.051 ±(99.9%) 13.108 MB/sec [Average]
[info]   (min, avg, max) = (556.181, 561.051, 564.957), stdev = 3.404
[info]   CI (99.9%): [547.944, 574.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1344.001, 1344.001, 1344.001), stdev = 0.001
[info]   CI (99.9%): [1344.001, 1344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.080 ±(99.9%) 0.172 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.101), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   590.362 ±(99.9%) 564.559 MB/sec [Average]
[info]   (min, avg, max) = (328.102, 590.362, 658.192), stdev = 146.614
[info]   CI (99.9%): [25.803, 1154.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1414.466 ±(99.9%) 1355.694 B/op [Average]
[info]   (min, avg, max) = (784.952, 1414.466, 1582.570), stdev = 352.069
[info]   CI (99.9%): [58.772, 2770.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.65% complete, ETA 00:26:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 741207.978 ops/s
[info] # Warmup Iteration   2: 1558331.612 ops/s
[info] # Warmup Iteration   3: 1581839.577 ops/s
[info] # Warmup Iteration   4: 1570824.014 ops/s
[info] # Warmup Iteration   5: 1549445.749 ops/s
[info] Iteration   1: 1566912.599 ops/s
[info]                  ·gc.alloc.rate:                   995.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 995.267 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1583052.424 ops/s
[info]                  ·gc.alloc.rate:                   1005.713 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 990.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1586661.203 ops/s
[info]                  ·gc.alloc.rate:                   1007.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 992.735 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1595689.569 ops/s
[info]                  ·gc.alloc.rate:                   1013.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 991.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1439629.226 ops/s
[info]                  ·gc.alloc.rate:                   914.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1102.222 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1554389.004 ±(99.9%) 250258.311 ops/s [Average]
[info]   (min, avg, max) = (1439629.226, 1554389.004, 1595689.569), stdev = 64991.289
[info]   CI (99.9%): [1304130.693, 1804647.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   987.513 ±(99.9%) 158.783 MB/sec [Average]
[info]   (min, avg, max) = (914.690, 987.513, 1013.701), stdev = 41.235
[info]   CI (99.9%): [828.730, 1146.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.062 ±(99.9%) 0.150 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.103), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   1000.077 ±(99.9%) 26.518 MB/sec [Average]
[info]   (min, avg, max) = (990.815, 1000.077, 1008.191), stdev = 6.887
[info]   CI (99.9%): [973.559, 1026.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1014.351 ±(99.9%) 189.285 B/op [Average]
[info]   (min, avg, max) = (990.391, 1014.351, 1102.222), stdev = 49.157
[info]   CI (99.9%): [825.066, 1203.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.49% complete, ETA 00:25:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2541119.914 ops/s
[info] # Warmup Iteration   2: 3615531.977 ops/s
[info] # Warmup Iteration   3: 3698669.296 ops/s
[info] # Warmup Iteration   4: 3708189.169 ops/s
[info] # Warmup Iteration   5: 3701272.430 ops/s
[info] Iteration   1: 3712788.663 ops/s
[info]                  ·gc.alloc.rate:                   490.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 138.930 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3682074.697 ops/s
[info]                  ·gc.alloc.rate:                   486.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.880 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3688296.485 ops/s
[info]                  ·gc.alloc.rate:                   487.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.565 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3688104.505 ops/s
[info]                  ·gc.alloc.rate:                   487.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.727 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3742119.505 ops/s
[info]                  ·gc.alloc.rate:                   494.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137.986 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3702676.771 ±(99.9%) 96296.294 ops/s [Average]
[info]   (min, avg, max) = (3682074.697, 3702676.771, 3742119.505), stdev = 25007.842
[info]   CI (99.9%): [3606380.477, 3798973.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   489.312 ±(99.9%) 12.804 MB/sec [Average]
[info]   (min, avg, max) = (486.575, 489.312, 494.611), stdev = 3.325
[info]   CI (99.9%): [476.508, 502.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.012 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.610 ±(99.9%) 690.757 MB/sec [Average]
[info]   (min, avg, max) = (327.046, 458.610, 655.513), stdev = 179.387
[info]   CI (99.9%): [≈ 0, 1149.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   195.218 ±(99.9%) 297.339 B/op [Average]
[info]   (min, avg, max) = (137.986, 195.218, 279.880), stdev = 77.218
[info]   CI (99.9%): [≈ 0, 492.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.33% complete, ETA 00:25:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47936.563 ops/s
[info] # Warmup Iteration   2: 275996.852 ops/s
[info] # Warmup Iteration   3: 279763.075 ops/s
[info] # Warmup Iteration   4: 286827.116 ops/s
[info] # Warmup Iteration   5: 284161.464 ops/s
[info] Iteration   1: 280897.390 ops/s
[info]                  ·gc.alloc.rate:                   1300.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              7288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.351 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7442.242 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 285489.852 ops/s
[info]                  ·gc.alloc.rate:                   1321.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              7288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7366.649 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 280959.846 ops/s
[info]                  ·gc.alloc.rate:                   1301.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              7288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.132 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7522.773 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 285547.623 ops/s
[info]                  ·gc.alloc.rate:                   1322.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              7288.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7431.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 286766.960 ops/s
[info]                  ·gc.alloc.rate:                   1327.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              7288.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.197 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7421.593 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   283932.334 ±(99.9%) 10739.897 ops/s [Average]
[info]   (min, avg, max) = (280897.390, 283932.334, 286766.960), stdev = 2789.117
[info]   CI (99.9%): [273192.437, 294672.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1314.806 ±(99.9%) 49.319 MB/sec [Average]
[info]   (min, avg, max) = (1300.821, 1314.806, 1327.857), stdev = 12.808
[info]   CI (99.9%): [1265.488, 1364.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7288.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7288.001, 7288.001, 7288.001), stdev = 0.001
[info]   CI (99.9%): [7288.001, 7288.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.301 ±(99.9%) 0.747 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.301, 0.467), stdev = 0.194
[info]   CI (99.9%): [≈ 0, 1.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1341.607 ±(99.9%) 36.715 MB/sec [Average]
[info]   (min, avg, max) = (1328.351, 1341.607, 1352.197), stdev = 9.535
[info]   CI (99.9%): [1304.892, 1378.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   7436.858 ±(99.9%) 216.173 B/op [Average]
[info]   (min, avg, max) = (7366.649, 7436.858, 7522.773), stdev = 56.140
[info]   CI (99.9%): [7220.684, 7653.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.17% complete, ETA 00:25:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 377397.500 ops/s
[info] # Warmup Iteration   2: 570350.152 ops/s
[info] # Warmup Iteration   3: 589361.585 ops/s
[info] # Warmup Iteration   4: 580133.273 ops/s
[info] # Warmup Iteration   5: 582342.969 ops/s
[info] Iteration   1: 584423.114 ops/s
[info]                  ·gc.alloc.rate:                   1901.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2007.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5405.825 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 581057.421 ops/s
[info]                  ·gc.alloc.rate:                   1890.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1684.577 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4563.098 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 580426.096 ops/s
[info]                  ·gc.alloc.rate:                   1887.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.959 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5502.745 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 581453.455 ops/s
[info]                  ·gc.alloc.rate:                   1891.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4588.064 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 584317.088 ops/s
[info]                  ·gc.alloc.rate:                   1900.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5490.349 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   582335.435 ±(99.9%) 7291.389 ops/s [Average]
[info]   (min, avg, max) = (580426.096, 582335.435, 584423.114), stdev = 1893.551
[info]   CI (99.9%): [575044.046, 589626.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1894.373 ±(99.9%) 24.726 MB/sec [Average]
[info]   (min, avg, max) = (1887.834, 1894.373, 1901.813), stdev = 6.421
[info]   CI (99.9%): [1869.647, 1919.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5120.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.001, 5120.001, 5120.001), stdev = 0.001
[info]   CI (99.9%): [5120.001, 5120.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.191 ±(99.9%) 0.293 B/op [Average]
[info]   (min, avg, max) = (0.112, 0.191, 0.282), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   1890.910 ±(99.9%) 708.628 MB/sec [Average]
[info]   (min, avg, max) = (1684.577, 1890.910, 2038.185), stdev = 184.028
[info]   CI (99.9%): [1182.282, 2599.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5110.016 ±(99.9%) 1884.404 B/op [Average]
[info]   (min, avg, max) = (4563.098, 5110.016, 5502.745), stdev = 489.374
[info]   CI (99.9%): [3225.613, 6994.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.400, 8.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.01% complete, ETA 00:25:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 270799.610 ops/s
[info] # Warmup Iteration   2: 638698.743 ops/s
[info] # Warmup Iteration   3: 663482.890 ops/s
[info] # Warmup Iteration   4: 667561.579 ops/s
[info] # Warmup Iteration   5: 660244.337 ops/s
[info] Iteration   1: 671043.055 ops/s
[info]                  ·gc.alloc.rate:                   832.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1542.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 671920.608 ops/s
[info]                  ·gc.alloc.rate:                   833.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.707 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2320.880 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 680494.249 ops/s
[info]                  ·gc.alloc.rate:                   844.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.212 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1536.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 675601.287 ops/s
[info]                  ·gc.alloc.rate:                   837.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2330.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 639206.966 ops/s
[info]                  ·gc.alloc.rate:                   792.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.231 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1647.598 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   667653.233 ±(99.9%) 62889.243 ops/s [Average]
[info]   (min, avg, max) = (639206.966, 667653.233, 680494.249), stdev = 16332.137
[info]   CI (99.9%): [604763.990, 730542.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   828.072 ±(99.9%) 77.906 MB/sec [Average]
[info]   (min, avg, max) = (792.875, 828.072, 844.089), stdev = 20.232
[info]   CI (99.9%): [750.167, 905.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.098 ±(99.9%) 0.185 B/op [Average]
[info]   (min, avg, max) = (0.049, 0.098, 0.146), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   796.371 ±(99.9%) 700.320 MB/sec [Average]
[info]   (min, avg, max) = (657.386, 796.371, 1000.318), stdev = 181.871
[info]   CI (99.9%): [96.051, 1496.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1875.330 ±(99.9%) 1591.635 B/op [Average]
[info]   (min, avg, max) = (1536.026, 1875.330, 2330.107), stdev = 413.343
[info]   CI (99.9%): [283.695, 3466.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.85% complete, ETA 00:24:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4340257.173 ops/s
[info] # Warmup Iteration   2: 4397726.975 ops/s
[info] # Warmup Iteration   3: 4703523.195 ops/s
[info] # Warmup Iteration   4: 4649578.829 ops/s
[info] # Warmup Iteration   5: 4674522.487 ops/s
[info] Iteration   1: 4697323.783 ops/s
[info]                  ·gc.alloc.rate:                   214.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.706 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4721568.577 ops/s
[info]                  ·gc.alloc.rate:      215.978 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4685885.002 ops/s
[info]                  ·gc.alloc.rate:                   214.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 85.913 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4683379.158 ops/s
[info]                  ·gc.alloc.rate:                   214.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.478 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4698331.886 ops/s
[info]                  ·gc.alloc.rate:      214.936 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4697297.681 ±(99.9%) 58211.025 ops/s [Average]
[info]   (min, avg, max) = (4683379.158, 4697297.681, 4721568.577), stdev = 15117.218
[info]   CI (99.9%): [4639086.656, 4755508.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   214.871 ±(99.9%) 2.695 MB/sec [Average]
[info]   (min, avg, max) = (214.264, 214.871, 215.978), stdev = 0.700
[info]   CI (99.9%): [212.176, 217.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.617 ±(99.9%) 5.315 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.617, 3.086), stdev = 1.380
[info]   CI (99.9%): [≈ 0, 5.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.207 ±(99.9%) 1.786 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.207, 1.037), stdev = 0.464
[info]   CI (99.9%): [≈ 0, 1.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   168.052 ±(99.9%) 601.777 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 168.052, 328.770), stdev = 156.280
[info]   CI (99.9%): [≈ 0, 769.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   56.419 ±(99.9%) 202.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 56.419, 110.478), stdev = 52.479
[info]   CI (99.9%): [≈ 0, 258.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.69% complete, ETA 00:24:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29730.041 ops/s
[info] # Warmup Iteration   2: 219892.124 ops/s
[info] # Warmup Iteration   3: 222094.129 ops/s
[info] # Warmup Iteration   4: 223473.835 ops/s
[info] # Warmup Iteration   5: 219053.537 ops/s
[info] Iteration   1: 221995.930 ops/s
[info]                  ·gc.alloc.rate:                   1218.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.443 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.752 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9397.873 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 222712.544 ops/s
[info]                  ·gc.alloc.rate:                   1222.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7063.281 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 224385.741 ops/s
[info]                  ·gc.alloc.rate:                   1231.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9400.372 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 224386.725 ops/s
[info]                  ·gc.alloc.rate:                   1231.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9438.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 222757.031 ops/s
[info]                  ·gc.alloc.rate:                   1222.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1012.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7153.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   223247.594 ±(99.9%) 4168.041 ops/s [Average]
[info]   (min, avg, max) = (221995.930, 223247.594, 224386.725), stdev = 1082.427
[info]   CI (99.9%): [219079.554, 227415.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1225.482 ±(99.9%) 22.561 MB/sec [Average]
[info]   (min, avg, max) = (1218.840, 1225.482, 1231.723), stdev = 5.859
[info]   CI (99.9%): [1202.922, 1248.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.381 ±(99.9%) 0.942 B/op [Average]
[info]   (min, avg, max) = (0.146, 0.381, 0.730), stdev = 0.245
[info]   CI (99.9%): [≈ 0, 1.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   1204.610 ±(99.9%) 699.338 MB/sec [Average]
[info]   (min, avg, max) = (999.417, 1204.610, 1345.522), stdev = 181.616
[info]   CI (99.9%): [505.272, 1903.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8490.656 ±(99.9%) 4860.801 B/op [Average]
[info]   (min, avg, max) = (7063.281, 8490.656, 9438.254), stdev = 1262.335
[info]   CI (99.9%): [3629.855, 13351.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 23.53% complete, ETA 00:24:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3414.439 ops/s
[info] # Warmup Iteration   2: 5008.207 ops/s
[info] # Warmup Iteration   3: 5288.746 ops/s
[info] # Warmup Iteration   4: 5321.128 ops/s
[info] # Warmup Iteration   5: 5297.922 ops/s
[info] Iteration   1: 5360.061 ops/s
[info]                  ·gc.alloc.rate:                   1262.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.076 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 289967.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5277.176 ops/s
[info]                  ·gc.alloc.rate:                   1243.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 395276.802 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5302.553 ops/s
[info]                  ·gc.alloc.rate:                   1249.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.356 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.148 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 395983.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5323.424 ops/s
[info]                  ·gc.alloc.rate:                   1254.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.077 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     55.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 396391.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5253.455 ops/s
[info]                  ·gc.alloc.rate:                   1237.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.306 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 302400.938 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5303.334 ±(99.9%) 158.700 ops/s [Average]
[info]   (min, avg, max) = (5253.455, 5303.334, 5360.061), stdev = 41.214
[info]   CI (99.9%): [5144.634, 5462.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1249.412 ±(99.9%) 37.489 MB/sec [Average]
[info]   (min, avg, max) = (1237.571, 1249.412, 1262.678), stdev = 9.736
[info]   CI (99.9%): [1211.923, 1286.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   370792.079 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (370792.076, 370792.079, 370792.084), stdev = 0.004
[info]   CI (99.9%): [370792.065, 370792.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.257 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.092, 0.187), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   27.219 ±(99.9%) 76.269 B/op [Average]
[info]   (min, avg, max) = (6.112, 27.219, 55.383), stdev = 19.807
[info]   CI (99.9%): [≈ 0, 103.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1199.425 ±(99.9%) 707.676 MB/sec [Average]
[info]   (min, avg, max) = (987.440, 1199.425, 1340.942), stdev = 183.781
[info]   CI (99.9%): [491.749, 1907.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   356003.979 ±(99.9%) 210961.320 B/op [Average]
[info]   (min, avg, max) = (289967.155, 356003.979, 396391.265), stdev = 54785.985
[info]   CI (99.9%): [145042.659, 566965.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 24.37% complete, ETA 00:23:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4435.240 ops/s
[info] # Warmup Iteration   2: 10572.913 ops/s
[info] # Warmup Iteration   3: 10832.054 ops/s
[info] # Warmup Iteration   4: 10793.873 ops/s
[info] # Warmup Iteration   5: 10830.276 ops/s
[info] Iteration   1: 10721.903 ops/s
[info]                  ·gc.alloc.rate:                   271.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37546.921 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10736.948 ops/s
[info]                  ·gc.alloc.rate:                   272.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     61.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.043 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47356.305 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 10677.053 ops/s
[info]                  ·gc.alloc.rate:                   270.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.038 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47622.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10775.028 ops/s
[info]                  ·gc.alloc.rate:                   273.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47428.168 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10717.929 ops/s
[info]                  ·gc.alloc.rate:                   271.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 47684.776 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10725.772 ±(99.9%) 136.156 ops/s [Average]
[info]   (min, avg, max) = (10677.053, 10725.772, 10775.028), stdev = 35.359
[info]   CI (99.9%): [10589.616, 10861.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   271.809 ±(99.9%) 3.454 MB/sec [Average]
[info]   (min, avg, max) = (270.576, 271.809, 273.059), stdev = 0.897
[info]   CI (99.9%): [268.355, 275.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   39888.040 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (39888.038, 39888.040, 39888.041), stdev = 0.002
[info]   CI (99.9%): [39888.034, 39888.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.092 ±(99.9%) 0.700 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.092, 0.416), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   13.430 ±(99.9%) 102.623 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 13.430, 61.026), stdev = 26.651
[info]   CI (99.9%): [≈ 0, 116.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   310.243 ±(99.9%) 117.305 MB/sec [Average]
[info]   (min, avg, max) = (255.767, 310.243, 324.686), stdev = 30.464
[info]   CI (99.9%): [192.938, 427.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   45527.710 ±(99.9%) 17187.104 B/op [Average]
[info]   (min, avg, max) = (37546.921, 45527.710, 47684.776), stdev = 4463.436
[info]   CI (99.9%): [28340.606, 62714.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 25.21% complete, ETA 00:23:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11675.157 ops/s
[info] # Warmup Iteration   2: 15096.511 ops/s
[info] # Warmup Iteration   3: 14963.507 ops/s
[info] # Warmup Iteration   4: 14993.884 ops/s
[info] # Warmup Iteration   5: 14915.724 ops/s
[info] Iteration   1: 14992.347 ops/s
[info]                  ·gc.alloc.rate:                   262.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              27536.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.736 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26852.496 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 15018.580 ops/s
[info]                  ·gc.alloc.rate:      262.740 MB/sec
[info]                  ·gc.alloc.rate.norm: 27536.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 14955.930 ops/s
[info]                  ·gc.alloc.rate:                   261.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              27536.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34592.704 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 14943.095 ops/s
[info]                  ·gc.alloc.rate:                   261.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              27536.029 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34622.792 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15080.798 ops/s
[info]                  ·gc.alloc.rate:                   263.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              27536.027 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34201.763 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   14998.150 ±(99.9%) 211.744 ops/s [Average]
[info]   (min, avg, max) = (14943.095, 14998.150, 15080.798), stdev = 54.989
[info]   CI (99.9%): [14786.406, 15209.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   262.369 ±(99.9%) 3.683 MB/sec [Average]
[info]   (min, avg, max) = (261.406, 262.369, 263.804), stdev = 0.956
[info]   CI (99.9%): [258.686, 266.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   27536.029 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (27536.027, 27536.029, 27536.036), stdev = 0.004
[info]   CI (99.9%): [27536.014, 27536.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.615 ±(99.9%) 5.206 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.615, 3.034), stdev = 1.352
[info]   CI (99.9%): [≈ 0, 5.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   64.723 ±(99.9%) 547.906 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 64.723, 319.251), stdev = 142.289
[info]   CI (99.9%): [≈ 0, 612.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   248.156 ±(99.9%) 547.727 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.156, 328.700), stdev = 142.243
[info]   CI (99.9%): [≈ 0, 795.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   26053.951 ±(99.9%) 57507.798 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 26053.951, 34622.792), stdev = 14934.593
[info]   CI (99.9%): [≈ 0, 83561.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 26.05% complete, ETA 00:23:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 413.596 ops/s
[info] # Warmup Iteration   2: 1870.176 ops/s
[info] # Warmup Iteration   3: 1929.945 ops/s
[info] # Warmup Iteration   4: 1938.583 ops/s
[info] # Warmup Iteration   5: 1962.196 ops/s
[info] Iteration   1: 1922.946 ops/s
[info]                  ·gc.alloc.rate:                   1200.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              982352.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1084545.863 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1943.473 ops/s
[info]                  ·gc.alloc.rate:                   1213.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              982352.243 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1080130.370 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1946.700 ops/s
[info]                  ·gc.alloc.rate:                   1214.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              982352.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     50.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 812269.602 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1953.789 ops/s
[info]                  ·gc.alloc.rate:                   1219.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              982352.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1083439.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1944.280 ops/s
[info]                  ·gc.alloc.rate:                   1213.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              982352.210 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 818913.596 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1942.237 ±(99.9%) 44.375 ops/s [Average]
[info]   (min, avg, max) = (1922.946, 1942.237, 1953.789), stdev = 11.524
[info]   CI (99.9%): [1897.862, 1986.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1212.299 ±(99.9%) 27.715 MB/sec [Average]
[info]   (min, avg, max) = (1200.281, 1212.299, 1219.604), stdev = 7.198
[info]   CI (99.9%): [1184.583, 1240.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   982352.220 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (982352.209, 982352.220, 982352.243), stdev = 0.014
[info]   CI (99.9%): [982352.165, 982352.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   37.036 ±(99.9%) 106.634 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37.036, 67.389), stdev = 27.692
[info]   CI (99.9%): [≈ 0, 143.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1204.066 ±(99.9%) 689.298 MB/sec [Average]
[info]   (min, avg, max) = (1004.630, 1204.066, 1345.105), stdev = 179.008
[info]   CI (99.9%): [514.769, 1893.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   975859.714 ±(99.9%) 563472.341 B/op [Average]
[info]   (min, avg, max) = (812269.602, 975859.714, 1084545.863), stdev = 146331.978
[info]   CI (99.9%): [412387.373, 1539332.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 26.89% complete, ETA 00:23:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2452321.780 ops/s
[info] # Warmup Iteration   2: 3104082.995 ops/s
[info] # Warmup Iteration   3: 3157066.213 ops/s
[info] # Warmup Iteration   4: 3165516.070 ops/s
[info] # Warmup Iteration   5: 3159535.329 ops/s
[info] Iteration   1: 3123473.010 ops/s
[info]                  ·gc.alloc.rate:                   936.537 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 496.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3173757.347 ops/s
[info]                  ·gc.alloc.rate:                   951.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 327.362 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3148145.385 ops/s
[info]                  ·gc.alloc.rate:                   944.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 497.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3135664.933 ops/s
[info]                  ·gc.alloc.rate:                   940.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.059 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 501.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3153941.019 ops/s
[info]                  ·gc.alloc.rate:                   945.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 500.449 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3146996.339 ±(99.9%) 73249.537 ops/s [Average]
[info]   (min, avg, max) = (3123473.010, 3146996.339, 3173757.347), stdev = 19022.672
[info]   CI (99.9%): [3073746.802, 3220245.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   943.612 ±(99.9%) 21.968 MB/sec [Average]
[info]   (min, avg, max) = (936.537, 943.612, 951.639), stdev = 5.705
[info]   CI (99.9%): [921.644, 965.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.031 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.031, 0.042), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   928.162 ±(99.9%) 577.672 MB/sec [Average]
[info]   (min, avg, max) = (660.021, 928.162, 1002.630), stdev = 150.020
[info]   CI (99.9%): [350.490, 1505.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   464.562 ±(99.9%) 295.424 B/op [Average]
[info]   (min, avg, max) = (327.362, 464.562, 501.032), stdev = 76.721
[info]   CI (99.9%): [169.138, 759.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 27.73% complete, ETA 00:22:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 50773.463 ops/s
[info] # Warmup Iteration   2: 257791.545 ops/s
[info] # Warmup Iteration   3: 259670.889 ops/s
[info] # Warmup Iteration   4: 256289.164 ops/s
[info] # Warmup Iteration   5: 263001.225 ops/s
[info] Iteration   1: 260465.308 ops/s
[info]                  ·gc.alloc.rate:                   1432.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8049.900 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 259150.261 ops/s
[info]                  ·gc.alloc.rate:                   1424.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.759 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1675.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10176.481 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 263306.259 ops/s
[info]                  ·gc.alloc.rate:                   1448.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8050.411 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 263731.969 ops/s
[info]                  ·gc.alloc.rate:                   1450.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8064.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 263484.514 ops/s
[info]                  ·gc.alloc.rate:                   1449.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10100.610 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   262027.662 ±(99.9%) 8027.064 ops/s [Average]
[info]   (min, avg, max) = (259150.261, 262027.662, 263731.969), stdev = 2084.603
[info]   CI (99.9%): [254000.599, 270054.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1441.104 ±(99.9%) 44.801 MB/sec [Average]
[info]   (min, avg, max) = (1424.931, 1441.104, 1450.470), stdev = 11.635
[info]   CI (99.9%): [1396.303, 1485.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8656.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8656.002, 8656.002, 8656.002), stdev = 0.001
[info]   CI (99.9%): [8656.001, 8656.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.401 ±(99.9%) 0.807 B/op [Average]
[info]   (min, avg, max) = (0.248, 0.401, 0.759), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 1.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1479.382 ±(99.9%) 717.690 MB/sec [Average]
[info]   (min, avg, max) = (1332.241, 1479.382, 1691.396), stdev = 186.382
[info]   CI (99.9%): [761.692, 2197.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8888.289 ±(99.9%) 4396.095 B/op [Average]
[info]   (min, avg, max) = (8049.900, 8888.289, 10176.481), stdev = 1141.652
[info]   CI (99.9%): [4492.194, 13284.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 28.57% complete, ETA 00:22:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 289975.056 ops/s
[info] # Warmup Iteration   2: 475018.914 ops/s
[info] # Warmup Iteration   3: 473342.742 ops/s
[info] # Warmup Iteration   4: 481233.924 ops/s
[info] # Warmup Iteration   5: 490743.716 ops/s
[info] Iteration   1: 488326.025 ops/s
[info]                  ·gc.alloc.rate:                   1759.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2001.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6452.561 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 485503.600 ops/s
[info]                  ·gc.alloc.rate:                   1749.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1679.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5443.676 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 476443.534 ops/s
[info]                  ·gc.alloc.rate:                   1716.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1687.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5575.004 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 481431.140 ops/s
[info]                  ·gc.alloc.rate:                   1734.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.947 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5532.403 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 484679.489 ops/s
[info]                  ·gc.alloc.rate:                   1746.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1695.532 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5507.231 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   483276.757 ±(99.9%) 17489.812 ops/s [Average]
[info]   (min, avg, max) = (476443.534, 483276.757, 488326.025), stdev = 4542.049
[info]   CI (99.9%): [465786.946, 500766.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1741.331 ±(99.9%) 63.357 MB/sec [Average]
[info]   (min, avg, max) = (1716.576, 1741.331, 1759.561), stdev = 16.453
[info]   CI (99.9%): [1677.974, 1804.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5672.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5672.001, 5672.001, 5672.001), stdev = 0.001
[info]   CI (99.9%): [5672.001, 5672.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.245 ±(99.9%) 0.553 B/op [Average]
[info]   (min, avg, max) = (0.134, 0.245, 0.481), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1751.118 ±(99.9%) 539.923 MB/sec [Average]
[info]   (min, avg, max) = (1679.186, 1751.118, 2001.706), stdev = 140.216
[info]   CI (99.9%): [1211.196, 2291.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5702.175 ±(99.9%) 1625.613 B/op [Average]
[info]   (min, avg, max) = (5443.676, 5702.175, 6452.561), stdev = 422.167
[info]   CI (99.9%): [4076.562, 7327.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 29.41% complete, ETA 00:22:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 174992.677 ops/s
[info] # Warmup Iteration   2: 542497.055 ops/s
[info] # Warmup Iteration   3: 551279.714 ops/s
[info] # Warmup Iteration   4: 550911.496 ops/s
[info] # Warmup Iteration   5: 548032.943 ops/s
[info] Iteration   1: 551752.415 ops/s
[info]                  ·gc.alloc.rate:                   642.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1860.212 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 543956.586 ops/s
[info]                  ·gc.alloc.rate:                   633.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1894.556 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 552850.077 ops/s
[info]                  ·gc.alloc.rate:                   643.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1871.634 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 550767.230 ops/s
[info]                  ·gc.alloc.rate:                   641.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1886.438 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 552281.232 ops/s
[info]                  ·gc.alloc.rate:                   642.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1888.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   550321.508 ±(99.9%) 14015.573 ops/s [Average]
[info]   (min, avg, max) = (543956.586, 550321.508, 552850.077), stdev = 3639.800
[info]   CI (99.9%): [536305.935, 564337.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   640.545 ±(99.9%) 16.423 MB/sec [Average]
[info]   (min, avg, max) = (633.093, 640.545, 643.540), stdev = 4.265
[info]   CI (99.9%): [624.122, 656.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.144 ±(99.9%) 0.534 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.144, 0.361), stdev = 0.139
[info]   CI (99.9%): [≈ 0, 0.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   657.433 ±(99.9%) 16.335 MB/sec [Average]
[info]   (min, avg, max) = (652.084, 657.433, 662.800), stdev = 4.242
[info]   CI (99.9%): [641.097, 673.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1880.344 ±(99.9%) 54.224 B/op [Average]
[info]   (min, avg, max) = (1860.212, 1880.344, 1894.556), stdev = 14.082
[info]   CI (99.9%): [1826.121, 1934.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 30.25% complete, ETA 00:22:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2101709.394 ops/s
[info] # Warmup Iteration   2: 2422232.410 ops/s
[info] # Warmup Iteration   3: 2522095.033 ops/s
[info] # Warmup Iteration   4: 2483684.146 ops/s
[info] # Warmup Iteration   5: 2507634.676 ops/s
[info] Iteration   1: 2494265.817 ops/s
[info]                  ·gc.alloc.rate:                   1039.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 623.515 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2509078.101 ops/s
[info]                  ·gc.alloc.rate:                   1045.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1323.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 830.139 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2496804.947 ops/s
[info]                  ·gc.alloc.rate:                   1040.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 629.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2491950.168 ops/s
[info]                  ·gc.alloc.rate:                   1038.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 633.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2513196.039 ops/s
[info]                  ·gc.alloc.rate:                   1047.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 629.692 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2501059.014 ±(99.9%) 36470.945 ops/s [Average]
[info]   (min, avg, max) = (2491950.168, 2501059.014, 2513196.039), stdev = 9471.389
[info]   CI (99.9%): [2464588.070, 2537529.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1042.448 ±(99.9%) 15.621 MB/sec [Average]
[info]   (min, avg, max) = (1038.599, 1042.448, 1047.637), stdev = 4.057
[info]   CI (99.9%): [1026.828, 1058.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.034 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.034, 0.052), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1063.615 ±(99.9%) 560.143 MB/sec [Average]
[info]   (min, avg, max) = (988.063, 1063.615, 1323.560), stdev = 145.467
[info]   CI (99.9%): [503.472, 1623.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   669.186 ±(99.9%) 346.731 B/op [Average]
[info]   (min, avg, max) = (623.515, 669.186, 830.139), stdev = 90.045
[info]   CI (99.9%): [322.455, 1015.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 31.09% complete, ETA 00:21:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16889.679 ops/s
[info] # Warmup Iteration   2: 162010.130 ops/s
[info] # Warmup Iteration   3: 168754.240 ops/s
[info] # Warmup Iteration   4: 169854.551 ops/s
[info] # Warmup Iteration   5: 172409.692 ops/s
[info] Iteration   1: 171746.280 ops/s
[info]                  ·gc.alloc.rate:                   1167.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12123.183 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 172171.727 ops/s
[info]                  ·gc.alloc.rate:                   1170.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9133.937 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 171371.993 ops/s
[info]                  ·gc.alloc.rate:                   1164.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12293.472 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 170385.995 ops/s
[info]                  ·gc.alloc.rate:                   1157.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9306.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 171825.971 ops/s
[info]                  ·gc.alloc.rate:                   1167.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              10696.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12349.971 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   171500.393 ±(99.9%) 2636.721 ops/s [Average]
[info]   (min, avg, max) = (170385.995, 171500.393, 172171.727), stdev = 684.748
[info]   CI (99.9%): [168863.672, 174137.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1165.475 ±(99.9%) 17.986 MB/sec [Average]
[info]   (min, avg, max) = (1157.858, 1165.475, 1170.003), stdev = 4.671
[info]   CI (99.9%): [1147.489, 1183.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10696.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10696.002, 10696.002, 10696.003), stdev = 0.001
[info]   CI (99.9%): [10696.002, 10696.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.067, 0.083), stdev = 0.009
[info]   CI (99.9%): [0.031, 0.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.611 ±(99.9%) 0.327 B/op [Average]
[info]   (min, avg, max) = (0.571, 0.611, 0.763), stdev = 0.085
[info]   CI (99.9%): [0.284, 0.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1203.268 ±(99.9%) 703.912 MB/sec [Average]
[info]   (min, avg, max) = (999.134, 1203.268, 1348.327), stdev = 182.804
[info]   CI (99.9%): [499.356, 1907.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   11041.418 ±(99.9%) 6414.099 B/op [Average]
[info]   (min, avg, max) = (9133.937, 11041.418, 12349.971), stdev = 1665.721
[info]   CI (99.9%): [4627.318, 17455.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.93% complete, ETA 00:21:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 251267.390 ops/s
[info] # Warmup Iteration   2: 457412.169 ops/s
[info] # Warmup Iteration   3: 472841.135 ops/s
[info] # Warmup Iteration   4: 462788.653 ops/s
[info] # Warmup Iteration   5: 467254.735 ops/s
[info] Iteration   1: 470241.009 ops/s
[info]                  ·gc.alloc.rate:                   1630.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1661.612 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5561.297 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 469319.622 ops/s
[info]                  ·gc.alloc.rate:                   1626.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.869 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5613.761 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 469591.584 ops/s
[info]                  ·gc.alloc.rate:                   1627.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.203 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5638.898 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 475764.781 ops/s
[info]                  ·gc.alloc.rate:                   1649.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1689.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5590.613 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 469406.120 ops/s
[info]                  ·gc.alloc.rate:                   1627.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              5456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5679.701 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce":
[info]   470864.623 ±(99.9%) 10639.095 ops/s [Average]
[info]   (min, avg, max) = (469319.622, 470864.623, 475764.781), stdev = 2762.939
[info]   CI (99.9%): [460225.528, 481503.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1632.214 ±(99.9%) 36.578 MB/sec [Average]
[info]   (min, avg, max) = (1626.829, 1632.214, 1649.053), stdev = 9.499
[info]   CI (99.9%): [1595.636, 1668.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5456.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5456.001, 5456.001, 5456.001), stdev = 0.001
[info]   CI (99.9%): [5456.001, 5456.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.265 ±(99.9%) 0.227 B/op [Average]
[info]   (min, avg, max) = (0.207, 0.265, 0.349), stdev = 0.059
[info]   CI (99.9%): [0.037, 0.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   1680.308 ±(99.9%) 49.994 MB/sec [Average]
[info]   (min, avg, max) = (1661.612, 1680.308, 1694.118), stdev = 12.983
[info]   CI (99.9%): [1630.314, 1730.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5616.854 ±(99.9%) 174.562 B/op [Average]
[info]   (min, avg, max) = (5561.297, 5616.854, 5679.701), stdev = 45.333
[info]   CI (99.9%): [5442.293, 5791.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.77% complete, ETA 00:21:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267974.285 ops/s
[info] # Warmup Iteration   2: 944833.296 ops/s
[info] # Warmup Iteration   3: 949532.696 ops/s
[info] # Warmup Iteration   4: 956004.668 ops/s
[info] # Warmup Iteration   5: 967147.773 ops/s
[info] Iteration   1: 961060.269 ops/s
[info]                  ·gc.alloc.rate:                   1133.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.864 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1625.994 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 960064.417 ops/s
[info]                  ·gc.alloc.rate:                   1132.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.173 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1638.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 960028.817 ops/s
[info]                  ·gc.alloc.rate:                   1132.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2194.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 972259.010 ops/s
[info]                  ·gc.alloc.rate:                   1146.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1630.951 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 960238.311 ops/s
[info]                  ·gc.alloc.rate:                   1132.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1656.788 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson":
[info]   962730.165 ±(99.9%) 20574.862 ops/s [Average]
[info]   (min, avg, max) = (960028.817, 962730.165, 972259.010), stdev = 5343.226
[info]   CI (99.9%): [942155.302, 983305.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1135.269 ±(99.9%) 24.205 MB/sec [Average]
[info]   (min, avg, max) = (1132.115, 1135.269, 1146.480), stdev = 6.286
[info]   CI (99.9%): [1111.064, 1159.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.000), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.102 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.102, 0.137), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1069.771 ±(99.9%) 579.513 MB/sec [Average]
[info]   (min, avg, max) = (992.864, 1069.771, 1338.700), stdev = 150.498
[info]   CI (99.9%): [490.259, 1649.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1749.236 ±(99.9%) 959.291 B/op [Average]
[info]   (min, avg, max) = (1625.994, 1749.236, 2194.393), stdev = 249.125
[info]   CI (99.9%): [789.946, 2708.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.61% complete, ETA 00:21:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2441899.646 ops/s
[info] # Warmup Iteration   2: 2772495.799 ops/s
[info] # Warmup Iteration   3: 2837221.068 ops/s
[info] # Warmup Iteration   4: 2846549.303 ops/s
[info] # Warmup Iteration   5: 2852212.796 ops/s
[info] Iteration   1: 2807147.528 ops/s
[info]                  ·gc.alloc.rate:                   699.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 551.233 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2816385.742 ops/s
[info]                  ·gc.alloc.rate:                   701.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2792706.033 ops/s
[info]                  ·gc.alloc.rate:                   695.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 370.901 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2794723.186 ops/s
[info]                  ·gc.alloc.rate:                   696.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.220 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 371.725 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2834861.334 ops/s
[info]                  ·gc.alloc.rate:                   706.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.107 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.583 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   2809164.765 ±(99.9%) 66583.147 ops/s [Average]
[info]   (min, avg, max) = (2792706.033, 2809164.765, 2834861.334), stdev = 17291.432
[info]   CI (99.9%): [2742581.618, 2875747.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   699.652 ±(99.9%) 16.539 MB/sec [Average]
[info]   (min, avg, max) = (695.516, 699.652, 706.088), stdev = 4.295
[info]   CI (99.9%): [683.113, 716.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.047), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   724.023 ±(99.9%) 557.407 MB/sec [Average]
[info]   (min, avg, max) = (656.764, 724.023, 982.946), stdev = 144.757
[info]   CI (99.9%): [166.617, 1281.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   405.697 ±(99.9%) 313.374 B/op [Average]
[info]   (min, avg, max) = (367.043, 405.697, 551.233), stdev = 81.382
[info]   CI (99.9%): [92.323, 719.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 34.45% complete, ETA 00:20:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58963.084 ops/s
[info] # Warmup Iteration   2: 254574.395 ops/s
[info] # Warmup Iteration   3: 250320.832 ops/s
[info] # Warmup Iteration   4: 259957.005 ops/s
[info] # Warmup Iteration   5: 260018.804 ops/s
[info] Iteration   1: 260795.966 ops/s
[info]                  ·gc.alloc.rate:                   1393.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              8408.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1664.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10043.693 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 260330.331 ops/s
[info]                  ·gc.alloc.rate:                   1390.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              8408.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.194 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8102.741 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 262294.234 ops/s
[info]                  ·gc.alloc.rate:                   1401.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              8408.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.441 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8073.994 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 262507.061 ops/s
[info]                  ·gc.alloc.rate:                   1402.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              8408.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8095.462 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 263795.593 ops/s
[info]                  ·gc.alloc.rate:                   1408.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              8408.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.340 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8075.936 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay":
[info]   261944.637 ±(99.9%) 5373.687 ops/s [Average]
[info]   (min, avg, max) = (260330.331, 261944.637, 263795.593), stdev = 1395.529
[info]   CI (99.9%): [256570.950, 267318.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1399.236 ±(99.9%) 28.415 MB/sec [Average]
[info]   (min, avg, max) = (1390.684, 1399.236, 1408.987), stdev = 7.379
[info]   CI (99.9%): [1370.821, 1427.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8408.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8408.002, 8408.002, 8408.002), stdev = 0.001
[info]   CI (99.9%): [8408.001, 8408.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.326 ±(99.9%) 0.553 B/op [Average]
[info]   (min, avg, max) = (0.124, 0.326, 0.503), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1410.657 ±(99.9%) 546.054 MB/sec [Average]
[info]   (min, avg, max) = (1340.194, 1410.657, 1664.176), stdev = 141.808
[info]   CI (99.9%): [864.603, 1956.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8478.365 ±(99.9%) 3369.822 B/op [Average]
[info]   (min, avg, max) = (8073.994, 8478.365, 10043.693), stdev = 875.132
[info]   CI (99.9%): [5108.543, 11848.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 7.000), stdev = 0.894
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 35.29% complete, ETA 00:20:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 288984.783 ops/s
[info] # Warmup Iteration   2: 487402.297 ops/s
[info] # Warmup Iteration   3: 502884.363 ops/s
[info] # Warmup Iteration   4: 504362.313 ops/s
[info] # Warmup Iteration   5: 498440.994 ops/s
[info] Iteration   1: 504074.073 ops/s
[info]                  ·gc.alloc.rate:                   1921.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.533 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5226.419 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 494265.516 ops/s
[info]                  ·gc.alloc.rate:                   1884.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2020.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6433.125 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 504582.708 ops/s
[info]                  ·gc.alloc.rate:                   1923.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6329.640 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 502144.834 ops/s
[info]                  ·gc.alloc.rate:                   1914.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5312.414 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 499505.207 ops/s
[info]                  ·gc.alloc.rate:                   1904.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.182 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6422.642 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   500914.468 ±(99.9%) 16239.890 ops/s [Average]
[info]   (min, avg, max) = (494265.516, 500914.468, 504582.708), stdev = 4217.448
[info]   CI (99.9%): [484674.577, 517154.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   1909.396 ±(99.9%) 61.884 MB/sec [Average]
[info]   (min, avg, max) = (1884.018, 1909.396, 1923.429), stdev = 16.071
[info]   CI (99.9%): [1847.512, 1971.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6000.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6000.001, 6000.001, 6000.001), stdev = 0.001
[info]   CI (99.9%): [6000.001, 6000.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.236 ±(99.9%) 0.466 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.236, 0.398), stdev = 0.121
[info]   CI (99.9%): [≈ 0, 0.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1891.141 ±(99.9%) 728.427 MB/sec [Average]
[info]   (min, avg, max) = (1673.533, 1891.141, 2038.182), stdev = 189.170
[info]   CI (99.9%): [1162.714, 2619.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5944.848 ±(99.9%) 2382.175 B/op [Average]
[info]   (min, avg, max) = (5226.419, 5944.848, 6433.125), stdev = 618.643
[info]   CI (99.9%): [3562.672, 8327.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 36.13% complete, ETA 00:20:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1849176.604 ops/s
[info] # Warmup Iteration   2: 2393864.675 ops/s
[info] # Warmup Iteration   3: 2460671.143 ops/s
[info] # Warmup Iteration   4: 2450387.359 ops/s
[info] # Warmup Iteration   5: 2467739.613 ops/s
[info] Iteration   1: 2434213.613 ops/s
[info]                  ·gc.alloc.rate:                   1570.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1668.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1079.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2462396.630 ops/s
[info]                  ·gc.alloc.rate:                   1589.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 858.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2459186.881 ops/s
[info]                  ·gc.alloc.rate:                   1587.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1684.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1078.189 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2448593.274 ops/s
[info]                  ·gc.alloc.rate:                   1580.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1690.648 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1086.680 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2459335.806 ops/s
[info]                  ·gc.alloc.rate:                   1587.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 867.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   2452745.241 ±(99.9%) 44688.198 ops/s [Average]
[info]   (min, avg, max) = (2434213.613, 2452745.241, 2462396.630), stdev = 11605.383
[info]   CI (99.9%): [2408057.043, 2497433.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1583.207 ±(99.9%) 29.222 MB/sec [Average]
[info]   (min, avg, max) = (1570.998, 1583.207, 1589.405), stdev = 7.589
[info]   CI (99.9%): [1553.986, 1612.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.029 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.029, 0.040), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1548.353 ±(99.9%) 701.484 MB/sec [Average]
[info]   (min, avg, max) = (1342.442, 1548.353, 1690.648), stdev = 182.173
[info]   CI (99.9%): [846.869, 2249.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   993.929 ±(99.9%) 461.189 B/op [Average]
[info]   (min, avg, max) = (858.133, 993.929, 1086.680), stdev = 119.769
[info]   CI (99.9%): [532.739, 1455.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.97% complete, ETA 00:19:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14651.883 ops/s
[info] # Warmup Iteration   2: 149046.014 ops/s
[info] # Warmup Iteration   3: 156613.965 ops/s
[info] # Warmup Iteration   4: 156665.770 ops/s
[info] # Warmup Iteration   5: 156487.992 ops/s
[info] Iteration   1: 155225.954 ops/s
[info]                  ·gc.alloc.rate:                   1116.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              11320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.538 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10052.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 156077.898 ops/s
[info]                  ·gc.alloc.rate:                   1123.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              11320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13403.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 155205.252 ops/s
[info]                  ·gc.alloc.rate:                   1116.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              11320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10169.561 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 157048.459 ops/s
[info]                  ·gc.alloc.rate:                   1129.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              11320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.640 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10089.971 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 154951.909 ops/s
[info]                  ·gc.alloc.rate:                   1114.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              11320.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.904 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13680.961 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   155701.894 ±(99.9%) 3329.341 ops/s [Average]
[info]   (min, avg, max) = (154951.909, 155701.894, 157048.459), stdev = 864.619
[info]   CI (99.9%): [152372.554, 159031.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1119.919 ±(99.9%) 23.965 MB/sec [Average]
[info]   (min, avg, max) = (1114.465, 1119.919, 1129.356), stdev = 6.224
[info]   CI (99.9%): [1095.954, 1143.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11320.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11320.003, 11320.003, 11320.003), stdev = 0.001
[info]   CI (99.9%): [11320.002, 11320.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.631 ±(99.9%) 1.617 B/op [Average]
[info]   (min, avg, max) = (0.211, 0.631, 1.258), stdev = 0.420
[info]   CI (99.9%): [≈ 0, 2.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1135.517 ±(99.9%) 713.676 MB/sec [Average]
[info]   (min, avg, max) = (991.538, 1135.517, 1346.904), stdev = 185.339
[info]   CI (99.9%): [421.841, 1849.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   11479.297 ±(99.9%) 7262.325 B/op [Average]
[info]   (min, avg, max) = (10052.979, 11479.297, 13680.961), stdev = 1886.003
[info]   CI (99.9%): [4216.972, 18741.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.140
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.82% complete, ETA 00:19:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84791.591 ops/s
[info] # Warmup Iteration   2: 673172.675 ops/s
[info] # Warmup Iteration   3: 721387.550 ops/s
[info] # Warmup Iteration   4: 720846.395 ops/s
[info] # Warmup Iteration   5: 711804.708 ops/s
[info] Iteration   1: 710858.292 ops/s
[info]                  ·gc.alloc.rate:                   899.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.739 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2180.616 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 720009.923 ops/s
[info]                  ·gc.alloc.rate:                   911.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2167.421 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 712845.177 ops/s
[info]                  ·gc.alloc.rate:                   902.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1466.312 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 714133.190 ops/s
[info]                  ·gc.alloc.rate:                   903.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2204.356 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 720086.436 ops/s
[info]                  ·gc.alloc.rate:                   911.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.820 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2196.272 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   715586.604 ±(99.9%) 16314.080 ops/s [Average]
[info]   (min, avg, max) = (710858.292, 715586.604, 720086.436), stdev = 4236.715
[info]   CI (99.9%): [699272.523, 731900.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   905.595 ±(99.9%) 20.883 MB/sec [Average]
[info]   (min, avg, max) = (899.563, 905.595, 911.363), stdev = 5.423
[info]   CI (99.9%): [884.712, 926.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1992.001, 1992.001, 1992.001), stdev = 0.001
[info]   CI (99.9%): [1992.001, 1992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.101 ±(99.9%) 0.229 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.101, 0.182), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   929.023 ±(99.9%) 571.132 MB/sec [Average]
[info]   (min, avg, max) = (664.057, 929.023, 1004.820), stdev = 148.321
[info]   CI (99.9%): [357.890, 1500.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2042.995 ±(99.9%) 1242.566 B/op [Average]
[info]   (min, avg, max) = (1466.312, 2042.995, 2204.356), stdev = 322.690
[info]   CI (99.9%): [800.430, 3285.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.66% complete, ETA 00:19:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1636012.021 ops/s
[info] # Warmup Iteration   2: 1600624.926 ops/s
[info] # Warmup Iteration   3: 1618920.008 ops/s
[info] # Warmup Iteration   4: 1620729.559 ops/s
[info] # Warmup Iteration   5: 1613642.223 ops/s
[info] Iteration   1: 1623497.228 ops/s
[info]                  ·gc.alloc.rate:                   767.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 636.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1620091.779 ops/s
[info]                  ·gc.alloc.rate:                   765.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 638.724 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1616930.438 ops/s
[info]                  ·gc.alloc.rate:                   764.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.199 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 962.834 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1636077.368 ops/s
[info]                  ·gc.alloc.rate:                   773.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.105 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 636.974 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1619536.301 ops/s
[info]                  ·gc.alloc.rate:                   765.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 645.416 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   1623226.623 ±(99.9%) 29091.005 ops/s [Average]
[info]   (min, avg, max) = (1616930.438, 1623226.623, 1636077.368), stdev = 7554.842
[info]   CI (99.9%): [1594135.617, 1652317.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   767.301 ±(99.9%) 13.714 MB/sec [Average]
[info]   (min, avg, max) = (764.372, 767.301, 773.353), stdev = 3.561
[info]   CI (99.9%): [753.588, 781.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.044 ±(99.9%) 0.086 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.044, 0.081), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   725.784 ±(99.9%) 567.161 MB/sec [Average]
[info]   (min, avg, max) = (656.113, 725.784, 989.199), stdev = 147.290
[info]   CI (99.9%): [158.623, 1292.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   703.997 ±(99.9%) 557.346 B/op [Average]
[info]   (min, avg, max) = (636.036, 703.997, 962.834), stdev = 144.741
[info]   CI (99.9%): [146.651, 1261.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.50% complete, ETA 00:19:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 53230.338 ops/s
[info] # Warmup Iteration   2: 219035.905 ops/s
[info] # Warmup Iteration   3: 218815.597 ops/s
[info] # Warmup Iteration   4: 221589.522 ops/s
[info] # Warmup Iteration   5: 225639.873 ops/s
[info] Iteration   1: 224627.624 ops/s
[info]                  ·gc.alloc.rate:                   1228.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.392 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6975.105 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 224131.731 ops/s
[info]                  ·gc.alloc.rate:                   1225.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.731 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9369.553 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 225374.247 ops/s
[info]                  ·gc.alloc.rate:                   1232.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.324 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9369.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 223448.314 ops/s
[info]                  ·gc.alloc.rate:                   1222.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7110.525 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 225112.105 ops/s
[info]                  ·gc.alloc.rate:                   1231.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9440.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   224538.804 ±(99.9%) 2976.104 ops/s [Average]
[info]   (min, avg, max) = (223448.314, 224538.804, 225374.247), stdev = 772.885
[info]   CI (99.9%): [221562.700, 227514.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1227.937 ±(99.9%) 15.982 MB/sec [Average]
[info]   (min, avg, max) = (1222.065, 1227.937, 1232.362), stdev = 4.151
[info]   CI (99.9%): [1211.955, 1243.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8608.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8608.002, 8608.002, 8608.002), stdev = 0.001
[info]   CI (99.9%): [8608.002, 8608.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.379 ±(99.9%) 0.853 B/op [Average]
[info]   (min, avg, max) = (0.147, 0.379, 0.731), stdev = 0.222
[info]   CI (99.9%): [≈ 0, 1.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.099 ±(99.9%) 716.508 MB/sec [Average]
[info]   (min, avg, max) = (995.392, 1206.099, 1350.106), stdev = 186.075
[info]   CI (99.9%): [489.592, 1922.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8452.907 ±(99.9%) 4961.352 B/op [Average]
[info]   (min, avg, max) = (6975.105, 8452.907, 9440.253), stdev = 1288.447
[info]   CI (99.9%): [3491.555, 13414.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce
[info] # Run progress: 40.34% complete, ETA 00:18:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 602918.659 ops/s
[info] # Warmup Iteration   2: 689503.493 ops/s
[info] # Warmup Iteration   3: 699578.966 ops/s
[info] # Warmup Iteration   4: 706225.264 ops/s
[info] # Warmup Iteration   5: 703337.191 ops/s
[info] Iteration   1: 699144.836 ops/s
[info]                  ·gc.alloc.rate:                   1044.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2221.582 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 699951.869 ops/s
[info]                  ·gc.alloc.rate:                   1045.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.453 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2229.518 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 701842.613 ops/s
[info]                  ·gc.alloc.rate:                   1048.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2233.914 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 690292.177 ops/s
[info]                  ·gc.alloc.rate:                   1031.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2282.762 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 698727.728 ops/s
[info]                  ·gc.alloc.rate:                   1044.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2262.675 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce":
[info]   697991.845 ±(99.9%) 17201.855 ops/s [Average]
[info]   (min, avg, max) = (690292.177, 697991.845, 701842.613), stdev = 4467.267
[info]   CI (99.9%): [680789.989, 715193.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate":
[info]   1042.988 ±(99.9%) 25.801 MB/sec [Average]
[info]   (min, avg, max) = (1031.432, 1042.988, 1048.749), stdev = 6.701
[info]   CI (99.9%): [1017.187, 1068.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   2352.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2352.001, 2352.001, 2352.001), stdev = 0.001
[info]   CI (99.9%): [2352.001, 2352.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.103 ±(99.9%) 0.197 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.103, 0.187), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   995.975 ±(99.9%) 27.471 MB/sec [Average]
[info]   (min, avg, max) = (986.770, 995.975, 1004.487), stdev = 7.134
[info]   CI (99.9%): [968.503, 1023.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2246.090 ±(99.9%) 98.989 B/op [Average]
[info]   (min, avg, max) = (2221.582, 2246.090, 2282.762), stdev = 25.707
[info]   CI (99.9%): [2147.101, 2345.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson
[info] # Run progress: 41.18% complete, ETA 00:18:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 534269.620 ops/s
[info] # Warmup Iteration   2: 892693.896 ops/s
[info] # Warmup Iteration   3: 911290.914 ops/s
[info] # Warmup Iteration   4: 917011.256 ops/s
[info] # Warmup Iteration   5: 909366.071 ops/s
[info] Iteration   1: 913596.610 ops/s
[info]                  ·gc.alloc.rate:                   640.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.946 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1130.368 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 906579.363 ops/s
[info]                  ·gc.alloc.rate:                   635.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1143.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 916522.866 ops/s
[info]                  ·gc.alloc.rate:                   643.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.257 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1135.220 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 842960.975 ops/s
[info]                  ·gc.alloc.rate:                   591.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      331.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 618.744 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 913765.857 ops/s
[info]                  ·gc.alloc.rate:                   640.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1146.161 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson":
[info]   898685.134 ±(99.9%) 120781.782 ops/s [Average]
[info]   (min, avg, max) = (842960.975, 898685.134, 916522.866), stdev = 31366.645
[info]   CI (99.9%): [777903.352, 1019466.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate":
[info]   630.348 ±(99.9%) 84.802 MB/sec [Average]
[info]   (min, avg, max) = (591.235, 630.348, 643.072), stdev = 22.023
[info]   CI (99.9%): [545.546, 715.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.101 ±(99.9%) 0.316 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.101, 0.181), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   594.540 ±(99.9%) 566.670 MB/sec [Average]
[info]   (min, avg, max) = (331.361, 594.540, 665.396), stdev = 147.162
[info]   CI (99.9%): [27.870, 1161.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1034.840 ±(99.9%) 896.015 B/op [Average]
[info]   (min, avg, max) = (618.744, 1034.840, 1146.161), stdev = 232.692
[info]   CI (99.9%): [138.825, 1930.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter
[info] # Run progress: 42.02% complete, ETA 00:18:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1299163.781 ops/s
[info] # Warmup Iteration   2: 1373011.132 ops/s
[info] # Warmup Iteration   3: 1367211.096 ops/s
[info] # Warmup Iteration   4: 1387953.737 ops/s
[info] # Warmup Iteration   5: 1385224.129 ops/s
[info] Iteration   1: 1387374.830 ops/s
[info]                  ·gc.alloc.rate:                   338.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.064 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.926 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1395969.221 ops/s
[info]                  ·gc.alloc.rate:                   340.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.690 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 370.628 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1384249.550 ops/s
[info]                  ·gc.alloc.rate:                   337.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.682 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.633 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1374118.009 ops/s
[info]                  ·gc.alloc.rate:                   335.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 375.375 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1392894.926 ops/s
[info]                  ·gc.alloc.rate:                   339.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 370.329 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter":
[info]   1386921.307 ±(99.9%) 32720.125 ops/s [Average]
[info]   (min, avg, max) = (1374118.009, 1386921.307, 1395969.221), stdev = 8497.313
[info]   CI (99.9%): [1354201.182, 1419641.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   338.339 ±(99.9%) 7.983 MB/sec [Average]
[info]   (min, avg, max) = (335.231, 338.339, 340.549), stdev = 2.073
[info]   CI (99.9%): [330.356, 346.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.630 ±(99.9%) 5.242 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.630, 3.064), stdev = 1.361
[info]   CI (99.9%): [≈ 0, 5.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.714 ±(99.9%) 5.948 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.714, 3.477), stdev = 1.545
[info]   CI (99.9%): [≈ 0, 6.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   328.091 ±(99.9%) 2.048 MB/sec [Average]
[info]   (min, avg, max) = (327.682, 328.091, 328.690), stdev = 0.532
[info]   CI (99.9%): [326.043, 330.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   372.378 ±(99.9%) 7.846 B/op [Average]
[info]   (min, avg, max) = (370.329, 372.378, 375.375), stdev = 2.037
[info]   CI (99.9%): [364.532, 380.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 42.86% complete, ETA 00:18:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 255670.163 ops/s
[info] # Warmup Iteration   2: 444576.010 ops/s
[info] # Warmup Iteration   3: 456790.637 ops/s
[info] # Warmup Iteration   4: 457986.803 ops/s
[info] # Warmup Iteration   5: 452533.092 ops/s
[info] Iteration   1: 451300.168 ops/s
[info]                  ·gc.alloc.rate:                   1380.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.218 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1654.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5769.397 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 455201.407 ops/s
[info]                  ·gc.alloc.rate:                   1392.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.902 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4608.776 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 453357.116 ops/s
[info]                  ·gc.alloc.rate:                   1387.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4651.802 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 453482.403 ops/s
[info]                  ·gc.alloc.rate:                   1387.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4670.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 453086.727 ops/s
[info]                  ·gc.alloc.rate:                   1386.094 MB/sec
[info]                  ·gc.alloc.rate.norm:              4816.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.188 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4691.245 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   453285.564 ±(99.9%) 5341.044 ops/s [Average]
[info]   (min, avg, max) = (451300.168, 453285.564, 455201.407), stdev = 1387.052
[info]   CI (99.9%): [447944.520, 458626.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1386.834 ±(99.9%) 16.523 MB/sec [Average]
[info]   (min, avg, max) = (1380.774, 1386.834, 1392.833), stdev = 4.291
[info]   CI (99.9%): [1370.310, 1403.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4816.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4816.001, 4816.001, 4816.001), stdev = 0.001
[info]   CI (99.9%): [4816.001, 4816.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.217 ±(99.9%) 0.195 B/op [Average]
[info]   (min, avg, max) = (0.144, 0.217, 0.288), stdev = 0.051
[info]   CI (99.9%): [0.022, 0.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1404.473 ±(99.9%) 537.952 MB/sec [Average]
[info]   (min, avg, max) = (1332.902, 1404.473, 1654.118), stdev = 139.704
[info]   CI (99.9%): [866.521, 1942.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4878.272 ±(99.9%) 1921.775 B/op [Average]
[info]   (min, avg, max) = (4608.776, 4878.272, 5769.397), stdev = 499.079
[info]   CI (99.9%): [2956.497, 6800.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 43.70% complete, ETA 00:17:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 452847.567 ops/s
[info] # Warmup Iteration   2: 1078881.391 ops/s
[info] # Warmup Iteration   3: 1074244.183 ops/s
[info] # Warmup Iteration   4: 1094892.434 ops/s
[info] # Warmup Iteration   5: 1098937.108 ops/s
[info] Iteration   1: 1094223.376 ops/s
[info]                  ·gc.alloc.rate:                   828.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.409 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 945.689 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1102875.061 ops/s
[info]                  ·gc.alloc.rate:                   835.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.822 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1414.084 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1106525.839 ops/s
[info]                  ·gc.alloc.rate:                   837.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.107 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 944.658 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1091553.214 ops/s
[info]                  ·gc.alloc.rate:                   826.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1442.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1093740.085 ops/s
[info]                  ·gc.alloc.rate:                   828.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 962.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1097783.515 ±(99.9%) 25117.346 ops/s [Average]
[info]   (min, avg, max) = (1091553.214, 1097783.515, 1106525.839), stdev = 6522.895
[info]   CI (99.9%): [1072666.169, 1122900.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   831.368 ±(99.9%) 19.010 MB/sec [Average]
[info]   (min, avg, max) = (826.656, 831.368, 837.992), stdev = 4.937
[info]   CI (99.9%): [812.357, 850.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.095 ±(99.9%) 0.219 B/op [Average]
[info]   (min, avg, max) = (0.030, 0.095, 0.178), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   796.326 ±(99.9%) 700.385 MB/sec [Average]
[info]   (min, avg, max) = (657.409, 796.326, 1000.156), stdev = 181.888
[info]   CI (99.9%): [95.940, 1496.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1141.902 ±(99.9%) 1007.253 B/op [Average]
[info]   (min, avg, max) = (944.658, 1141.902, 1442.180), stdev = 261.580
[info]   CI (99.9%): [134.649, 2149.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 44.54% complete, ETA 00:17:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3095963.108 ops/s
[info] # Warmup Iteration   2: 3380605.694 ops/s
[info] # Warmup Iteration   3: 3314039.091 ops/s
[info] # Warmup Iteration   4: 3468661.290 ops/s
[info] # Warmup Iteration   5: 3418183.295 ops/s
[info] Iteration   1: 3448238.702 ops/s
[info]                  ·gc.alloc.rate:      105.154 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3434553.784 ops/s
[info]                  ·gc.alloc.rate:                   104.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.219 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3467459.346 ops/s
[info]                  ·gc.alloc.rate:      105.749 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3467932.901 ops/s
[info]                  ·gc.alloc.rate:      105.747 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3437644.970 ops/s
[info]                  ·gc.alloc.rate:                   104.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.113 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3451165.941 ±(99.9%) 61307.377 ops/s [Average]
[info]   (min, avg, max) = (3434553.784, 3451165.941, 3467932.901), stdev = 15921.331
[info]   CI (99.9%): [3389858.564, 3512473.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   105.245 ±(99.9%) 1.862 MB/sec [Average]
[info]   (min, avg, max) = (104.750, 105.245, 105.749), stdev = 0.484
[info]   CI (99.9%): [103.383, 107.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.015 ±(99.9%) 0.131 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.076), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.007 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   102.313 ±(99.9%) 539.469 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.313, 255.806), stdev = 140.098
[info]   CI (99.9%): [≈ 0, 641.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   46.866 ±(99.9%) 247.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.866, 117.219), stdev = 64.174
[info]   CI (99.9%): [≈ 0, 293.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 45.38% complete, ETA 00:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30893.831 ops/s
[info] # Warmup Iteration   2: 175365.159 ops/s
[info] # Warmup Iteration   3: 173173.589 ops/s
[info] # Warmup Iteration   4: 177383.040 ops/s
[info] # Warmup Iteration   5: 177896.867 ops/s
[info] Iteration   1: 179261.897 ops/s
[info]                  ·gc.alloc.rate:                   1211.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.548 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11638.627 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 177396.215 ops/s
[info]                  ·gc.alloc.rate:                   1199.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8868.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 177638.196 ops/s
[info]                  ·gc.alloc.rate:                   1200.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.831 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11873.656 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 179036.351 ops/s
[info]                  ·gc.alloc.rate:                   1210.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8868.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 177353.366 ops/s
[info]                  ·gc.alloc.rate:                   1198.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11973.406 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   178137.205 ±(99.9%) 3594.672 ops/s [Average]
[info]   (min, avg, max) = (177353.366, 178137.205, 179261.897), stdev = 933.525
[info]   CI (99.9%): [174542.532, 181731.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1204.187 ±(99.9%) 24.712 MB/sec [Average]
[info]   (min, avg, max) = (1198.813, 1204.187, 1211.992), stdev = 6.418
[info]   CI (99.9%): [1179.475, 1228.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10640.002, 10640.002, 10640.002), stdev = 0.001
[info]   CI (99.9%): [10640.002, 10640.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.516 ±(99.9%) 0.781 B/op [Average]
[info]   (min, avg, max) = (0.183, 0.516, 0.739), stdev = 0.203
[info]   CI (99.9%): [≈ 0, 1.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1204.584 ±(99.9%) 705.400 MB/sec [Average]
[info]   (min, avg, max) = (999.486, 1204.584, 1349.048), stdev = 183.190
[info]   CI (99.9%): [499.184, 1909.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10644.463 ±(99.9%) 6260.934 B/op [Average]
[info]   (min, avg, max) = (8868.006, 10644.463, 11973.406), stdev = 1625.945
[info]   CI (99.9%): [4383.529, 16905.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 46.22% complete, ETA 00:17:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3360.463 ops/s
[info] # Warmup Iteration   2: 5274.091 ops/s
[info] # Warmup Iteration   3: 6492.169 ops/s
[info] # Warmup Iteration   4: 7474.174 ops/s
[info] # Warmup Iteration   5: 7358.262 ops/s
[info] Iteration   1: 8408.475 ops/s
[info]                  ·gc.alloc.rate:                   1229.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              230136.419 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      980.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183572.484 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 8391.543 ops/s
[info]                  ·gc.alloc.rate:                   1226.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              230136.052 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1315.884 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246841.336 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 8324.549 ops/s
[info]                  ·gc.alloc.rate:                   1217.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              230136.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250620.495 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8378.118 ops/s
[info]                  ·gc.alloc.rate:                   1225.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              230145.738 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 187880.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 8296.330 ops/s
[info]                  ·gc.alloc.rate:                   1213.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              230176.049 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.017 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 254056.646 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   8359.803 ±(99.9%) 182.485 ops/s [Average]
[info]   (min, avg, max) = (8296.330, 8359.803, 8408.475), stdev = 47.391
[info]   CI (99.9%): [8177.318, 8542.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1222.333 ±(99.9%) 26.561 MB/sec [Average]
[info]   (min, avg, max) = (1213.153, 1222.333, 1229.494), stdev = 6.898
[info]   CI (99.9%): [1195.772, 1248.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   230146.062 ±(99.9%) 66.494 B/op [Average]
[info]   (min, avg, max) = (230136.049, 230146.062, 230176.049), stdev = 17.268
[info]   CI (99.9%): [230079.568, 230212.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.083, 0.104), stdev = 0.015
[info]   CI (99.9%): [0.027, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   15.686 ±(99.9%) 10.971 B/op [Average]
[info]   (min, avg, max) = (11.688, 15.686, 19.745), stdev = 2.849
[info]   CI (99.9%): [4.715, 26.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1192.235 ±(99.9%) 710.653 MB/sec [Average]
[info]   (min, avg, max) = (980.728, 1192.235, 1339.017), stdev = 184.554
[info]   CI (99.9%): [481.583, 1902.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   224594.251 ±(99.9%) 137104.432 B/op [Average]
[info]   (min, avg, max) = (183572.484, 224594.251, 254056.646), stdev = 35605.586
[info]   CI (99.9%): [87489.819, 361698.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 47.06% complete, ETA 00:16:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2627.337 ops/s
[info] # Warmup Iteration   2: 11142.572 ops/s
[info] # Warmup Iteration   3: 11562.517 ops/s
[info] # Warmup Iteration   4: 8829.512 ops/s
[info] # Warmup Iteration   5: 11508.968 ops/s
[info] Iteration   1: 9978.466 ops/s
[info]                  ·gc.alloc.rate:                   140.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              22224.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 40346.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 11595.934 ops/s
[info]                  ·gc.alloc.rate:      163.835 MB/sec
[info]                  ·gc.alloc.rate.norm: 22232.054 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 11574.573 ops/s
[info]                  ·gc.alloc.rate:                   163.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              22240.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34780.443 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 11544.290 ops/s
[info]                  ·gc.alloc.rate:                   163.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              22240.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34873.825 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 11480.631 ops/s
[info]                  ·gc.alloc.rate:      162.213 MB/sec
[info]                  ·gc.alloc.rate.norm: 22240.047 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11234.779 ±(99.9%) 2709.479 ops/s [Average]
[info]   (min, avg, max) = (9978.466, 11234.779, 11595.934), stdev = 703.643
[info]   CI (99.9%): [8525.299, 13944.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   158.737 ±(99.9%) 38.442 MB/sec [Average]
[info]   (min, avg, max) = (140.912, 158.737, 163.835), stdev = 9.983
[info]   CI (99.9%): [120.295, 197.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   22235.243 ±(99.9%) 27.544 B/op [Average]
[info]   (min, avg, max) = (22224.041, 22235.243, 22240.047), stdev = 7.153
[info]   CI (99.9%): [22207.699, 22262.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   153.490 ±(99.9%) 539.539 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.490, 255.842), stdev = 140.117
[info]   CI (99.9%): [≈ 0, 693.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   22000.056 ±(99.9%) 77818.532 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22000.056, 40346.010), stdev = 20209.226
[info]   CI (99.9%): [≈ 0, 99818.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 47.90% complete, ETA 00:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9637.069 ops/s
[info] # Warmup Iteration   2: 13076.167 ops/s
[info] # Warmup Iteration   3: 24078.936 ops/s
[info] # Warmup Iteration   4: 24165.436 ops/s
[info] # Warmup Iteration   5: 24342.892 ops/s
[info] Iteration   1: 24376.702 ops/s
[info]                  ·gc.alloc.rate:                   219.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16514.362 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 24422.003 ops/s
[info]                  ·gc.alloc.rate:                   220.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.796 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16484.614 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 24381.228 ops/s
[info]                  ·gc.alloc.rate:                   219.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16510.977 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 24594.968 ops/s
[info]                  ·gc.alloc.rate:      221.748 MB/sec
[info]                  ·gc.alloc.rate.norm: 14192.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 24405.482 ops/s
[info]                  ·gc.alloc.rate:                   220.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21198.323 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   24436.076 ±(99.9%) 349.298 ops/s [Average]
[info]   (min, avg, max) = (24376.702, 24436.076, 24594.968), stdev = 90.712
[info]   CI (99.9%): [24086.778, 24785.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   220.323 ±(99.9%) 3.141 MB/sec [Average]
[info]   (min, avg, max) = (219.779, 220.323, 221.748), stdev = 0.816
[info]   CI (99.9%): [217.182, 223.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   14192.018 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (14192.017, 14192.018, 14192.022), stdev = 0.002
[info]   CI (99.9%): [14192.009, 14192.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.616 ±(99.9%) 5.264 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.616, 3.061), stdev = 1.367
[info]   CI (99.9%): [≈ 0, 5.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   39.735 ±(99.9%) 339.508 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39.735, 197.454), stdev = 88.169
[info]   CI (99.9%): [≈ 0, 379.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   219.191 ±(99.9%) 487.230 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 219.191, 328.664), stdev = 126.532
[info]   CI (99.9%): [≈ 0, 706.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   14141.655 ±(99.9%) 31431.484 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14141.655, 21198.323), stdev = 8162.657
[info]   CI (99.9%): [≈ 0, 45573.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 48.74% complete, ETA 00:16:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 453.541 ops/s
[info] # Warmup Iteration   2: 3389.394 ops/s
[info] # Warmup Iteration   3: 3624.890 ops/s
[info] # Warmup Iteration   4: 3792.020 ops/s
[info] # Warmup Iteration   5: 3829.991 ops/s
[info] Iteration   1: 3763.604 ops/s
[info]                  ·gc.alloc.rate:                   1103.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.125 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1319.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 551999.371 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3808.434 ops/s
[info]                  ·gc.alloc.rate:                   1116.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 411861.938 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3804.617 ops/s
[info]                  ·gc.alloc.rate:                   1115.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.927 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 414085.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3755.118 ops/s
[info]                  ·gc.alloc.rate:                   1101.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.153 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 562116.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3757.593 ops/s
[info]                  ·gc.alloc.rate:                   1101.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 422412.793 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3777.873 ±(99.9%) 101.548 ops/s [Average]
[info]   (min, avg, max) = (3755.118, 3777.873, 3808.434), stdev = 26.372
[info]   CI (99.9%): [3676.325, 3879.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1107.733 ±(99.9%) 29.700 MB/sec [Average]
[info]   (min, avg, max) = (1101.045, 1107.733, 1116.746), stdev = 7.713
[info]   CI (99.9%): [1078.033, 1137.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461480.113 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (461480.107, 461480.113, 461480.125), stdev = 0.008
[info]   CI (99.9%): [461480.084, 461480.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   26.076 ±(99.9%) 53.373 B/op [Average]
[info]   (min, avg, max) = (8.610, 26.076, 43.621), stdev = 13.861
[info]   CI (99.9%): [≈ 0, 79.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1133.456 ±(99.9%) 693.429 MB/sec [Average]
[info]   (min, avg, max) = (996.674, 1133.456, 1341.153), stdev = 180.081
[info]   CI (99.9%): [440.028, 1826.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   472495.141 ±(99.9%) 297953.313 B/op [Average]
[info]   (min, avg, max) = (411861.938, 472495.141, 562116.021), stdev = 77377.529
[info]   CI (99.9%): [174541.828, 770448.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 49.58% complete, ETA 00:15:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 243155.433 ops/s
[info] # Warmup Iteration   2: 387522.819 ops/s
[info] # Warmup Iteration   3: 387117.831 ops/s
[info] # Warmup Iteration   4: 392107.208 ops/s
[info] # Warmup Iteration   5: 394363.587 ops/s
[info] Iteration   1: 394048.622 ops/s
[info]                  ·gc.alloc.rate:                   1305.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              5216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1319.830 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5272.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 394295.830 ops/s
[info]                  ·gc.alloc.rate:                   1306.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              5216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5303.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 390722.864 ops/s
[info]                  ·gc.alloc.rate:                   1294.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              5216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.344 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5383.814 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 390712.967 ops/s
[info]                  ·gc.alloc.rate:                   1294.650 MB/sec
[info]                  ·gc.alloc.rate.norm:              5216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5409.678 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 390870.215 ops/s
[info]                  ·gc.alloc.rate:                   1295.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              5216.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5429.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   392130.100 ±(99.9%) 7190.247 ops/s [Average]
[info]   (min, avg, max) = (390712.967, 392130.100, 394295.830), stdev = 1867.284
[info]   CI (99.9%): [384939.852, 399320.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1299.390 ±(99.9%) 23.991 MB/sec [Average]
[info]   (min, avg, max) = (1294.650, 1299.390, 1306.604), stdev = 6.231
[info]   CI (99.9%): [1275.399, 1323.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5216.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5216.001, 5216.001, 5216.001), stdev = 0.001
[info]   CI (99.9%): [5216.001, 5216.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.251 ±(99.9%) 0.397 B/op [Average]
[info]   (min, avg, max) = (0.166, 0.251, 0.419), stdev = 0.103
[info]   CI (99.9%): [≈ 0, 0.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1335.092 ±(99.9%) 43.300 MB/sec [Average]
[info]   (min, avg, max) = (1319.830, 1335.092, 1348.097), stdev = 11.245
[info]   CI (99.9%): [1291.791, 1378.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5359.561 ±(99.9%) 263.677 B/op [Average]
[info]   (min, avg, max) = (5272.027, 5359.561, 5429.020), stdev = 68.476
[info]   CI (99.9%): [5095.883, 5623.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 50.42% complete, ETA 00:15:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 685994.026 ops/s
[info] # Warmup Iteration   2: 1633095.483 ops/s
[info] # Warmup Iteration   3: 1607526.290 ops/s
[info] # Warmup Iteration   4: 1618966.091 ops/s
[info] # Warmup Iteration   5: 1626759.764 ops/s
[info] Iteration   1: 1638926.708 ops/s
[info]                  ·gc.alloc.rate:                   683.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 627.543 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1623152.668 ops/s
[info]                  ·gc.alloc.rate:                   676.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 636.219 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1631215.924 ops/s
[info]                  ·gc.alloc.rate:                   679.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 635.663 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1635591.990 ops/s
[info]                  ·gc.alloc.rate:                   681.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.419 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 636.529 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1631974.015 ops/s
[info]                  ·gc.alloc.rate:                   680.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 640.516 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1632172.261 ±(99.9%) 22750.108 ops/s [Average]
[info]   (min, avg, max) = (1623152.668, 1632172.261, 1638926.708), stdev = 5908.131
[info]   CI (99.9%): [1609422.153, 1654922.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   680.270 ±(99.9%) 9.617 MB/sec [Average]
[info]   (min, avg, max) = (676.491, 680.270, 683.203), stdev = 2.497
[info]   CI (99.9%): [670.653, 689.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.040 ±(99.9%) 0.123 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.080), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   658.790 ±(99.9%) 15.994 MB/sec [Average]
[info]   (min, avg, max) = (653.566, 658.790, 664.036), stdev = 4.153
[info]   CI (99.9%): [642.796, 674.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   635.294 ±(99.9%) 18.251 B/op [Average]
[info]   (min, avg, max) = (627.543, 635.294, 640.516), stdev = 4.740
[info]   CI (99.9%): [617.043, 653.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 51.26% complete, ETA 00:15:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8334488.161 ops/s
[info] # Warmup Iteration   2: 9446345.243 ops/s
[info] # Warmup Iteration   3: 9500214.168 ops/s
[info] # Warmup Iteration   4: 9508949.481 ops/s
[info] # Warmup Iteration   5: 9488929.474 ops/s
[info] Iteration   1: 9474897.890 ops/s
[info]                  ·gc.alloc.rate:                   481.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.881 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 9330806.941 ops/s
[info]                  ·gc.alloc.rate:                   474.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.167 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 9259406.578 ops/s
[info]                  ·gc.alloc.rate:                   470.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.301 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 9322869.277 ops/s
[info]                  ·gc.alloc.rate:                   473.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.330 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 9332283.907 ops/s
[info]                  ·gc.alloc.rate:                   474.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 55.326 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   9344052.919 ±(99.9%) 304712.975 ops/s [Average]
[info]   (min, avg, max) = (9259406.578, 9344052.919, 9474897.890), stdev = 79132.992
[info]   CI (99.9%): [9039339.943, 9648765.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   474.932 ±(99.9%) 15.579 MB/sec [Average]
[info]   (min, avg, max) = (470.605, 474.932, 481.623), stdev = 4.046
[info]   CI (99.9%): [459.353, 490.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.004 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.607 ±(99.9%) 690.759 MB/sec [Average]
[info]   (min, avg, max) = (327.039, 458.607, 655.495), stdev = 179.388
[info]   CI (99.9%): [≈ 0, 1149.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   77.201 ±(99.9%) 115.660 B/op [Average]
[info]   (min, avg, max) = (55.167, 77.201, 111.301), stdev = 30.037
[info]   CI (99.9%): [≈ 0, 192.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 52.10% complete, ETA 00:15:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68319.526 ops/s
[info] # Warmup Iteration   2: 249625.601 ops/s
[info] # Warmup Iteration   3: 252704.949 ops/s
[info] # Warmup Iteration   4: 251577.466 ops/s
[info] # Warmup Iteration   5: 254939.920 ops/s
[info] Iteration   1: 251402.883 ops/s
[info]                  ·gc.alloc.rate:                   806.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      985.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6169.836 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 255054.926 ops/s
[info]                  ·gc.alloc.rate:                   818.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      659.569 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4069.554 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 254139.186 ops/s
[info]                  ·gc.alloc.rate:                   815.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.874 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6148.826 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 254082.195 ops/s
[info]                  ·gc.alloc.rate:                   815.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.549 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4122.274 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 251570.869 ops/s
[info]                  ·gc.alloc.rate:                   806.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6263.775 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   253250.012 ±(99.9%) 6377.520 ops/s [Average]
[info]   (min, avg, max) = (251402.883, 253250.012, 255054.926), stdev = 1656.222
[info]   CI (99.9%): [246872.491, 259627.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   812.287 ±(99.9%) 20.651 MB/sec [Average]
[info]   (min, avg, max) = (806.423, 812.287, 818.150), stdev = 5.363
[info]   CI (99.9%): [791.636, 832.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5048.002, 5048.002, 5048.002), stdev = 0.001
[info]   CI (99.9%): [5048.001, 5048.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.310 ±(99.9%) 0.267 B/op [Average]
[info]   (min, avg, max) = (0.258, 0.310, 0.387), stdev = 0.069
[info]   CI (99.9%): [0.044, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   860.931 ±(99.9%) 697.670 MB/sec [Average]
[info]   (min, avg, max) = (659.569, 860.931, 1001.028), stdev = 181.183
[info]   CI (99.9%): [163.261, 1558.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5354.853 ±(99.9%) 4429.068 B/op [Average]
[info]   (min, avg, max) = (4069.554, 5354.853, 6263.775), stdev = 1150.215
[info]   CI (99.9%): [925.785, 9783.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 52.94% complete, ETA 00:14:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1006325.941 ops/s
[info] # Warmup Iteration   2: 1351589.953 ops/s
[info] # Warmup Iteration   3: 1388125.655 ops/s
[info] # Warmup Iteration   4: 1362273.005 ops/s
[info] # Warmup Iteration   5: 1368608.070 ops/s
[info] Iteration   1: 1381214.868 ops/s
[info]                  ·gc.alloc.rate:                   1368.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1324.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1510.086 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1388438.843 ops/s
[info]                  ·gc.alloc.rate:                   1376.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1511.702 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1391040.163 ops/s
[info]                  ·gc.alloc.rate:                   1378.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1517.534 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1390509.219 ops/s
[info]                  ·gc.alloc.rate:                   1378.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1524.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1391753.893 ops/s
[info]                  ·gc.alloc.rate:                   1379.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1527.337 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1388591.397 ±(99.9%) 16574.812 ops/s [Average]
[info]   (min, avg, max) = (1381214.868, 1388591.397, 1391753.893), stdev = 4304.426
[info]   CI (99.9%): [1372016.585, 1405166.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1376.108 ±(99.9%) 16.780 MB/sec [Average]
[info]   (min, avg, max) = (1368.596, 1376.108, 1379.125), stdev = 4.358
[info]   CI (99.9%): [1359.328, 1392.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.061 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.061, 0.071), stdev = 0.013
[info]   CI (99.9%): [0.011, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1339.213 ±(99.9%) 39.395 MB/sec [Average]
[info]   (min, avg, max) = (1324.806, 1339.213, 1350.250), stdev = 10.231
[info]   CI (99.9%): [1299.818, 1378.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1518.160 ±(99.9%) 29.027 B/op [Average]
[info]   (min, avg, max) = (1510.086, 1518.160, 1527.337), stdev = 7.538
[info]   CI (99.9%): [1489.134, 1547.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.78% complete, ETA 00:14:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1817881.466 ops/s
[info] # Warmup Iteration   2: 4344777.699 ops/s
[info] # Warmup Iteration   3: 4327947.023 ops/s
[info] # Warmup Iteration   4: 4406102.608 ops/s
[info] # Warmup Iteration   5: 4306239.367 ops/s
[info] Iteration   1: 4396456.017 ops/s
[info]                  ·gc.alloc.rate:                   1206.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.565 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 474.557 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4419496.786 ops/s
[info]                  ·gc.alloc.rate:                   1213.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.844 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 356.433 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4390169.221 ops/s
[info]                  ·gc.alloc.rate:                   1204.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 480.480 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4384267.443 ops/s
[info]                  ·gc.alloc.rate:                   1203.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 362.169 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4413393.744 ops/s
[info]                  ·gc.alloc.rate:                   1211.184 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 481.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4400756.642 ±(99.9%) 58187.164 ops/s [Average]
[info]   (min, avg, max) = (4384267.443, 4400756.642, 4419496.786), stdev = 15111.022
[info]   CI (99.9%): [4342569.478, 4458943.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1207.816 ±(99.9%) 15.952 MB/sec [Average]
[info]   (min, avg, max) = (1203.379, 1207.816, 1213.032), stdev = 4.143
[info]   CI (99.9%): [1191.863, 1223.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.024 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.024, 0.045), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1204.925 ±(99.9%) 704.130 MB/sec [Average]
[info]   (min, avg, max) = (1000.844, 1204.925, 1349.361), stdev = 182.860
[info]   CI (99.9%): [500.795, 1909.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   430.985 ±(99.9%) 252.298 B/op [Average]
[info]   (min, avg, max) = (356.433, 430.985, 481.285), stdev = 65.521
[info]   CI (99.9%): [178.687, 683.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.62% complete, ETA 00:14:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13813578.623 ops/s
[info] # Warmup Iteration   2: 15170259.440 ops/s
[info] # Warmup Iteration   3: 15277559.430 ops/s
[info] # Warmup Iteration   4: 15317240.139 ops/s
[info] # Warmup Iteration   5: 15384971.942 ops/s
[info] Iteration   1: 15471568.157 ops/s
[info]                  ·gc.alloc.rate:                   471.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.340 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 14945207.482 ops/s
[info]                  ·gc.alloc.rate:                   455.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.958 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 15235436.843 ops/s
[info]                  ·gc.alloc.rate:                   464.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.787 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15067284.796 ops/s
[info]                  ·gc.alloc.rate:                   459.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 68.396 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 15027465.647 ops/s
[info]                  ·gc.alloc.rate:                   458.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 34.357 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15149392.585 ±(99.9%) 804268.855 ops/s [Average]
[info]   (min, avg, max) = (14945207.482, 15149392.585, 15471568.157), stdev = 208866.068
[info]   CI (99.9%): [14345123.730, 15953661.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   461.975 ±(99.9%) 24.554 MB/sec [Average]
[info]   (min, avg, max) = (455.739, 461.975, 471.804), stdev = 6.377
[info]   CI (99.9%): [437.421, 486.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.003 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.436 ±(99.9%) 689.943 MB/sec [Average]
[info]   (min, avg, max) = (327.046, 458.436, 654.724), stdev = 179.176
[info]   CI (99.9%): [≈ 0, 1148.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   47.768 ±(99.9%) 73.516 B/op [Average]
[info]   (min, avg, max) = (33.340, 47.768, 68.958), stdev = 19.092
[info]   CI (99.9%): [≈ 0, 121.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 55.46% complete, ETA 00:14:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13726045.719 ops/s
[info] # Warmup Iteration   2: 15246621.406 ops/s
[info] # Warmup Iteration   3: 15413436.485 ops/s
[info] # Warmup Iteration   4: 15736288.778 ops/s
[info] # Warmup Iteration   5: 15609260.773 ops/s
[info] Iteration   1: 15441961.267 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 15712915.799 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 15830615.021 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 15826971.882 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 15834040.832 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   15729300.960 ±(99.9%) 648942.504 ops/s [Average]
[info]   (min, avg, max) = (15441961.267, 15729300.960, 15834040.832), stdev = 168528.307
[info]   CI (99.9%): [15080358.456, 16378243.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 56.30% complete, ETA 00:13:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291027.081 ops/s
[info] # Warmup Iteration   2: 941923.130 ops/s
[info] # Warmup Iteration   3: 950506.630 ops/s
[info] # Warmup Iteration   4: 952781.403 ops/s
[info] # Warmup Iteration   5: 954975.510 ops/s
[info] Iteration   1: 951370.719 ops/s
[info]                  ·gc.alloc.rate:                   1416.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1666.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2757.833 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 941857.793 ops/s
[info]                  ·gc.alloc.rate:                   1402.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.434 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2241.822 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 946763.306 ops/s
[info]                  ·gc.alloc.rate:                   1409.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2238.531 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 949016.468 ops/s
[info]                  ·gc.alloc.rate:                   1413.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.777 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2240.460 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 937589.657 ops/s
[info]                  ·gc.alloc.rate:                   1396.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.928 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2273.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   945319.589 ±(99.9%) 21448.404 ops/s [Average]
[info]   (min, avg, max) = (937589.657, 945319.589, 951370.719), stdev = 5570.083
[info]   CI (99.9%): [923871.184, 966767.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1407.625 ±(99.9%) 31.820 MB/sec [Average]
[info]   (min, avg, max) = (1396.138, 1407.625, 1416.607), stdev = 8.264
[info]   CI (99.9%): [1375.805, 1439.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2344.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.000, 2344.000, 2344.000), stdev = 0.001
[info]   CI (99.9%): [2344.000, 2344.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.097 ±(99.9%) 0.146 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.097, 0.139), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1411.805 ±(99.9%) 548.999 MB/sec [Average]
[info]   (min, avg, max) = (1341.434, 1411.805, 1666.708), stdev = 142.573
[info]   CI (99.9%): [862.806, 1960.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   2350.356 ±(99.9%) 878.847 B/op [Average]
[info]   (min, avg, max) = (2238.531, 2350.356, 2757.833), stdev = 228.234
[info]   CI (99.9%): [1471.509, 3229.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 57.14% complete, ETA 00:13:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424579.770 ops/s
[info] # Warmup Iteration   2: 673463.306 ops/s
[info] # Warmup Iteration   3: 686467.434 ops/s
[info] # Warmup Iteration   4: 683571.767 ops/s
[info] # Warmup Iteration   5: 686142.628 ops/s
[info] Iteration   1: 690199.218 ops/s
[info]                  ·gc.alloc.rate:                   1574.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1662.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3792.039 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 692342.440 ops/s
[info]                  ·gc.alloc.rate:                   1579.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.708 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3043.573 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 690046.491 ops/s
[info]                  ·gc.alloc.rate:                   1574.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3837.810 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 686760.546 ops/s
[info]                  ·gc.alloc.rate:                   1567.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3870.016 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 696439.459 ops/s
[info]                  ·gc.alloc.rate:                   1589.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              3592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3060.536 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   691157.631 ±(99.9%) 13721.081 ops/s [Average]
[info]   (min, avg, max) = (686760.546, 691157.631, 696439.459), stdev = 3563.321
[info]   CI (99.9%): [677436.550, 704878.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1577.179 ±(99.9%) 31.404 MB/sec [Average]
[info]   (min, avg, max) = (1567.081, 1577.179, 1589.235), stdev = 8.155
[info]   CI (99.9%): [1545.775, 1608.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3592.001, 3592.001, 3592.001), stdev = 0.001
[info]   CI (99.9%): [3592.001, 3592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.152 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (0.095, 0.152, 0.190), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   1545.258 ±(99.9%) 700.278 MB/sec [Average]
[info]   (min, avg, max) = (1338.708, 1545.258, 1688.371), stdev = 181.860
[info]   CI (99.9%): [844.979, 2245.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3520.795 ±(99.9%) 1651.301 B/op [Average]
[info]   (min, avg, max) = (3043.573, 3520.795, 3870.016), stdev = 428.838
[info]   CI (99.9%): [1869.494, 5172.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 57.98% complete, ETA 00:13:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1227549.179 ops/s
[info] # Warmup Iteration   2: 3101775.041 ops/s
[info] # Warmup Iteration   3: 3122308.920 ops/s
[info] # Warmup Iteration   4: 3143339.609 ops/s
[info] # Warmup Iteration   5: 3092134.607 ops/s
[info] Iteration   1: 3143511.554 ops/s
[info]                  ·gc.alloc.rate:                   1549.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              776.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1670.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 836.615 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3115176.221 ops/s
[info]                  ·gc.alloc.rate:                   1535.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              776.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1680.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 849.236 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3150724.796 ops/s
[info]                  ·gc.alloc.rate:                   1553.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              776.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.069 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 674.486 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3143623.657 ops/s
[info]                  ·gc.alloc.rate:                   1549.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              776.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1692.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 847.428 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3133800.336 ops/s
[info]                  ·gc.alloc.rate:                   1545.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              776.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 681.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   3137367.313 ±(99.9%) 53094.353 ops/s [Average]
[info]   (min, avg, max) = (3115176.221, 3137367.313, 3150724.796), stdev = 13788.435
[info]   CI (99.9%): [3084272.960, 3190461.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1546.785 ±(99.9%) 26.072 MB/sec [Average]
[info]   (min, avg, max) = (1535.824, 1546.785, 1553.262), stdev = 6.771
[info]   CI (99.9%): [1520.713, 1572.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   776.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (776.000, 776.000, 776.000), stdev = 0.001
[info]   CI (99.9%): [776.000, 776.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.036 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.036, 0.063), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1550.111 ±(99.9%) 692.876 MB/sec [Average]
[info]   (min, avg, max) = (1350.069, 1550.111, 1692.670), stdev = 179.938
[info]   CI (99.9%): [857.235, 2242.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   777.785 ±(99.9%) 351.987 B/op [Average]
[info]   (min, avg, max) = (674.486, 777.785, 849.236), stdev = 91.410
[info]   CI (99.9%): [425.798, 1129.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 7.000), stdev = 0.837
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 58.82% complete, ETA 00:13:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4760160.944 ops/s
[info] # Warmup Iteration   2: 5258300.930 ops/s
[info] # Warmup Iteration   3: 5389100.944 ops/s
[info] # Warmup Iteration   4: 5289412.084 ops/s
[info] # Warmup Iteration   5: 5334638.514 ops/s
[info] Iteration   1: 5375315.289 ops/s
[info]                  ·gc.alloc.rate:                   1420.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.077 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 389.460 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5302830.002 ops/s
[info]                  ·gc.alloc.rate:                   1401.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.458 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 397.000 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5344811.564 ops/s
[info]                  ·gc.alloc.rate:                   1412.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1681.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 494.994 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5243809.314 ops/s
[info]                  ·gc.alloc.rate:                   1385.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 404.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5345019.934 ops/s
[info]                  ·gc.alloc.rate:                   1412.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.817 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 398.369 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   5322357.221 ±(99.9%) 196094.199 ops/s [Average]
[info]   (min, avg, max) = (5243809.314, 5322357.221, 5375315.289), stdev = 50925.041
[info]   CI (99.9%): [5126263.022, 5518451.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1406.718 ±(99.9%) 52.130 MB/sec [Average]
[info]   (min, avg, max) = (1385.838, 1406.718, 1420.714), stdev = 13.538
[info]   CI (99.9%): [1354.588, 1458.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   416.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (416.000, 416.000, 416.000), stdev = 0.001
[info]   CI (99.9%): [416.000, 416.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.018 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.018, 0.025), stdev = 0.004
[info]   CI (99.9%): [0.001, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1410.100 ±(99.9%) 584.553 MB/sec [Average]
[info]   (min, avg, max) = (1330.077, 1410.100, 1681.176), stdev = 151.807
[info]   CI (99.9%): [825.546, 1994.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   416.952 ±(99.9%) 169.322 B/op [Average]
[info]   (min, avg, max) = (389.460, 416.952, 494.994), stdev = 43.972
[info]   CI (99.9%): [247.630, 586.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 59.66% complete, ETA 00:12:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58304.089 ops/s
[info] # Warmup Iteration   2: 355468.270 ops/s
[info] # Warmup Iteration   3: 356077.985 ops/s
[info] # Warmup Iteration   4: 353114.459 ops/s
[info] # Warmup Iteration   5: 357058.397 ops/s
[info] Iteration   1: 364944.585 ops/s
[info]                  ·gc.alloc.rate:                   1276.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4293.440 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 361154.542 ops/s
[info]                  ·gc.alloc.rate:                   1263.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5813.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 365618.780 ops/s
[info]                  ·gc.alloc.rate:                   1278.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5773.838 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 361565.779 ops/s
[info]                  ·gc.alloc.rate:                   1264.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5861.765 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 358331.848 ops/s
[info]                  ·gc.alloc.rate:                   1253.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              5504.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5931.853 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   362323.107 ±(99.9%) 11488.034 ops/s [Average]
[info]   (min, avg, max) = (358331.848, 362323.107, 365618.780), stdev = 2983.406
[info]   CI (99.9%): [350835.072, 373811.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1267.107 ±(99.9%) 40.045 MB/sec [Average]
[info]   (min, avg, max) = (1253.057, 1267.107, 1278.625), stdev = 10.400
[info]   CI (99.9%): [1227.062, 1307.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5504.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5504.001, 5504.001, 5504.001), stdev = 0.001
[info]   CI (99.9%): [5504.001, 5504.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.217 ±(99.9%) 0.193 B/op [Average]
[info]   (min, avg, max) = (0.179, 0.217, 0.272), stdev = 0.050
[info]   CI (99.9%): [0.024, 0.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1273.624 ±(99.9%) 599.315 MB/sec [Average]
[info]   (min, avg, max) = (995.424, 1273.624, 1350.463), stdev = 155.640
[info]   CI (99.9%): [674.309, 1872.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5534.822 ±(99.9%) 2681.792 B/op [Average]
[info]   (min, avg, max) = (4293.440, 5534.822, 5931.853), stdev = 696.453
[info]   CI (99.9%): [2853.030, 8216.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce
[info] # Run progress: 60.50% complete, ETA 00:12:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144623.916 ops/s
[info] # Warmup Iteration   2: 164683.717 ops/s
[info] # Warmup Iteration   3: 165941.568 ops/s
[info] # Warmup Iteration   4: 167599.370 ops/s
[info] # Warmup Iteration   5: 167775.821 ops/s
[info] Iteration   1: 165505.048 ops/s
[info]                  ·gc.alloc.rate:                   980.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              9328.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9377.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 164498.921 ops/s
[info]                  ·gc.alloc.rate:                   975.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              9328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9480.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 164266.754 ops/s
[info]                  ·gc.alloc.rate:                   973.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              9328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.562 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9538.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 164868.706 ops/s
[info]                  ·gc.alloc.rate:                   977.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              9328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9541.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 167237.582 ops/s
[info]                  ·gc.alloc.rate:                   991.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              9328.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6293.763 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce":
[info]   165275.402 ±(99.9%) 4592.037 ops/s [Average]
[info]   (min, avg, max) = (164266.754, 165275.402, 167237.582), stdev = 1192.537
[info]   CI (99.9%): [160683.365, 169867.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate":
[info]   979.599 ±(99.9%) 26.859 MB/sec [Average]
[info]   (min, avg, max) = (973.640, 979.599, 991.061), stdev = 6.975
[info]   CI (99.9%): [952.740, 1006.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm":
[info]   9328.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9328.002, 9328.003, 9328.003), stdev = 0.001
[info]   CI (99.9%): [9328.002, 9328.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.516 ±(99.9%) 0.423 B/op [Average]
[info]   (min, avg, max) = (0.392, 0.516, 0.597), stdev = 0.110
[info]   CI (99.9%): [0.093, 0.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   928.201 ±(99.9%) 558.963 MB/sec [Average]
[info]   (min, avg, max) = (668.686, 928.201, 999.645), stdev = 145.161
[info]   CI (99.9%): [369.238, 1487.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   8846.164 ±(99.9%) 5500.116 B/op [Average]
[info]   (min, avg, max) = (6293.763, 8846.164, 9541.006), stdev = 1428.363
[info]   CI (99.9%): [3346.048, 14346.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson
[info] # Run progress: 61.34% complete, ETA 00:12:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160545.995 ops/s
[info] # Warmup Iteration   2: 215053.363 ops/s
[info] # Warmup Iteration   3: 225203.766 ops/s
[info] # Warmup Iteration   4: 228922.627 ops/s
[info] # Warmup Iteration   5: 235692.732 ops/s
[info] Iteration   1: 241928.634 ops/s
[info]                  ·gc.alloc.rate:                   255.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1664.069 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 247990.291 ops/s
[info]                  ·gc.alloc.rate:                   262.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2054.639 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 247722.801 ops/s
[info]                  ·gc.alloc.rate:                   261.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.780 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2056.787 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 248424.776 ops/s
[info]                  ·gc.alloc.rate:      262.632 MB/sec
[info]                  ·gc.alloc.rate.norm: 1664.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 247693.697 ops/s
[info]                  ·gc.alloc.rate:                   261.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2069.792 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson":
[info]   246752.040 ±(99.9%) 10443.989 ops/s [Average]
[info]   (min, avg, max) = (241928.634, 246752.040, 248424.776), stdev = 2712.271
[info]   CI (99.9%): [236308.050, 257196.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate":
[info]   260.885 ±(99.9%) 11.034 MB/sec [Average]
[info]   (min, avg, max) = (255.788, 260.885, 262.632), stdev = 2.866
[info]   CI (99.9%): [249.851, 271.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1664.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1664.002, 1664.002, 1664.002), stdev = 0.001
[info]   CI (99.9%): [1664.001, 1664.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.220 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.264 ±(99.9%) 1.394 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.264, 0.661), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   245.809 ±(99.9%) 541.359 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.809, 325.686), stdev = 140.589
[info]   CI (99.9%): [≈ 0, 787.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1569.057 ±(99.9%) 3441.629 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1569.057, 2069.792), stdev = 893.780
[info]   CI (99.9%): [≈ 0, 5010.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter
[info] # Run progress: 62.18% complete, ETA 00:11:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 643135.488 ops/s
[info] # Warmup Iteration   2: 677653.265 ops/s
[info] # Warmup Iteration   3: 675261.948 ops/s
[info] # Warmup Iteration   4: 681626.380 ops/s
[info] # Warmup Iteration   5: 695686.937 ops/s
[info] Iteration   1: 694190.088 ops/s
[info]                  ·gc.alloc.rate:                   585.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.970 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 741.532 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 689314.457 ops/s
[info]                  ·gc.alloc.rate:                   581.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.827 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1495.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 691044.450 ops/s
[info]                  ·gc.alloc.rate:                   583.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.883 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1493.644 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 684261.804 ops/s
[info]                  ·gc.alloc.rate:                   577.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1511.499 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 690528.763 ops/s
[info]                  ·gc.alloc.rate:                   582.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1502.317 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter":
[info]   689867.913 ±(99.9%) 13915.287 ops/s [Average]
[info]   (min, avg, max) = (684261.804, 689867.913, 694190.088), stdev = 3613.756
[info]   CI (99.9%): [675952.625, 703783.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate":
[info]   582.044 ±(99.9%) 11.578 MB/sec [Average]
[info]   (min, avg, max) = (577.339, 582.044, 585.566), stdev = 3.007
[info]   CI (99.9%): [570.466, 593.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.123 ±(99.9%) 0.379 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.123, 0.238), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   590.757 ±(99.9%) 567.854 MB/sec [Average]
[info]   (min, avg, max) = (326.970, 590.757, 658.994), stdev = 147.470
[info]   CI (99.9%): [22.903, 1158.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1348.819 ±(99.9%) 1307.516 B/op [Average]
[info]   (min, avg, max) = (741.532, 1348.819, 1511.499), stdev = 339.558
[info]   CI (99.9%): [41.304, 2656.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc
[info] # Run progress: 63.03% complete, ETA 00:11:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 674138.273 ops/s
[info] # Warmup Iteration   2: 691897.216 ops/s
[info] # Warmup Iteration   3: 720415.171 ops/s
[info] # Warmup Iteration   4: 717960.355 ops/s
[info] # Warmup Iteration   5: 721683.980 ops/s
[info] Iteration   1: 721777.914 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 721864.047 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 722101.928 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 719661.433 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 677771.901 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc":
[info]   712635.444 ±(99.9%) 75141.774 ops/s [Average]
[info]   (min, avg, max) = (677771.901, 712635.444, 722101.928), stdev = 19514.080
[info]   CI (99.9%): [637493.670, 787777.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay
[info] # Run progress: 63.87% complete, ETA 00:11:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 182301.494 ops/s
[info] # Warmup Iteration   2: 245577.439 ops/s
[info] # Warmup Iteration   3: 245289.996 ops/s
[info] # Warmup Iteration   4: 251304.438 ops/s
[info] # Warmup Iteration   5: 246247.027 ops/s
[info] Iteration   1: 246698.292 ops/s
[info]                  ·gc.alloc.rate:      263.290 MB/sec
[info]                  ·gc.alloc.rate.norm: 1680.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 244514.832 ops/s
[info]                  ·gc.alloc.rate:                   261.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2088.105 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 244942.903 ops/s
[info]                  ·gc.alloc.rate:                   261.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2084.474 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 245973.903 ops/s
[info]                  ·gc.alloc.rate:                   262.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2090.622 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 239647.574 ops/s
[info]                  ·gc.alloc.rate:                   255.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2145.826 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay":
[info]   244355.501 ±(99.9%) 10657.818 ops/s [Average]
[info]   (min, avg, max) = (239647.574, 244355.501, 246698.292), stdev = 2767.802
[info]   CI (99.9%): [233697.682, 255013.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate":
[info]   260.818 ±(99.9%) 11.395 MB/sec [Average]
[info]   (min, avg, max) = (255.770, 260.818, 263.290), stdev = 2.959
[info]   CI (99.9%): [249.422, 272.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm":
[info]   1680.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.002, 1680.002, 1680.002), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.295 ±(99.9%) 1.333 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.295, 0.670), stdev = 0.346
[info]   CI (99.9%): [≈ 0, 1.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   260.449 ±(99.9%) 560.653 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 260.449, 326.701), stdev = 145.600
[info]   CI (99.9%): [≈ 0, 821.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   1681.805 ±(99.9%) 3621.518 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1681.805, 2145.826), stdev = 940.497
[info]   CI (99.9%): [≈ 0, 5303.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.71% complete, ETA 00:11:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1029083.140 ops/s
[info] # Warmup Iteration   2: 2064908.431 ops/s
[info] # Warmup Iteration   3: 2058400.531 ops/s
[info] # Warmup Iteration   4: 2086666.135 ops/s
[info] # Warmup Iteration   5: 2035828.665 ops/s
[info] Iteration   1: 2070692.015 ops/s
[info]                  ·gc.alloc.rate:                   1094.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 754.655 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2080704.460 ops/s
[info]                  ·gc.alloc.rate:                   1099.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.775 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 755.552 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2042086.047 ops/s
[info]                  ·gc.alloc.rate:                   1079.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.603 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1030.928 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2065991.562 ops/s
[info]                  ·gc.alloc.rate:                   1091.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 767.529 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2072251.465 ops/s
[info]                  ·gc.alloc.rate:                   1095.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 767.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2066345.110 ±(99.9%) 56086.010 ops/s [Average]
[info]   (min, avg, max) = (2042086.047, 2066345.110, 2080704.460), stdev = 14565.359
[info]   CI (99.9%): [2010259.100, 2122431.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1092.254 ±(99.9%) 29.560 MB/sec [Average]
[info]   (min, avg, max) = (1079.500, 1092.254, 1099.833), stdev = 7.677
[info]   CI (99.9%): [1062.693, 1121.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.060 ±(99.9%) 0.100 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.060, 0.094), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   1069.395 ±(99.9%) 577.963 MB/sec [Average]
[info]   (min, avg, max) = (992.797, 1069.395, 1337.603), stdev = 150.095
[info]   CI (99.9%): [491.431, 1647.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   815.225 ±(99.9%) 464.930 B/op [Average]
[info]   (min, avg, max) = (754.655, 815.225, 1030.928), stdev = 120.741
[info]   CI (99.9%): [350.295, 1280.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.55% complete, ETA 00:10:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4492204.773 ops/s
[info] # Warmup Iteration   2: 4958769.357 ops/s
[info] # Warmup Iteration   3: 5014324.706 ops/s
[info] # Warmup Iteration   4: 5042274.102 ops/s
[info] # Warmup Iteration   5: 4993193.898 ops/s
[info] Iteration   1: 4976586.190 ops/s
[info]                  ·gc.alloc.rate:                   758.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 310.840 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4967988.128 ops/s
[info]                  ·gc.alloc.rate:                   757.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.074 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4978910.340 ops/s
[info]                  ·gc.alloc.rate:                   759.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.254 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5010246.838 ops/s
[info]                  ·gc.alloc.rate:                   763.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 311.672 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5007935.960 ops/s
[info]                  ·gc.alloc.rate:                   763.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.722 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4988333.491 ±(99.9%) 74696.048 ops/s [Average]
[info]   (min, avg, max) = (4967988.128, 4988333.491, 5010246.838), stdev = 19398.326
[info]   CI (99.9%): [4913637.444, 5063029.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   760.574 ±(99.9%) 11.324 MB/sec [Average]
[info]   (min, avg, max) = (757.544, 760.574, 763.935), stdev = 2.941
[info]   CI (99.9%): [749.250, 771.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.021, 0.026), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   790.851 ±(99.9%) 690.957 MB/sec [Average]
[info]   (min, avg, max) = (656.772, 790.851, 992.071), stdev = 179.439
[info]   CI (99.9%): [99.894, 1481.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   249.512 ±(99.9%) 217.042 B/op [Average]
[info]   (min, avg, max) = (208.074, 249.512, 311.672), stdev = 56.365
[info]   CI (99.9%): [32.470, 466.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 66.39% complete, ETA 00:10:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106853.981 ops/s
[info] # Warmup Iteration   2: 521525.940 ops/s
[info] # Warmup Iteration   3: 518480.739 ops/s
[info] # Warmup Iteration   4: 522293.305 ops/s
[info] # Warmup Iteration   5: 524838.330 ops/s
[info] Iteration   1: 519563.574 ops/s
[info]                  ·gc.alloc.rate:                   1505.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1668.554 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5055.413 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 526791.221 ops/s
[info]                  ·gc.alloc.rate:                   1525.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.494 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4012.142 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 524567.567 ops/s
[info]                  ·gc.alloc.rate:                   1519.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1685.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5058.469 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 518944.514 ops/s
[info]                  ·gc.alloc.rate:                   1503.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.983 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4101.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 524308.011 ops/s
[info]                  ·gc.alloc.rate:                   1519.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.620 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5086.933 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   522834.977 ±(99.9%) 13151.703 ops/s [Average]
[info]   (min, avg, max) = (518944.514, 522834.977, 526791.221), stdev = 3415.456
[info]   CI (99.9%): [509683.274, 535986.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1514.563 ±(99.9%) 38.012 MB/sec [Average]
[info]   (min, avg, max) = (1503.295, 1514.563, 1525.813), stdev = 9.872
[info]   CI (99.9%): [1476.551, 1552.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4560.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4560.001, 4560.001, 4560.001), stdev = 0.001
[info]   CI (99.9%): [4560.001, 4560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.188 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.188, 0.250), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1548.669 ±(99.9%) 709.093 MB/sec [Average]
[info]   (min, avg, max) = (1342.494, 1548.669, 1694.620), stdev = 184.149
[info]   CI (99.9%): [839.576, 2257.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   4662.795 ±(99.9%) 2134.887 B/op [Average]
[info]   (min, avg, max) = (4012.142, 4662.795, 5086.933), stdev = 554.423
[info]   CI (99.9%): [2527.908, 6797.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 10.000), stdev = 1.949
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 67.23% complete, ETA 00:10:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3754.919 ops/s
[info] # Warmup Iteration   2: 4994.905 ops/s
[info] # Warmup Iteration   3: 5131.669 ops/s
[info] # Warmup Iteration   4: 5217.300 ops/s
[info] # Warmup Iteration   5: 5183.894 ops/s
[info] Iteration   1: 5130.481 ops/s
[info]                  ·gc.alloc.rate:                   1224.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 303519.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5110.153 ops/s
[info]                  ·gc.alloc.rate:                   1219.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.463 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 408885.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5156.034 ops/s
[info]                  ·gc.alloc.rate:                   1230.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 407474.560 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5113.580 ops/s
[info]                  ·gc.alloc.rate:                   1220.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309550.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5130.309 ops/s
[info]                  ·gc.alloc.rate:                   1224.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.184 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 412728.667 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5128.111 ±(99.9%) 70.051 ops/s [Average]
[info]   (min, avg, max) = (5110.153, 5128.111, 5156.034), stdev = 18.192
[info]   CI (99.9%): [5058.060, 5198.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1223.772 ±(99.9%) 16.826 MB/sec [Average]
[info]   (min, avg, max) = (1219.584, 1223.772, 1230.552), stdev = 4.370
[info]   CI (99.9%): [1206.946, 1240.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   375656.082 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (375656.079, 375656.082, 375656.086), stdev = 0.004
[info]   CI (99.9%): [375656.068, 375656.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.110 ±(99.9%) 0.140 MB/sec [Average]
[info]   (min, avg, max) = (0.051, 0.110, 0.146), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   33.765 ±(99.9%) 42.771 B/op [Average]
[info]   (min, avg, max) = (15.612, 33.765, 44.695), stdev = 11.107
[info]   CI (99.9%): [≈ 0, 76.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1200.400 ±(99.9%) 714.740 MB/sec [Average]
[info]   (min, avg, max) = (989.053, 1200.400, 1345.184), stdev = 185.616
[info]   CI (99.9%): [485.660, 1915.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   368431.539 ±(99.9%) 217856.984 B/op [Average]
[info]   (min, avg, max) = (303519.027, 368431.539, 412728.667), stdev = 56576.767
[info]   CI (99.9%): [150574.555, 586288.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 5.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 68.07% complete, ETA 00:10:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 14050.236 ops/s
[info] # Warmup Iteration   2: 27459.626 ops/s
[info] # Warmup Iteration   3: 27182.209 ops/s
[info] # Warmup Iteration   4: 27642.674 ops/s
[info] # Warmup Iteration   5: 27588.899 ops/s
[info] Iteration   1: 27581.868 ops/s
[info]                  ·gc.alloc.rate:                   399.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.992 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.973 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18434.747 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 27621.601 ops/s
[info]                  ·gc.alloc.rate:                   400.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.857 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      649.314 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37007.225 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 27679.293 ops/s
[info]                  ·gc.alloc.rate:                   401.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18541.269 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 26418.026 ops/s
[info]                  ·gc.alloc.rate:                   382.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.840 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.990 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19424.688 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 27487.940 ops/s
[info]                  ·gc.alloc.rate:                   398.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18745.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   27357.746 ±(99.9%) 2040.538 ops/s [Average]
[info]   (min, avg, max) = (26418.026, 27357.746, 27679.293), stdev = 529.921
[info]   CI (99.9%): [25317.207, 29398.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   396.369 ±(99.9%) 29.534 MB/sec [Average]
[info]   (min, avg, max) = (382.767, 396.369, 401.034), stdev = 7.670
[info]   CI (99.9%): [366.836, 425.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.868 ±(99.9%) 0.273 B/op [Average]
[info]   (min, avg, max) = (22807.822, 22807.868, 22807.992), stdev = 0.071
[info]   CI (99.9%): [22807.595, 22808.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2.416 ±(99.9%) 8.774 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.416, 4.960), stdev = 2.279
[info]   CI (99.9%): [≈ 0, 11.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   390.324 ±(99.9%) 557.528 MB/sec [Average]
[info]   (min, avg, max) = (322.973, 390.324, 649.314), stdev = 144.788
[info]   CI (99.9%): [≈ 0, 947.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   22430.586 ±(99.9%) 31412.315 B/op [Average]
[info]   (min, avg, max) = (18434.747, 22430.586, 37007.225), stdev = 8157.678
[info]   CI (99.9%): [≈ 0, 53842.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 68.91% complete, ETA 00:09:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 35963.593 ops/s
[info] # Warmup Iteration   2: 40016.126 ops/s
[info] # Warmup Iteration   3: 40648.177 ops/s
[info] # Warmup Iteration   4: 40944.542 ops/s
[info] # Warmup Iteration   5: 40559.559 ops/s
[info] Iteration   1: 40914.656 ops/s
[info]                  ·gc.alloc.rate:      308.214 MB/sec
[info]                  ·gc.alloc.rate.norm: 11856.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 40842.955 ops/s
[info]                  ·gc.alloc.rate:                   307.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.028 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.683 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12667.619 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 40782.916 ops/s
[info]                  ·gc.alloc.rate:                   307.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.712 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12686.253 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 40950.673 ops/s
[info]                  ·gc.alloc.rate:                   308.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12570.214 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 40957.705 ops/s
[info]                  ·gc.alloc.rate:                   308.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12568.373 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   40889.781 ±(99.9%) 289.138 ops/s [Average]
[info]   (min, avg, max) = (40782.916, 40889.781, 40957.705), stdev = 75.088
[info]   CI (99.9%): [40600.643, 41178.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   307.986 ±(99.9%) 2.135 MB/sec [Average]
[info]   (min, avg, max) = (307.200, 307.986, 308.496), stdev = 0.554
[info]   CI (99.9%): [305.851, 310.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   11856.010 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11856.010, 11856.010, 11856.010), stdev = 0.001
[info]   CI (99.9%): [11856.010, 11856.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.626 ±(99.9%) 5.172 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 3.028), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 5.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   24.146 ±(99.9%) 199.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 24.146, 116.716), stdev = 51.765
[info]   CI (99.9%): [≈ 0, 223.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   262.280 ±(99.9%) 564.588 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 262.280, 328.712), stdev = 146.622
[info]   CI (99.9%): [≈ 0, 826.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   10098.492 ±(99.9%) 21738.768 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10098.492, 12686.253), stdev = 5645.489
[info]   CI (99.9%): [≈ 0, 31837.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 4.000), stdev = 1.483
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 69.75% complete, ETA 00:09:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45303.857 ops/s
[info] # Warmup Iteration   2: 50912.746 ops/s
[info] # Warmup Iteration   3: 50341.234 ops/s
[info] # Warmup Iteration   4: 51506.515 ops/s
[info] # Warmup Iteration   5: 51465.024 ops/s
[info] Iteration   1: 50163.462 ops/s
[info]                  ·gc.alloc.rate:      0.765 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 50277.568 ops/s
[info]                  ·gc.alloc.rate:      0.767 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 50783.219 ops/s
[info]                  ·gc.alloc.rate:      0.775 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 50100.639 ops/s
[info]                  ·gc.alloc.rate:      0.764 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 50922.330 ops/s
[info]                  ·gc.alloc.rate:      0.777 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   50449.444 ±(99.9%) 1451.058 ops/s [Average]
[info]   (min, avg, max) = (50100.639, 50449.444, 50922.330), stdev = 376.835
[info]   CI (99.9%): [48998.386, 51900.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.770 ±(99.9%) 0.022 MB/sec [Average]
[info]   (min, avg, max) = (0.764, 0.770, 0.777), stdev = 0.006
[info]   CI (99.9%): [0.747, 0.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.008, 24.008, 24.009), stdev = 0.001
[info]   CI (99.9%): [24.007, 24.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 70.59% complete, ETA 00:09:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1298.021 ops/s
[info] # Warmup Iteration   2: 4048.799 ops/s
[info] # Warmup Iteration   3: 4111.608 ops/s
[info] # Warmup Iteration   4: 4261.571 ops/s
[info] # Warmup Iteration   5: 4248.714 ops/s
[info] Iteration   1: 4185.970 ops/s
[info]                  ·gc.alloc.rate:                   1239.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              466048.010 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.979 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 499369.607 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 4220.033 ops/s
[info]                  ·gc.alloc.rate:                   1249.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              466048.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.443 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 498079.810 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4250.227 ops/s
[info]                  ·gc.alloc.rate:                   1258.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              466047.351 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372835.244 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4173.007 ops/s
[info]                  ·gc.alloc.rate:                   1235.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              466047.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 507833.345 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4214.741 ops/s
[info]                  ·gc.alloc.rate:                   1247.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              466047.776 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 504266.565 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4208.796 ±(99.9%) 116.796 ops/s [Average]
[info]   (min, avg, max) = (4173.007, 4208.796, 4250.227), stdev = 30.332
[info]   CI (99.9%): [4091.999, 4325.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1246.194 ±(99.9%) 34.620 MB/sec [Average]
[info]   (min, avg, max) = (1235.607, 1246.194, 1258.445), stdev = 8.991
[info]   CI (99.9%): [1211.573, 1280.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   466047.831 ±(99.9%) 1.111 B/op [Average]
[info]   (min, avg, max) = (466047.351, 466047.831, 466048.057), stdev = 0.289
[info]   CI (99.9%): [466046.719, 466048.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   17.102 ±(99.9%) 44.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.102, 31.089), stdev = 11.555
[info]   CI (99.9%): [≈ 0, 61.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1273.379 ±(99.9%) 574.950 MB/sec [Average]
[info]   (min, avg, max) = (1006.749, 1273.379, 1350.331), stdev = 149.313
[info]   CI (99.9%): [698.429, 1848.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   476476.915 ±(99.9%) 223601.481 B/op [Average]
[info]   (min, avg, max) = (372835.244, 476476.915, 507833.345), stdev = 58068.595
[info]   CI (99.9%): [252875.433, 700078.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 71.43% complete, ETA 00:09:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 101692.550 ops/s
[info] # Warmup Iteration   2: 691606.585 ops/s
[info] # Warmup Iteration   3: 710090.910 ops/s
[info] # Warmup Iteration   4: 710843.329 ops/s
[info] # Warmup Iteration   5: 702287.843 ops/s
[info] Iteration   1: 701031.125 ops/s
[info]                  ·gc.alloc.rate:                   1535.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1665.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3739.450 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 715204.165 ops/s
[info]                  ·gc.alloc.rate:                   1567.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1677.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3690.904 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 708243.942 ops/s
[info]                  ·gc.alloc.rate:                   1551.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2995.377 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 707127.413 ops/s
[info]                  ·gc.alloc.rate:                   1548.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1689.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3760.635 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 719075.190 ops/s
[info]                  ·gc.alloc.rate:                   1575.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.623 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2967.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   710136.367 ±(99.9%) 27304.680 ops/s [Average]
[info]   (min, avg, max) = (701031.125, 710136.367, 719075.190), stdev = 7090.939
[info]   CI (99.9%): [682831.687, 737441.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1555.775 ±(99.9%) 60.040 MB/sec [Average]
[info]   (min, avg, max) = (1535.806, 1555.775, 1575.387), stdev = 15.592
[info]   CI (99.9%): [1495.735, 1615.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3448.001, 3448.001, 3448.001), stdev = 0.001
[info]   CI (99.9%): [3448.001, 3448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.138 ±(99.9%) 0.216 B/op [Average]
[info]   (min, avg, max) = (0.091, 0.138, 0.229), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1547.214 ±(99.9%) 687.682 MB/sec [Average]
[info]   (min, avg, max) = (1348.016, 1547.214, 1689.410), stdev = 178.589
[info]   CI (99.9%): [859.532, 2234.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   3430.675 ±(99.9%) 1583.459 B/op [Average]
[info]   (min, avg, max) = (2967.009, 3430.675, 3760.635), stdev = 411.219
[info]   CI (99.9%): [1847.216, 5014.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.000, 7.000), stdev = 0.707
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 72.27% complete, ETA 00:08:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2333832.262 ops/s
[info] # Warmup Iteration   2: 2600452.263 ops/s
[info] # Warmup Iteration   3: 2546104.234 ops/s
[info] # Warmup Iteration   4: 2605732.081 ops/s
[info] # Warmup Iteration   5: 2636901.193 ops/s
[info] Iteration   1: 2622082.866 ops/s
[info]                  ·gc.alloc.rate:                   346.504 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 197.318 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2629385.435 ops/s
[info]                  ·gc.alloc.rate:                   347.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 196.765 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2645009.470 ops/s
[info]                  ·gc.alloc.rate:                   349.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 194.618 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2631253.321 ops/s
[info]                  ·gc.alloc.rate:                   347.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 195.634 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2627484.489 ops/s
[info]                  ·gc.alloc.rate:                   347.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 195.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2631043.116 ±(99.9%) 32832.302 ops/s [Average]
[info]   (min, avg, max) = (2622082.866, 2631043.116, 2645009.470), stdev = 8526.445
[info]   CI (99.9%): [2598210.814, 2663875.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   347.673 ±(99.9%) 4.317 MB/sec [Average]
[info]   (min, avg, max) = (346.504, 347.673, 349.516), stdev = 1.121
[info]   CI (99.9%): [343.356, 351.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.642 ±(99.9%) 5.256 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.642, 3.083), stdev = 1.365
[info]   CI (99.9%): [≈ 0, 5.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.385 ±(99.9%) 3.155 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.385, 1.850), stdev = 0.819
[info]   CI (99.9%): [≈ 0, 3.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   327.695 ±(99.9%) 3.507 MB/sec [Average]
[info]   (min, avg, max) = (327.016, 327.695, 328.709), stdev = 0.911
[info]   CI (99.9%): [324.188, 331.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   196.051 ±(99.9%) 4.021 B/op [Average]
[info]   (min, avg, max) = (194.618, 196.051, 197.318), stdev = 1.044
[info]   CI (99.9%): [192.030, 200.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 73.11% complete, ETA 00:08:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26241.013 ops/s
[info] # Warmup Iteration   2: 233804.079 ops/s
[info] # Warmup Iteration   3: 237875.325 ops/s
[info] # Warmup Iteration   4: 239949.132 ops/s
[info] # Warmup Iteration   5: 242277.639 ops/s
[info] Iteration   1: 240482.446 ops/s
[info]                  ·gc.alloc.rate:                   934.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6458.832 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 243691.047 ops/s
[info]                  ·gc.alloc.rate:                   947.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.520 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6403.830 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 242629.063 ops/s
[info]                  ·gc.alloc.rate:                   943.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.850 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6466.370 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 238022.042 ops/s
[info]                  ·gc.alloc.rate:                   925.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6620.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 242012.900 ops/s
[info]                  ·gc.alloc.rate:                   940.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6537.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   241367.500 ±(99.9%) 8476.307 ops/s [Average]
[info]   (min, avg, max) = (238022.042, 241367.500, 243691.047), stdev = 2201.270
[info]   CI (99.9%): [232891.193, 249843.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   938.456 ±(99.9%) 33.087 MB/sec [Average]
[info]   (min, avg, max) = (925.459, 938.456, 947.574), stdev = 8.593
[info]   CI (99.9%): [905.368, 971.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6120.002, 6120.002, 6120.002), stdev = 0.001
[info]   CI (99.9%): [6120.001, 6120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.353 ±(99.9%) 0.459 B/op [Average]
[info]   (min, avg, max) = (0.270, 0.353, 0.538), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   996.226 ±(99.9%) 28.160 MB/sec [Average]
[info]   (min, avg, max) = (986.685, 996.226, 1004.980), stdev = 7.313
[info]   CI (99.9%): [968.067, 1024.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   6497.251 ±(99.9%) 321.329 B/op [Average]
[info]   (min, avg, max) = (6403.830, 6497.251, 6620.193), stdev = 83.448
[info]   CI (99.9%): [6175.922, 6818.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 73.95% complete, ETA 00:08:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382344.818 ops/s
[info] # Warmup Iteration   2: 591085.711 ops/s
[info] # Warmup Iteration   3: 598654.223 ops/s
[info] # Warmup Iteration   4: 599127.587 ops/s
[info] # Warmup Iteration   5: 603609.100 ops/s
[info] Iteration   1: 597076.521 ops/s
[info]                  ·gc.alloc.rate:                   1444.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.437 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3499.403 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 592825.485 ops/s
[info]                  ·gc.alloc.rate:                   1434.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3545.778 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 597812.716 ops/s
[info]                  ·gc.alloc.rate:                   1446.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3533.712 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 596742.285 ops/s
[info]                  ·gc.alloc.rate:                   1443.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.275 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1685.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4444.883 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 592095.390 ops/s
[info]                  ·gc.alloc.rate:                   1432.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.131 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3594.507 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   595310.479 ±(99.9%) 10177.318 ops/s [Average]
[info]   (min, avg, max) = (592095.390, 595310.479, 597812.716), stdev = 2643.017
[info]   CI (99.9%): [585133.162, 605487.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1440.191 ±(99.9%) 24.635 MB/sec [Average]
[info]   (min, avg, max) = (1432.440, 1440.191, 1446.285), stdev = 6.398
[info]   CI (99.9%): [1415.555, 1464.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3808.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3808.001, 3808.001, 3808.001), stdev = 0.001
[info]   CI (99.9%): [3808.001, 3808.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.198 ±(99.9%) 0.189 B/op [Average]
[info]   (min, avg, max) = (0.164, 0.198, 0.275), stdev = 0.049
[info]   CI (99.9%): [0.009, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1408.418 ±(99.9%) 596.421 MB/sec [Average]
[info]   (min, avg, max) = (1327.437, 1408.418, 1685.016), stdev = 154.889
[info]   CI (99.9%): [811.996, 2004.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3723.657 ±(99.9%) 1558.032 B/op [Average]
[info]   (min, avg, max) = (3499.403, 3723.657, 4444.883), stdev = 404.616
[info]   CI (99.9%): [2165.624, 5281.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 74.79% complete, ETA 00:07:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 426780.257 ops/s
[info] # Warmup Iteration   2: 1136158.516 ops/s
[info] # Warmup Iteration   3: 1142396.638 ops/s
[info] # Warmup Iteration   4: 1138680.290 ops/s
[info] # Warmup Iteration   5: 1149779.680 ops/s
[info] Iteration   1: 1149618.695 ops/s
[info]                  ·gc.alloc.rate:                   777.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      981.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1343.669 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1149064.753 ops/s
[info]                  ·gc.alloc.rate:                   776.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.440 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 900.525 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1146972.561 ops/s
[info]                  ·gc.alloc.rate:                   775.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 905.809 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1145274.489 ops/s
[info]                  ·gc.alloc.rate:                   774.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1367.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1142912.267 ops/s
[info]                  ·gc.alloc.rate:                   772.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.986 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 917.305 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1146768.553 ±(99.9%) 10640.018 ops/s [Average]
[info]   (min, avg, max) = (1142912.267, 1146768.553, 1149618.695), stdev = 2763.179
[info]   CI (99.9%): [1136128.535, 1157408.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   775.203 ±(99.9%) 7.588 MB/sec [Average]
[info]   (min, avg, max) = (772.490, 775.203, 777.311), stdev = 1.970
[info]   CI (99.9%): [767.615, 782.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.063 ±(99.9%) 0.238 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.063, 0.171), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   791.943 ±(99.9%) 689.922 MB/sec [Average]
[info]   (min, avg, max) = (657.440, 791.943, 994.616), stdev = 179.171
[info]   CI (99.9%): [102.021, 1481.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1086.879 ±(99.9%) 944.640 B/op [Average]
[info]   (min, avg, max) = (900.525, 1086.879, 1367.088), stdev = 245.320
[info]   CI (99.9%): [142.240, 2031.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 75.63% complete, ETA 00:07:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4306785.787 ops/s
[info] # Warmup Iteration   2: 5036199.279 ops/s
[info] # Warmup Iteration   3: 5086959.970 ops/s
[info] # Warmup Iteration   4: 5038740.704 ops/s
[info] # Warmup Iteration   5: 5053308.105 ops/s
[info] Iteration   1: 4931534.418 ops/s
[info]                  ·gc.alloc.rate:                   551.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.978 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4977766.520 ops/s
[info]                  ·gc.alloc.rate:                   556.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.526 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 206.924 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 5043830.075 ops/s
[info]                  ·gc.alloc.rate:                   563.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.162 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3304361.049 ops/s
[info]                  ·gc.alloc.rate:                   369.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 312.514 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4901730.691 ops/s
[info]                  ·gc.alloc.rate:                   548.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 105.654 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   4631844.551 ±(99.9%) 2864953.529 ops/s [Average]
[info]   (min, avg, max) = (3304361.049, 4631844.551, 5043830.075), stdev = 744019.333
[info]   CI (99.9%): [1766891.021, 7496798.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   517.929 ±(99.9%) 320.446 MB/sec [Average]
[info]   (min, avg, max) = (369.452, 517.929, 563.982), stdev = 83.219
[info]   CI (99.9%): [197.483, 838.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.014 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.030), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   524.339 ±(99.9%) 689.520 MB/sec [Average]
[info]   (min, avg, max) = (327.373, 524.339, 656.016), stdev = 179.066
[info]   CI (99.9%): [≈ 0, 1213.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   187.246 ±(99.9%) 335.956 B/op [Average]
[info]   (min, avg, max) = (102.162, 187.246, 312.514), stdev = 87.247
[info]   CI (99.9%): [≈ 0, 523.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 76.47% complete, ETA 00:07:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 66406.295 ops/s
[info] # Warmup Iteration   2: 356468.582 ops/s
[info] # Warmup Iteration   3: 359114.636 ops/s
[info] # Warmup Iteration   4: 357754.448 ops/s
[info] # Warmup Iteration   5: 357319.480 ops/s
[info] Iteration   1: 355904.953 ops/s
[info]                  ·gc.alloc.rate:                   1213.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1326.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5864.812 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 359000.225 ops/s
[info]                  ·gc.alloc.rate:                   1224.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5852.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 355810.284 ops/s
[info]                  ·gc.alloc.rate:                   1213.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4447.688 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 356699.991 ops/s
[info]                  ·gc.alloc.rate:                   1216.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.526 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5937.343 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 358855.894 ops/s
[info]                  ·gc.alloc.rate:                   1224.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5919.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   357254.269 ±(99.9%) 6035.365 ops/s [Average]
[info]   (min, avg, max) = (355810.284, 357254.269, 359000.225), stdev = 1567.365
[info]   CI (99.9%): [351218.904, 363289.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1218.439 ±(99.9%) 20.814 MB/sec [Average]
[info]   (min, avg, max) = (1213.533, 1218.439, 1224.329), stdev = 5.405
[info]   CI (99.9%): [1197.625, 1239.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5368.001, 5368.001, 5368.001), stdev = 0.001
[info]   CI (99.9%): [5368.001, 5368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.275 ±(99.9%) 0.434 B/op [Average]
[info]   (min, avg, max) = (0.183, 0.275, 0.459), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1272.322 ±(99.9%) 575.508 MB/sec [Average]
[info]   (min, avg, max) = (1005.480, 1272.322, 1349.785), stdev = 149.458
[info]   CI (99.9%): [696.814, 1847.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5604.232 ±(99.9%) 2493.347 B/op [Average]
[info]   (min, avg, max) = (4447.688, 5604.232, 5937.343), stdev = 647.514
[info]   CI (99.9%): [3110.884, 8097.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 77.31% complete, ETA 00:07:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 197145.929 ops/s
[info] # Warmup Iteration   2: 341755.917 ops/s
[info] # Warmup Iteration   3: 348506.136 ops/s
[info] # Warmup Iteration   4: 343979.770 ops/s
[info] # Warmup Iteration   5: 347273.607 ops/s
[info] Iteration   1: 345130.503 ops/s
[info]                  ·gc.alloc.rate:                   948.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      981.098 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4475.720 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 349525.149 ops/s
[info]                  ·gc.alloc.rate:                   960.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      985.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4437.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 348531.810 ops/s
[info]                  ·gc.alloc.rate:                   958.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.253 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4477.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 346910.340 ops/s
[info]                  ·gc.alloc.rate:                   953.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4519.307 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 345418.866 ops/s
[info]                  ·gc.alloc.rate:                   949.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              4328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.996 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4561.982 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   347103.333 ±(99.9%) 7374.881 ops/s [Average]
[info]   (min, avg, max) = (345130.503, 347103.333, 349525.149), stdev = 1915.233
[info]   CI (99.9%): [339728.452, 354478.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   954.232 ±(99.9%) 20.178 MB/sec [Average]
[info]   (min, avg, max) = (948.717, 954.232, 960.742), stdev = 5.240
[info]   CI (99.9%): [934.054, 974.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4328.001, 4328.001, 4328.001), stdev = 0.001
[info]   CI (99.9%): [4328.001, 4328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.320 ±(99.9%) 0.546 B/op [Average]
[info]   (min, avg, max) = (0.095, 0.320, 0.469), stdev = 0.142
[info]   CI (99.9%): [≈ 0, 0.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   990.894 ±(99.9%) 30.878 MB/sec [Average]
[info]   (min, avg, max) = (981.098, 990.894, 1000.996), stdev = 8.019
[info]   CI (99.9%): [960.016, 1021.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4494.418 ±(99.9%) 182.914 B/op [Average]
[info]   (min, avg, max) = (4437.895, 4494.418, 4561.982), stdev = 47.502
[info]   CI (99.9%): [4311.504, 4677.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 78.15% complete, ETA 00:06:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 76544.919 ops/s
[info] # Warmup Iteration   2: 765879.675 ops/s
[info] # Warmup Iteration   3: 766625.160 ops/s
[info] # Warmup Iteration   4: 765578.719 ops/s
[info] # Warmup Iteration   5: 757871.404 ops/s
[info] Iteration   1: 763619.938 ops/s
[info]                  ·gc.alloc.rate:                   1199.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.890 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2042.793 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 770615.882 ops/s
[info]                  ·gc.alloc.rate:                   1210.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2718.228 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 758273.692 ops/s
[info]                  ·gc.alloc.rate:                   1190.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2777.595 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 760444.594 ops/s
[info]                  ·gc.alloc.rate:                   1194.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2085.921 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 768643.265 ops/s
[info]                  ·gc.alloc.rate:                   1207.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.223 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2760.670 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   764319.474 ±(99.9%) 20229.211 ops/s [Average]
[info]   (min, avg, max) = (758273.692, 764319.474, 770615.882), stdev = 5253.462
[info]   CI (99.9%): [744090.263, 784548.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1200.315 ±(99.9%) 31.771 MB/sec [Average]
[info]   (min, avg, max) = (1190.812, 1200.315, 1210.128), stdev = 8.251
[info]   CI (99.9%): [1168.544, 1232.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.001, 2472.001, 2472.001), stdev = 0.001
[info]   CI (99.9%): [2472.001, 2472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.128 ±(99.9%) 0.259 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.128, 0.213), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1203.115 ±(99.9%) 717.094 MB/sec [Average]
[info]   (min, avg, max) = (990.890, 1203.115, 1348.223), stdev = 186.227
[info]   CI (99.9%): [486.021, 1920.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2477.041 ±(99.9%) 1454.218 B/op [Average]
[info]   (min, avg, max) = (2042.793, 2477.041, 2777.595), stdev = 377.656
[info]   CI (99.9%): [1022.824, 3931.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 0.837
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 78.99% complete, ETA 00:06:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2009024.831 ops/s
[info] # Warmup Iteration   2: 2390156.593 ops/s
[info] # Warmup Iteration   3: 2388293.587 ops/s
[info] # Warmup Iteration   4: 2366787.533 ops/s
[info] # Warmup Iteration   5: 2400468.020 ops/s
[info] Iteration   1: 2370964.506 ops/s
[info]                  ·gc.alloc.rate:                   325.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.630 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218.208 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2382306.807 ops/s
[info]                  ·gc.alloc.rate:                   326.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.173 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2410872.317 ops/s
[info]                  ·gc.alloc.rate:                   330.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.039 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213.520 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2389008.554 ops/s
[info]                  ·gc.alloc.rate:                   327.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 215.476 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2381354.568 ops/s
[info]                  ·gc.alloc.rate:                   326.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.034 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 216.164 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2386901.350 ±(99.9%) 57273.302 ops/s [Average]
[info]   (min, avg, max) = (2370964.506, 2386901.350, 2410872.317), stdev = 14873.695
[info]   CI (99.9%): [2329628.049, 2444174.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   327.541 ±(99.9%) 7.925 MB/sec [Average]
[info]   (min, avg, max) = (325.305, 327.541, 330.838), stdev = 2.058
[info]   CI (99.9%): [319.615, 335.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.626 ±(99.9%) 5.213 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.626, 3.048), stdev = 1.354
[info]   CI (99.9%): [≈ 0, 5.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.416 ±(99.9%) 3.462 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.416, 2.024), stdev = 0.899
[info]   CI (99.9%): [≈ 0, 3.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   327.692 ±(99.9%) 3.394 MB/sec [Average]
[info]   (min, avg, max) = (327.034, 327.692, 328.684), stdev = 0.882
[info]   CI (99.9%): [324.298, 331.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   216.108 ±(99.9%) 6.847 B/op [Average]
[info]   (min, avg, max) = (213.520, 216.108, 218.208), stdev = 1.778
[info]   CI (99.9%): [209.262, 222.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 79.83% complete, ETA 00:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30274.721 ops/s
[info] # Warmup Iteration   2: 254650.073 ops/s
[info] # Warmup Iteration   3: 257700.287 ops/s
[info] # Warmup Iteration   4: 262314.635 ops/s
[info] # Warmup Iteration   5: 261597.266 ops/s
[info] Iteration   1: 261498.136 ops/s
[info]                  ·gc.alloc.rate:                   955.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.998 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5953.672 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 261814.802 ops/s
[info]                  ·gc.alloc.rate:                   956.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.189 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5970.582 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 262470.749 ops/s
[info]                  ·gc.alloc.rate:                   959.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.393 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3990.231 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 262682.094 ops/s
[info]                  ·gc.alloc.rate:                   959.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5998.842 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 262855.600 ops/s
[info]                  ·gc.alloc.rate:                   960.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.093 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6018.872 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   262264.276 ±(99.9%) 2241.875 ops/s [Average]
[info]   (min, avg, max) = (261498.136, 262264.276, 262855.600), stdev = 582.208
[info]   CI (99.9%): [260022.401, 264506.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   958.372 ±(99.9%) 8.183 MB/sec [Average]
[info]   (min, avg, max) = (955.497, 958.372, 960.528), stdev = 2.125
[info]   CI (99.9%): [950.189, 966.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5752.002, 5752.002, 5752.002), stdev = 0.001
[info]   CI (99.9%): [5752.001, 5752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.325 ±(99.9%) 0.263 B/op [Average]
[info]   (min, avg, max) = (0.249, 0.325, 0.375), stdev = 0.068
[info]   CI (99.9%): [0.062, 0.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   930.738 ±(99.9%) 571.695 MB/sec [Average]
[info]   (min, avg, max) = (665.393, 930.738, 1005.093), stdev = 148.467
[info]   CI (99.9%): [359.044, 1502.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5586.440 ±(99.9%) 3437.323 B/op [Average]
[info]   (min, avg, max) = (3990.231, 5586.440, 6018.872), stdev = 892.662
[info]   CI (99.9%): [2149.117, 9023.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 80.67% complete, ETA 00:06:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 388709.971 ops/s
[info] # Warmup Iteration   2: 557948.514 ops/s
[info] # Warmup Iteration   3: 575349.229 ops/s
[info] # Warmup Iteration   4: 582811.625 ops/s
[info] # Warmup Iteration   5: 574730.365 ops/s
[info] Iteration   1: 573116.710 ops/s
[info]                  ·gc.alloc.rate:                   1327.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.292 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3632.626 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 579106.316 ops/s
[info]                  ·gc.alloc.rate:                   1342.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1331.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3618.932 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 568582.178 ops/s
[info]                  ·gc.alloc.rate:                   1317.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3706.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 575720.197 ops/s
[info]                  ·gc.alloc.rate:                   1334.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3678.492 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 583538.376 ops/s
[info]                  ·gc.alloc.rate:                   1352.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3639.953 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   576012.755 ±(99.9%) 21942.862 ops/s [Average]
[info]   (min, avg, max) = (568582.178, 576012.755, 583538.376), stdev = 5698.492
[info]   CI (99.9%): [554069.893, 597955.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1334.883 ±(99.9%) 51.147 MB/sec [Average]
[info]   (min, avg, max) = (1317.715, 1334.883, 1352.453), stdev = 13.283
[info]   CI (99.9%): [1283.736, 1386.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3648.001, 3648.001, 3648.001), stdev = 0.001
[info]   CI (99.9%): [3648.001, 3648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.182 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (0.112, 0.182, 0.288), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1337.461 ±(99.9%) 41.926 MB/sec [Average]
[info]   (min, avg, max) = (1322.292, 1337.461, 1349.470), stdev = 10.888
[info]   CI (99.9%): [1295.535, 1379.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3655.235 ±(99.9%) 138.813 B/op [Average]
[info]   (min, avg, max) = (3618.932, 3655.235, 3706.173), stdev = 36.049
[info]   CI (99.9%): [3516.422, 3794.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 81.51% complete, ETA 00:05:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 430967.958 ops/s
[info] # Warmup Iteration   2: 1296127.826 ops/s
[info] # Warmup Iteration   3: 1283741.511 ops/s
[info] # Warmup Iteration   4: 1305413.475 ops/s
[info] # Warmup Iteration   5: 1311695.105 ops/s
[info] Iteration   1: 1310050.412 ops/s
[info]                  ·gc.alloc.rate:                   712.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.291 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 783.827 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1308538.040 ops/s
[info]                  ·gc.alloc.rate:                   711.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      981.796 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1180.597 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1303378.502 ops/s
[info]                  ·gc.alloc.rate:                   708.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 795.498 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1313172.430 ops/s
[info]                  ·gc.alloc.rate:                   714.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 792.804 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1308500.979 ops/s
[info]                  ·gc.alloc.rate:                   711.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      663.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 798.794 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1308728.072 ±(99.9%) 13642.165 ops/s [Average]
[info]   (min, avg, max) = (1303378.502, 1308728.072, 1313172.430), stdev = 3542.827
[info]   CI (99.9%): [1295085.907, 1322370.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   711.682 ±(99.9%) 7.442 MB/sec [Average]
[info]   (min, avg, max) = (708.718, 711.682, 714.051), stdev = 1.933
[info]   CI (99.9%): [704.240, 719.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.000), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.030 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.075), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   723.587 ±(99.9%) 556.064 MB/sec [Average]
[info]   (min, avg, max) = (652.291, 723.587, 981.796), stdev = 144.408
[info]   CI (99.9%): [167.523, 1279.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   870.304 ±(99.9%) 668.273 B/op [Average]
[info]   (min, avg, max) = (783.827, 870.304, 1180.597), stdev = 173.548
[info]   CI (99.9%): [202.031, 1538.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 82.35% complete, ETA 00:05:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3291437.773 ops/s
[info] # Warmup Iteration   2: 3583372.426 ops/s
[info] # Warmup Iteration   3: 3606918.722 ops/s
[info] # Warmup Iteration   4: 3577355.664 ops/s
[info] # Warmup Iteration   5: 3595642.381 ops/s
[info] Iteration   1: 3609217.393 ops/s
[info]                  ·gc.alloc.rate:                   275.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.668 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 111.542 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3631757.152 ops/s
[info]                  ·gc.alloc.rate:                   276.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.467 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3612506.420 ops/s
[info]                  ·gc.alloc.rate:                   275.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.218 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3625576.212 ops/s
[info]                  ·gc.alloc.rate:      276.394 MB/sec
[info]                  ·gc.alloc.rate.norm: 120.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3591095.122 ops/s
[info]                  ·gc.alloc.rate:                   273.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 143.346 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3614030.460 ±(99.9%) 60855.346 ops/s [Average]
[info]   (min, avg, max) = (3591095.122, 3614030.460, 3631757.152), stdev = 15803.940
[info]   CI (99.9%): [3553175.114, 3674885.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   275.513 ±(99.9%) 4.627 MB/sec [Average]
[info]   (min, avg, max) = (273.788, 275.513, 276.860), stdev = 1.202
[info]   CI (99.9%): [270.886, 280.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.621 ±(99.9%) 5.173 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.621, 3.024), stdev = 1.343
[info]   CI (99.9%): [≈ 0, 5.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.269 ±(99.9%) 2.242 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.269, 1.311), stdev = 0.582
[info]   CI (99.9%): [≈ 0, 2.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   248.037 ±(99.9%) 547.439 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.037, 328.767), stdev = 142.168
[info]   CI (99.9%): [≈ 0, 795.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   108.115 ±(99.9%) 238.570 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 108.115, 143.346), stdev = 61.956
[info]   CI (99.9%): [≈ 0, 346.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 83.19% complete, ETA 00:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 72259.672 ops/s
[info] # Warmup Iteration   2: 376093.850 ops/s
[info] # Warmup Iteration   3: 378567.936 ops/s
[info] # Warmup Iteration   4: 381782.671 ops/s
[info] # Warmup Iteration   5: 378472.080 ops/s
[info] Iteration   1: 379166.689 ops/s
[info]                  ·gc.alloc.rate:                   1285.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5513.422 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 381964.195 ops/s
[info]                  ·gc.alloc.rate:                   1294.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.861 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5508.795 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 379620.632 ops/s
[info]                  ·gc.alloc.rate:                   1286.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.807 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5567.777 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 379147.827 ops/s
[info]                  ·gc.alloc.rate:                   1285.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.264 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5596.756 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 380494.280 ops/s
[info]                  ·gc.alloc.rate:                   1289.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1013.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4193.477 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   380078.724 ±(99.9%) 4570.729 ops/s [Average]
[info]   (min, avg, max) = (379147.827, 380078.724, 381964.195), stdev = 1187.004
[info]   CI (99.9%): [375507.996, 384649.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1288.473 ±(99.9%) 15.658 MB/sec [Average]
[info]   (min, avg, max) = (1285.180, 1288.473, 1294.927), stdev = 4.066
[info]   CI (99.9%): [1272.816, 1304.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5336.001, 5336.001, 5336.001), stdev = 0.001
[info]   CI (99.9%): [5336.001, 5336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.207 ±(99.9%) 0.376 B/op [Average]
[info]   (min, avg, max) = (0.086, 0.207, 0.343), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1273.912 ±(99.9%) 560.850 MB/sec [Average]
[info]   (min, avg, max) = (1013.713, 1273.912, 1348.264), stdev = 145.651
[info]   CI (99.9%): [713.062, 1834.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5276.046 ±(99.9%) 2334.675 B/op [Average]
[info]   (min, avg, max) = (4193.477, 5276.046, 5596.756), stdev = 606.308
[info]   CI (99.9%): [2941.370, 7610.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 6.000), stdev = 0.894
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 84.03% complete, ETA 00:05:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152189.411 ops/s
[info] # Warmup Iteration   2: 323708.791 ops/s
[info] # Warmup Iteration   3: 331615.372 ops/s
[info] # Warmup Iteration   4: 335823.232 ops/s
[info] # Warmup Iteration   5: 333978.606 ops/s
[info] Iteration   1: 334324.038 ops/s
[info]                  ·gc.alloc.rate:                   900.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      979.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4611.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 306577.122 ops/s
[info]                  ·gc.alloc.rate:                   825.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.975 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5056.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 338777.715 ops/s
[info]                  ·gc.alloc.rate:                   912.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3060.709 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 336425.305 ops/s
[info]                  ·gc.alloc.rate:                   906.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4644.929 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 336997.098 ops/s
[info]                  ·gc.alloc.rate:                   907.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              4240.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4661.990 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   330620.256 ±(99.9%) 52115.345 ops/s [Average]
[info]   (min, avg, max) = (306577.122, 330620.256, 338777.715), stdev = 13534.190
[info]   CI (99.9%): [278504.911, 382735.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   890.805 ±(99.9%) 140.558 MB/sec [Average]
[info]   (min, avg, max) = (825.963, 890.805, 912.825), stdev = 36.502
[info]   CI (99.9%): [750.247, 1031.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4240.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4240.001, 4240.001, 4240.001), stdev = 0.001
[info]   CI (99.9%): [4240.001, 4240.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.222 ±(99.9%) 0.472 B/op [Average]
[info]   (min, avg, max) = (0.097, 0.222, 0.427), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   922.997 ±(99.9%) 569.086 MB/sec [Average]
[info]   (min, avg, max) = (658.937, 922.997, 998.335), stdev = 147.790
[info]   CI (99.9%): [353.912, 1492.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4407.060 ±(99.9%) 2981.121 B/op [Average]
[info]   (min, avg, max) = (3060.709, 4407.060, 5056.275), stdev = 774.188
[info]   CI (99.9%): [1425.939, 7388.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.87% complete, ETA 00:04:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 69340.989 ops/s
[info] # Warmup Iteration   2: 733639.642 ops/s
[info] # Warmup Iteration   3: 812241.112 ops/s
[info] # Warmup Iteration   4: 810445.227 ops/s
[info] # Warmup Iteration   5: 799456.225 ops/s
[info] Iteration   1: 812202.763 ops/s
[info]                  ·gc.alloc.rate:                   1271.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.736 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2563.557 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 807742.362 ops/s
[info]                  ·gc.alloc.rate:                   1264.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2597.156 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 817518.056 ops/s
[info]                  ·gc.alloc.rate:                   1279.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2579.544 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 814214.531 ops/s
[info]                  ·gc.alloc.rate:                   1274.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1949.399 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 807783.417 ops/s
[info]                  ·gc.alloc.rate:                   1264.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.532 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2629.467 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   811892.226 ±(99.9%) 16250.811 ops/s [Average]
[info]   (min, avg, max) = (807742.362, 811892.226, 817518.056), stdev = 4220.284
[info]   CI (99.9%): [795641.415, 828143.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1270.937 ±(99.9%) 25.266 MB/sec [Average]
[info]   (min, avg, max) = (1264.453, 1270.937, 1279.707), stdev = 6.562
[info]   CI (99.9%): [1245.670, 1296.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.001, 2464.001), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.105 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.105, 0.203), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1270.626 ±(99.9%) 565.802 MB/sec [Average]
[info]   (min, avg, max) = (1008.361, 1270.626, 1349.532), stdev = 146.937
[info]   CI (99.9%): [704.824, 1836.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2463.825 ±(99.9%) 1111.339 B/op [Average]
[info]   (min, avg, max) = (1949.399, 2463.825, 2629.467), stdev = 288.611
[info]   CI (99.9%): [1352.486, 3575.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 85.71% complete, ETA 00:04:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1877761.995 ops/s
[info] # Warmup Iteration   2: 2124890.633 ops/s
[info] # Warmup Iteration   3: 2157312.364 ops/s
[info] # Warmup Iteration   4: 2113611.886 ops/s
[info] # Warmup Iteration   5: 2163646.737 ops/s
[info] Iteration   1: 2163303.613 ops/s
[info]                  ·gc.alloc.rate:                   406.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.926 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2166874.650 ops/s
[info]                  ·gc.alloc.rate:                   407.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.568 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2142293.766 ops/s
[info]                  ·gc.alloc.rate:                   402.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.157 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 480.585 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2159105.398 ops/s
[info]                  ·gc.alloc.rate:                   406.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.417 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2108175.625 ops/s
[info]                  ·gc.alloc.rate:                   396.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 244.420 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2147950.610 ±(99.9%) 92981.542 ops/s [Average]
[info]   (min, avg, max) = (2108175.625, 2147950.610, 2166874.650), stdev = 24147.011
[info]   CI (99.9%): [2054969.068, 2240932.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   403.991 ±(99.9%) 17.420 MB/sec [Average]
[info]   (min, avg, max) = (396.542, 403.991, 407.498), stdev = 4.524
[info]   CI (99.9%): [386.571, 421.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.027 ±(99.9%) 0.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.076), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.840 ±(99.9%) 562.508 MB/sec [Average]
[info]   (min, avg, max) = (327.055, 392.840, 654.157), stdev = 146.082
[info]   CI (99.9%): [≈ 0, 955.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   287.983 ±(99.9%) 414.721 B/op [Average]
[info]   (min, avg, max) = (237.568, 287.983, 480.585), stdev = 107.702
[info]   CI (99.9%): [≈ 0, 702.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 86.55% complete, ETA 00:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 26138.551 ops/s
[info] # Warmup Iteration   2: 245241.832 ops/s
[info] # Warmup Iteration   3: 250310.028 ops/s
[info] # Warmup Iteration   4: 253374.779 ops/s
[info] # Warmup Iteration   5: 249002.888 ops/s
[info] Iteration   1: 252625.509 ops/s
[info]                  ·gc.alloc.rate:                   969.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6156.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 251634.421 ops/s
[info]                  ·gc.alloc.rate:                   965.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6209.707 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 253170.523 ops/s
[info]                  ·gc.alloc.rate:                   971.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6209.578 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 252678.143 ops/s
[info]                  ·gc.alloc.rate:                   969.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.219 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6242.536 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 251389.787 ops/s
[info]                  ·gc.alloc.rate:                   964.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4199.575 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   252299.677 ±(99.9%) 2906.051 ops/s [Average]
[info]   (min, avg, max) = (251389.787, 252299.677, 253170.523), stdev = 754.692
[info]   CI (99.9%): [249393.626, 255205.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   968.148 ±(99.9%) 10.998 MB/sec [Average]
[info]   (min, avg, max) = (964.696, 968.148, 971.471), stdev = 2.856
[info]   CI (99.9%): [957.150, 979.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6040.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6040.002, 6040.002, 6040.002), stdev = 0.001
[info]   CI (99.9%): [6040.001, 6040.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.259 ±(99.9%) 0.789 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.259, 0.518), stdev = 0.205
[info]   CI (99.9%): [≈ 0, 1.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   930.469 ±(99.9%) 559.474 MB/sec [Average]
[info]   (min, avg, max) = (670.747, 930.469, 1002.219), stdev = 145.294
[info]   CI (99.9%): [370.995, 1489.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5803.501 ±(99.9%) 3454.633 B/op [Average]
[info]   (min, avg, max) = (4199.575, 5803.501, 6242.536), stdev = 897.157
[info]   CI (99.9%): [2348.868, 9258.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce
[info] # Run progress: 87.39% complete, ETA 00:03:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 929118.724 ops/s
[info] # Warmup Iteration   2: 1084531.713 ops/s
[info] # Warmup Iteration   3: 1103106.189 ops/s
[info] # Warmup Iteration   4: 1107726.107 ops/s
[info] # Warmup Iteration   5: 1115654.320 ops/s
[info] Iteration   1: 1111544.900 ops/s
[info]                  ·gc.alloc.rate:                   1378.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1326.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1877.891 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1079588.574 ops/s
[info]                  ·gc.alloc.rate:                   1338.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.741 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1945.976 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1097168.957 ops/s
[info]                  ·gc.alloc.rate:                   1360.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1924.452 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1096722.662 ops/s
[info]                  ·gc.alloc.rate:                   1359.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.245 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1932.423 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1091463.647 ops/s
[info]                  ·gc.alloc.rate:                   1353.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.427 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2434.932 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce":
[info]   1095297.748 ±(99.9%) 44365.209 ops/s [Average]
[info]   (min, avg, max) = (1079588.574, 1095297.748, 1111544.900), stdev = 11521.504
[info]   CI (99.9%): [1050932.539, 1139662.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate":
[info]   1358.260 ±(99.9%) 54.804 MB/sec [Average]
[info]   (min, avg, max) = (1338.873, 1358.260, 1378.359), stdev = 14.232
[info]   CI (99.9%): [1303.456, 1413.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1952.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.000, 1952.000, 1952.000), stdev = 0.001
[info]   CI (99.9%): [1952.000, 1952.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.108 ±(99.9%) 0.133 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.108, 0.149), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   1407.374 ±(99.9%) 605.693 MB/sec [Average]
[info]   (min, avg, max) = (1326.028, 1407.374, 1688.427), stdev = 157.297
[info]   CI (99.9%): [801.680, 2013.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2023.135 ±(99.9%) 891.891 B/op [Average]
[info]   (min, avg, max) = (1877.891, 2023.135, 2434.932), stdev = 231.621
[info]   CI (99.9%): [1131.244, 2915.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson
[info] # Run progress: 88.24% complete, ETA 00:03:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 581552.731 ops/s
[info] # Warmup Iteration   2: 755813.086 ops/s
[info] # Warmup Iteration   3: 818050.274 ops/s
[info] # Warmup Iteration   4: 817229.356 ops/s
[info] # Warmup Iteration   5: 818533.519 ops/s
[info] Iteration   1: 817543.065 ops/s
[info]                  ·gc.alloc.rate:                   336.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 623.216 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 821361.754 ops/s
[info]                  ·gc.alloc.rate:                   338.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 624.824 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 820820.488 ops/s
[info]                  ·gc.alloc.rate:                   337.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 625.242 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 823885.063 ops/s
[info]                  ·gc.alloc.rate:                   339.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.366 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 625.462 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 816483.436 ops/s
[info]                  ·gc.alloc.rate:                   336.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.380 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 631.125 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson":
[info]   820018.761 ±(99.9%) 11555.506 ops/s [Average]
[info]   (min, avg, max) = (816483.436, 820018.761, 823885.063), stdev = 3000.928
[info]   CI (99.9%): [808463.255, 831574.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate":
[info]   337.581 ±(99.9%) 4.737 MB/sec [Average]
[info]   (min, avg, max) = (336.134, 337.581, 339.163), stdev = 1.230
[info]   CI (99.9%): [332.845, 342.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.001, 648.001), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.021, 0.021), stdev = 0.001
[info]   CI (99.9%): [0.021, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.040 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.040, 0.040), stdev = 0.001
[info]   CI (99.9%): [0.039, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   326.105 ±(99.9%) 5.799 MB/sec [Average]
[info]   (min, avg, max) = (323.687, 326.105, 327.380), stdev = 1.506
[info]   CI (99.9%): [320.305, 331.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   625.974 ±(99.9%) 11.594 B/op [Average]
[info]   (min, avg, max) = (623.216, 625.974, 631.125), stdev = 3.011
[info]   CI (99.9%): [614.379, 637.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter
[info] # Run progress: 89.08% complete, ETA 00:03:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2140847.449 ops/s
[info] # Warmup Iteration   2: 2254021.693 ops/s
[info] # Warmup Iteration   3: 2232237.864 ops/s
[info] # Warmup Iteration   4: 2267499.420 ops/s
[info] # Warmup Iteration   5: 2058682.524 ops/s
[info] Iteration   1: 2050847.115 ops/s
[info]                  ·gc.alloc.rate:                   406.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.928 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 251.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2050444.557 ops/s
[info]                  ·gc.alloc.rate:                   406.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 251.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2052435.070 ops/s
[info]                  ·gc.alloc.rate:                   406.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 250.804 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2028021.225 ops/s
[info]                  ·gc.alloc.rate:                   401.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.274 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 507.916 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2037135.732 ops/s
[info]                  ·gc.alloc.rate:                   403.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 252.946 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter":
[info]   2043776.740 ±(99.9%) 41372.293 ops/s [Average]
[info]   (min, avg, max) = (2028021.225, 2043776.740, 2052435.070), stdev = 10744.253
[info]   CI (99.9%): [2002404.446, 2085149.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   405.061 ±(99.9%) 8.219 MB/sec [Average]
[info]   (min, avg, max) = (401.904, 405.061, 406.811), stdev = 2.135
[info]   CI (99.9%): [396.842, 413.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.016 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.048), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.526 ±(99.9%) 563.431 MB/sec [Average]
[info]   (min, avg, max) = (326.928, 392.526, 654.274), stdev = 146.321
[info]   CI (99.9%): [≈ 0, 955.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   302.747 ±(99.9%) 441.655 B/op [Average]
[info]   (min, avg, max) = (250.804, 302.747, 507.916), stdev = 114.696
[info]   CI (99.9%): [≈ 0, 744.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc
[info] # Run progress: 89.92% complete, ETA 00:03:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2178392.822 ops/s
[info] # Warmup Iteration   2: 2265748.521 ops/s
[info] # Warmup Iteration   3: 2250896.566 ops/s
[info] # Warmup Iteration   4: 2258136.112 ops/s
[info] # Warmup Iteration   5: 2254454.824 ops/s
[info] Iteration   1: 2257160.418 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2129657.434 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2246816.400 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2205903.513 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2262392.181 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc":
[info]   2220385.989 ±(99.9%) 213153.735 ops/s [Average]
[info]   (min, avg, max) = (2129657.434, 2220385.989, 2262392.181), stdev = 55355.348
[info]   CI (99.9%): [2007232.254, 2433539.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay
[info] # Run progress: 90.76% complete, ETA 00:02:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1337667.121 ops/s
[info] # Warmup Iteration   2: 1957433.061 ops/s
[info] # Warmup Iteration   3: 1955714.226 ops/s
[info] # Warmup Iteration   4: 1960135.282 ops/s
[info] # Warmup Iteration   5: 1975941.678 ops/s
[info] Iteration   1: 2002791.649 ops/s
[info]                  ·gc.alloc.rate:                   844.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 519.809 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1966194.171 ops/s
[info]                  ·gc.alloc.rate:                   829.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.854 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 797.954 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1978623.121 ops/s
[info]                  ·gc.alloc.rate:                   834.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 530.395 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1986249.091 ops/s
[info]                  ·gc.alloc.rate:                   838.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.303 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 794.930 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1965861.928 ops/s
[info]                  ·gc.alloc.rate:                   829.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.405 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 537.572 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay":
[info]   1979943.992 ±(99.9%) 59369.778 ops/s [Average]
[info]   (min, avg, max) = (1965861.928, 1979943.992, 2002791.649), stdev = 15418.143
[info]   CI (99.9%): [1920574.214, 2039313.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate":
[info]   835.267 ±(99.9%) 24.866 MB/sec [Average]
[info]   (min, avg, max) = (829.308, 835.267, 844.758), stdev = 6.458
[info]   CI (99.9%): [810.400, 860.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.040 ±(99.9%) 0.133 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   799.926 ±(99.9%) 703.755 MB/sec [Average]
[info]   (min, avg, max) = (661.315, 799.926, 1003.303), stdev = 182.763
[info]   CI (99.9%): [96.171, 1503.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   636.132 ±(99.9%) 564.052 B/op [Average]
[info]   (min, avg, max) = (519.809, 636.132, 797.954), stdev = 146.482
[info]   CI (99.9%): [72.081, 1200.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.60% complete, ETA 00:02:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 403854.226 ops/s
[info] # Warmup Iteration   2: 622964.134 ops/s
[info] # Warmup Iteration   3: 654815.268 ops/s
[info] # Warmup Iteration   4: 659850.465 ops/s
[info] # Warmup Iteration   5: 655665.308 ops/s
[info] Iteration   1: 669032.490 ops/s
[info]                  ·gc.alloc.rate:                   1159.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.492 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2321.640 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 662463.447 ops/s
[info]                  ·gc.alloc.rate:                   1148.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3143.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 668059.354 ops/s
[info]                  ·gc.alloc.rate:                   1157.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2351.680 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 666764.974 ops/s
[info]                  ·gc.alloc.rate:                   1155.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3156.614 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 666926.106 ops/s
[info]                  ·gc.alloc.rate:                   1155.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2376.911 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   666649.274 ±(99.9%) 9680.219 ops/s [Average]
[info]   (min, avg, max) = (662463.447, 666649.274, 669032.490), stdev = 2513.922
[info]   CI (99.9%): [656969.056, 676329.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1155.337 ±(99.9%) 16.459 MB/sec [Average]
[info]   (min, avg, max) = (1148.147, 1155.337, 1159.159), stdev = 4.274
[info]   CI (99.9%): [1138.879, 1171.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2728.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2728.001, 2728.001, 2728.001), stdev = 0.001
[info]   CI (99.9%): [2728.001, 2728.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.147 ±(99.9%) 0.232 B/op [Average]
[info]   (min, avg, max) = (0.049, 0.147, 0.198), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1130.357 ±(99.9%) 702.588 MB/sec [Average]
[info]   (min, avg, max) = (986.492, 1130.357, 1337.143), stdev = 182.460
[info]   CI (99.9%): [427.769, 1832.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2669.986 ±(99.9%) 1688.568 B/op [Average]
[info]   (min, avg, max) = (2321.640, 2669.986, 3156.614), stdev = 438.516
[info]   CI (99.9%): [981.417, 4358.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.44% complete, ETA 00:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 775310.640 ops/s
[info] # Warmup Iteration   2: 1752349.431 ops/s
[info] # Warmup Iteration   3: 1726725.233 ops/s
[info] # Warmup Iteration   4: 1777580.703 ops/s
[info] # Warmup Iteration   5: 1748764.651 ops/s
[info] Iteration   1: 1772909.881 ops/s
[info]                  ·gc.alloc.rate:                   730.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.848 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 581.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1765290.641 ops/s
[info]                  ·gc.alloc.rate:                   726.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.319 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 586.187 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1769518.597 ops/s
[info]                  ·gc.alloc.rate:                   728.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 587.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1770062.025 ops/s
[info]                  ·gc.alloc.rate:                   728.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.816 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 589.337 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1759494.489 ops/s
[info]                  ·gc.alloc.rate:                   724.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 893.404 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1767455.127 ±(99.9%) 20088.493 ops/s [Average]
[info]   (min, avg, max) = (1759494.489, 1767455.127, 1772909.881), stdev = 5216.918
[info]   CI (99.9%): [1747366.634, 1787543.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   727.691 ±(99.9%) 8.262 MB/sec [Average]
[info]   (min, avg, max) = (724.526, 727.691, 730.024), stdev = 2.146
[info]   CI (99.9%): [719.429, 735.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   648.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.000, 648.000), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.030 ±(99.9%) 0.119 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.074), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   726.784 ±(99.9%) 585.883 MB/sec [Average]
[info]   (min, avg, max) = (654.848, 726.784, 998.910), stdev = 152.152
[info]   CI (99.9%): [140.902, 1312.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   647.462 ±(99.9%) 529.529 B/op [Average]
[info]   (min, avg, max) = (581.271, 647.462, 893.404), stdev = 137.517
[info]   CI (99.9%): [117.934, 1176.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.28% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3775018.625 ops/s
[info] # Warmup Iteration   2: 4254586.388 ops/s
[info] # Warmup Iteration   3: 4327898.643 ops/s
[info] # Warmup Iteration   4: 4248989.424 ops/s
[info] # Warmup Iteration   5: 4355060.490 ops/s
[info] Iteration   1: 4342262.138 ops/s
[info]                  ·gc.alloc.rate:                   485.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.576 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4366262.448 ops/s
[info]                  ·gc.alloc.rate:                   488.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.896 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4352182.733 ops/s
[info]                  ·gc.alloc.rate:                   486.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.799 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.802 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4353877.622 ops/s
[info]                  ·gc.alloc.rate:                   486.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.475 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4337189.431 ops/s
[info]                  ·gc.alloc.rate:                   484.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4350354.875 ±(99.9%) 43378.449 ops/s [Average]
[info]   (min, avg, max) = (4337189.431, 4350354.875, 4366262.448), stdev = 11265.245
[info]   CI (99.9%): [4306976.426, 4393733.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   486.427 ±(99.9%) 4.992 MB/sec [Average]
[info]   (min, avg, max) = (484.918, 486.427, 488.230), stdev = 1.296
[info]   CI (99.9%): [481.435, 491.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.011 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.038), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   524.174 ±(99.9%) 691.728 MB/sec [Average]
[info]   (min, avg, max) = (327.048, 524.174, 655.994), stdev = 179.640
[info]   CI (99.9%): [≈ 0, 1215.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   189.768 ±(99.9%) 251.630 B/op [Average]
[info]   (min, avg, max) = (117.896, 189.768, 238.092), stdev = 65.348
[info]   CI (99.9%): [≈ 0, 441.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 94.12% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3665987.287 ops/s
[info] # Warmup Iteration   2: 4272644.337 ops/s
[info] # Warmup Iteration   3: 4268632.511 ops/s
[info] # Warmup Iteration   4: 4338870.935 ops/s
[info] # Warmup Iteration   5: 4280094.402 ops/s
[info] Iteration   1: 4054720.351 ops/s
[info]                  ·gc.alloc.rate:                   247.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 99.286 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4363068.174 ops/s
[info]                  ·gc.alloc.rate:      266.113 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4216817.835 ops/s
[info]                  ·gc.alloc.rate:                   257.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.647 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.690 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3397364.484 ops/s
[info]                  ·gc.alloc.rate:                   207.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.280 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4376557.534 ops/s
[info]                  ·gc.alloc.rate:                   266.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.621 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4081705.676 ±(99.9%) 1556309.144 ops/s [Average]
[info]   (min, avg, max) = (3397364.484, 4081705.676, 4376557.534), stdev = 404168.542
[info]   CI (99.9%): [2525396.532, 5638014.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   248.948 ±(99.9%) 94.847 MB/sec [Average]
[info]   (min, avg, max) = (207.249, 248.948, 266.930), stdev = 24.631
[info]   CI (99.9%): [154.102, 343.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.658 ±(99.9%) 5.294 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 3.116), stdev = 1.375
[info]   CI (99.9%): [≈ 0, 5.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.248 ±(99.9%) 1.972 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.248, 1.163), stdev = 0.512
[info]   CI (99.9%): [≈ 0, 2.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   248.040 ±(99.9%) 547.404 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 248.040, 328.749), stdev = 142.159
[info]   CI (99.9%): [≈ 0, 795.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   98.375 ±(99.9%) 224.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 98.375, 152.280), stdev = 58.193
[info]   CI (99.9%): [≈ 0, 322.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.581
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 94.96% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 34232.432 ops/s
[info] # Warmup Iteration   2: 218156.126 ops/s
[info] # Warmup Iteration   3: 225077.848 ops/s
[info] # Warmup Iteration   4: 225801.772 ops/s
[info] # Warmup Iteration   5: 224721.971 ops/s
[info] Iteration   1: 223951.149 ops/s
[info]                  ·gc.alloc.rate:                   1278.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              8984.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.338 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9334.657 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 224482.556 ops/s
[info]                  ·gc.alloc.rate:                   1281.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              8984.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.876 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9368.207 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 225679.559 ops/s
[info]                  ·gc.alloc.rate:                   1288.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              8984.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7021.662 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 224683.068 ops/s
[info]                  ·gc.alloc.rate:                   1282.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              8984.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.466 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7078.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 224778.633 ops/s
[info]                  ·gc.alloc.rate:                   1283.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              8984.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.774 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9456.863 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   224714.993 ±(99.9%) 2414.681 ops/s [Average]
[info]   (min, avg, max) = (223951.149, 224714.993, 225679.559), stdev = 627.085
[info]   CI (99.9%): [222300.312, 227129.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1282.704 ±(99.9%) 13.416 MB/sec [Average]
[info]   (min, avg, max) = (1278.439, 1282.704, 1288.007), stdev = 3.484
[info]   CI (99.9%): [1269.288, 1296.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8984.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8984.002, 8984.002, 8984.002), stdev = 0.001
[info]   CI (99.9%): [8984.002, 8984.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.496 ±(99.9%) 0.939 B/op [Average]
[info]   (min, avg, max) = (0.292, 0.496, 0.876), stdev = 0.244
[info]   CI (99.9%): [≈ 0, 1.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.472 ±(99.9%) 696.366 MB/sec [Average]
[info]   (min, avg, max) = (1006.673, 1206.472, 1350.774), stdev = 180.844
[info]   CI (99.9%): [510.106, 1902.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8451.923 ±(99.9%) 4931.752 B/op [Average]
[info]   (min, avg, max) = (7021.662, 8451.923, 9456.863), stdev = 1280.760
[info]   CI (99.9%): [3520.171, 13383.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.80% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3408.491 ops/s
[info] # Warmup Iteration   2: 6366.126 ops/s
[info] # Warmup Iteration   3: 7055.992 ops/s
[info] # Warmup Iteration   4: 7112.747 ops/s
[info] # Warmup Iteration   5: 7072.079 ops/s
[info] Iteration   1: 7082.857 ops/s
[info]                  ·gc.alloc.rate:                   955.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              212408.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      981.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218077.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7095.169 ops/s
[info]                  ·gc.alloc.rate:                   957.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              212408.067 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      985.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 218594.926 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7093.253 ops/s
[info]                  ·gc.alloc.rate:                   957.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              212408.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 219985.482 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7113.580 ops/s
[info]                  ·gc.alloc.rate:                   959.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              212408.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220190.647 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7095.294 ops/s
[info]                  ·gc.alloc.rate:                   957.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              212425.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.650 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 147896.939 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7096.030 ±(99.9%) 42.641 ops/s [Average]
[info]   (min, avg, max) = (7082.857, 7096.030, 7113.580), stdev = 11.074
[info]   CI (99.9%): [7053.389, 7138.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   957.530 ±(99.9%) 5.749 MB/sec [Average]
[info]   (min, avg, max) = (955.832, 957.530, 959.936), stdev = 1.493
[info]   CI (99.9%): [951.781, 963.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   212411.489 ±(99.9%) 29.512 B/op [Average]
[info]   (min, avg, max) = (212408.058, 212411.489, 212425.199), stdev = 7.664
[info]   CI (99.9%): [212381.978, 212441.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.055 ±(99.9%) 0.141 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.055, 0.111), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   12.206 ±(99.9%) 31.299 B/op [Average]
[info]   (min, avg, max) = (4.604, 12.206, 24.582), stdev = 8.128
[info]   CI (99.9%): [≈ 0, 43.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   923.899 ±(99.9%) 554.130 MB/sec [Average]
[info]   (min, avg, max) = (666.650, 923.899, 995.108), stdev = 143.906
[info]   CI (99.9%): [369.770, 1478.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   204949.032 ±(99.9%) 122857.589 B/op [Average]
[info]   (min, avg, max) = (147896.939, 204949.032, 220190.647), stdev = 31905.726
[info]   CI (99.9%): [82091.443, 327806.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.64% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_7eb0817c/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 11186.618 ops/s
[info] # Warmup Iteration   2: 33458.072 ops/s
[info] # Warmup Iteration   3: 33439.212 ops/s
[info] # Warmup Iteration   4: 29346.832 ops/s
[info] # Warmup Iteration   5: 34038.713 ops/s
[info] Iteration   1: 33459.043 ops/s
[info]                  ·gc.alloc.rate:                   427.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      647.193 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30441.417 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 33875.790 ops/s
[info]                  ·gc.alloc.rate:                   432.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15056.143 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 33708.770 ops/s
[info]                  ·gc.alloc.rate:                   430.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.159 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15192.472 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 33612.428 ops/s
[info]                  ·gc.alloc.rate:                   429.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.005 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.924 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30533.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 33413.689 ops/s
[info]                  ·gc.alloc.rate:                   426.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15390.243 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   33613.944 ±(99.9%) 724.632 ops/s [Average]
[info]   (min, avg, max) = (33413.689, 33613.944, 33875.790), stdev = 188.185
[info]   CI (99.9%): [32889.312, 34338.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   429.283 ±(99.9%) 9.299 MB/sec [Average]
[info]   (min, avg, max) = (426.715, 429.283, 432.678), stdev = 2.415
[info]   CI (99.9%): [419.984, 438.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.009 ±(99.9%) 0.353 B/op [Average]
[info]   (min, avg, max) = (20099.928, 20100.009, 20100.159), stdev = 0.092
[info]   CI (99.9%): [20099.657, 20100.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.975 ±(99.9%) 4.596 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.975, 2.924), stdev = 1.194
[info]   CI (99.9%): [≈ 0, 5.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   455.082 ±(99.9%) 683.829 MB/sec [Average]
[info]   (min, avg, max) = (324.104, 455.082, 652.024), stdev = 177.588
[info]   CI (99.9%): [≈ 0, 1138.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   21322.690 ±(99.9%) 32218.372 B/op [Average]
[info]   (min, avg, max) = (15056.143, 21322.690, 30533.176), stdev = 8367.009
[info]   CI (99.9%): [≈ 0, 53541.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.48% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44747.473 ops/s
[info] # Warmup Iteration   2: 58897.600 ops/s
[info] # Warmup Iteration   3: 58884.232 ops/s
[info] # Warmup Iteration   4: 58610.200 ops/s
[info] # Warmup Iteration   5: 59540.639 ops/s
[info] Iteration   1: 59998.522 ops/s
[info]                  ·gc.alloc.rate:                   392.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8623.244 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 59861.835 ops/s
[info]                  ·gc.alloc.rate:                   391.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8616.993 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 59458.024 ops/s
[info]                  ·gc.alloc.rate:                   388.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8674.514 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 59447.422 ops/s
[info]                  ·gc.alloc.rate:                   388.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8658.922 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 59622.739 ops/s
[info]                  ·gc.alloc.rate:                   389.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17275.525 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   59677.708 ±(99.9%) 945.445 ops/s [Average]
[info]   (min, avg, max) = (59447.422, 59677.708, 59998.522), stdev = 245.529
[info]   CI (99.9%): [58732.263, 60623.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   390.007 ±(99.9%) 6.118 MB/sec [Average]
[info]   (min, avg, max) = (388.463, 390.007, 392.045), stdev = 1.589
[info]   CI (99.9%): [383.890, 396.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10288.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10288.007, 10288.007, 10288.007), stdev = 0.001
[info]   CI (99.9%): [10288.006, 10288.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.658 ±(99.9%) 2.747 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 1.638), stdev = 0.713
[info]   CI (99.9%): [≈ 0, 3.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   393.052 ±(99.9%) 562.466 MB/sec [Average]
[info]   (min, avg, max) = (326.951, 393.052, 654.349), stdev = 146.071
[info]   CI (99.9%): [≈ 0, 955.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   10369.840 ±(99.9%) 14865.296 B/op [Average]
[info]   (min, avg, max) = (8616.993, 10369.840, 17275.525), stdev = 3860.470
[info]   CI (99.9%): [≈ 0, 25235.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.32% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 56000.250 ops/s
[info] # Warmup Iteration   2: 70991.272 ops/s
[info] # Warmup Iteration   3: 71177.422 ops/s
[info] # Warmup Iteration   4: 71936.438 ops/s
[info] # Warmup Iteration   5: 72003.623 ops/s
[info] Iteration   1: 72241.804 ops/s
[info]                  ·gc.alloc.rate:      16.152 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 72144.407 ops/s
[info]                  ·gc.alloc.rate:      16.132 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 72175.189 ops/s
[info]                  ·gc.alloc.rate:      16.139 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 72070.586 ops/s
[info]                  ·gc.alloc.rate:      16.117 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 72194.359 ops/s
[info]                  ·gc.alloc.rate:      16.146 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   72165.269 ±(99.9%) 245.070 ops/s [Average]
[info]   (min, avg, max) = (72070.586, 72165.269, 72241.804), stdev = 63.644
[info]   CI (99.9%): [71920.199, 72410.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   16.137 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (16.117, 16.137, 16.152), stdev = 0.014
[info]   CI (99.9%): [16.084, 16.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   352.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.006, 352.006, 352.006), stdev = 0.001
[info]   CI (99.9%): [352.005, 352.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.16% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1070.307 ops/s
[info] # Warmup Iteration   2: 4672.881 ops/s
[info] # Warmup Iteration   3: 4872.306 ops/s
[info] # Warmup Iteration   4: 4933.678 ops/s
[info] # Warmup Iteration   5: 4990.167 ops/s
[info] Iteration   1: 4998.701 ops/s
[info]                  ·gc.alloc.rate:                   1254.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              395005.960 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 313419.366 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4994.535 ops/s
[info]                  ·gc.alloc.rate:                   1253.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              395005.486 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 420290.921 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4950.884 ops/s
[info]                  ·gc.alloc.rate:                   1242.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              395005.997 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426354.559 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4930.123 ops/s
[info]                  ·gc.alloc.rate:                   1237.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              395006.293 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.687 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 322270.722 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4981.327 ops/s
[info]                  ·gc.alloc.rate:                   1250.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              395005.735 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 426332.526 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   4971.114 ±(99.9%) 113.960 ops/s [Average]
[info]   (min, avg, max) = (4930.123, 4971.114, 4998.701), stdev = 29.595
[info]   CI (99.9%): [4857.154, 5085.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   1247.695 ±(99.9%) 28.783 MB/sec [Average]
[info]   (min, avg, max) = (1237.571, 1247.695, 1254.617), stdev = 7.475
[info]   CI (99.9%): [1218.913, 1276.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   395005.894 ±(99.9%) 1.165 B/op [Average]
[info]   (min, avg, max) = (395005.486, 395005.894, 395006.293), stdev = 0.303
[info]   CI (99.9%): [395004.729, 395007.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   21.103 ±(99.9%) 60.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.103, 39.703), stdev = 15.739
[info]   CI (99.9%): [≈ 0, 81.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1205.892 ±(99.9%) 715.217 MB/sec [Average]
[info]   (min, avg, max) = (995.482, 1205.892, 1349.329), stdev = 185.740
[info]   CI (99.9%): [490.674, 1921.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   381733.619 ±(99.9%) 225101.589 B/op [Average]
[info]   (min, avg, max) = (313419.366, 381733.619, 426354.559), stdev = 58458.168
[info]   CI (99.9%): [156632.029, 606835.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:31:42
[info] Benchmark                                                                                         Mode  Cnt         Score         Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1445426.178 ±   38678.459   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2108.484 ±      56.597  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2296.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.067 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.073 ±       0.144    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      2098.689 ±     600.748  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2284.765 ±     608.796    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        31.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    197445.443 ±   47197.916   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       349.267 ±      83.363  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      2784.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.079 ±       0.508  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.625 ±       3.943    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       389.976 ±     560.260  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      3105.257 ±    4262.980    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    459837.206 ±    9495.169   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       299.103 ±       5.872  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1024.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.638 ±       5.182  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         2.197 ±      17.855    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       313.662 ±     124.691  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1073.975 ±     431.791    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1843843.118 ±   30160.817   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5       627.903 ±      10.301  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       536.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5         0.042 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5         0.036 ±       0.083    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5       656.897 ±       8.906  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5       560.764 ±      16.079    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   4630395.245 ±  185842.971   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       470.661 ±      18.790  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       160.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5         0.012 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5         0.004 ±       0.024    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5       458.580 ±     690.729  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5       155.842 ±     233.974    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    120545.574 ±    4230.749   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5       768.303 ±      26.669  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     10032.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.037 ±       0.104  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.489 ±       1.368    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5       791.953 ±     689.662  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5     10330.211 ±    8747.718    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    590256.954 ±   25864.190   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1524.220 ±      66.824  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4064.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.144 ±       0.244    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5      1476.502 ±     711.889  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      3939.650 ±    2004.592    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1316467.782 ±   35242.190   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       936.907 ±      25.085  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5         0.075 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.090 ±       0.108    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5       999.152 ±      27.600  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      1194.497 ±      62.702    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2480426.363 ±  101479.542   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       163.904 ±       6.636  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5         0.006 ±       0.054  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.004 ±       0.034    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5       153.472 ±     539.474  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5        97.241 ±     341.845    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    130059.432 ±    2835.426   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1028.085 ±      22.478  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     12440.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5         0.058 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5         0.706 ±       1.597    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5       999.205 ±      28.021  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5     12090.542 ±     199.535    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1179234.239 ±   38684.170   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1851.908 ±      61.005  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2472.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.067 ±       0.124    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1889.846 ±     708.954  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2523.803 ±     997.637    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        28.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        31.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1953738.248 ±   38782.543   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1370.526 ±      27.023  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.062 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.050 ±       0.047    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1413.223 ±     600.259  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1138.473 ±     486.794    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        34.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6425473.027 ±  158991.400   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       816.468 ±      20.315  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.046 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.011 ±       0.029    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       792.391 ±     687.255  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       193.986 ±     165.514    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    455522.383 ±   14996.248   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1150.624 ±      37.822  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      3976.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.216 ±       0.338    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1137.142 ±     724.746  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      3929.134 ±    2491.357    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    653439.646 ±   18611.679   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2115.763 ±      60.518  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5096.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5         0.075 ±       0.156  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.181 ±       0.380    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5      2097.211 ±     543.662  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5051.336 ±    1301.283    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        31.000                counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        44.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1310584.904 ±   15770.977   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1232.507 ±      14.932  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.060 ±       0.053    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5      1275.476 ±     576.722  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1531.858 ±     701.193    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2630208.569 ±   60265.910   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1096.224 ±      25.184  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5         0.062 ±       0.113  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.037 ±       0.068    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5      1065.327 ±     575.091  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       637.885 ±     358.760    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    228966.931 ±    2989.244   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1398.817 ±      18.373  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9616.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5         0.062 ±       0.113  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.429 ±       0.778    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5      1410.540 ±     544.646  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      9695.952 ±    3705.681    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        28.000                    ms
[info] JsonCodecMakerBenchmark.readAsciiStringCirce                                                     thrpt    5    447993.782 ±   13694.605   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate                                      thrpt    5       999.593 ±      30.637  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm                                 thrpt    5      3512.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.037 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.131 ±       0.414    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space                         thrpt    5       994.817 ±      28.625  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      3495.339 ±     117.907    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time                                            thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.readAsciiStringJackson                                                   thrpt    5    604502.454 ±   25823.772   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate                                    thrpt    5       792.612 ±      33.773  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm                               thrpt    5      2064.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.058 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.152 ±       0.460    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       797.732 ±     701.958  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2081.406 ±    1916.661    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count                                         thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time                                          thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter                                                  thrpt    5    656969.342 ±   15532.966   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate                                   thrpt    5       561.051 ±      13.108  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm                              thrpt    5      1344.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.080 ±       0.172    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       590.362 ±     564.559  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1414.466 ±    1355.694    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count                                        thrpt    5         9.000                counts
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time                                         thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1554389.004 ±  250258.311   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5       987.513 ±     158.783  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.062 ±       0.150  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.062 ±       0.150    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1000.077 ±      26.518  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1014.351 ±     189.285    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3702676.771 ±   96296.294   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       489.312 ±      12.804  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.029 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.012 ±       0.057    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       458.610 ±     690.757  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       195.218 ±     297.339    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    283932.334 ±   10739.897   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1314.806 ±      49.319  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7288.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.054 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.301 ±       0.747    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1341.607 ±      36.715  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      7436.858 ±     216.173    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    582335.435 ±    7291.389   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1894.373 ±      24.726  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5120.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.071 ±       0.108  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.191 ±       0.293    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5      1890.910 ±     708.628  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      5110.016 ±    1884.404    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        28.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    667653.233 ±   62889.243   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       828.072 ±      77.906  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.098 ±       0.185    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       796.371 ±     700.320  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5      1875.330 ±    1591.635    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        15.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4697297.681 ±   58211.025   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       214.871 ±       2.695  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.617 ±       5.315  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.207 ±       1.786    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       168.052 ±     601.777  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        56.419 ±     202.078    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    223247.594 ±    4168.041   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1225.482 ±      22.561  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8640.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.054 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.381 ±       0.942    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1204.610 ±     699.338  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      8490.656 ±    4860.801    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5303.334 ±     158.700   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1249.412 ±      37.489  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    370792.079 ±       0.014    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.092 ±       0.257  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5        27.219 ±      76.269    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5      1199.425 ±     707.676  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    356003.979 ±  210961.320    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10725.772 ±     136.156   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       271.809 ±       3.454  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     39888.040 ±       0.006    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.092 ±       0.700  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5        13.430 ±     102.623    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       310.243 ±     117.305  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5     45527.710 ±   17187.104    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     14998.150 ±     211.744   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       262.369 ±       3.683  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     27536.029 ±       0.015    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.615 ±       5.206  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        64.723 ±     547.906    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       248.156 ±     547.727  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5     26053.951 ±   57507.798    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1942.237 ±      44.375   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1212.299 ±      27.715  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    982352.220 ±       0.055    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5        37.036 ±     106.634    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1204.066 ±     689.298  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5    975859.714 ±  563472.341    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3146996.339 ±   73249.537   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       943.612 ±      21.968  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.031 ±       0.049    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       928.162 ±     577.672  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5       464.562 ±     295.424    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        17.000                    ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    262027.662 ±    8027.064   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1441.104 ±      44.801  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8656.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.067 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.401 ±       0.807    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1479.382 ±     717.690  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      8888.289 ±    4396.095    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        22.000                counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        32.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    483276.757 ±   17489.812   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1741.331 ±      63.357  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5672.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5         0.075 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.245 ±       0.553    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5      1751.118 ±     539.923  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5702.175 ±    1625.613    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        26.000                counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        31.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    550321.508 ±   14015.573   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       640.545 ±      16.423  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5         0.050 ±       0.185  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.144 ±       0.534    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5       657.433 ±      16.335  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      1880.344 ±      54.224    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2501059.014 ±   36470.945   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1042.448 ±      15.621  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.034 ±       0.057    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5      1063.615 ±     560.143  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5       669.186 ±     346.731    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    171500.393 ±    2636.721   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1165.475 ±      17.986  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10696.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5         0.067 ±       0.036  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.611 ±       0.327    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5      1203.268 ±     703.912  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5     11041.418 ±    6414.099    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    470864.623 ±   10639.095   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1632.214 ±      36.578  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5456.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.079 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.265 ±       0.227    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1680.308 ±      49.994  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5616.854 ±     174.562    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        25.000                counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    962730.165 ±   20574.862   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1135.269 ±      24.205  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.102 ±       0.161    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5      1069.771 ±     579.513  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      1749.236 ±     959.291    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        19.000                    ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   2809164.765 ±   66583.147   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       699.652 ±      16.539  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.037 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.021 ±       0.066    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       724.023 ±     557.407  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5       405.697 ±     313.374    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    261944.637 ±    5373.687   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1399.236 ±      28.415  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8408.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.054 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.326 ±       0.553    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5      1410.657 ±     546.054  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      8478.365 ±    3369.822    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        28.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    500914.468 ±   16239.890   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      1909.396 ±      61.884  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6000.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5         0.075 ±       0.146  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.236 ±       0.466    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5      1891.141 ±     728.427  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5944.848 ±    2382.175    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        28.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        33.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   2452745.241 ±   44688.198   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1583.207 ±      29.222  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.029 ±       0.043    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5      1548.353 ±     701.484  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5       993.929 ±     461.189    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    155701.894 ±    3329.341   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1119.919 ±      23.965  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11320.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5         0.062 ±       0.160  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.631 ±       1.617    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5      1135.517 ±     713.676  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5     11479.297 ±    7262.325    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    715586.604 ±   16314.080   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       905.595 ±      20.883  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      1992.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.101 ±       0.229    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       929.023 ±     571.132  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2042.995 ±    1242.566    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   1623226.623 ±   29091.005   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5       767.301 ±      13.714  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.044 ±       0.086    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       725.784 ±     567.161  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       703.997 ±     557.346    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        12.000                    ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    224538.804 ±    2976.104   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1227.937 ±      15.982  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8608.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.379 ±       0.853    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1206.099 ±     716.508  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8452.907 ±    4961.352    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce                                                  thrpt    5    697991.845 ±   17201.855   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate                                   thrpt    5      1042.988 ±      25.801  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm                              thrpt    5      2352.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space                          thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.103 ±       0.197    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                      thrpt    5       995.975 ±      27.471  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      2246.090 ±      98.989    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time                                         thrpt    5        16.000                    ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson                                                thrpt    5    898685.134 ±  120781.782   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate                                 thrpt    5       630.348 ±      84.802  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm                            thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space                        thrpt    5         0.058 ±       0.183  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.101 ±       0.316    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                    thrpt    5       594.540 ±     566.670  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5      1034.840 ±     896.015    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count                                      thrpt    5         9.000                counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time                                       thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter                                               thrpt    5   1386921.307 ±   32720.125   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate                                thrpt    5       338.339 ±       7.983  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm                           thrpt    5       384.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.630 ±       5.242  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.714 ±       5.948    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       328.091 ±       2.048  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5       372.378 ±       7.846    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count                                     thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time                                      thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    453285.564 ±    5341.044   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1386.834 ±      16.523  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4816.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.062 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.217 ±       0.195    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1404.473 ±     537.952  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      4878.272 ±    1921.775    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1097783.515 ±   25117.346   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       831.368 ±      19.010  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.067 ±       0.154  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.095 ±       0.219    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       796.326 ±     700.385  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1141.902 ±    1007.253    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3451165.941 ±   61307.377   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       105.245 ±       1.862  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.015 ±       0.131  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.007 ±       0.060    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       102.313 ±     539.469  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        46.866 ±     247.113    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    178137.205 ±    3594.672   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1204.187 ±      24.712  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10640.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.058 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.516 ±       0.781    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1204.584 ±     705.400  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5     10644.463 ±    6260.934    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      8359.803 ±     182.485   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1222.333 ±      26.561  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    230146.062 ±      66.494    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.083 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5        15.686 ±      10.971    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1192.235 ±     710.653  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    224594.251 ±  137104.432    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11234.779 ±    2709.479   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       158.737 ±      38.442  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     22235.243 ±      27.544    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       153.490 ±     539.539  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5     22000.056 ±   77818.532    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     24436.076 ±     349.298   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       220.323 ±       3.141  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     14192.018 ±       0.009    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.616 ±       5.264  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        39.735 ±     339.508    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       219.191 ±     487.230  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     14141.655 ±   31431.484    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3777.873 ±     101.548   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1107.733 ±      29.700  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461480.113 ±       0.029    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5        26.076 ±      53.373    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1133.456 ±     693.429  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5    472495.141 ±  297953.313    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    392130.100 ±    7190.247   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1299.390 ±      23.991  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5216.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.251 ±       0.397    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1335.092 ±      43.300  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5359.561 ±     263.677    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1632172.261 ±   22750.108   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       680.270 ±       9.617  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.040 ±       0.123    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5       658.790 ±      15.994  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5       635.294 ±      18.251    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        10.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5   9344052.919 ±  304712.975   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       474.932 ±      15.579  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.021 ±       0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.004 ±       0.019    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       458.607 ±     690.759  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5        77.201 ±     115.660    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5         8.000                    ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    253250.012 ±    6377.520   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       812.287 ±      20.651  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5048.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.310 ±       0.267    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5       860.931 ±     697.670  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      5354.853 ±    4429.068    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        13.000                counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        16.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1388591.397 ±   16574.812   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1376.108 ±      16.780  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1560.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5         0.054 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.061 ±       0.050    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5      1339.213 ±      39.395  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1518.160 ±      29.027    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4400756.642 ±   58187.164   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1207.816 ±      15.952  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.067 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.024 ±       0.062    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5      1204.925 ±     704.130  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       430.985 ±     252.298    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15149392.585 ±  804268.855   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       461.975 ±      24.554  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.029 ±       0.156  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.003 ±       0.016    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       458.436 ±     689.943  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        47.768 ±      73.516    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  15729300.960 ±  648942.504   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                  B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    945319.589 ±   21448.404   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1407.625 ±      31.820  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2344.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.058 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.097 ±       0.146    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1411.805 ±     548.999  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2350.356 ±     878.847    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    691157.631 ±   13721.081   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1577.179 ±      31.404  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3592.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.067 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.152 ±       0.152    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1545.258 ±     700.278  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      3520.795 ±    1651.301    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        26.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   3137367.313 ±   53094.353   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1546.785 ±      26.072  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       776.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.071 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.036 ±       0.068    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1550.111 ±     692.876  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       777.785 ±     351.987    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        29.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   5322357.221 ±  196094.199   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1406.718 ±      52.130  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       416.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.062 ±       0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.018 ±       0.017    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5      1410.100 ±     584.553  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       416.952 ±     169.322    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    362323.107 ±   11488.034   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1267.107 ±      40.045  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5504.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.050 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.217 ±       0.193    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1273.624 ±     599.315  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5534.822 ±    2681.792    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce                                                    thrpt    5    165275.402 ±    4592.037   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate                                     thrpt    5       979.599 ±      26.859  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm                                thrpt    5      9328.003 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space                            thrpt    5         0.054 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.516 ±       0.423    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space                        thrpt    5       928.201 ±     558.963  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      8846.164 ±    5500.116    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count                                          thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time                                           thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson                                                  thrpt    5    246752.040 ±   10443.989   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate                                   thrpt    5       260.885 ±      11.034  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm                              thrpt    5      1664.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space                          thrpt    5         0.042 ±       0.220  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.264 ±       1.394    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space                      thrpt    5       245.809 ±     541.359  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1569.057 ±    3441.629    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count                                        thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time                                         thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter                                                 thrpt    5    689867.913 ±   13915.287   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate                                  thrpt    5       582.044 ±      11.578  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm                             thrpt    5      1328.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5         0.054 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.123 ±       0.379    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5       590.757 ±     567.854  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5      1348.819 ±    1307.516    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count                                       thrpt    5         9.000                counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time                                        thrpt    5        11.000                    ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc                                         thrpt    5    712635.444 ±   75141.774   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate                          thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                     thrpt    5         0.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count                               thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay                                                     thrpt    5    244355.501 ±   10657.818   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate                                      thrpt    5       260.818 ±      11.395  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm                                 thrpt    5      1680.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space                             thrpt    5         0.046 ±       0.207  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.295 ±       1.333    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space                         thrpt    5       260.449 ±     560.653  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      1681.805 ±    3621.518    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count                                           thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time                                            thrpt    5         5.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2066345.110 ±   56086.010   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1092.254 ±      29.560  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.079 ±       0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.060 ±       0.100    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5      1069.395 ±     577.963  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       815.225 ±     464.930    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4988333.491 ±   74696.048   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       760.574 ±      11.324  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.067 ±       0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.021 ±       0.021    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       790.851 ±     690.957  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5       249.512 ±     217.042    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        13.000                    ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    522834.977 ±   13151.703   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1514.563 ±      38.012  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4560.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.062 ±       0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.188 ±       0.237    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1548.669 ±     709.093  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      4662.795 ±    2134.887    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        37.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5128.111 ±      70.051   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1223.772 ±      16.826  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    375656.082 ±       0.014    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5         0.110 ±       0.140  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5        33.765 ±      42.771    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5      1200.400 ±     714.740  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5    368431.539 ±  217856.984    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        22.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     27357.746 ±    2040.538   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       396.369 ±      29.534  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.868 ±       0.273    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5         0.042 ±       0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5         2.416 ±       8.774    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5       390.324 ±     557.528  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5     22430.586 ±   31412.315    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     40889.781 ±     289.138   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       307.986 ±       2.135  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     11856.010 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.626 ±       5.172  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5        24.146 ±     199.329    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       262.280 ±     564.588  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5     10098.492 ±   21738.768    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     50449.444 ±    1451.058   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.770 ±       0.022  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.008 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4208.796 ±     116.796   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1246.194 ±      34.620  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    466047.831 ±       1.111    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.046 ±       0.119  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5        17.102 ±      44.495    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1273.379 ±     574.950  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    476476.915 ±  223601.481    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    710136.367 ±   27304.680   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1555.775 ±      60.040  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3448.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.138 ±       0.216    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5      1547.214 ±     687.682  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3430.675 ±    1583.459    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        23.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        30.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2631043.116 ±   32832.302   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       347.673 ±       4.317  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       208.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5         0.642 ±       5.256  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5         0.385 ±       3.155    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5       327.695 ±       3.507  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5       196.051 ±       4.021    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    241367.500 ±    8476.307   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       938.456 ±      33.087  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6120.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5         0.054 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.353 ±       0.459    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5       996.226 ±      28.160  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      6497.251 ±     321.329    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    595310.479 ±   10177.318   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1440.191 ±      24.635  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3808.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.075 ±       0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.198 ±       0.189    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1408.418 ±     596.421  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      3723.657 ±    1558.032    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1146768.553 ±   10640.018   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       775.203 ±       7.588  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.046 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.063 ±       0.238    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       791.943 ±     689.922  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1086.879 ±     944.640    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        15.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   4631844.551 ± 2864953.529   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       517.929 ±     320.446  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       176.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.037 ±       0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.014 ±       0.054    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       524.339 ±     689.520  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       187.246 ±     335.956    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    357254.269 ±    6035.365   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1218.439 ±      20.814  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5368.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.275 ±       0.434    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1272.322 ±     575.508  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5604.232 ±    2493.347    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    347103.333 ±    7374.881   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5       954.232 ±      20.178  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4328.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5         0.071 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.320 ±       0.546    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5       990.894 ±      30.878  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      4494.418 ±     182.914    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000                counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    764319.474 ±   20229.211   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1200.315 ±      31.771  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2472.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5         0.062 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.128 ±       0.259    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5      1203.115 ±     717.094  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2477.041 ±    1454.218    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        24.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2386901.350 ±   57273.302   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       327.541 ±       7.925  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       216.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5         0.626 ±       5.213  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.416 ±       3.462    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5       327.692 ±       3.394  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5       216.108 ±       6.847    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    262264.276 ±    2241.875   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       958.372 ±       8.183  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5752.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5         0.054 ±       0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.325 ±       0.263    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5       930.738 ±     571.695  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5586.440 ±    3437.323    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        20.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    576012.755 ±   21942.862   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1334.883 ±      51.147  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3648.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5         0.067 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.182 ±       0.247    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5      1337.461 ±      41.926  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3655.235 ±     138.813    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        20.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1308728.072 ±   13642.165   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       711.682 ±       7.442  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       856.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5         0.025 ±       0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.030 ±       0.126    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5       723.587 ±     556.064  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5       870.304 ±     668.273    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3614030.460 ±   60855.346   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       275.513 ±       4.627  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5         0.621 ±       5.173  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5         0.269 ±       2.242    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5       248.037 ±     547.439  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5       108.115 ±     238.570    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    380078.724 ±    4570.729   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1288.473 ±      15.658  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5336.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.207 ±       0.376    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5      1273.912 ±     560.850  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5276.046 ±    2334.675    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        23.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    330620.256 ±   52115.345   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       890.805 ±     140.558  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4240.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.222 ±       0.472    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5       922.997 ±     569.086  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      4407.060 ±    2981.121    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        16.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    811892.226 ±   16250.811   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1270.937 ±      25.266  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2464.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.105 ±       0.237    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5      1270.626 ±     565.802  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      2463.825 ±    1111.339    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        19.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2147950.610 ±   92981.542   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       403.991 ±      17.420  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5         0.037 ±       0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.027 ±       0.127    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5       392.840 ±     562.508  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5       287.983 ±     414.721    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    252299.677 ±    2906.051   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       968.148 ±      10.998  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6040.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5         0.042 ±       0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.259 ±       0.789    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5       930.469 ±     559.474  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      5803.501 ±    3454.633    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        18.000                    ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce                                                 thrpt    5   1095297.748 ±   44365.209   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate                                  thrpt    5      1358.260 ±      54.804  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm                             thrpt    5      1952.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space                         thrpt    5         0.075 ±       0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.108 ±       0.133    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                     thrpt    5      1407.374 ±     605.693  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5      2023.135 ±     891.891    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count                                       thrpt    5        21.000                counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time                                        thrpt    5        25.000                    ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson                                               thrpt    5    820018.761 ±   11555.506   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate                                thrpt    5       337.581 ±       4.737  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm                           thrpt    5       648.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space                       thrpt    5         0.021 ±       0.001  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.040 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                   thrpt    5       326.105 ±       5.799  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5       625.974 ±      11.594    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count                                     thrpt    5         5.000                counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time                                      thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter                                              thrpt    5   2043776.740 ±   41372.293   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate                               thrpt    5       405.061 ±       8.219  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm                          thrpt    5       312.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5         0.021 ±       0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5         0.016 ±       0.088    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5       392.526 ±     563.431  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5       302.747 ±     441.655    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count                                    thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time                                     thrpt    5         7.000                    ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc                                      thrpt    5   2220385.989 ±  213153.735   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate                       thrpt    5        ≈ 10⁻⁴                MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                  thrpt    5        ≈ 10⁻⁴                  B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count                            thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay                                                  thrpt    5   1979943.992 ±   59369.778   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate                                   thrpt    5       835.267 ±      24.866  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm                              thrpt    5       664.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space                          thrpt    5         0.050 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.040 ±       0.133    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space                      thrpt    5       799.926 ±     703.755  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       636.132 ±     564.052    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count                                        thrpt    5        12.000                counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time                                         thrpt    5        16.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    666649.274 ±    9680.219   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1155.337 ±      16.459  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2728.001 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.147 ±       0.232    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      1130.357 ±     702.588  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2669.986 ±    1688.568    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        17.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        21.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1767455.127 ±   20088.493   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       727.691 ±       8.262  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       648.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.033 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.030 ±       0.119    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       726.784 ±     585.883  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       647.462 ±     529.529    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        14.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4350354.875 ±   43378.449   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       486.427 ±       4.992  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       176.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.029 ±       0.166  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.011 ±       0.060    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       524.174 ±     691.728  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       189.768 ±     251.630    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         8.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4081705.676 ± 1556309.144   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       248.948 ±      94.847  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        96.000 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5         0.658 ±       5.294  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5         0.248 ±       1.972    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5       248.040 ±     547.404  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5        98.375 ±     224.082    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         4.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5        10.000                    ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    224714.993 ±    2414.681   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1282.704 ±      13.416  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8984.002 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.071 ±       0.134  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.496 ±       0.939    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1206.472 ±     696.366  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8451.923 ±    4931.752    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        27.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7096.030 ±      42.641   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       957.530 ±       5.749  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    212411.489 ±      29.512    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.055 ±       0.141  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5        12.206 ±      31.299    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5       923.899 ±     554.130  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5    204949.032 ±  122857.589    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        14.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        15.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     33613.944 ±     724.632   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       429.283 ±       9.299  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.009 ±       0.353    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.021 ±       0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.975 ±       4.596    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       455.082 ±     683.829  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     21322.690 ±   32218.372    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5         9.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     59677.708 ±     945.445   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       390.007 ±       6.118  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10288.007 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.025 ±       0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.658 ±       2.747    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       393.052 ±     562.466  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5     10369.840 ±   14865.296    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         6.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         6.000                    ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     72165.269 ±     245.070   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        16.137 ±       0.053  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       352.006 ±       0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      4971.114 ±     113.960   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5      1247.695 ±      28.783  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    395005.894 ±       1.165    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.067 ±       0.191  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5        21.103 ±      60.606    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1205.892 ±     715.217  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    381733.619 ±  225101.589    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        26.000                    ms
[success] Total time: 1960 s, completed Dec 11, 2017, 10:23:50 AM
