[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 7, 2017, 11:51:33 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:236:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Compiling 6 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:32:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                              ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:27:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:28:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/GoogleMapsAPI.scala:29:18: local val v3 in value format is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:64:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:66:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:68:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:70:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:72:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:74:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableIterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:76:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:78:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:80:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:82:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:84:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:86:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.A): com.github.plokhotnyuk.jsoniter_scala.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.B): com.github.plokhotnyuk.jsoniter_scala.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.C): com.github.plokhotnyuk.jsoniter_scala.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AdtBase): com.github.plokhotnyuk.jsoniter_scala.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readValueAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.A, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("A")
[info]           };
[info]           {
[info]             out.writeKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.B, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("B")
[info]           };
[info]           {
[info]             out.writeKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.C, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("type");
[info]             out.writeVal("C")
[info]           };
[info]           {
[info]             out.writeKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:88:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:284:54: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, req0, req1)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, req0)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:134:18: local val v1 in value format is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:135:18: local val v2 in value format is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/TwitterAPI.scala:137:18: local val v4 in value format is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CustomPlayJsonFormats.scala:65:45: Reference to uninitialized value v14
[warn]   implicit val v13: OFormat[C] = Json.format[C]
[warn]                                             ^
[warn] 7 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 293 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Done packaging.
[info] Compiling 116 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[error] WARNING: An illegal reflective access operation has occurred
[error] WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/tmp/sbt_dc032f7d/target/1ea93b88/jmh-core-1.19.jar) to field java.io.PrintStream.charOut
[error] WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
[error] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[error] WARNING: All illegal access operations will be denied in a future release
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:18:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1141167.913 ops/s
[info] # Warmup Iteration   2: 1552326.476 ops/s
[info] # Warmup Iteration   3: 1552090.435 ops/s
[info] # Warmup Iteration   4: 1583295.523 ops/s
[info] # Warmup Iteration   5: 1559669.500 ops/s
[info] Iteration   1: 1572911.356 ops/s
[info]                  ·gc.alloc.rate:                   2277.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              2280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2366.712 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2368.848 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1574363.153 ops/s
[info]                  ·gc.alloc.rate:                   2280.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              2280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2374.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2373.924 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1556648.147 ops/s
[info]                  ·gc.alloc.rate:                   2255.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              2280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2060.839 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1569230.538 ops/s
[info]                  ·gc.alloc.rate:                   2273.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              2280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2381.930 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2389.014 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1607191.642 ops/s
[info]                  ·gc.alloc.rate:                   2328.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              2280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2382.596 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2333.352 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1576068.967 ±(99.9%) 72178.612 ops/s [Average]
[info]   (min, avg, max) = (1556648.147, 1576068.967, 1607191.642), stdev = 18744.556
[info]   CI (99.9%): [1503890.355, 1648247.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2283.083 ±(99.9%) 104.297 MB/sec [Average]
[info]   (min, avg, max) = (2255.182, 2283.083, 2328.118), stdev = 27.086
[info]   CI (99.9%): [2178.786, 2387.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2280.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2280.000, 2280.000, 2280.000), stdev = 0.001
[info]   CI (99.9%): [2280.000, 2280.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   0.096 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.167), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.096 ±(99.9%) 0.156 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.166), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   2308.907 ±(99.9%) 582.798 MB/sec [Average]
[info]   (min, avg, max) = (2038.407, 2308.907, 2382.596), stdev = 151.351
[info]   CI (99.9%): [1726.110, 2891.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2305.196 ±(99.9%) 531.833 B/op [Average]
[info]   (min, avg, max) = (2060.839, 2305.196, 2389.014), stdev = 138.115
[info]   CI (99.9%): [1773.362, 2837.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   34.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 7.000), stdev = 0.447
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 12.200, 15.000), stdev = 2.387
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.89% complete, ETA 00:30:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77027.487 ops/s
[info] # Warmup Iteration   2: 184810.984 ops/s
[info] # Warmup Iteration   3: 186788.230 ops/s
[info] # Warmup Iteration   4: 186417.174 ops/s
[info] # Warmup Iteration   5: 185394.765 ops/s
[info] Iteration   1: 186279.717 ops/s
[info]                  ·gc.alloc.rate:                   335.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              2832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2729.655 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 186608.375 ops/s
[info]                  ·gc.alloc.rate:                   335.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              2832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2724.917 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 187199.684 ops/s
[info]                  ·gc.alloc.rate:                   336.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              2832.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.681 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2730.098 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 187971.884 ops/s
[info]                  ·gc.alloc.rate:                   338.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              2832.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.698 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2719.061 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 187625.322 ops/s
[info]                  ·gc.alloc.rate:                   337.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              2832.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2735.280 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   187136.996 ±(99.9%) 2691.183 ops/s [Average]
[info]   (min, avg, max) = (186279.717, 187136.996, 187971.884), stdev = 698.892
[info]   CI (99.9%): [184445.814, 189828.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   336.678 ±(99.9%) 4.887 MB/sec [Average]
[info]   (min, avg, max) = (335.100, 336.678, 338.185), stdev = 1.269
[info]   CI (99.9%): [331.791, 341.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   2832.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2832.002, 2832.002, 2832.002), stdev = 0.001
[info]   CI (99.9%): [2832.002, 2832.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.872 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.520), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 0.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.984 ±(99.9%) 7.367 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.984, 4.397), stdev = 1.913
[info]   CI (99.9%): [≈ 0, 8.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   324.290 ±(99.9%) 4.950 MB/sec [Average]
[info]   (min, avg, max) = (322.989, 324.290, 326.036), stdev = 1.285
[info]   CI (99.9%): [319.340, 329.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2727.802 ±(99.9%) 23.529 B/op [Average]
[info]   (min, avg, max) = (2719.061, 2727.802, 2735.280), stdev = 6.110
[info]   CI (99.9%): [2704.273, 2751.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.79% complete, ETA 00:30:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 324090.906 ops/s
[info] # Warmup Iteration   2: 340858.093 ops/s
[info] # Warmup Iteration   3: 341581.547 ops/s
[info] # Warmup Iteration   4: 341755.105 ops/s
[info] # Warmup Iteration   5: 339620.932 ops/s
[info] Iteration   1: 339464.664 ops/s
[info]                  ·gc.alloc.rate:                   224.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1185.952 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 344134.929 ops/s
[info]                  ·gc.alloc.rate:                   227.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1479.039 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 343182.824 ops/s
[info]                  ·gc.alloc.rate:      226.779 MB/sec
[info]                  ·gc.alloc.rate.norm: 1040.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 339611.727 ops/s
[info]                  ·gc.alloc.rate:                   224.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.354 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1498.737 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 343558.341 ops/s
[info]                  ·gc.alloc.rate:                   226.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              1040.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1490.655 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   341990.497 ±(99.9%) 8720.826 ops/s [Average]
[info]   (min, avg, max) = (339464.664, 341990.497, 344134.929), stdev = 2264.771
[info]   CI (99.9%): [333269.671, 350711.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   225.841 ±(99.9%) 5.510 MB/sec [Average]
[info]   (min, avg, max) = (224.278, 225.841, 227.414), stdev = 1.431
[info]   CI (99.9%): [220.331, 231.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1040.001, 1040.001, 1040.001), stdev = 0.001
[info]   CI (99.9%): [1040.001, 1040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.087 ±(99.9%) 0.590 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.354), stdev = 0.153
[info]   CI (99.9%): [≈ 0, 0.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.401 ±(99.9%) 2.699 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.401, 1.618), stdev = 0.701
[info]   CI (99.9%): [≈ 0, 3.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   245.392 ±(99.9%) 540.253 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.392, 324.436), stdev = 140.302
[info]   CI (99.9%): [≈ 0, 785.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1130.877 ±(99.9%) 2486.495 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1130.877, 1498.737), stdev = 645.735
[info]   CI (99.9%): [≈ 0, 3617.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.68% complete, ETA 00:29:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 756362.501 ops/s
[info] # Warmup Iteration   2: 772365.002 ops/s
[info] # Warmup Iteration   3: 770135.861 ops/s
[info] # Warmup Iteration   4: 773197.230 ops/s
[info] # Warmup Iteration   5: 769667.693 ops/s
[info] Iteration   1: 768922.991 ops/s
[info]                  ·gc.alloc.rate:                   269.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.686 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 662.649 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 755620.965 ops/s
[info]                  ·gc.alloc.rate:                   264.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 674.336 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 785636.730 ops/s
[info]                  ·gc.alloc.rate:      275.533 MB/sec
[info]                  ·gc.alloc.rate.norm: 552.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 784689.509 ops/s
[info]                  ·gc.alloc.rate:                   275.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 652.676 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 784268.930 ops/s
[info]                  ·gc.alloc.rate:                   275.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              552.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 653.051 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   775827.825 ±(99.9%) 51011.595 ops/s [Average]
[info]   (min, avg, max) = (755620.965, 775827.825, 785636.730), stdev = 13247.549
[info]   CI (99.9%): [724816.231, 826839.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   272.078 ±(99.9%) 17.904 MB/sec [Average]
[info]   (min, avg, max) = (264.995, 272.078, 275.533), stdev = 4.650
[info]   CI (99.9%): [254.174, 289.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   552.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (552.001, 552.001, 552.001), stdev = 0.001
[info]   CI (99.9%): [552.000, 552.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.551 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.333), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   0.162 ±(99.9%) 1.127 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.682), stdev = 0.293
[info]   CI (99.9%): [≈ 0, 1.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   259.634 ±(99.9%) 558.892 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.634, 325.384), stdev = 145.142
[info]   CI (99.9%): [≈ 0, 818.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   528.543 ±(99.9%) 1138.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 528.543, 674.336), stdev = 295.597
[info]   CI (99.9%): [≈ 0, 1666.780] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.57% complete, ETA 00:29:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2825278.354 ops/s
[info] # Warmup Iteration   2: 2928695.038 ops/s
[info] # Warmup Iteration   3: 2969965.486 ops/s
[info] # Warmup Iteration   4: 2968883.163 ops/s
[info] # Warmup Iteration   5: 2977686.761 ops/s
[info] Iteration   1: 2934359.692 ops/s
[info]                  ·gc.alloc.rate:                   328.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173.638 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2945350.593 ops/s
[info]                  ·gc.alloc.rate:                   329.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.386 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 173.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2962890.528 ops/s
[info]                  ·gc.alloc.rate:                   331.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.390 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.852 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2981640.308 ops/s
[info]                  ·gc.alloc.rate:                   333.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.688 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.476 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2974698.053 ops/s
[info]                  ·gc.alloc.rate:                   332.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.673 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 172.876 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   2959787.835 ±(99.9%) 76153.635 ops/s [Average]
[info]   (min, avg, max) = (2934359.692, 2959787.835, 2981640.308), stdev = 19776.857
[info]   CI (99.9%): [2883634.200, 3035941.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   330.934 ±(99.9%) 8.499 MB/sec [Average]
[info]   (min, avg, max) = (328.067, 330.934, 333.364), stdev = 2.207
[info]   CI (99.9%): [322.435, 339.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   0.004 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.011), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   325.560 ±(99.9%) 4.782 MB/sec [Average]
[info]   (min, avg, max) = (323.663, 325.560, 326.688), stdev = 1.242
[info]   CI (99.9%): [320.779, 330.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   173.145 ±(99.9%) 2.274 B/op [Average]
[info]   (min, avg, max) = (172.476, 173.145, 173.884), stdev = 0.590
[info]   CI (99.9%): [170.872, 175.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.46% complete, ETA 00:29:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46782.739 ops/s
[info] # Warmup Iteration   2: 115390.754 ops/s
[info] # Warmup Iteration   3: 115933.036 ops/s
[info] # Warmup Iteration   4: 121619.823 ops/s
[info] # Warmup Iteration   5: 120293.522 ops/s
[info] Iteration   1: 120006.399 ops/s
[info]                  ·gc.alloc.rate:                   764.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8604.982 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 119971.991 ops/s
[info]                  ·gc.alloc.rate:                   764.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.357 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12980.930 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 119916.571 ops/s
[info]                  ·gc.alloc.rate:                   764.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8690.484 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 119473.437 ops/s
[info]                  ·gc.alloc.rate:                   761.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8748.663 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 120376.650 ops/s
[info]                  ·gc.alloc.rate:                   767.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.141 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13077.370 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   119949.010 ±(99.9%) 1238.685 ops/s [Average]
[info]   (min, avg, max) = (119473.437, 119949.010, 120376.650), stdev = 321.683
[info]   CI (99.9%): [118710.324, 121187.695] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   764.471 ±(99.9%) 7.928 MB/sec [Average]
[info]   (min, avg, max) = (761.442, 764.471, 767.235), stdev = 2.059
[info]   CI (99.9%): [756.542, 772.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   10032.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10032.003, 10032.003, 10032.004), stdev = 0.001
[info]   CI (99.9%): [10032.003, 10032.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.601 ±(99.9%) 2.510 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.601, 1.638), stdev = 0.652
[info]   CI (99.9%): [≈ 0, 3.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   794.323 ±(99.9%) 704.769 MB/sec [Average]
[info]   (min, avg, max) = (655.994, 794.323, 1000.141), stdev = 183.026
[info]   CI (99.9%): [89.554, 1499.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10420.486 ±(99.9%) 9172.872 B/op [Average]
[info]   (min, avg, max) = (8604.982, 10420.486, 13077.370), stdev = 2382.166
[info]   CI (99.9%): [1247.613, 19593.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 1.095
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.36% complete, ETA 00:28:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 406646.651 ops/s
[info] # Warmup Iteration   2: 582551.863 ops/s
[info] # Warmup Iteration   3: 588000.058 ops/s
[info] # Warmup Iteration   4: 592382.097 ops/s
[info] # Warmup Iteration   5: 579462.261 ops/s
[info] Iteration   1: 595052.210 ops/s
[info]                  ·gc.alloc.rate:                   1535.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1670.635 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4420.528 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 590634.663 ops/s
[info]                  ·gc.alloc.rate:                   1524.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1681.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4479.911 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 588674.554 ops/s
[info]                  ·gc.alloc.rate:                   1520.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.611 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3610.995 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 585967.616 ops/s
[info]                  ·gc.alloc.rate:                   1513.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1692.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4545.428 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 585806.474 ops/s
[info]                  ·gc.alloc.rate:                   1512.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              4064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.171 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3643.803 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce":
[info]   589227.103 ±(99.9%) 14731.340 ops/s [Average]
[info]   (min, avg, max) = (585806.474, 589227.103, 595052.210), stdev = 3825.682
[info]   CI (99.9%): [574495.764, 603958.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1521.304 ±(99.9%) 37.172 MB/sec [Average]
[info]   (min, avg, max) = (1512.563, 1521.304, 1535.894), stdev = 9.653
[info]   CI (99.9%): [1484.132, 1558.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4064.001, 4064.001, 4064.001), stdev = 0.001
[info]   CI (99.9%): [4064.001, 4064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.071, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.027, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.189 ±(99.9%) 0.120 B/op [Average]
[info]   (min, avg, max) = (0.165, 0.189, 0.224), stdev = 0.031
[info]   CI (99.9%): [0.070, 0.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1550.147 ±(99.9%) 692.295 MB/sec [Average]
[info]   (min, avg, max) = (1350.611, 1550.147, 1692.271), stdev = 179.787
[info]   CI (99.9%): [857.852, 2242.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4140.133 ±(99.9%) 1810.892 B/op [Average]
[info]   (min, avg, max) = (3610.995, 4140.133, 4545.428), stdev = 470.283
[info]   CI (99.9%): [2329.241, 5951.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.800, 8.000), stdev = 0.837
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 6.25% complete, ETA 00:28:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 797194.862 ops/s
[info] # Warmup Iteration   2: 1227309.019 ops/s
[info] # Warmup Iteration   3: 1236226.748 ops/s
[info] # Warmup Iteration   4: 1247361.751 ops/s
[info] # Warmup Iteration   5: 1258317.272 ops/s
[info] Iteration   1: 1256830.296 ops/s
[info]                  ·gc.alloc.rate:                   894.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1236.656 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1240548.006 ops/s
[info]                  ·gc.alloc.rate:                   882.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.897 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1259.634 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1249412.481 ops/s
[info]                  ·gc.alloc.rate:                   889.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.112 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 836.593 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1239276.222 ops/s
[info]                  ·gc.alloc.rate:                   881.815 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.096 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1271.500 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1240095.396 ops/s
[info]                  ·gc.alloc.rate:                   882.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1274.931 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1245232.480 ±(99.9%) 29564.363 ops/s [Average]
[info]   (min, avg, max) = (1239276.222, 1245232.480, 1256830.296), stdev = 7677.771
[info]   CI (99.9%): [1215668.118, 1274796.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   886.096 ±(99.9%) 20.949 MB/sec [Average]
[info]   (min, avg, max) = (881.815, 886.096, 894.292), stdev = 5.440
[info]   CI (99.9%): [865.148, 907.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.146), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.105 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.105, 0.185), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   930.014 ±(99.9%) 572.958 MB/sec [Average]
[info]   (min, avg, max) = (664.112, 930.014, 1004.525), stdev = 148.795
[info]   CI (99.9%): [357.056, 1502.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1175.863 ±(99.9%) 732.580 B/op [Average]
[info]   (min, avg, max) = (836.593, 1175.863, 1274.931), stdev = 190.249
[info]   CI (99.9%): [443.283, 1908.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 7.14% complete, ETA 00:28:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2196394.048 ops/s
[info] # Warmup Iteration   2: 2966224.174 ops/s
[info] # Warmup Iteration   3: 2954254.385 ops/s
[info] # Warmup Iteration   4: 2989068.276 ops/s
[info] # Warmup Iteration   5: 3000699.341 ops/s
[info] Iteration   1: 2948478.128 ops/s
[info]                  ·gc.alloc.rate:                   194.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136.541 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2966810.657 ops/s
[info]                  ·gc.alloc.rate:                   196.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135.701 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2993375.981 ops/s
[info]                  ·gc.alloc.rate:      197.769 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2969649.630 ops/s
[info]                  ·gc.alloc.rate:                   196.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.355 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 171.396 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2991180.326 ops/s
[info]                  ·gc.alloc.rate:                   197.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 170.175 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2973898.944 ±(99.9%) 71846.234 ops/s [Average]
[info]   (min, avg, max) = (2948478.128, 2973898.944, 2993375.981), stdev = 18658.239
[info]   CI (99.9%): [2902052.711, 3045745.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   196.493 ±(99.9%) 4.752 MB/sec [Average]
[info]   (min, avg, max) = (194.808, 196.493, 197.769), stdev = 1.234
[info]   CI (99.9%): [191.741, 201.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.090 ±(99.9%) 0.645 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.090, 0.385), stdev = 0.167
[info]   CI (99.9%): [≈ 0, 0.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.047 ±(99.9%) 0.342 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.204), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   231.663 ±(99.9%) 515.381 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 231.663, 323.410), stdev = 133.843
[info]   CI (99.9%): [≈ 0, 747.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   122.763 ±(99.9%) 272.561 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 122.763, 171.396), stdev = 70.783
[info]   CI (99.9%): [≈ 0, 395.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 8.04% complete, ETA 00:28:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75970.896 ops/s
[info] # Warmup Iteration   2: 129925.281 ops/s
[info] # Warmup Iteration   3: 130885.648 ops/s
[info] # Warmup Iteration   4: 132527.771 ops/s
[info] # Warmup Iteration   5: 131768.917 ops/s
[info] Iteration   1: 132589.865 ops/s
[info]                  ·gc.alloc.rate:                   1117.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15743.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 132583.582 ops/s
[info]                  ·gc.alloc.rate:                   1117.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.988 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.118 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11872.954 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 132186.668 ops/s
[info]                  ·gc.alloc.rate:                   1113.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11963.943 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 130064.490 ops/s
[info]                  ·gc.alloc.rate:                   1096.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16264.990 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 132737.126 ops/s
[info]                  ·gc.alloc.rate:                   1118.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              13264.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.503 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11993.994 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay":
[info]   132032.346 ±(99.9%) 4308.455 ops/s [Average]
[info]   (min, avg, max) = (130064.490, 132032.346, 132737.126), stdev = 1118.892
[info]   CI (99.9%): [127723.892, 136340.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1112.610 ±(99.9%) 36.205 MB/sec [Average]
[info]   (min, avg, max) = (1096.078, 1112.610, 1118.609), stdev = 9.402
[info]   CI (99.9%): [1076.405, 1148.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13264.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13264.003, 13264.003, 13264.003), stdev = 0.001
[info]   CI (99.9%): [13264.003, 13264.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.696 ±(99.9%) 1.257 B/op [Average]
[info]   (min, avg, max) = (0.247, 0.696, 1.007), stdev = 0.327
[info]   CI (99.9%): [≈ 0, 1.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.281 ±(99.9%) 695.718 MB/sec [Average]
[info]   (min, avg, max) = (1000.118, 1137.281, 1344.067), stdev = 180.676
[info]   CI (99.9%): [441.563, 1832.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   13567.854 ±(99.9%) 8595.163 B/op [Average]
[info]   (min, avg, max) = (11872.954, 13567.854, 16264.990), stdev = 2232.137
[info]   CI (99.9%): [4972.691, 22163.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.93% complete, ETA 00:27:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 821306.463 ops/s
[info] # Warmup Iteration   2: 1260199.061 ops/s
[info] # Warmup Iteration   3: 1276146.497 ops/s
[info] # Warmup Iteration   4: 1273973.775 ops/s
[info] # Warmup Iteration   5: 1289049.198 ops/s
[info] Iteration   1: 1265063.958 ops/s
[info]                  ·gc.alloc.rate:                   1960.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              2440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1684.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2096.724 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1254589.029 ops/s
[info]                  ·gc.alloc.rate:                   1944.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              2440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2029.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2546.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1281980.348 ops/s
[info]                  ·gc.alloc.rate:                   1986.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              2440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2499.265 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1278647.698 ops/s
[info]                  ·gc.alloc.rate:                   1982.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              2440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2509.030 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1268918.089 ops/s
[info]                  ·gc.alloc.rate:                   1966.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              2440.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2040.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2531.429 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1269839.824 ±(99.9%) 42235.096 ops/s [Average]
[info]   (min, avg, max) = (1254589.029, 1269839.824, 1281980.348), stdev = 10968.320
[info]   CI (99.9%): [1227604.729, 1312074.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1968.216 ±(99.9%) 65.146 MB/sec [Average]
[info]   (min, avg, max) = (1944.784, 1968.216, 1986.849), stdev = 16.918
[info]   CI (99.9%): [1903.070, 2033.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2440.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2440.000, 2440.000, 2440.000), stdev = 0.001
[info]   CI (99.9%): [2440.000, 2440.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.093 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.093, 0.153), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1965.572 ±(99.9%) 604.368 MB/sec [Average]
[info]   (min, avg, max) = (1684.903, 1965.572, 2040.361), stdev = 156.953
[info]   CI (99.9%): [1361.204, 2569.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2436.521 ±(99.9%) 734.866 B/op [Average]
[info]   (min, avg, max) = (2096.724, 2436.521, 2546.154), stdev = 190.842
[info]   CI (99.9%): [1701.655, 3171.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   62.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 12.400, 14.000), stdev = 1.140
[info]   CI (99.9%): [62.000, 62.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.82% complete, ETA 00:27:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1294276.562 ops/s
[info] # Warmup Iteration   2: 1923006.740 ops/s
[info] # Warmup Iteration   3: 1922589.057 ops/s
[info] # Warmup Iteration   4: 1894445.241 ops/s
[info] # Warmup Iteration   5: 1901830.753 ops/s
[info] Iteration   1: 1875599.640 ops/s
[info]                  ·gc.alloc.rate:                   1315.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1119.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 1887297.806 ops/s
[info]                  ·gc.alloc.rate:                   1323.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.177 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1118.506 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 1921475.753 ops/s
[info]                  ·gc.alloc.rate:                   1347.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.282 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1102.945 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1897656.951 ops/s
[info]                  ·gc.alloc.rate:                   1331.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.821 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1120.416 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 1931082.574 ops/s
[info]                  ·gc.alloc.rate:                   1354.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.216 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1103.742 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1902622.545 ±(99.9%) 89380.547 ops/s [Average]
[info]   (min, avg, max) = (1875599.640, 1902622.545, 1931082.574), stdev = 23211.844
[info]   CI (99.9%): [1813241.998, 1992003.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1334.490 ±(99.9%) 62.645 MB/sec [Average]
[info]   (min, avg, max) = (1315.535, 1334.490, 1354.533), stdev = 16.269
[info]   CI (99.9%): [1271.846, 1397.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.055 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.055, 0.070), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1345.202 ±(99.9%) 31.450 MB/sec [Average]
[info]   (min, avg, max) = (1333.513, 1345.202, 1354.216), stdev = 8.167
[info]   CI (99.9%): [1313.752, 1376.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1112.939 ±(99.9%) 33.852 B/op [Average]
[info]   (min, avg, max) = (1102.945, 1112.939, 1120.416), stdev = 8.791
[info]   CI (99.9%): [1079.087, 1146.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   61.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 12.200, 19.000), stdev = 7.120
[info]   CI (99.9%): [61.000, 61.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.71% complete, ETA 00:27:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7385805.262 ops/s
[info] # Warmup Iteration   2: 7602693.786 ops/s
[info] # Warmup Iteration   3: 7804850.857 ops/s
[info] # Warmup Iteration   4: 7836711.485 ops/s
[info] # Warmup Iteration   5: 7755563.182 ops/s
[info] Iteration   1: 7822626.312 ops/s
[info]                  ·gc.alloc.rate:                   993.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.793 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 200.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 7710749.844 ops/s
[info]                  ·gc.alloc.rate:                   979.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.085 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7724419.021 ops/s
[info]                  ·gc.alloc.rate:                   981.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7687622.425 ops/s
[info]                  ·gc.alloc.rate:                   976.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 137.460 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7711177.781 ops/s
[info]                  ·gc.alloc.rate:                   979.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 206.114 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   7731319.076 ±(99.9%) 203053.334 ops/s [Average]
[info]   (min, avg, max) = (7687622.425, 7731319.076, 7822626.312), stdev = 52732.306
[info]   CI (99.9%): [7528265.742, 7934372.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   982.359 ±(99.9%) 25.807 MB/sec [Average]
[info]   (min, avg, max) = (976.772, 982.359, 993.957), stdev = 6.702
[info]   CI (99.9%): [956.552, 1008.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.012 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.012, 0.025), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   936.030 ±(99.9%) 570.170 MB/sec [Average]
[info]   (min, avg, max) = (671.334, 936.030, 1009.790), stdev = 148.071
[info]   CI (99.9%): [365.859, 1506.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   190.502 ±(99.9%) 114.492 B/op [Average]
[info]   (min, avg, max) = (137.460, 190.502, 206.114), stdev = 29.733
[info]   CI (99.9%): [76.011, 304.994] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 11.61% complete, ETA 00:26:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 283559.952 ops/s
[info] # Warmup Iteration   2: 434741.290 ops/s
[info] # Warmup Iteration   3: 453889.401 ops/s
[info] # Warmup Iteration   4: 451418.965 ops/s
[info] # Warmup Iteration   5: 450706.823 ops/s
[info] Iteration   1: 454389.420 ops/s
[info]                  ·gc.alloc.rate:                   1182.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.183 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4600.799 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 450871.666 ops/s
[info]                  ·gc.alloc.rate:                   1173.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3498.501 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 445358.207 ops/s
[info]                  ·gc.alloc.rate:                   1158.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4740.811 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 447677.467 ops/s
[info]                  ·gc.alloc.rate:                   1164.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.342 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3548.776 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 448611.406 ops/s
[info]                  ·gc.alloc.rate:                   1167.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              4096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4737.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   449381.633 ±(99.9%) 13197.027 ops/s [Average]
[info]   (min, avg, max) = (445358.207, 449381.633, 454389.420), stdev = 3427.226
[info]   CI (99.9%): [436184.606, 462578.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1169.381 ±(99.9%) 34.476 MB/sec [Average]
[info]   (min, avg, max) = (1158.848, 1169.381, 1182.455), stdev = 8.953
[info]   CI (99.9%): [1134.905, 1203.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4096.001, 4096.001, 4096.001), stdev = 0.001
[info]   CI (99.9%): [4096.001, 4096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.234 ±(99.9%) 0.238 B/op [Average]
[info]   (min, avg, max) = (0.144, 0.234, 0.294), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.192 ±(99.9%) 705.330 MB/sec [Average]
[info]   (min, avg, max) = (1002.133, 1206.192, 1350.023), stdev = 183.172
[info]   CI (99.9%): [500.862, 1911.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   4225.184 ±(99.9%) 2476.522 B/op [Average]
[info]   (min, avg, max) = (3498.501, 4225.184, 4740.811), stdev = 643.145
[info]   CI (99.9%): [1748.661, 6701.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 12.50% complete, ETA 00:26:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 427288.588 ops/s
[info] # Warmup Iteration   2: 639290.763 ops/s
[info] # Warmup Iteration   3: 641538.350 ops/s
[info] # Warmup Iteration   4: 643613.634 ops/s
[info] # Warmup Iteration   5: 644941.138 ops/s
[info] Iteration   1: 650113.325 ops/s
[info]                  ·gc.alloc.rate:                   2104.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.611 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4900.830 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 639220.312 ops/s
[info]                  ·gc.alloc.rate:                   2069.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2370.958 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5838.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 651298.664 ops/s
[info]                  ·gc.alloc.rate:                   2108.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4922.665 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 647289.500 ops/s
[info]                  ·gc.alloc.rate:                   2095.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4957.848 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 626794.678 ops/s
[info]                  ·gc.alloc.rate:                   2029.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2042.080 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5128.288 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce":
[info]   642943.296 ±(99.9%) 39209.949 ops/s [Average]
[info]   (min, avg, max) = (626794.678, 642943.296, 651298.664), stdev = 10182.699
[info]   CI (99.9%): [603733.348, 682153.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2081.404 ±(99.9%) 126.422 MB/sec [Average]
[info]   (min, avg, max) = (2029.223, 2081.404, 2108.376), stdev = 32.831
[info]   CI (99.9%): [1954.983, 2207.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5096.001, 5096.001, 5096.001), stdev = 0.001
[info]   CI (99.9%): [5096.001, 5096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.087 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.087, 0.125), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.215 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (0.151, 0.215, 0.314), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   2102.425 ±(99.9%) 578.669 MB/sec [Average]
[info]   (min, avg, max) = (2023.611, 2102.425, 2370.958), stdev = 150.278
[info]   CI (99.9%): [1523.756, 2681.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5149.535 ±(99.9%) 1521.567 B/op [Average]
[info]   (min, avg, max) = (4900.830, 5149.535, 5838.042), stdev = 395.146
[info]   CI (99.9%): [3627.968, 6671.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (11.000, 13.800, 18.000), stdev = 2.588
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 13.39% complete, ETA 00:26:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 880425.712 ops/s
[info] # Warmup Iteration   2: 1266814.866 ops/s
[info] # Warmup Iteration   3: 1272206.611 ops/s
[info] # Warmup Iteration   4: 1275151.832 ops/s
[info] # Warmup Iteration   5: 1280993.167 ops/s
[info] Iteration   1: 1265334.548 ops/s
[info]                  ·gc.alloc.rate:                   1189.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1653.699 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1282598.729 ops/s
[info]                  ·gc.alloc.rate:                   1205.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1229.769 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1276512.673 ops/s
[info]                  ·gc.alloc.rate:                   1200.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1655.742 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1295221.616 ops/s
[info]                  ·gc.alloc.rate:                   1217.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1227.958 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1264539.299 ops/s
[info]                  ·gc.alloc.rate:                   1188.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1680.916 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1276841.373 ±(99.9%) 49268.556 ops/s [Average]
[info]   (min, avg, max) = (1264539.299, 1276841.373, 1295221.616), stdev = 12794.888
[info]   CI (99.9%): [1227572.817, 1326109.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1200.530 ±(99.9%) 46.560 MB/sec [Average]
[info]   (min, avg, max) = (1188.937, 1200.530, 1217.869), stdev = 12.091
[info]   CI (99.9%): [1153.970, 1247.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.060 ±(99.9%) 0.100 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.060, 0.094), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.074 ±(99.9%) 0.122 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.074, 0.115), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1206.981 ±(99.9%) 706.272 MB/sec [Average]
[info]   (min, avg, max) = (1002.046, 1206.981, 1350.341), stdev = 183.417
[info]   CI (99.9%): [500.709, 1913.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1489.617 ±(99.9%) 917.516 B/op [Average]
[info]   (min, avg, max) = (1227.958, 1489.617, 1680.916), stdev = 238.276
[info]   CI (99.9%): [572.101, 2407.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 14.29% complete, ETA 00:26:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2529919.531 ops/s
[info] # Warmup Iteration   2: 3063381.297 ops/s
[info] # Warmup Iteration   3: 3037779.631 ops/s
[info] # Warmup Iteration   4: 3079359.064 ops/s
[info] # Warmup Iteration   5: 3069745.433 ops/s
[info] Iteration   1: 3040287.391 ops/s
[info]                  ·gc.alloc.rate:                   1267.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 518.293 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3044256.555 ops/s
[info]                  ·gc.alloc.rate:                   1268.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 693.219 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3046681.675 ops/s
[info]                  ·gc.alloc.rate:                   1269.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.852 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 695.811 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3100917.226 ops/s
[info]                  ·gc.alloc.rate:                   1292.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.524 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 686.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3086223.336 ops/s
[info]                  ·gc.alloc.rate:                   1286.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 690.626 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   3063673.237 ±(99.9%) 107339.768 ops/s [Average]
[info]   (min, avg, max) = (3040287.391, 3063673.237, 3100917.226), stdev = 27875.797
[info]   CI (99.9%): [2956333.469, 3171013.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1276.837 ±(99.9%) 44.753 MB/sec [Average]
[info]   (min, avg, max) = (1267.046, 1276.837, 1292.389), stdev = 11.622
[info]   CI (99.9%): [1232.084, 1321.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.024 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.024, 0.054), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1278.855 ±(99.9%) 598.276 MB/sec [Average]
[info]   (min, avg, max) = (1001.068, 1278.855, 1354.089), stdev = 155.370
[info]   CI (99.9%): [680.579, 1877.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   656.793 ±(99.9%) 298.457 B/op [Average]
[info]   (min, avg, max) = (518.293, 656.793, 695.811), stdev = 77.508
[info]   CI (99.9%): [358.336, 955.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 15.18% complete, ETA 00:25:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121350.424 ops/s
[info] # Warmup Iteration   2: 221180.368 ops/s
[info] # Warmup Iteration   3: 221307.646 ops/s
[info] # Warmup Iteration   4: 225067.362 ops/s
[info] # Warmup Iteration   5: 228059.622 ops/s
[info] Iteration   1: 225215.323 ops/s
[info]                  ·gc.alloc.rate:                   1379.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.700 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9328.744 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 222702.863 ops/s
[info]                  ·gc.alloc.rate:                   1363.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.553 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9483.166 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 226702.443 ops/s
[info]                  ·gc.alloc.rate:                   1388.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.434 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.122 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9353.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 228235.892 ops/s
[info]                  ·gc.alloc.rate:                   1397.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9318.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 228747.063 ops/s
[info]                  ·gc.alloc.rate:                   1401.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9317.966 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay":
[info]   226320.717 ±(99.9%) 9434.377 ops/s [Average]
[info]   (min, avg, max) = (222702.863, 226320.717, 228747.063), stdev = 2450.078
[info]   CI (99.9%): [216886.339, 235755.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1386.119 ±(99.9%) 58.459 MB/sec [Average]
[info]   (min, avg, max) = (1363.740, 1386.119, 1401.200), stdev = 15.182
[info]   CI (99.9%): [1327.660, 1444.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.378 ±(99.9%) 0.865 B/op [Average]
[info]   (min, avg, max) = (0.144, 0.378, 0.736), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1345.814 ±(99.9%) 30.264 MB/sec [Average]
[info]   (min, avg, max) = (1334.700, 1345.814, 1354.391), stdev = 7.859
[info]   CI (99.9%): [1315.550, 1376.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   9360.222 ±(99.9%) 270.356 B/op [Average]
[info]   (min, avg, max) = (9317.966, 9360.222, 9483.166), stdev = 70.211
[info]   CI (99.9%): [9089.866, 9630.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 16.07% complete, ETA 00:25:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1090347.144 ops/s
[info] # Warmup Iteration   2: 1534759.692 ops/s
[info] # Warmup Iteration   3: 1576816.547 ops/s
[info] # Warmup Iteration   4: 1574498.986 ops/s
[info] # Warmup Iteration   5: 1553021.087 ops/s
[info] Iteration   1: 1560622.350 ops/s
[info]                  ·gc.alloc.rate:                   991.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 999.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1545717.098 ops/s
[info]                  ·gc.alloc.rate:                   982.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1013.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1552508.454 ops/s
[info]                  ·gc.alloc.rate:                   986.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1014.634 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1562923.090 ops/s
[info]                  ·gc.alloc.rate:                   992.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.932 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1011.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1577757.376 ops/s
[info]                  ·gc.alloc.rate:                   1002.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.524 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1005.310 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1559905.673 ±(99.9%) 46540.900 ops/s [Average]
[info]   (min, avg, max) = (1545717.098, 1559905.673, 1577757.376), stdev = 12086.524
[info]   CI (99.9%): [1513364.774, 1606446.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   990.953 ±(99.9%) 29.296 MB/sec [Average]
[info]   (min, avg, max) = (982.085, 990.953, 1002.203), stdev = 7.608
[info]   CI (99.9%): [961.657, 1020.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.071 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.085), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   999.637 ±(99.9%) 25.577 MB/sec [Average]
[info]   (min, avg, max) = (991.047, 999.637, 1007.524), stdev = 6.642
[info]   CI (99.9%): [974.060, 1025.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1008.785 ±(99.9%) 24.061 B/op [Average]
[info]   (min, avg, max) = (999.587, 1008.785, 1014.634), stdev = 6.249
[info]   CI (99.9%): [984.724, 1032.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 16.96% complete, ETA 00:25:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5577796.321 ops/s
[info] # Warmup Iteration   2: 6340939.889 ops/s
[info] # Warmup Iteration   3: 6575127.714 ops/s
[info] # Warmup Iteration   4: 6487774.206 ops/s
[info] # Warmup Iteration   5: 6465884.750 ops/s
[info] Iteration   1: 6464752.288 ops/s
[info]                  ·gc.alloc.rate:                   854.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.380 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.912 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6517577.008 ops/s
[info]                  ·gc.alloc.rate:                   861.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.239 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 6592134.346 ops/s
[info]                  ·gc.alloc.rate:                   871.092 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 159.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6536820.852 ops/s
[info]                  ·gc.alloc.rate:                   863.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.759 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241.452 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6573145.240 ops/s
[info]                  ·gc.alloc.rate:                   868.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 160.541 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   6536885.947 ±(99.9%) 191984.878 ops/s [Average]
[info]   (min, avg, max) = (6464752.288, 6536885.947, 6592134.346), stdev = 49857.863
[info]   CI (99.9%): [6344901.069, 6728870.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   863.806 ±(99.9%) 25.541 MB/sec [Average]
[info]   (min, avg, max) = (854.216, 863.806, 871.092), stdev = 6.633
[info]   CI (99.9%): [838.265, 889.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.012 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.020), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   864.669 ±(99.9%) 690.630 MB/sec [Average]
[info]   (min, avg, max) = (666.048, 864.669, 1002.759), stdev = 179.354
[info]   CI (99.9%): [174.038, 1555.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   208.437 ±(99.9%) 171.019 B/op [Average]
[info]   (min, avg, max) = (159.040, 208.437, 241.452), stdev = 44.413
[info]   CI (99.9%): [37.417, 379.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.140
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 17.86% complete, ETA 00:25:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134005.149 ops/s
[info] # Warmup Iteration   2: 255772.476 ops/s
[info] # Warmup Iteration   3: 265409.705 ops/s
[info] # Warmup Iteration   4: 267053.478 ops/s
[info] # Warmup Iteration   5: 266915.861 ops/s
[info] Iteration   1: 266502.156 ops/s
[info]                  ·gc.alloc.rate:                   1197.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              7072.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.651 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7848.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 268449.015 ops/s
[info]                  ·gc.alloc.rate:                   1206.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              7072.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.792 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5879.687 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 266481.956 ops/s
[info]                  ·gc.alloc.rate:                   1197.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              7072.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.517 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7925.755 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 263523.331 ops/s
[info]                  ·gc.alloc.rate:                   1183.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              7072.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6031.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 268391.635 ops/s
[info]                  ·gc.alloc.rate:                   1205.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              7072.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7918.189 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   266669.619 ±(99.9%) 7723.871 ops/s [Average]
[info]   (min, avg, max) = (263523.331, 266669.619, 268449.015), stdev = 2005.865
[info]   CI (99.9%): [258945.747, 274393.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1198.041 ±(99.9%) 34.826 MB/sec [Average]
[info]   (min, avg, max) = (1183.953, 1198.041, 1206.144), stdev = 9.044
[info]   CI (99.9%): [1163.215, 1232.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7072.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7072.002, 7072.002, 7072.002), stdev = 0.001
[info]   CI (99.9%): [7072.001, 7072.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.083), stdev = 0.011
[info]   CI (99.9%): [0.031, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.442 ±(99.9%) 0.264 B/op [Average]
[info]   (min, avg, max) = (0.366, 0.442, 0.497), stdev = 0.068
[info]   CI (99.9%): [0.179, 0.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.560 ±(99.9%) 704.846 MB/sec [Average]
[info]   (min, avg, max) = (1002.792, 1206.560, 1350.159), stdev = 183.046
[info]   CI (99.9%): [501.714, 1911.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   7120.598 ±(99.9%) 4102.805 B/op [Average]
[info]   (min, avg, max) = (5879.687, 7120.598, 7925.755), stdev = 1065.485
[info]   CI (99.9%): [3017.793, 11223.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.236
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.75% complete, ETA 00:24:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391178.640 ops/s
[info] # Warmup Iteration   2: 569345.813 ops/s
[info] # Warmup Iteration   3: 592630.362 ops/s
[info] # Warmup Iteration   4: 590769.714 ops/s
[info] # Warmup Iteration   5: 587042.252 ops/s
[info] Iteration   1: 581599.782 ops/s
[info]                  ·gc.alloc.rate:                   1891.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1683.013 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4555.829 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 590328.674 ops/s
[info]                  ·gc.alloc.rate:                   1920.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2028.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5407.731 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 590573.998 ops/s
[info]                  ·gc.alloc.rate:                   1920.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.056 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5421.548 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 585103.768 ops/s
[info]                  ·gc.alloc.rate:                   1903.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1698.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4569.185 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 583329.772 ops/s
[info]                  ·gc.alloc.rate:                   1897.387 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.628 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5501.133 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   586187.199 ±(99.9%) 15733.418 ops/s [Average]
[info]   (min, avg, max) = (581599.782, 586187.199, 590573.998), stdev = 4085.919
[info]   CI (99.9%): [570453.781, 601920.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1906.654 ±(99.9%) 51.621 MB/sec [Average]
[info]   (min, avg, max) = (1891.429, 1906.654, 1920.921), stdev = 13.406
[info]   CI (99.9%): [1855.032, 1958.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5120.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.001, 5120.001, 5120.001), stdev = 0.001
[info]   CI (99.9%): [5120.001, 5120.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.179 ±(99.9%) 0.279 B/op [Average]
[info]   (min, avg, max) = (0.111, 0.179, 0.277), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   1896.478 ±(99.9%) 723.611 MB/sec [Average]
[info]   (min, avg, max) = (1683.013, 1896.478, 2038.628), stdev = 187.919
[info]   CI (99.9%): [1172.867, 2620.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5091.085 ±(99.9%) 1863.180 B/op [Average]
[info]   (min, avg, max) = (4555.829, 5091.085, 5501.133), stdev = 483.862
[info]   CI (99.9%): [3227.906, 6954.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (10.000, 11.800, 14.000), stdev = 1.483
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.64% complete, ETA 00:24:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 473679.546 ops/s
[info] # Warmup Iteration   2: 701861.602 ops/s
[info] # Warmup Iteration   3: 713813.431 ops/s
[info] # Warmup Iteration   4: 721483.563 ops/s
[info] # Warmup Iteration   5: 720622.176 ops/s
[info] Iteration   1: 718750.944 ops/s
[info]                  ·gc.alloc.rate:                   891.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2162.438 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 719087.929 ops/s
[info]                  ·gc.alloc.rate:                   891.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2173.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 716091.136 ops/s
[info]                  ·gc.alloc.rate:                   888.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2193.968 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 721900.735 ops/s
[info]                  ·gc.alloc.rate:                   895.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1455.944 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 709055.065 ops/s
[info]                  ·gc.alloc.rate:                   879.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.156 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2231.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   716977.162 ±(99.9%) 18803.987 ops/s [Average]
[info]   (min, avg, max) = (709055.065, 716977.162, 721900.735), stdev = 4883.336
[info]   CI (99.9%): [698173.175, 735781.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   889.201 ±(99.9%) 23.573 MB/sec [Average]
[info]   (min, avg, max) = (879.354, 889.201, 895.597), stdev = 6.122
[info]   CI (99.9%): [865.628, 912.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.128 ±(99.9%) 0.338 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.128, 0.229), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   930.269 ±(99.9%) 565.122 MB/sec [Average]
[info]   (min, avg, max) = (668.002, 930.269, 1005.156), stdev = 146.760
[info]   CI (99.9%): [365.147, 1495.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2043.325 ±(99.9%) 1268.429 B/op [Average]
[info]   (min, avg, max) = (1455.944, 2043.325, 2231.258), stdev = 329.407
[info]   CI (99.9%): [774.895, 3311.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 1.817
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 20.54% complete, ETA 00:24:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5047952.537 ops/s
[info] # Warmup Iteration   2: 5248391.132 ops/s
[info] # Warmup Iteration   3: 5245723.891 ops/s
[info] # Warmup Iteration   4: 5245901.498 ops/s
[info] # Warmup Iteration   5: 5219301.115 ops/s
[info] Iteration   1: 5242408.865 ops/s
[info]                  ·gc.alloc.rate:                   239.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 76.797 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5264631.447 ops/s
[info]                  ·gc.alloc.rate:                   240.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.464 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 96.687 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5241128.760 ops/s
[info]                  ·gc.alloc.rate:                   239.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.421 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.117 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5283865.361 ops/s
[info]                  ·gc.alloc.rate:      241.720 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 5274406.005 ops/s
[info]                  ·gc.alloc.rate:                   241.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 97.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   5261288.087 ±(99.9%) 73460.927 ops/s [Average]
[info]   (min, avg, max) = (5241128.760, 5261288.087, 5283865.361), stdev = 19077.569
[info]   CI (99.9%): [5187827.161, 5334749.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   240.690 ±(99.9%) 3.385 MB/sec [Average]
[info]   (min, avg, max) = (239.777, 240.690, 241.720), stdev = 0.879
[info]   CI (99.9%): [237.305, 244.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.085 ±(99.9%) 0.691 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.085, 0.406), stdev = 0.179
[info]   CI (99.9%): [≈ 0, 0.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.026 ±(99.9%) 0.207 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.121), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   245.611 ±(99.9%) 540.843 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.611, 325.406), stdev = 140.455
[info]   CI (99.9%): [≈ 0, 786.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   73.540 ±(99.9%) 161.836 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 73.540, 97.117), stdev = 42.028
[info]   CI (99.9%): [≈ 0, 235.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 21.43% complete, ETA 00:23:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98387.797 ops/s
[info] # Warmup Iteration   2: 213805.697 ops/s
[info] # Warmup Iteration   3: 218904.770 ops/s
[info] # Warmup Iteration   4: 219104.007 ops/s
[info] # Warmup Iteration   5: 219635.545 ops/s
[info] Iteration   1: 217324.754 ops/s
[info]                  ·gc.alloc.rate:                   1206.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.628 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9623.637 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 219294.740 ops/s
[info]                  ·gc.alloc.rate:                   1217.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7197.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 220773.111 ops/s
[info]                  ·gc.alloc.rate:                   1225.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9566.571 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 218722.143 ops/s
[info]                  ·gc.alloc.rate:                   1214.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9699.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 219503.183 ops/s
[info]                  ·gc.alloc.rate:                   1218.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1012.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7262.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   219123.586 ±(99.9%) 4829.171 ops/s [Average]
[info]   (min, avg, max) = (217324.754, 219123.586, 220773.111), stdev = 1254.120
[info]   CI (99.9%): [214294.415, 223952.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1216.176 ±(99.9%) 26.850 MB/sec [Average]
[info]   (min, avg, max) = (1206.082, 1216.176, 1225.257), stdev = 6.973
[info]   CI (99.9%): [1189.327, 1243.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.329 ±(99.9%) 0.481 B/op [Average]
[info]   (min, avg, max) = (0.151, 0.329, 0.449), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.761 ±(99.9%) 700.170 MB/sec [Average]
[info]   (min, avg, max) = (1002.709, 1206.761, 1347.912), stdev = 181.832
[info]   CI (99.9%): [506.590, 1906.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8669.700 ±(99.9%) 5066.165 B/op [Average]
[info]   (min, avg, max) = (7197.122, 8669.700, 9699.096), stdev = 1315.667
[info]   CI (99.9%): [3603.535, 13735.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 9.000), stdev = 1.095
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 22.32% complete, ETA 00:23:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2963.676 ops/s
[info] # Warmup Iteration   2: 4779.930 ops/s
[info] # Warmup Iteration   3: 4867.503 ops/s
[info] # Warmup Iteration   4: 4937.750 ops/s
[info] # Warmup Iteration   5: 4865.152 ops/s
[info] Iteration   1: 4940.115 ops/s
[info]                  ·gc.alloc.rate:                   1163.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.182 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 422231.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4892.946 ops/s
[info]                  ·gc.alloc.rate:                   1152.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.096 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 321707.573 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4995.763 ops/s
[info]                  ·gc.alloc.rate:                   1175.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.082 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.015 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 316125.624 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4919.590 ops/s
[info]                  ·gc.alloc.rate:                   1159.209 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.083 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 429999.262 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4915.051 ops/s
[info]                  ·gc.alloc.rate:                   1158.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              370792.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.620 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 323893.950 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   4932.693 ±(99.9%) 150.318 ops/s [Average]
[info]   (min, avg, max) = (4892.946, 4932.693, 4995.763), stdev = 39.037
[info]   CI (99.9%): [4782.375, 5083.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1161.800 ±(99.9%) 32.767 MB/sec [Average]
[info]   (min, avg, max) = (1152.663, 1161.800, 1175.290), stdev = 8.510
[info]   CI (99.9%): [1129.032, 1194.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   370792.087 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (370792.082, 370792.087, 370792.096), stdev = 0.006
[info]   CI (99.9%): [370792.062, 370792.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   17.272 ±(99.9%) 42.912 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.272, 26.635), stdev = 11.144
[info]   CI (99.9%): [≈ 0, 60.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1136.640 ±(99.9%) 697.057 MB/sec [Average]
[info]   (min, avg, max) = (1000.076, 1136.640, 1344.309), stdev = 181.023
[info]   CI (99.9%): [439.584, 1833.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   362791.508 ±(99.9%) 223109.556 B/op [Average]
[info]   (min, avg, max) = (316125.624, 362791.508, 429999.262), stdev = 57940.843
[info]   CI (99.9%): [139681.952, 585901.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.673
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 23.21% complete, ETA 00:23:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6399.248 ops/s
[info] # Warmup Iteration   2: 10137.966 ops/s
[info] # Warmup Iteration   3: 10069.647 ops/s
[info] # Warmup Iteration   4: 10153.527 ops/s
[info] # Warmup Iteration   5: 10127.666 ops/s
[info] Iteration   1: 10159.496 ops/s
[info]                  ·gc.alloc.rate:                   257.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39623.419 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 10165.801 ops/s
[info]                  ·gc.alloc.rate:                   257.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.040 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49964.110 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 10144.674 ops/s
[info]                  ·gc.alloc.rate:                   257.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50067.515 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 10181.295 ops/s
[info]                  ·gc.alloc.rate:                   258.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              39888.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50091.538 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 10199.875 ops/s
[info]                  ·gc.alloc.rate:      258.448 MB/sec
[info]                  ·gc.alloc.rate.norm: 39888.040 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10170.228 ±(99.9%) 81.440 ops/s [Average]
[info]   (min, avg, max) = (10144.674, 10170.228, 10199.875), stdev = 21.150
[info]   CI (99.9%): [10088.788, 10251.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   257.731 ±(99.9%) 2.025 MB/sec [Average]
[info]   (min, avg, max) = (257.090, 257.731, 258.448), stdev = 0.526
[info]   CI (99.9%): [255.706, 259.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   39888.042 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (39888.040, 39888.042, 39888.043), stdev = 0.002
[info]   CI (99.9%): [39888.035, 39888.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.162 ±(99.9%) 1.303 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.162, 0.766), stdev = 0.338
[info]   CI (99.9%): [≈ 0, 1.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   25.009 ±(99.9%) 201.717 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 25.009, 118.585), stdev = 52.385
[info]   CI (99.9%): [≈ 0, 226.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   245.039 ±(99.9%) 539.315 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.039, 324.035), stdev = 140.058
[info]   CI (99.9%): [≈ 0, 784.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   37949.316 ±(99.9%) 83515.327 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37949.316, 50091.538), stdev = 21688.665
[info]   CI (99.9%): [≈ 0, 121464.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 4.000), stdev = 1.483
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 24.11% complete, ETA 00:23:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13204.488 ops/s
[info] # Warmup Iteration   2: 17762.591 ops/s
[info] # Warmup Iteration   3: 17782.052 ops/s
[info] # Warmup Iteration   4: 17720.951 ops/s
[info] # Warmup Iteration   5: 17788.731 ops/s
[info] Iteration   1: 17848.485 ops/s
[info]                  ·gc.alloc.rate:                   304.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28546.266 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 17780.169 ops/s
[info]                  ·gc.alloc.rate:                   303.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.674 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28655.417 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 17640.362 ops/s
[info]                  ·gc.alloc.rate:                   301.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29031.363 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17866.500 ops/s
[info]                  ·gc.alloc.rate:                   305.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28665.811 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17798.440 ops/s
[info]                  ·gc.alloc.rate:                   304.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.023 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28891.503 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17786.791 ±(99.9%) 343.231 ops/s [Average]
[info]   (min, avg, max) = (17640.362, 17786.791, 17866.500), stdev = 89.136
[info]   CI (99.9%): [17443.560, 18130.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   303.918 ±(99.9%) 5.835 MB/sec [Average]
[info]   (min, avg, max) = (301.425, 303.918, 305.320), stdev = 1.515
[info]   CI (99.9%): [298.083, 309.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   26896.024 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (26896.023, 26896.024, 26896.030), stdev = 0.003
[info]   CI (99.9%): [26896.012, 26896.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.107 ±(99.9%) 0.797 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.107, 0.474), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 0.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   9.473 ±(99.9%) 70.288 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9.473, 41.845), stdev = 18.254
[info]   CI (99.9%): [≈ 0, 79.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   324.952 ±(99.9%) 5.101 MB/sec [Average]
[info]   (min, avg, max) = (323.589, 324.952, 326.729), stdev = 1.325
[info]   CI (99.9%): [319.850, 330.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   28758.072 ±(99.9%) 761.425 B/op [Average]
[info]   (min, avg, max) = (28546.266, 28758.072, 29031.363), stdev = 197.740
[info]   CI (99.9%): [27996.647, 29519.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 25.00% complete, ETA 00:22:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 987.825 ops/s
[info] # Warmup Iteration   2: 1924.745 ops/s
[info] # Warmup Iteration   3: 1943.707 ops/s
[info] # Warmup Iteration   4: 1913.581 ops/s
[info] # Warmup Iteration   5: 1968.446 ops/s
[info] Iteration   1: 1957.799 ops/s
[info]                  ·gc.alloc.rate:                   1222.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              982976.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.454 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.323 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 801017.858 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1956.588 ops/s
[info]                  ·gc.alloc.rate:                   1222.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              982976.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     100.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1073746.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1953.071 ops/s
[info]                  ·gc.alloc.rate:                   1219.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              982976.225 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     67.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.535 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 811117.003 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1969.340 ops/s
[info]                  ·gc.alloc.rate:                   1230.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              982976.223 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.545 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1073807.692 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1968.346 ops/s
[info]                  ·gc.alloc.rate:                   1229.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              982976.207 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.608 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1079729.731 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1961.029 ±(99.9%) 28.302 ops/s [Average]
[info]   (min, avg, max) = (1953.071, 1961.029, 1969.340), stdev = 7.350
[info]   CI (99.9%): [1932.727, 1989.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1224.995 ±(99.9%) 18.822 MB/sec [Average]
[info]   (min, avg, max) = (1219.799, 1224.995, 1230.812), stdev = 4.888
[info]   CI (99.9%): [1206.173, 1243.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   982976.221 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (982976.207, 982976.221, 982976.225), stdev = 0.008
[info]   CI (99.9%): [982976.191, 982976.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   53.486 ±(99.9%) 115.645 B/op [Average]
[info]   (min, avg, max) = (33.200, 53.486, 100.413), stdev = 30.033
[info]   CI (99.9%): [≈ 0, 169.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.600 ±(99.9%) 721.658 MB/sec [Average]
[info]   (min, avg, max) = (996.323, 1206.600, 1350.608), stdev = 187.412
[info]   CI (99.9%): [484.942, 1928.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   967883.678 ±(99.9%) 569050.013 B/op [Average]
[info]   (min, avg, max) = (801017.858, 967883.678, 1079729.731), stdev = 147780.481
[info]   CI (99.9%): [398833.665, 1536933.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.304
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 25.89% complete, ETA 00:22:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3222032.606 ops/s
[info] # Warmup Iteration   2: 3453453.402 ops/s
[info] # Warmup Iteration   3: 3527130.177 ops/s
[info] # Warmup Iteration   4: 3549810.308 ops/s
[info] # Warmup Iteration   5: 3556157.237 ops/s
[info] Iteration   1: 3505389.103 ops/s
[info]                  ·gc.alloc.rate:                   1051.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.126 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 447.732 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3532908.767 ops/s
[info]                  ·gc.alloc.rate:                   1059.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 446.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3536527.478 ops/s
[info]                  ·gc.alloc.rate:                   1060.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 447.340 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3546869.114 ops/s
[info]                  ·gc.alloc.rate:                   1063.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 447.506 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3468907.430 ops/s
[info]                  ·gc.alloc.rate:                   1040.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.945 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 459.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3518120.378 ±(99.9%) 121280.113 ops/s [Average]
[info]   (min, avg, max) = (3468907.430, 3518120.378, 3546869.114), stdev = 31496.060
[info]   CI (99.9%): [3396840.265, 3639400.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1055.014 ±(99.9%) 36.068 MB/sec [Average]
[info]   (min, avg, max) = (1040.407, 1055.014, 1063.576), stdev = 9.367
[info]   CI (99.9%): [1018.946, 1091.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.022 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.022, 0.037), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1004.723 ±(99.9%) 22.530 MB/sec [Average]
[info]   (min, avg, max) = (997.126, 1004.723, 1011.945), stdev = 5.851
[info]   CI (99.9%): [982.194, 1027.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   449.534 ±(99.9%) 20.727 B/op [Average]
[info]   (min, avg, max) = (446.006, 449.534, 459.088), stdev = 5.383
[info]   CI (99.9%): [428.807, 470.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 1.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.79% complete, ETA 00:22:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 148323.556 ops/s
[info] # Warmup Iteration   2: 254586.070 ops/s
[info] # Warmup Iteration   3: 257660.096 ops/s
[info] # Warmup Iteration   4: 257962.848 ops/s
[info] # Warmup Iteration   5: 254763.227 ops/s
[info] Iteration   1: 255336.619 ops/s
[info]                  ·gc.alloc.rate:                   1411.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.705 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8240.468 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 255936.904 ops/s
[info]                  ·gc.alloc.rate:                   1415.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.568 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8262.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 253818.533 ops/s
[info]                  ·gc.alloc.rate:                   1403.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.183 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8359.861 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 255213.767 ops/s
[info]                  ·gc.alloc.rate:                   1411.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.430 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8338.462 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 253706.848 ops/s
[info]                  ·gc.alloc.rate:                   1402.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              8704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8405.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   254802.534 ±(99.9%) 3807.049 ops/s [Average]
[info]   (min, avg, max) = (253706.848, 254802.534, 255936.904), stdev = 988.679
[info]   CI (99.9%): [250995.485, 258609.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1409.128 ±(99.9%) 21.301 MB/sec [Average]
[info]   (min, avg, max) = (1402.912, 1409.128, 1415.432), stdev = 5.532
[info]   CI (99.9%): [1387.827, 1430.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8704.002, 8704.002, 8704.002), stdev = 0.001
[info]   CI (99.9%): [8704.001, 8704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.360 ±(99.9%) 0.542 B/op [Average]
[info]   (min, avg, max) = (0.257, 0.360, 0.516), stdev = 0.141
[info]   CI (99.9%): [≈ 0, 0.902] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1347.123 ±(99.9%) 27.789 MB/sec [Average]
[info]   (min, avg, max) = (1336.705, 1347.123, 1354.730), stdev = 7.217
[info]   CI (99.9%): [1319.335, 1374.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8321.189 ±(99.9%) 264.263 B/op [Average]
[info]   (min, avg, max) = (8240.468, 8321.189, 8405.071), stdev = 68.628
[info]   CI (99.9%): [8056.927, 8585.452] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 27.68% complete, ETA 00:22:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 334303.428 ops/s
[info] # Warmup Iteration   2: 489831.807 ops/s
[info] # Warmup Iteration   3: 505885.998 ops/s
[info] # Warmup Iteration   4: 511854.603 ops/s
[info] # Warmup Iteration   5: 511733.916 ops/s
[info] Iteration   1: 502428.707 ops/s
[info]                  ·gc.alloc.rate:                   1815.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5270.851 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 507686.243 ops/s
[info]                  ·gc.alloc.rate:                   1834.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.535 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5234.692 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 503562.277 ops/s
[info]                  ·gc.alloc.rate:                   1819.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.550 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6354.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 507150.314 ops/s
[info]                  ·gc.alloc.rate:                   1833.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1697.522 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5267.211 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 502007.693 ops/s
[info]                  ·gc.alloc.rate:                   1814.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              5688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2039.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6391.693 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   504567.047 ±(99.9%) 10284.718 ops/s [Average]
[info]   (min, avg, max) = (502007.693, 504567.047, 507686.243), stdev = 2670.909
[info]   CI (99.9%): [494282.328, 514851.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1823.559 ±(99.9%) 37.237 MB/sec [Average]
[info]   (min, avg, max) = (1814.554, 1823.559, 1834.757), stdev = 9.670
[info]   CI (99.9%): [1786.322, 1860.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5688.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5688.001, 5688.001, 5688.001), stdev = 0.001
[info]   CI (99.9%): [5688.001, 5688.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.247 ±(99.9%) 0.210 B/op [Average]
[info]   (min, avg, max) = (0.194, 0.247, 0.325), stdev = 0.055
[info]   CI (99.9%): [0.037, 0.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1828.067 ±(99.9%) 730.533 MB/sec [Average]
[info]   (min, avg, max) = (1682.685, 1828.067, 2039.042), stdev = 189.717
[info]   CI (99.9%): [1097.534, 2558.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5703.702 ±(99.9%) 2353.426 B/op [Average]
[info]   (min, avg, max) = (5234.692, 5703.702, 6391.693), stdev = 611.177
[info]   CI (99.9%): [3350.275, 8057.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   69.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 13.800, 20.000), stdev = 5.119
[info]   CI (99.9%): [69.000, 69.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 28.57% complete, ETA 00:21:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 312588.732 ops/s
[info] # Warmup Iteration   2: 538849.310 ops/s
[info] # Warmup Iteration   3: 539533.968 ops/s
[info] # Warmup Iteration   4: 542530.183 ops/s
[info] # Warmup Iteration   5: 539793.303 ops/s
[info] Iteration   1: 529080.296 ops/s
[info]                  ·gc.alloc.rate:                   615.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1939.962 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 542779.871 ops/s
[info]                  ·gc.alloc.rate:                   631.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 947.381 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 544959.172 ops/s
[info]                  ·gc.alloc.rate:                   634.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1894.903 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 543196.464 ops/s
[info]                  ·gc.alloc.rate:                   632.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.811 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1908.885 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 543159.323 ops/s
[info]                  ·gc.alloc.rate:                   632.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.397 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1916.662 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   540635.025 ±(99.9%) 25084.176 ops/s [Average]
[info]   (min, avg, max) = (529080.296, 540635.025, 544959.172), stdev = 6514.281
[info]   CI (99.9%): [515550.849, 565719.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   629.263 ±(99.9%) 29.376 MB/sec [Average]
[info]   (min, avg, max) = (615.723, 629.263, 634.275), stdev = 7.629
[info]   CI (99.9%): [599.888, 658.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.072 ±(99.9%) 0.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.181), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   591.004 ±(99.9%) 568.978 MB/sec [Average]
[info]   (min, avg, max) = (326.753, 591.004, 661.397), stdev = 147.762
[info]   CI (99.9%): [22.026, 1159.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1721.558 ±(99.9%) 1667.662 B/op [Average]
[info]   (min, avg, max) = (947.381, 1721.558, 1939.962), stdev = 433.086
[info]   CI (99.9%): [53.897, 3389.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 5.000), stdev = 1.414
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 29.46% complete, ETA 00:21:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2858562.778 ops/s
[info] # Warmup Iteration   2: 3190088.684 ops/s
[info] # Warmup Iteration   3: 3235414.421 ops/s
[info] # Warmup Iteration   4: 3242752.301 ops/s
[info] # Warmup Iteration   5: 3220761.740 ops/s
[info] Iteration   1: 3180149.159 ops/s
[info]                  ·gc.alloc.rate:                   1260.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 661.116 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   2: 3275090.878 ops/s
[info]                  ·gc.alloc.rate:                   1298.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.129 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 483.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3210149.395 ops/s
[info]                  ·gc.alloc.rate:                   1272.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 660.359 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 3202602.386 ops/s
[info]                  ·gc.alloc.rate:                   1269.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 664.223 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3203454.844 ops/s
[info]                  ·gc.alloc.rate:                   1269.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 665.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   3214289.333 ±(99.9%) 137946.186 ops/s [Average]
[info]   (min, avg, max) = (3180149.159, 3214289.333, 3275090.878), stdev = 35824.186
[info]   CI (99.9%): [3076343.147, 3352235.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1274.221 ±(99.9%) 54.944 MB/sec [Average]
[info]   (min, avg, max) = (1260.616, 1274.221, 1298.438), stdev = 14.269
[info]   CI (99.9%): [1219.277, 1329.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.037 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.037, 0.060), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1278.790 ±(99.9%) 587.558 MB/sec [Average]
[info]   (min, avg, max) = (1006.129, 1278.790, 1354.192), stdev = 152.587
[info]   CI (99.9%): [691.232, 1866.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   626.918 ±(99.9%) 308.773 B/op [Average]
[info]   (min, avg, max) = (483.523, 626.918, 665.368), stdev = 80.187
[info]   CI (99.9%): [318.145, 935.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 21.000), stdev = 6.768
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 30.36% complete, ETA 00:21:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 69056.622 ops/s
[info] # Warmup Iteration   2: 162895.036 ops/s
[info] # Warmup Iteration   3: 161811.490 ops/s
[info] # Warmup Iteration   4: 164845.933 ops/s
[info] # Warmup Iteration   5: 162880.091 ops/s
[info] Iteration   1: 166271.252 ops/s
[info]                  ·gc.alloc.rate:                   1150.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.510 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12566.972 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 163925.319 ops/s
[info]                  ·gc.alloc.rate:                   1133.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9609.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 164119.209 ops/s
[info]                  ·gc.alloc.rate:                   1135.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9636.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 164361.884 ops/s
[info]                  ·gc.alloc.rate:                   1136.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12881.636 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 165711.279 ops/s
[info]                  ·gc.alloc.rate:                   1146.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.727 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9609.922 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   164877.788 ±(99.9%) 4031.813 ops/s [Average]
[info]   (min, avg, max) = (163925.319, 164877.788, 166271.252), stdev = 1047.049
[info]   CI (99.9%): [160845.975, 168909.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1140.526 ±(99.9%) 27.842 MB/sec [Average]
[info]   (min, avg, max) = (1133.971, 1140.526, 1150.152), stdev = 7.230
[info]   CI (99.9%): [1112.684, 1168.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10888.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10888.002, 10888.003, 10888.003), stdev = 0.001
[info]   CI (99.9%): [10888.002, 10888.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.478 ±(99.9%) 1.394 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.478, 0.799), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.982 ±(99.9%) 697.729 MB/sec [Average]
[info]   (min, avg, max) = (1000.791, 1137.982, 1345.113), stdev = 181.198
[info]   CI (99.9%): [440.253, 1835.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10860.814 ±(99.9%) 6564.556 B/op [Average]
[info]   (min, avg, max) = (9609.255, 10860.814, 12881.636), stdev = 1704.794
[info]   CI (99.9%): [4296.258, 17425.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.25% complete, ETA 00:20:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 278645.319 ops/s
[info] # Warmup Iteration   2: 473149.538 ops/s
[info] # Warmup Iteration   3: 494146.968 ops/s
[info] # Warmup Iteration   4: 486757.139 ops/s
[info] # Warmup Iteration   5: 492853.309 ops/s
[info] Iteration   1: 490330.757 ops/s
[info]                  ·gc.alloc.rate:                   1703.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1675.886 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5381.907 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 495000.275 ops/s
[info]                  ·gc.alloc.rate:                   1720.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.872 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6432.046 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 502479.061 ops/s
[info]                  ·gc.alloc.rate:                   1746.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.578 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5299.579 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 498939.818 ops/s
[info]                  ·gc.alloc.rate:                   1734.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1695.241 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5347.733 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 501023.834 ops/s
[info]                  ·gc.alloc.rate:                   1741.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1698.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5335.881 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce":
[info]   497554.749 ±(99.9%) 18953.738 ops/s [Average]
[info]   (min, avg, max) = (490330.757, 497554.749, 502479.061), stdev = 4922.225
[info]   CI (99.9%): [478601.011, 516508.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1729.570 ±(99.9%) 66.563 MB/sec [Average]
[info]   (min, avg, max) = (1703.940, 1729.570, 1746.614), stdev = 17.286
[info]   CI (99.9%): [1663.008, 1796.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5472.001, 5472.001, 5472.001), stdev = 0.001
[info]   CI (99.9%): [5472.001, 5472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.145 ±(99.9%) 0.329 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.145, 0.199), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   1756.795 ±(99.9%) 573.718 MB/sec [Average]
[info]   (min, avg, max) = (1675.886, 1756.795, 2022.872), stdev = 148.993
[info]   CI (99.9%): [1183.077, 2330.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5559.429 ±(99.9%) 1881.784 B/op [Average]
[info]   (min, avg, max) = (5299.579, 5559.429, 6432.046), stdev = 488.693
[info]   CI (99.9%): [3677.645, 7441.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 10.000), stdev = 1.517
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.14% complete, ETA 00:20:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 477124.099 ops/s
[info] # Warmup Iteration   2: 868610.253 ops/s
[info] # Warmup Iteration   3: 885799.952 ops/s
[info] # Warmup Iteration   4: 901544.408 ops/s
[info] # Warmup Iteration   5: 888017.599 ops/s
[info] Iteration   1: 900001.157 ops/s
[info]                  ·gc.alloc.rate:                   1061.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1320.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2308.823 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 895268.093 ops/s
[info]                  ·gc.alloc.rate:                   1055.679 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1753.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 884687.975 ops/s
[info]                  ·gc.alloc.rate:                   1043.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1781.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 885362.998 ops/s
[info]                  ·gc.alloc.rate:                   1044.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1786.895 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 880592.300 ops/s
[info]                  ·gc.alloc.rate:                   1038.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1802.575 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson":
[info]   889182.504 ±(99.9%) 31203.208 ops/s [Average]
[info]   (min, avg, max) = (880592.300, 889182.504, 900001.157), stdev = 8103.374
[info]   CI (99.9%): [857979.297, 920385.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1048.442 ±(99.9%) 36.738 MB/sec [Average]
[info]   (min, avg, max) = (1038.278, 1048.442, 1061.114), stdev = 9.541
[info]   CI (99.9%): [1011.704, 1085.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.000), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.088 ±(99.9%) 0.127 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.088, 0.112), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1066.337 ±(99.9%) 546.278 MB/sec [Average]
[info]   (min, avg, max) = (997.106, 1066.337, 1320.002), stdev = 141.867
[info]   CI (99.9%): [520.060, 1612.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1886.488 ±(99.9%) 911.718 B/op [Average]
[info]   (min, avg, max) = (1753.023, 1886.488, 2308.823), stdev = 236.770
[info]   CI (99.9%): [974.770, 2798.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.04% complete, ETA 00:20:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3239022.495 ops/s
[info] # Warmup Iteration   2: 3571819.905 ops/s
[info] # Warmup Iteration   3: 3667192.834 ops/s
[info] # Warmup Iteration   4: 3650633.509 ops/s
[info] # Warmup Iteration   5: 3636151.102 ops/s
[info] Iteration   1: 3631434.974 ops/s
[info]                  ·gc.alloc.rate:                   904.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 429.428 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3664446.405 ops/s
[info]                  ·gc.alloc.rate:                   912.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.214 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 428.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3659228.236 ops/s
[info]                  ·gc.alloc.rate:                   911.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.089 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 430.627 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3690128.918 ops/s
[info]                  ·gc.alloc.rate:                   919.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.507 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 285.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3677562.897 ops/s
[info]                  ·gc.alloc.rate:                   915.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 431.329 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   3664560.286 ±(99.9%) 84988.362 ops/s [Average]
[info]   (min, avg, max) = (3631434.974, 3664560.286, 3690128.918), stdev = 22071.208
[info]   CI (99.9%): [3579571.924, 3749548.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   912.684 ±(99.9%) 21.475 MB/sec [Average]
[info]   (min, avg, max) = (904.322, 912.684, 919.162), stdev = 5.577
[info]   CI (99.9%): [891.209, 934.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.032 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.032, 0.045), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   933.262 ±(99.9%) 568.257 MB/sec [Average]
[info]   (min, avg, max) = (669.507, 933.262, 1007.833), stdev = 147.575
[info]   CI (99.9%): [365.005, 1501.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   401.042 ±(99.9%) 248.691 B/op [Average]
[info]   (min, avg, max) = (285.528, 401.042, 431.329), stdev = 64.584
[info]   CI (99.9%): [152.351, 649.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 12.000), stdev = 3.847
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 33.93% complete, ETA 00:20:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157116.575 ops/s
[info] # Warmup Iteration   2: 262147.217 ops/s
[info] # Warmup Iteration   3: 265897.994 ops/s
[info] # Warmup Iteration   4: 265992.239 ops/s
[info] # Warmup Iteration   5: 264038.367 ops/s
[info] Iteration   1: 268500.999 ops/s
[info]                  ·gc.alloc.rate:                   1458.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.556 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7836.587 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 265946.247 ops/s
[info]                  ·gc.alloc.rate:                   1444.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1679.547 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9940.165 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 264255.418 ops/s
[info]                  ·gc.alloc.rate:                   1435.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.244 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8036.122 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 267050.345 ops/s
[info]                  ·gc.alloc.rate:                   1450.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.754 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7973.469 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 268162.941 ops/s
[info]                  ·gc.alloc.rate:                   1457.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              8552.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.483 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7955.990 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay":
[info]   266783.190 ±(99.9%) 6673.970 ops/s [Average]
[info]   (min, avg, max) = (264255.418, 266783.190, 268500.999), stdev = 1733.209
[info]   CI (99.9%): [260109.220, 273457.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1449.472 ±(99.9%) 35.880 MB/sec [Average]
[info]   (min, avg, max) = (1435.859, 1449.472, 1458.572), stdev = 9.318
[info]   CI (99.9%): [1413.592, 1485.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8552.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8552.002, 8552.002, 8552.002), stdev = 0.001
[info]   CI (99.9%): [8552.001, 8552.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.417 ±(99.9%) 0.784 B/op [Average]
[info]   (min, avg, max) = (0.244, 0.417, 0.732), stdev = 0.204
[info]   CI (99.9%): [≈ 0, 1.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1414.717 ±(99.9%) 570.749 MB/sec [Average]
[info]   (min, avg, max) = (1336.556, 1414.717, 1679.547), stdev = 148.222
[info]   CI (99.9%): [843.968, 1985.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8348.467 ±(99.9%) 3437.518 B/op [Average]
[info]   (min, avg, max) = (7836.587, 8348.467, 9940.165), stdev = 892.713
[info]   CI (99.9%): [4910.948, 11785.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 11.000), stdev = 2.168
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 34.82% complete, ETA 00:19:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 332106.482 ops/s
[info] # Warmup Iteration   2: 529601.584 ops/s
[info] # Warmup Iteration   3: 543240.455 ops/s
[info] # Warmup Iteration   4: 536150.443 ops/s
[info] # Warmup Iteration   5: 539594.229 ops/s
[info] Iteration   1: 539056.274 ops/s
[info]                  ·gc.alloc.rate:                   2059.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2023.655 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5910.193 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 536060.784 ops/s
[info]                  ·gc.alloc.rate:                   2048.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2031.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5965.974 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 543413.451 ops/s
[info]                  ·gc.alloc.rate:                   2076.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.181 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2036.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5899.981 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 545750.533 ops/s
[info]                  ·gc.alloc.rate:                   2086.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.721 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5879.512 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 538942.053 ops/s
[info]                  ·gc.alloc.rate:                   2060.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              6016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2042.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5963.411 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   540644.619 ±(99.9%) 14934.580 ops/s [Average]
[info]   (min, avg, max) = (536060.784, 540644.619, 545750.533), stdev = 3878.463
[info]   CI (99.9%): [525710.039, 555579.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   2066.284 ±(99.9%) 57.409 MB/sec [Average]
[info]   (min, avg, max) = (2048.696, 2066.284, 2086.049), stdev = 14.909
[info]   CI (99.9%): [2008.875, 2123.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6016.001, 6016.001, 6016.001), stdev = 0.001
[info]   CI (99.9%): [6016.001, 6016.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.022, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.170 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (0.122, 0.170, 0.183), stdev = 0.027
[info]   CI (99.9%): [0.066, 0.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   2034.554 ±(99.9%) 27.579 MB/sec [Average]
[info]   (min, avg, max) = (2023.655, 2034.554, 2042.044), stdev = 7.162
[info]   CI (99.9%): [2006.975, 2062.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5923.814 ±(99.9%) 149.899 B/op [Average]
[info]   (min, avg, max) = (5879.512, 5923.814, 5965.974), stdev = 38.928
[info]   CI (99.9%): [5773.915, 6073.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.400, 13.000), stdev = 1.817
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 35.71% complete, ETA 00:19:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2436983.083 ops/s
[info] # Warmup Iteration   2: 2820679.457 ops/s
[info] # Warmup Iteration   3: 2813348.614 ops/s
[info] # Warmup Iteration   4: 2837726.627 ops/s
[info] # Warmup Iteration   5: 2813989.146 ops/s
[info] Iteration   1: 2789331.656 ops/s
[info]                  ·gc.alloc.rate:                   1800.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1685.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 950.946 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 2756673.070 ops/s
[info]                  ·gc.alloc.rate:                   1780.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1689.513 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 964.274 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2860145.428 ops/s
[info]                  ·gc.alloc.rate:                   1846.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2034.426 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1119.645 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2850857.920 ops/s
[info]                  ·gc.alloc.rate:                   1840.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1698.544 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 937.775 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2841958.233 ops/s
[info]                  ·gc.alloc.rate:                   1834.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1699.893 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 941.450 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   2819793.261 ±(99.9%) 172170.127 ops/s [Average]
[info]   (min, avg, max) = (2756673.070, 2819793.261, 2860145.428), stdev = 44712.035
[info]   CI (99.9%): [2647623.135, 2991963.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1820.257 ±(99.9%) 110.209 MB/sec [Average]
[info]   (min, avg, max) = (1780.144, 1820.257, 1846.101), stdev = 28.621
[info]   CI (99.9%): [1710.049, 1930.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.044 ±(99.9%) 0.075 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.044, 0.071), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1761.483 ±(99.9%) 588.015 MB/sec [Average]
[info]   (min, avg, max) = (1685.038, 1761.483, 2034.426), stdev = 152.706
[info]   CI (99.9%): [1173.468, 2349.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   982.818 ±(99.9%) 297.159 B/op [Average]
[info]   (min, avg, max) = (937.775, 982.818, 1119.645), stdev = 77.171
[info]   CI (99.9%): [685.659, 1279.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 15.000), stdev = 2.864
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.61% complete, ETA 00:19:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71981.200 ops/s
[info] # Warmup Iteration   2: 165174.416 ops/s
[info] # Warmup Iteration   3: 169062.235 ops/s
[info] # Warmup Iteration   4: 167590.944 ops/s
[info] # Warmup Iteration   5: 165567.545 ops/s
[info] Iteration   1: 169920.459 ops/s
[info]                  ·gc.alloc.rate:                   1210.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              11216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12308.606 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 169332.331 ops/s
[info]                  ·gc.alloc.rate:                   1206.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              11216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9321.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 168980.067 ops/s
[info]                  ·gc.alloc.rate:                   1204.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              11216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.774 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12498.558 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 169786.430 ops/s
[info]                  ·gc.alloc.rate:                   1209.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              11216.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.909 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9361.348 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 168940.014 ops/s
[info]                  ·gc.alloc.rate:                   1203.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              11216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.269 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12579.313 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   169391.860 ±(99.9%) 1735.339 ops/s [Average]
[info]   (min, avg, max) = (168940.014, 169391.860, 169920.459), stdev = 450.662
[info]   CI (99.9%): [167656.521, 171127.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1207.078 ±(99.9%) 12.372 MB/sec [Average]
[info]   (min, avg, max) = (1203.930, 1207.078, 1210.782), stdev = 3.213
[info]   CI (99.9%): [1194.706, 1219.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11216.002, 11216.002, 11216.003), stdev = 0.001
[info]   CI (99.9%): [11216.002, 11216.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.425 ±(99.9%) 0.971 B/op [Average]
[info]   (min, avg, max) = (0.193, 0.425, 0.774), stdev = 0.252
[info]   CI (99.9%): [≈ 0, 1.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1206.687 ±(99.9%) 704.964 MB/sec [Average]
[info]   (min, avg, max) = (1002.755, 1206.687, 1350.269), stdev = 183.077
[info]   CI (99.9%): [501.723, 1911.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   11213.796 ±(99.9%) 6593.350 B/op [Average]
[info]   (min, avg, max) = (9321.157, 11213.796, 12579.313), stdev = 1712.272
[info]   CI (99.9%): [4620.446, 17807.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 12.000), stdev = 2.302
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.50% complete, ETA 00:19:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79573.832 ops/s
[info] # Warmup Iteration   2: 677665.809 ops/s
[info] # Warmup Iteration   3: 697218.584 ops/s
[info] # Warmup Iteration   4: 696472.212 ops/s
[info] # Warmup Iteration   5: 690790.092 ops/s
[info] Iteration   1: 686279.355 ops/s
[info]                  ·gc.alloc.rate:                   889.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.885 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2254.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 690776.716 ops/s
[info]                  ·gc.alloc.rate:                   895.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.452 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2254.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 690703.835 ops/s
[info]                  ·gc.alloc.rate:                   895.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.689 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1510.293 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 683358.898 ops/s
[info]                  ·gc.alloc.rate:                   885.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.271 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2297.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 688477.594 ops/s
[info]                  ·gc.alloc.rate:                   892.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2290.637 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   687919.280 ±(99.9%) 12133.630 ops/s [Average]
[info]   (min, avg, max) = (683358.898, 687919.280, 690776.716), stdev = 3151.065
[info]   CI (99.9%): [675785.650, 700052.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   891.655 ±(99.9%) 15.876 MB/sec [Average]
[info]   (min, avg, max) = (885.568, 891.655, 895.313), stdev = 4.123
[info]   CI (99.9%): [875.779, 907.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.133 ±(99.9%) 0.238 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.133, 0.190), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   926.941 ±(99.9%) 569.545 MB/sec [Average]
[info]   (min, avg, max) = (662.689, 926.941, 1002.410), stdev = 147.909
[info]   CI (99.9%): [357.397, 1496.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2121.359 ±(99.9%) 1317.617 B/op [Average]
[info]   (min, avg, max) = (1510.293, 2121.359, 2297.319), stdev = 342.181
[info]   CI (99.9%): [803.742, 3438.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.39% complete, ETA 00:18:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2082735.123 ops/s
[info] # Warmup Iteration   2: 2469762.491 ops/s
[info] # Warmup Iteration   3: 2504064.318 ops/s
[info] # Warmup Iteration   4: 2505209.577 ops/s
[info] # Warmup Iteration   5: 2513762.079 ops/s
[info] Iteration   1: 2530309.300 ops/s
[info]                  ·gc.alloc.rate:                   1196.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 828.683 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2541231.893 ops/s
[info]                  ·gc.alloc.rate:                   1201.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 621.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2545458.359 ops/s
[info]                  ·gc.alloc.rate:                   1203.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.159 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 831.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2521153.886 ops/s
[info]                  ·gc.alloc.rate:                   1191.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 631.665 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2483259.972 ops/s
[info]                  ·gc.alloc.rate:                   1173.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 857.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   2524282.682 ±(99.9%) 95583.216 ops/s [Average]
[info]   (min, avg, max) = (2483259.972, 2524282.682, 2545458.359), stdev = 24822.658
[info]   CI (99.9%): [2428699.466, 2619865.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1193.149 ±(99.9%) 45.141 MB/sec [Average]
[info]   (min, avg, max) = (1173.799, 1193.149, 1203.235), stdev = 11.723
[info]   CI (99.9%): [1148.008, 1238.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.042, 0.064), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1208.708 ±(99.9%) 707.905 MB/sec [Average]
[info]   (min, avg, max) = (1003.331, 1208.708, 1352.167), stdev = 183.841
[info]   CI (99.9%): [500.803, 1916.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   754.012 ±(99.9%) 450.153 B/op [Average]
[info]   (min, avg, max) = (621.519, 754.012, 857.057), stdev = 116.903
[info]   CI (99.9%): [303.859, 1204.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 2.950
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.29% complete, ETA 00:18:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138405.828 ops/s
[info] # Warmup Iteration   2: 224329.425 ops/s
[info] # Warmup Iteration   3: 227188.399 ops/s
[info] # Warmup Iteration   4: 227871.848 ops/s
[info] # Warmup Iteration   5: 224486.526 ops/s
[info] Iteration   1: 226950.412 ops/s
[info]                  ·gc.alloc.rate:                   1241.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9230.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 226772.018 ops/s
[info]                  ·gc.alloc.rate:                   1240.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.441 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9289.927 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 225684.624 ops/s
[info]                  ·gc.alloc.rate:                   1234.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.171 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7030.860 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 223067.813 ops/s
[info]                  ·gc.alloc.rate:                   1219.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1347.950 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9511.831 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 223606.573 ops/s
[info]                  ·gc.alloc.rate:                   1222.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              8608.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.236 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9517.889 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   225216.288 ±(99.9%) 6902.741 ops/s [Average]
[info]   (min, avg, max) = (223067.813, 225216.288, 226950.412), stdev = 1792.620
[info]   CI (99.9%): [218313.547, 232119.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1231.685 ±(99.9%) 37.694 MB/sec [Average]
[info]   (min, avg, max) = (1219.866, 1231.685, 1241.078), stdev = 9.789
[info]   CI (99.9%): [1193.991, 1269.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8608.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8608.002, 8608.002, 8608.002), stdev = 0.001
[info]   CI (99.9%): [8608.002, 8608.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.349 ±(99.9%) 0.307 B/op [Average]
[info]   (min, avg, max) = (0.289, 0.349, 0.440), stdev = 0.080
[info]   CI (99.9%): [0.042, 0.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1275.512 ±(99.9%) 576.369 MB/sec [Average]
[info]   (min, avg, max) = (1008.171, 1275.512, 1352.236), stdev = 149.681
[info]   CI (99.9%): [699.143, 1851.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8916.111 ±(99.9%) 4088.527 B/op [Average]
[info]   (min, avg, max) = (7030.860, 8916.111, 9517.889), stdev = 1061.778
[info]   CI (99.9%): [4827.584, 13004.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 13.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 40.18% complete, ETA 00:18:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161884.639 ops/s
[info] # Warmup Iteration   2: 479349.660 ops/s
[info] # Warmup Iteration   3: 485921.020 ops/s
[info] # Warmup Iteration   4: 478872.300 ops/s
[info] # Warmup Iteration   5: 483726.171 ops/s
[info] Iteration   1: 486611.208 ops/s
[info]                  ·gc.alloc.rate:                   1523.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              4928.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.195 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4319.756 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 483935.228 ops/s
[info]                  ·gc.alloc.rate:                   1515.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              4928.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1678.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5460.419 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 479173.325 ops/s
[info]                  ·gc.alloc.rate:                   1500.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              4928.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4429.333 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 475624.490 ops/s
[info]                  ·gc.alloc.rate:                   1488.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              4928.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1690.279 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5594.310 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 483001.254 ops/s
[info]                  ·gc.alloc.rate:                   1512.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              4928.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4419.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   481669.101 ±(99.9%) 16573.500 ops/s [Average]
[info]   (min, avg, max) = (475624.490, 481669.101, 486611.208), stdev = 4304.085
[info]   CI (99.9%): [465095.601, 498242.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1507.911 ±(99.9%) 51.836 MB/sec [Average]
[info]   (min, avg, max) = (1488.958, 1507.911, 1523.197), stdev = 13.462
[info]   CI (99.9%): [1456.075, 1559.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4928.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4928.001, 4928.001, 4928.001), stdev = 0.001
[info]   CI (99.9%): [4928.001, 4928.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.177 ±(99.9%) 0.351 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.177, 0.273), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1481.736 ±(99.9%) 713.680 MB/sec [Average]
[info]   (min, avg, max) = (1335.195, 1481.736, 1690.279), stdev = 185.340
[info]   CI (99.9%): [768.055, 2195.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4844.627 ±(99.9%) 2412.478 B/op [Average]
[info]   (min, avg, max) = (4319.756, 4844.627, 5594.310), stdev = 626.513
[info]   CI (99.9%): [2432.149, 7257.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.449
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 41.07% complete, ETA 00:17:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 682199.341 ops/s
[info] # Warmup Iteration   2: 1024692.704 ops/s
[info] # Warmup Iteration   3: 1023301.644 ops/s
[info] # Warmup Iteration   4: 1025459.413 ops/s
[info] # Warmup Iteration   5: 1029745.040 ops/s
[info] Iteration   1: 1034118.917 ops/s
[info]                  ·gc.alloc.rate:                   783.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.053 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 998.596 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1034372.347 ops/s
[info]                  ·gc.alloc.rate:                   783.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1504.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1034544.470 ops/s
[info]                  ·gc.alloc.rate:                   783.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1008.331 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1028840.935 ops/s
[info]                  ·gc.alloc.rate:                   779.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1016.976 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1034056.478 ops/s
[info]                  ·gc.alloc.rate:                   783.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1523.904 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1033186.629 ±(99.9%) 9384.935 ops/s [Average]
[info]   (min, avg, max) = (1028840.935, 1033186.629, 1034544.470), stdev = 2437.238
[info]   CI (99.9%): [1023801.694, 1042571.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   782.459 ±(99.9%) 6.950 MB/sec [Average]
[info]   (min, avg, max) = (779.248, 782.459, 783.474), stdev = 1.805
[info]   CI (99.9%): [775.509, 789.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.089 ±(99.9%) 0.133 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.089, 0.127), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   794.726 ±(99.9%) 704.370 MB/sec [Average]
[info]   (min, avg, max) = (656.053, 794.726, 1001.075), stdev = 182.923
[info]   CI (99.9%): [90.355, 1499.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1210.491 ±(99.9%) 1068.459 B/op [Average]
[info]   (min, avg, max) = (998.596, 1210.491, 1523.904), stdev = 277.475
[info]   CI (99.9%): [142.032, 2278.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 41.96% complete, ETA 00:17:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4034240.417 ops/s
[info] # Warmup Iteration   2: 4253855.032 ops/s
[info] # Warmup Iteration   3: 4238654.514 ops/s
[info] # Warmup Iteration   4: 4212484.959 ops/s
[info] # Warmup Iteration   5: 4242898.920 ops/s
[info] Iteration   1: 4223173.308 ops/s
[info]                  ·gc.alloc.rate:                   128.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.750 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.329 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4220952.440 ops/s
[info]                  ·gc.alloc.rate:      128.688 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4210226.724 ops/s
[info]                  ·gc.alloc.rate:                   128.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.616 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4242344.277 ops/s
[info]                  ·gc.alloc.rate:      129.365 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4220702.038 ops/s
[info]                  ·gc.alloc.rate:                   128.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 95.386 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   4223479.757 ±(99.9%) 44976.360 ops/s [Average]
[info]   (min, avg, max) = (4210226.724, 4223479.757, 4242344.277), stdev = 11680.218
[info]   CI (99.9%): [4178503.397, 4268456.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   128.778 ±(99.9%) 1.399 MB/sec [Average]
[info]   (min, avg, max) = (128.369, 128.778, 129.365), stdev = 0.363
[info]   CI (99.9%): [127.379, 130.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.002 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   153.439 ±(99.9%) 539.361 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.439, 255.750), stdev = 140.070
[info]   CI (99.9%): [≈ 0, 692.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   57.266 ±(99.9%) 201.299 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.266, 95.616), stdev = 52.277
[info]   CI (99.9%): [≈ 0, 258.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 42.86% complete, ETA 00:17:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98369.222 ops/s
[info] # Warmup Iteration   2: 165017.088 ops/s
[info] # Warmup Iteration   3: 168474.721 ops/s
[info] # Warmup Iteration   4: 166634.785 ops/s
[info] # Warmup Iteration   5: 166559.968 ops/s
[info] Iteration   1: 167801.722 ops/s
[info]                  ·gc.alloc.rate:                   1112.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1326.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12445.858 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 167130.272 ops/s
[info]                  ·gc.alloc.rate:                   1107.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.730 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9424.789 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 167137.602 ops/s
[info]                  ·gc.alloc.rate:                   1107.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.807 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9462.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 167516.063 ops/s
[info]                  ·gc.alloc.rate:                   1110.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12629.902 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 166358.604 ops/s
[info]                  ·gc.alloc.rate:                   1102.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.617 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9570.324 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   167188.853 ±(99.9%) 2089.703 ops/s [Average]
[info]   (min, avg, max) = (166358.604, 167188.853, 167801.722), stdev = 542.689
[info]   CI (99.9%): [165099.150, 169278.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1108.190 ±(99.9%) 13.888 MB/sec [Average]
[info]   (min, avg, max) = (1102.700, 1108.190, 1112.104), stdev = 3.607
[info]   CI (99.9%): [1094.302, 1122.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10432.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10432.002, 10432.003, 10432.003), stdev = 0.001
[info]   CI (99.9%): [10432.002, 10432.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.627 ±(99.9%) 0.981 B/op [Average]
[info]   (min, avg, max) = (0.197, 0.627, 0.784), stdev = 0.255
[info]   CI (99.9%): [≈ 0, 1.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.724 ±(99.9%) 696.617 MB/sec [Average]
[info]   (min, avg, max) = (1000.730, 1137.724, 1344.676), stdev = 180.909
[info]   CI (99.9%): [441.107, 1834.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10706.603 ±(99.9%) 6445.357 B/op [Average]
[info]   (min, avg, max) = (9424.789, 10706.603, 12629.902), stdev = 1673.839
[info]   CI (99.9%): [4261.246, 17151.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce
[info] # Run progress: 43.75% complete, ETA 00:17:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 101914.303 ops/s
[info] # Warmup Iteration   2: 113407.816 ops/s
[info] # Warmup Iteration   3: 114672.216 ops/s
[info] # Warmup Iteration   4: 113777.505 ops/s
[info] # Warmup Iteration   5: 116322.413 ops/s
[info] Iteration   1: 113988.082 ops/s
[info]                  ·gc.alloc.rate:                   845.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              11680.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.773 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9096.378 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 114077.029 ops/s
[info]                  ·gc.alloc.rate:                   846.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              11680.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13697.896 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 114814.190 ops/s
[info]                  ·gc.alloc.rate:                   851.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              11680.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.856 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.353 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9122.419 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 113014.082 ops/s
[info]                  ·gc.alloc.rate:                   838.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              11680.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.144 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13941.684 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 113251.120 ops/s
[info]                  ·gc.alloc.rate:                   840.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              11680.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9307.572 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce":
[info]   113828.901 ±(99.9%) 2760.312 ops/s [Average]
[info]   (min, avg, max) = (113014.082, 113828.901, 114814.190), stdev = 716.844
[info]   CI (99.9%): [111068.589, 116589.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate":
[info]   844.667 ±(99.9%) 20.218 MB/sec [Average]
[info]   (min, avg, max) = (838.734, 844.667, 851.892), stdev = 5.250
[info]   CI (99.9%): [824.449, 864.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate.norm":
[info]   11680.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11680.004, 11680.004, 11680.004), stdev = 0.001
[info]   CI (99.9%): [11680.003, 11680.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.805 ±(99.9%) 1.634 B/op [Average]
[info]   (min, avg, max) = (0.290, 0.805, 1.436), stdev = 0.424
[info]   CI (99.9%): [≈ 0, 2.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space":
[info]   797.526 ±(99.9%) 701.101 MB/sec [Average]
[info]   (min, avg, max) = (658.773, 797.526, 1001.144), stdev = 182.074
[info]   CI (99.9%): [96.424, 1498.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11033.190 ±(99.9%) 9805.927 B/op [Average]
[info]   (min, avg, max) = (9096.378, 11033.190, 13941.684), stdev = 2546.568
[info]   CI (99.9%): [1227.263, 20839.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 8.000), stdev = 1.924
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson
[info] # Run progress: 44.64% complete, ETA 00:16:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 508569.527 ops/s
[info] # Warmup Iteration   2: 577965.819 ops/s
[info] # Warmup Iteration   3: 583690.453 ops/s
[info] # Warmup Iteration   4: 573805.018 ops/s
[info] # Warmup Iteration   5: 580565.690 ops/s
[info] Iteration   1: 580598.354 ops/s
[info]                  ·gc.alloc.rate:                   761.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1782.227 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 581867.777 ops/s
[info]                  ·gc.alloc.rate:                   763.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2680.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 583155.348 ops/s
[info]                  ·gc.alloc.rate:                   764.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.063 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1792.339 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 585354.232 ops/s
[info]                  ·gc.alloc.rate:                   767.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1791.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 583081.622 ops/s
[info]                  ·gc.alloc.rate:                   764.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.711 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2706.760 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson":
[info]   582811.467 ±(99.9%) 6792.135 ops/s [Average]
[info]   (min, avg, max) = (580598.354, 582811.467, 585354.232), stdev = 1763.896
[info]   CI (99.9%): [576019.331, 589603.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate":
[info]   764.231 ±(99.9%) 8.917 MB/sec [Average]
[info]   (min, avg, max) = (761.291, 764.231, 767.539), stdev = 2.316
[info]   CI (99.9%): [755.313, 773.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate.norm":
[info]   2064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2064.001, 2064.001, 2064.001), stdev = 0.001
[info]   CI (99.9%): [2064.001, 2064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.146), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.180 ±(99.9%) 0.495 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.180, 0.394), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space":
[info]   796.183 ±(99.9%) 705.260 MB/sec [Average]
[info]   (min, avg, max) = (657.361, 796.183, 1002.711), stdev = 183.154
[info]   CI (99.9%): [90.922, 1501.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2150.484 ±(99.9%) 1908.905 B/op [Average]
[info]   (min, avg, max) = (1782.227, 2150.484, 2706.760), stdev = 495.737
[info]   CI (99.9%): [241.579, 4059.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 5.000), stdev = 1.342
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter
[info] # Run progress: 45.54% complete, ETA 00:16:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 616104.319 ops/s
[info] # Warmup Iteration   2: 639532.997 ops/s
[info] # Warmup Iteration   3: 640461.796 ops/s
[info] # Warmup Iteration   4: 633920.870 ops/s
[info] # Warmup Iteration   5: 626850.025 ops/s
[info] Iteration   1: 629209.555 ops/s
[info]                  ·gc.alloc.rate:                   537.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.380 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1634.560 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 629265.963 ops/s
[info]                  ·gc.alloc.rate:                   537.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.003 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 820.491 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 621812.780 ops/s
[info]                  ·gc.alloc.rate:                   530.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1664.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 633050.687 ops/s
[info]                  ·gc.alloc.rate:                   540.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.088 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1641.208 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 637115.154 ops/s
[info]                  ·gc.alloc.rate:                   544.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      330.712 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 817.048 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter":
[info]   630090.828 ±(99.9%) 21789.767 ops/s [Average]
[info]   (min, avg, max) = (621812.780, 630090.828, 637115.154), stdev = 5658.733
[info]   CI (99.9%): [608301.061, 651880.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate":
[info]   538.004 ±(99.9%) 18.610 MB/sec [Average]
[info]   (min, avg, max) = (530.945, 538.004, 544.003), stdev = 4.833
[info]   CI (99.9%): [519.394, 556.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate.norm":
[info]   1344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1344.001, 1344.001, 1344.001), stdev = 0.001
[info]   CI (99.9%): [1344.001, 1344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.104 ±(99.9%) 0.377 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.104, 0.211), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   525.909 ±(99.9%) 690.977 MB/sec [Average]
[info]   (min, avg, max) = (328.003, 525.909, 660.088), stdev = 179.445
[info]   CI (99.9%): [≈ 0, 1216.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1315.462 ±(99.9%) 1746.458 B/op [Average]
[info]   (min, avg, max) = (817.048, 1315.462, 1664.005), stdev = 453.550
[info]   CI (99.9%): [≈ 0, 3061.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 4.000), stdev = 1.140
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay
[info] # Run progress: 46.43% complete, ETA 00:16:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159952.376 ops/s
[info] # Warmup Iteration   2: 188311.506 ops/s
[info] # Warmup Iteration   3: 185176.359 ops/s
[info] # Warmup Iteration   4: 183430.876 ops/s
[info] # Warmup Iteration   5: 186037.399 ops/s
[info] Iteration   1: 187827.929 ops/s
[info]                  ·gc.alloc.rate:                   1711.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              14344.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.415 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14099.420 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 185444.994 ops/s
[info]                  ·gc.alloc.rate:                   1689.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              14344.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.405 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14330.755 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   3: 186178.063 ops/s
[info]                  ·gc.alloc.rate:                   1696.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              14344.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1693.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14319.470 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 181647.034 ops/s
[info]                  ·gc.alloc.rate:                   1655.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              14344.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1696.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14699.259 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 187113.192 ops/s
[info]                  ·gc.alloc.rate:                   1705.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              14344.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1698.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14287.685 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay":
[info]   185642.243 ±(99.9%) 9279.296 ops/s [Average]
[info]   (min, avg, max) = (181647.034, 185642.243, 187827.929), stdev = 2409.804
[info]   CI (99.9%): [176362.946, 194921.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate":
[info]   1691.734 ±(99.9%) 84.189 MB/sec [Average]
[info]   (min, avg, max) = (1655.489, 1691.734, 1711.600), stdev = 21.864
[info]   CI (99.9%): [1607.545, 1775.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate.norm":
[info]   14344.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (14344.002, 14344.002, 14344.002), stdev = 0.001
[info]   CI (99.9%): [14344.002, 14344.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.530 ±(99.9%) 0.502 B/op [Average]
[info]   (min, avg, max) = (0.353, 0.530, 0.721), stdev = 0.130
[info]   CI (99.9%): [0.028, 1.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space":
[info]   1691.866 ±(99.9%) 24.952 MB/sec [Average]
[info]   (min, avg, max) = (1682.415, 1691.866, 1698.349), stdev = 6.480
[info]   CI (99.9%): [1666.914, 1716.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   14347.318 ±(99.9%) 839.056 B/op [Average]
[info]   (min, avg, max) = (14099.420, 14347.318, 14699.259), stdev = 217.900
[info]   CI (99.9%): [13508.262, 15186.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readStringPlay:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 11.600, 19.000), stdev = 5.030
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 47.32% complete, ETA 00:16:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2994.707 ops/s
[info] # Warmup Iteration   2: 6421.336 ops/s
[info] # Warmup Iteration   3: 8137.124 ops/s
[info] # Warmup Iteration   4: 8579.208 ops/s
[info] # Warmup Iteration   5: 8659.659 ops/s
[info] Iteration   1: 8490.367 ops/s
[info]                  ·gc.alloc.rate:                   1243.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              230552.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 245198.627 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 8548.545 ops/s
[info]                  ·gc.alloc.rate:                   1252.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              230552.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1331.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 245129.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 8659.242 ops/s
[info]                  ·gc.alloc.rate:                   1268.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              230552.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.001 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243408.619 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 8606.195 ops/s
[info]                  ·gc.alloc.rate:                   1260.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              230587.711 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 246064.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 8684.963 ops/s
[info]                  ·gc.alloc.rate:                   1272.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              230592.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     22.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.858 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183352.935 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   8597.863 ±(99.9%) 306.912 ops/s [Average]
[info]   (min, avg, max) = (8490.367, 8597.863, 8684.963), stdev = 79.704
[info]   CI (99.9%): [8290.951, 8904.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1259.519 ±(99.9%) 45.257 MB/sec [Average]
[info]   (min, avg, max) = (1243.676, 1259.519, 1272.554), stdev = 11.753
[info]   CI (99.9%): [1214.262, 1304.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   230567.180 ±(99.9%) 80.008 B/op [Average]
[info]   (min, avg, max) = (230552.047, 230567.180, 230592.047), stdev = 20.778
[info]   CI (99.9%): [230487.173, 230647.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.125 ±(99.9%) 0.053 MB/sec [Average]
[info]   (min, avg, max) = (0.106, 0.125, 0.144), stdev = 0.014
[info]   CI (99.9%): [0.072, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   22.819 ±(99.9%) 10.153 B/op [Average]
[info]   (min, avg, max) = (19.299, 22.819, 26.738), stdev = 2.637
[info]   CI (99.9%): [12.666, 32.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1270.088 ±(99.9%) 556.825 MB/sec [Average]
[info]   (min, avg, max) = (1011.858, 1270.088, 1345.489), stdev = 144.606
[info]   CI (99.9%): [713.263, 1826.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   232630.868 ±(99.9%) 106139.309 B/op [Average]
[info]   (min, avg, max) = (183352.935, 232630.868, 246064.535), stdev = 27564.041
[info]   CI (99.9%): [126491.559, 338770.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 48.21% complete, ETA 00:15:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4643.504 ops/s
[info] # Warmup Iteration   2: 11083.270 ops/s
[info] # Warmup Iteration   3: 11327.916 ops/s
[info] # Warmup Iteration   4: 11338.229 ops/s
[info] # Warmup Iteration   5: 11452.160 ops/s
[info] Iteration   1: 11397.582 ops/s
[info]                  ·gc.alloc.rate:                   160.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              22224.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35320.455 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 11343.135 ops/s
[info]                  ·gc.alloc.rate:                   160.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              22239.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35491.687 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 11302.429 ops/s
[info]                  ·gc.alloc.rate:      159.715 MB/sec
[info]                  ·gc.alloc.rate.norm: 22240.039 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 11226.200 ops/s
[info]                  ·gc.alloc.rate:                   158.615 MB/sec
[info]                  ·gc.alloc.rate.norm:              22240.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 35858.330 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 11328.604 ops/s
[info]                  ·gc.alloc.rate:      160.054 MB/sec
[info]                  ·gc.alloc.rate.norm: 22240.051 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11319.590 ±(99.9%) 241.508 ops/s [Average]
[info]   (min, avg, max) = (11226.200, 11319.590, 11397.582), stdev = 62.719
[info]   CI (99.9%): [11078.082, 11561.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   159.916 ±(99.9%) 3.271 MB/sec [Average]
[info]   (min, avg, max) = (158.615, 159.916, 160.918), stdev = 0.849
[info]   CI (99.9%): [156.645, 163.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   22236.789 ±(99.9%) 27.450 B/op [Average]
[info]   (min, avg, max) = (22224.039, 22236.789, 22240.051), stdev = 7.129
[info]   CI (99.9%): [22209.339, 22264.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.292 ±(99.9%) 2.515 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.292, 1.461), stdev = 0.653
[info]   CI (99.9%): [≈ 0, 2.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   153.453 ±(99.9%) 539.410 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.453, 255.781), stdev = 140.083
[info]   CI (99.9%): [≈ 0, 692.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   21334.094 ±(99.9%) 74996.079 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21334.094, 35858.330), stdev = 19476.244
[info]   CI (99.9%): [≈ 0, 96330.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 4.000), stdev = 1.673
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 49.11% complete, ETA 00:15:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8572.984 ops/s
[info] # Warmup Iteration   2: 12144.818 ops/s
[info] # Warmup Iteration   3: 21413.626 ops/s
[info] # Warmup Iteration   4: 21389.608 ops/s
[info] # Warmup Iteration   5: 21376.288 ops/s
[info] Iteration   1: 21325.221 ops/s
[info]                  ·gc.alloc.rate:                   197.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              14576.024 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18877.318 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 21590.164 ops/s
[info]                  ·gc.alloc.rate:      199.946 MB/sec
[info]                  ·gc.alloc.rate.norm: 14576.049 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 21527.835 ops/s
[info]                  ·gc.alloc.rate:                   199.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              14576.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18700.222 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 21417.848 ops/s
[info]                  ·gc.alloc.rate:                   198.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              14576.019 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.520 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23741.159 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 21700.680 ops/s
[info]                  ·gc.alloc.rate:      200.963 MB/sec
[info]                  ·gc.alloc.rate.norm: 14576.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   21512.350 ±(99.9%) 563.665 ops/s [Average]
[info]   (min, avg, max) = (21325.221, 21512.350, 21700.680), stdev = 146.382
[info]   CI (99.9%): [20948.685, 22076.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   199.230 ±(99.9%) 5.213 MB/sec [Average]
[info]   (min, avg, max) = (197.492, 199.230, 200.963), stdev = 1.354
[info]   CI (99.9%): [194.017, 204.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   14576.026 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (14576.019, 14576.026, 14576.049), stdev = 0.013
[info]   CI (99.9%): [14575.977, 14576.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.108 ±(99.9%) 0.888 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.108, 0.520), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 0.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   7.956 ±(99.9%) 65.245 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 7.956, 38.243), stdev = 16.944
[info]   CI (99.9%): [≈ 0, 73.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   166.932 ±(99.9%) 596.247 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.932, 323.076), stdev = 154.843
[info]   CI (99.9%): [≈ 0, 763.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   12263.740 ±(99.9%) 43806.786 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 12263.740, 23741.159), stdev = 11376.483
[info]   CI (99.9%): [≈ 0, 56070.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 50.00% complete, ETA 00:15:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1524.175 ops/s
[info] # Warmup Iteration   2: 3530.425 ops/s
[info] # Warmup Iteration   3: 3617.091 ops/s
[info] # Warmup Iteration   4: 3714.312 ops/s
[info] # Warmup Iteration   5: 3753.030 ops/s
[info] Iteration   1: 3734.817 ops/s
[info]                  ·gc.alloc.rate:                   1094.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.109 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1322.540 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 557406.835 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3771.274 ops/s
[info]                  ·gc.alloc.rate:                   1105.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.108 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 416567.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3756.514 ops/s
[info]                  ·gc.alloc.rate:                   1101.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.117 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 419793.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3697.931 ops/s
[info]                  ·gc.alloc.rate:                   1084.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17.717 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.165 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 428189.794 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3724.488 ops/s
[info]                  ·gc.alloc.rate:                   1092.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.110 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.322 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 568893.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3737.005 ±(99.9%) 109.646 ops/s [Average]
[info]   (min, avg, max) = (3697.931, 3737.005, 3771.274), stdev = 28.475
[info]   CI (99.9%): [3627.359, 3846.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1095.728 ±(99.9%) 31.912 MB/sec [Average]
[info]   (min, avg, max) = (1084.391, 1095.728, 1105.694), stdev = 8.287
[info]   CI (99.9%): [1063.816, 1127.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461480.111 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (461480.108, 461480.111, 461480.117), stdev = 0.004
[info]   CI (99.9%): [461480.097, 461480.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   21.002 ±(99.9%) 38.007 B/op [Average]
[info]   (min, avg, max) = (8.794, 21.002, 34.749), stdev = 9.870
[info]   CI (99.9%): [≈ 0, 59.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1135.021 ±(99.9%) 701.788 MB/sec [Average]
[info]   (min, avg, max) = (998.083, 1135.021, 1346.322), stdev = 182.252
[info]   CI (99.9%): [433.233, 1836.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   478170.031 ±(99.9%) 299571.600 B/op [Average]
[info]   (min, avg, max) = (416567.109, 478170.031, 568893.286), stdev = 77797.793
[info]   CI (99.9%): [178598.432, 777741.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.342
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 50.89% complete, ETA 00:14:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 255578.222 ops/s
[info] # Warmup Iteration   2: 396450.483 ops/s
[info] # Warmup Iteration   3: 399509.931 ops/s
[info] # Warmup Iteration   4: 398794.798 ops/s
[info] # Warmup Iteration   5: 404725.533 ops/s
[info] Iteration   1: 404843.569 ops/s
[info]                  ·gc.alloc.rate:                   1330.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.370 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5174.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 404214.886 ops/s
[info]                  ·gc.alloc.rate:                   1329.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.766 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5213.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 404686.572 ops/s
[info]                  ·gc.alloc.rate:                   1330.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5232.932 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 404109.586 ops/s
[info]                  ·gc.alloc.rate:                   1328.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.480 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5256.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 400605.387 ops/s
[info]                  ·gc.alloc.rate:                   1317.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              5176.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5315.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   403692.000 ±(99.9%) 6749.690 ops/s [Average]
[info]   (min, avg, max) = (400605.387, 403692.000, 404843.569), stdev = 1752.873
[info]   CI (99.9%): [396942.310, 410441.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1327.421 ±(99.9%) 21.833 MB/sec [Average]
[info]   (min, avg, max) = (1317.402, 1327.421, 1330.856), stdev = 5.670
[info]   CI (99.9%): [1305.587, 1349.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5176.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5176.001, 5176.001, 5176.001), stdev = 0.001
[info]   CI (99.9%): [5176.001, 5176.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.022, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.227 ±(99.9%) 0.141 B/op [Average]
[info]   (min, avg, max) = (0.162, 0.227, 0.245), stdev = 0.037
[info]   CI (99.9%): [0.086, 0.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1343.369 ±(99.9%) 34.514 MB/sec [Average]
[info]   (min, avg, max) = (1330.370, 1343.369, 1352.845), stdev = 8.963
[info]   CI (99.9%): [1308.855, 1377.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5238.344 ±(99.9%) 202.076 B/op [Average]
[info]   (min, avg, max) = (5174.112, 5238.344, 5315.255), stdev = 52.478
[info]   CI (99.9%): [5036.269, 5440.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 9.000), stdev = 1.581
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 51.79% complete, ETA 00:14:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1081665.703 ops/s
[info] # Warmup Iteration   2: 1614016.851 ops/s
[info] # Warmup Iteration   3: 1625831.948 ops/s
[info] # Warmup Iteration   4: 1617696.144 ops/s
[info] # Warmup Iteration   5: 1608721.106 ops/s
[info] Iteration   1: 1615501.533 ops/s
[info]                  ·gc.alloc.rate:                   673.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.193 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 635.334 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1614732.504 ops/s
[info]                  ·gc.alloc.rate:                   673.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.873 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 958.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1592949.749 ops/s
[info]                  ·gc.alloc.rate:                   663.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 650.893 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1610790.613 ops/s
[info]                  ·gc.alloc.rate:                   671.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 645.528 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1616738.483 ops/s
[info]                  ·gc.alloc.rate:                   673.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.087 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 646.541 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1610142.576 ±(99.9%) 37988.173 ops/s [Average]
[info]   (min, avg, max) = (1592949.749, 1610142.576, 1616738.483), stdev = 9865.408
[info]   CI (99.9%): [1572154.403, 1648130.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   671.169 ±(99.9%) 15.892 MB/sec [Average]
[info]   (min, avg, max) = (663.925, 671.169, 673.804), stdev = 4.127
[info]   CI (99.9%): [655.277, 687.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.041 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.081), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   723.774 ±(99.9%) 557.983 MB/sec [Average]
[info]   (min, avg, max) = (652.193, 723.774, 982.873), stdev = 144.907
[info]   CI (99.9%): [165.791, 1281.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   707.262 ±(99.9%) 540.207 B/op [Average]
[info]   (min, avg, max) = (635.334, 707.262, 958.013), stdev = 140.290
[info]   CI (99.9%): [167.054, 1247.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 52.68% complete, ETA 00:14:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5092410.174 ops/s
[info] # Warmup Iteration   2: 10022633.129 ops/s
[info] # Warmup Iteration   3: 10033114.590 ops/s
[info] # Warmup Iteration   4: 10210075.389 ops/s
[info] # Warmup Iteration   5: 10147031.893 ops/s
[info] Iteration   1: 10305077.042 ops/s
[info]                  ·gc.alloc.rate:                   523.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49.699 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 10139750.485 ops/s
[info]                  ·gc.alloc.rate:                   515.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.403 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.432 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 10138379.445 ops/s
[info]                  ·gc.alloc.rate:                   515.292 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 10146838.511 ops/s
[info]                  ·gc.alloc.rate:                   515.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      329.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.094 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 10174233.905 ops/s
[info]                  ·gc.alloc.rate:                   517.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   10180855.878 ±(99.9%) 273136.831 ops/s [Average]
[info]   (min, avg, max) = (10138379.445, 10180855.878, 10305077.042), stdev = 70932.768
[info]   CI (99.9%): [9907719.046, 10453992.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   517.441 ±(99.9%) 13.871 MB/sec [Average]
[info]   (min, avg, max) = (515.292, 517.441, 523.751), stdev = 3.602
[info]   CI (99.9%): [503.570, 531.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.008 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.016), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   524.848 ±(99.9%) 694.231 MB/sec [Average]
[info]   (min, avg, max) = (325.371, 524.848, 660.068), stdev = 180.290
[info]   CI (99.9%): [≈ 0, 1219.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   81.238 ±(99.9%) 108.435 B/op [Average]
[info]   (min, avg, max) = (49.699, 81.238, 102.119), stdev = 28.160
[info]   CI (99.9%): [≈ 0, 189.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 4.000), stdev = 1.095
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 53.57% complete, ETA 00:14:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152562.613 ops/s
[info] # Warmup Iteration   2: 242553.940 ops/s
[info] # Warmup Iteration   3: 243078.140 ops/s
[info] # Warmup Iteration   4: 245305.695 ops/s
[info] # Warmup Iteration   5: 241083.721 ops/s
[info] Iteration   1: 241947.417 ops/s
[info]                  ·gc.alloc.rate:                   770.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.364 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4276.807 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 239818.476 ops/s
[info]                  ·gc.alloc.rate:                   764.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4332.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 240833.678 ops/s
[info]                  ·gc.alloc.rate:                   767.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.903 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6496.767 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 245705.248 ops/s
[info]                  ·gc.alloc.rate:                   782.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.348 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4262.573 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 243284.980 ops/s
[info]                  ·gc.alloc.rate:                   775.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              5016.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4317.876 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   242317.960 ±(99.9%) 8822.233 ops/s [Average]
[info]   (min, avg, max) = (239818.476, 242317.960, 245705.248), stdev = 2291.106
[info]   CI (99.9%): [233495.727, 251140.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   772.153 ±(99.9%) 28.096 MB/sec [Average]
[info]   (min, avg, max) = (764.238, 772.153, 782.951), stdev = 7.296
[info]   CI (99.9%): [744.057, 800.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5016.002, 5016.002, 5016.002), stdev = 0.001
[info]   CI (99.9%): [5016.001, 5016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.245 ±(99.9%) 0.865 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.245, 0.546), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   728.799 ±(99.9%) 570.862 MB/sec [Average]
[info]   (min, avg, max) = (657.364, 728.799, 993.903), stdev = 148.251
[info]   CI (99.9%): [157.938, 1299.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   4737.241 ±(99.9%) 3789.110 B/op [Average]
[info]   (min, avg, max) = (4262.573, 4737.241, 6496.767), stdev = 984.020
[info]   CI (99.9%): [948.131, 8526.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 54.46% complete, ETA 00:13:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1175362.662 ops/s
[info] # Warmup Iteration   2: 1450414.286 ops/s
[info] # Warmup Iteration   3: 1496313.266 ops/s
[info] # Warmup Iteration   4: 1477292.607 ops/s
[info] # Warmup Iteration   5: 1506440.392 ops/s
[info] Iteration   1: 1512455.718 ops/s
[info]                  ·gc.alloc.rate:                   1498.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1741.963 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1463779.492 ops/s
[info]                  ·gc.alloc.rate:                   1450.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1446.764 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1481996.701 ops/s
[info]                  ·gc.alloc.rate:                   1468.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1433.870 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1483620.025 ops/s
[info]                  ·gc.alloc.rate:                   1470.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1692.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1795.623 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1503646.906 ops/s
[info]                  ·gc.alloc.rate:                   1490.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.473 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1419.987 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1489099.768 ±(99.9%) 74036.506 ops/s [Average]
[info]   (min, avg, max) = (1463779.492, 1489099.768, 1512455.718), stdev = 19227.046
[info]   CI (99.9%): [1415063.262, 1563136.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1475.784 ±(99.9%) 73.534 MB/sec [Average]
[info]   (min, avg, max) = (1450.545, 1475.784, 1498.925), stdev = 19.097
[info]   CI (99.9%): [1402.250, 1549.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.084 ±(99.9%) 0.156 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.084, 0.134), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1483.614 ±(99.9%) 702.134 MB/sec [Average]
[info]   (min, avg, max) = (1345.254, 1483.614, 1692.593), stdev = 182.342
[info]   CI (99.9%): [781.480, 2185.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1567.641 ±(99.9%) 711.775 B/op [Average]
[info]   (min, avg, max) = (1419.987, 1567.641, 1795.623), stdev = 184.846
[info]   CI (99.9%): [855.866, 2279.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 55.36% complete, ETA 00:13:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 2970724.108 ops/s
[info] # Warmup Iteration   2: 4466196.956 ops/s
[info] # Warmup Iteration   3: 4479079.336 ops/s
[info] # Warmup Iteration   4: 4461667.868 ops/s
[info] # Warmup Iteration   5: 4511777.274 ops/s
[info] Iteration   1: 4528909.948 ops/s
[info]                  ·gc.alloc.rate:                   1242.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1326.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 460.910 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 4465989.863 ops/s
[info]                  ·gc.alloc.rate:                   1225.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 470.394 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 4440779.508 ops/s
[info]                  ·gc.alloc.rate:                   1218.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 356.371 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 4459641.703 ops/s
[info]                  ·gc.alloc.rate:                   1224.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.230 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 475.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4433970.762 ops/s
[info]                  ·gc.alloc.rate:                   1216.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 479.282 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4465858.357 ±(99.9%) 144846.856 ops/s [Average]
[info]   (min, avg, max) = (4433970.762, 4465858.357, 4528909.948), stdev = 37616.268
[info]   CI (99.9%): [4321011.501, 4610705.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1225.657 ±(99.9%) 39.651 MB/sec [Average]
[info]   (min, avg, max) = (1216.849, 1225.657, 1242.855), stdev = 10.297
[info]   CI (99.9%): [1186.005, 1265.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.023 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.023, 0.037), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1272.484 ±(99.9%) 576.160 MB/sec [Average]
[info]   (min, avg, max) = (1005.362, 1272.484, 1350.032), stdev = 149.627
[info]   CI (99.9%): [696.324, 1848.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   448.417 ±(99.9%) 199.877 B/op [Average]
[info]   (min, avg, max) = (356.371, 448.417, 479.282), stdev = 51.907
[info]   CI (99.9%): [248.540, 648.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 13.000), stdev = 2.510
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 56.25% complete, ETA 00:13:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14163451.169 ops/s
[info] # Warmup Iteration   2: 17266985.418 ops/s
[info] # Warmup Iteration   3: 17036598.838 ops/s
[info] # Warmup Iteration   4: 17134632.480 ops/s
[info] # Warmup Iteration   5: 17169363.951 ops/s
[info] Iteration   1: 17480587.510 ops/s
[info]                  ·gc.alloc.rate:                   533.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.418 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 17238767.489 ops/s
[info]                  ·gc.alloc.rate:                   525.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.781 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 17269867.938 ops/s
[info]                  ·gc.alloc.rate:                   526.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29.898 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17253352.170 ops/s
[info]                  ·gc.alloc.rate:                   526.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 60.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 17378612.202 ops/s
[info]                  ·gc.alloc.rate:                   529.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.459 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 59.906 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   17324237.462 ±(99.9%) 397791.441 ops/s [Average]
[info]   (min, avg, max) = (17238767.489, 17324237.462, 17480587.510), stdev = 103305.174
[info]   CI (99.9%): [16926446.021, 17722028.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   528.311 ±(99.9%) 12.100 MB/sec [Average]
[info]   (min, avg, max) = (525.696, 528.311, 533.049), stdev = 3.142
[info]   CI (99.9%): [516.211, 540.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.004 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   525.931 ±(99.9%) 698.040 MB/sec [Average]
[info]   (min, avg, max) = (326.692, 525.931, 661.459), stdev = 181.279
[info]   CI (99.9%): [≈ 0, 1223.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   47.820 ±(99.9%) 63.845 B/op [Average]
[info]   (min, avg, max) = (29.418, 47.820, 60.095), stdev = 16.580
[info]   CI (99.9%): [≈ 0, 111.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 1.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 57.14% complete, ETA 00:13:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 15647419.742 ops/s
[info] # Warmup Iteration   2: 16049817.762 ops/s
[info] # Warmup Iteration   3: 16817183.437 ops/s
[info] # Warmup Iteration   4: 16678527.838 ops/s
[info] # Warmup Iteration   5: 16646030.009 ops/s
[info] Iteration   1: 16766724.695 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 16660373.302 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 16727600.643 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 16654281.839 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 16725273.109 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   16706850.718 ±(99.9%) 185456.325 ops/s [Average]
[info]   (min, avg, max) = (16654281.839, 16706850.718, 16766724.695), stdev = 48162.419
[info]   CI (99.9%): [16521394.393, 16892307.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 58.04% complete, ETA 00:12:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 767680.208 ops/s
[info] # Warmup Iteration   2: 1106567.851 ops/s
[info] # Warmup Iteration   3: 1105136.131 ops/s
[info] # Warmup Iteration   4: 1106918.439 ops/s
[info] # Warmup Iteration   5: 1116390.222 ops/s
[info] Iteration   1: 1112174.343 ops/s
[info]                  ·gc.alloc.rate:                   1633.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1678.934 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2375.987 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1111384.633 ops/s
[info]                  ·gc.alloc.rate:                   1632.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1686.714 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2388.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1114543.536 ops/s
[info]                  ·gc.alloc.rate:                   1637.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2389.269 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1106087.169 ops/s
[info]                  ·gc.alloc.rate:                   1624.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1929.777 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1115406.312 ops/s
[info]                  ·gc.alloc.rate:                   1638.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1698.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2395.874 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   1111919.199 ±(99.9%) 14070.736 ops/s [Average]
[info]   (min, avg, max) = (1106087.169, 1111919.199, 1115406.312), stdev = 3654.125
[info]   CI (99.9%): [1097848.463, 1125989.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1633.329 ±(99.9%) 21.064 MB/sec [Average]
[info]   (min, avg, max) = (1624.519, 1633.329, 1638.592), stdev = 5.470
[info]   CI (99.9%): [1612.265, 1654.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2312.000, 2312.000, 2312.000), stdev = 0.001
[info]   CI (99.9%): [2312.000, 2312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.100 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.100, 0.118), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1622.280 ±(99.9%) 573.928 MB/sec [Average]
[info]   (min, avg, max) = (1355.951, 1622.280, 1698.036), stdev = 149.047
[info]   CI (99.9%): [1048.353, 2196.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   2295.862 ±(99.9%) 788.510 B/op [Average]
[info]   (min, avg, max) = (1929.777, 2295.862, 2395.874), stdev = 204.774
[info]   CI (99.9%): [1507.351, 3084.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.000, 11.000), stdev = 1.871
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 58.93% complete, ETA 00:12:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 495626.850 ops/s
[info] # Warmup Iteration   2: 685711.436 ops/s
[info] # Warmup Iteration   3: 701961.078 ops/s
[info] # Warmup Iteration   4: 713839.323 ops/s
[info] # Warmup Iteration   5: 707236.948 ops/s
[info] Iteration   1: 707466.422 ops/s
[info]                  ·gc.alloc.rate:                   1604.003 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2984.614 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 694195.191 ops/s
[info]                  ·gc.alloc.rate:                   1574.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1684.632 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3818.657 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 698665.972 ops/s
[info]                  ·gc.alloc.rate:                   1584.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1690.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3808.338 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 712079.368 ops/s
[info]                  ·gc.alloc.rate:                   1614.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.445 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2996.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 710823.445 ops/s
[info]                  ·gc.alloc.rate:                   1611.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              3568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1697.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3758.014 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   704646.080 ±(99.9%) 30219.013 ops/s [Average]
[info]   (min, avg, max) = (694195.191, 704646.080, 712079.368), stdev = 7847.782
[info]   CI (99.9%): [674427.066, 734865.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1597.491 ±(99.9%) 67.783 MB/sec [Average]
[info]   (min, avg, max) = (1574.053, 1597.491, 1614.159), stdev = 17.603
[info]   CI (99.9%): [1529.708, 1665.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3568.001, 3568.001, 3568.001), stdev = 0.001
[info]   CI (99.9%): [3568.000, 3568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.196 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.146), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.187 ±(99.9%) 0.446 B/op [Average]
[info]   (min, avg, max) = (0.046, 0.187, 0.328), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   1553.912 ±(99.9%) 722.164 MB/sec [Average]
[info]   (min, avg, max) = (1341.740, 1553.912, 1697.023), stdev = 187.544
[info]   CI (99.9%): [831.747, 2276.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3473.151 ±(99.9%) 1699.407 B/op [Average]
[info]   (min, avg, max) = (2984.614, 3473.151, 3818.657), stdev = 441.331
[info]   CI (99.9%): [1773.743, 5172.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.800, 18.000), stdev = 4.207
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 59.82% complete, ETA 00:12:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1790136.145 ops/s
[info] # Warmup Iteration   2: 2808733.823 ops/s
[info] # Warmup Iteration   3: 2808064.205 ops/s
[info] # Warmup Iteration   4: 2765051.809 ops/s
[info] # Warmup Iteration   5: 2827344.020 ops/s
[info] Iteration   1: 2776590.998 ops/s
[info]                  ·gc.alloc.rate:                   1580.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1672.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 948.471 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 2760546.044 ops/s
[info]                  ·gc.alloc.rate:                   1571.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.064 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 959.253 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2805515.830 ops/s
[info]                  ·gc.alloc.rate:                   1597.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 758.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2773236.122 ops/s
[info]                  ·gc.alloc.rate:                   1578.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1693.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 960.960 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2782743.665 ops/s
[info]                  ·gc.alloc.rate:                   1584.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1696.598 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 959.619 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2779726.532 ±(99.9%) 63682.454 ops/s [Average]
[info]   (min, avg, max) = (2760546.044, 2779726.532, 2805515.830), stdev = 16538.131
[info]   CI (99.9%): [2716044.078, 2843408.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1582.218 ±(99.9%) 36.607 MB/sec [Average]
[info]   (min, avg, max) = (1571.149, 1582.218, 1597.000), stdev = 9.507
[info]   CI (99.9%): [1545.612, 1618.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   896.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (896.000, 896.000, 896.000), stdev = 0.001
[info]   CI (99.9%): [896.000, 896.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.096 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.096, 0.146), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.054 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.054, 0.083), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1619.160 ±(99.9%) 577.674 MB/sec [Average]
[info]   (min, avg, max) = (1351.327, 1619.160, 1696.598), stdev = 150.020
[info]   CI (99.9%): [1041.487, 2196.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   917.294 ±(99.9%) 343.079 B/op [Average]
[info]   (min, avg, max) = (758.165, 917.294, 960.960), stdev = 89.097
[info]   CI (99.9%): [574.214, 1260.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.643
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 60.71% complete, ETA 00:11:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4813293.756 ops/s
[info] # Warmup Iteration   2: 5153644.614 ops/s
[info] # Warmup Iteration   3: 5178941.165 ops/s
[info] # Warmup Iteration   4: 5151642.604 ops/s
[info] # Warmup Iteration   5: 5181803.168 ops/s
[info] Iteration   1: 5151210.662 ops/s
[info]                  ·gc.alloc.rate:                   1361.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 408.656 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 5172313.543 ops/s
[info]                  ·gc.alloc.rate:                   1366.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 409.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5123456.346 ops/s
[info]                  ·gc.alloc.rate:                   1354.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 414.578 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5136451.384 ops/s
[info]                  ·gc.alloc.rate:                   1357.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 414.550 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5128534.028 ops/s
[info]                  ·gc.alloc.rate:                   1355.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1355.453 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 416.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   5142393.193 ±(99.9%) 76018.792 ops/s [Average]
[info]   (min, avg, max) = (5123456.346, 5142393.193, 5172313.543), stdev = 19741.839
[info]   CI (99.9%): [5066374.400, 5218411.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1359.028 ±(99.9%) 19.735 MB/sec [Average]
[info]   (min, avg, max) = (1354.229, 1359.028, 1366.928), stdev = 5.125
[info]   CI (99.9%): [1339.294, 1378.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   416.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (416.000, 416.000, 416.000), stdev = 0.001
[info]   CI (99.9%): [416.000, 416.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.018 ±(99.9%) 0.020 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.018, 0.025), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1347.783 ±(99.9%) 28.310 MB/sec [Average]
[info]   (min, avg, max) = (1337.048, 1347.783, 1355.453), stdev = 7.352
[info]   CI (99.9%): [1319.472, 1376.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   412.567 ±(99.9%) 13.286 B/op [Average]
[info]   (min, avg, max) = (408.656, 412.567, 416.013), stdev = 3.450
[info]   CI (99.9%): [399.281, 425.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 61.61% complete, ETA 00:11:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 228473.045 ops/s
[info] # Warmup Iteration   2: 385465.347 ops/s
[info] # Warmup Iteration   3: 387256.017 ops/s
[info] # Warmup Iteration   4: 382914.586 ops/s
[info] # Warmup Iteration   5: 387048.645 ops/s
[info] Iteration   1: 387380.199 ops/s
[info]                  ·gc.alloc.rate:                   1338.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              5440.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5418.354 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 383358.032 ops/s
[info]                  ·gc.alloc.rate:                   1324.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              5440.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.900 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5502.599 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 383249.255 ops/s
[info]                  ·gc.alloc.rate:                   1324.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              5440.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.097 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5528.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 387828.524 ops/s
[info]                  ·gc.alloc.rate:                   1340.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              5440.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.106 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5479.213 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 388382.493 ops/s
[info]                  ·gc.alloc.rate:                   1342.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              5440.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5485.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   386039.701 ±(99.9%) 9715.426 ops/s [Average]
[info]   (min, avg, max) = (383249.255, 386039.701, 388382.493), stdev = 2523.065
[info]   CI (99.9%): [376324.275, 395755.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1334.147 ±(99.9%) 33.832 MB/sec [Average]
[info]   (min, avg, max) = (1324.574, 1334.147, 1342.260), stdev = 8.786
[info]   CI (99.9%): [1300.315, 1367.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5440.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5440.001, 5440.001, 5440.001), stdev = 0.001
[info]   CI (99.9%): [5440.001, 5440.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.221 ±(99.9%) 0.298 B/op [Average]
[info]   (min, avg, max) = (0.169, 0.221, 0.342), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1344.595 ±(99.9%) 30.802 MB/sec [Average]
[info]   (min, avg, max) = (1333.470, 1344.595, 1353.400), stdev = 7.999
[info]   CI (99.9%): [1313.792, 1375.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5482.742 ±(99.9%) 156.918 B/op [Average]
[info]   (min, avg, max) = (5418.354, 5482.742, 5528.395), stdev = 40.751
[info]   CI (99.9%): [5325.825, 5639.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 12.000), stdev = 2.950
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 62.50% complete, ETA 00:11:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1340968.255 ops/s
[info] # Warmup Iteration   2: 1821493.550 ops/s
[info] # Warmup Iteration   3: 1847076.843 ops/s
[info] # Warmup Iteration   4: 1846239.917 ops/s
[info] # Warmup Iteration   5: 1851827.467 ops/s
[info] Iteration   1: 1857191.299 ops/s
[info]                  ·gc.alloc.rate:                   981.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.348 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 838.586 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1840978.853 ops/s
[info]                  ·gc.alloc.rate:                   973.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.736 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 850.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1833254.742 ops/s
[info]                  ·gc.alloc.rate:                   968.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 858.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1855542.644 ops/s
[info]                  ·gc.alloc.rate:                   980.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.431 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 851.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1844520.029 ops/s
[info]                  ·gc.alloc.rate:                   974.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 859.970 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   1846297.514 ±(99.9%) 38780.233 ops/s [Average]
[info]   (min, avg, max) = (1833254.742, 1846297.514, 1857191.299), stdev = 10071.103
[info]   CI (99.9%): [1807517.280, 1885077.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   975.894 ±(99.9%) 20.530 MB/sec [Average]
[info]   (min, avg, max) = (968.967, 975.894, 981.578), stdev = 5.332
[info]   CI (99.9%): [955.364, 996.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.057 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.057, 0.071), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   998.918 ±(99.9%) 27.758 MB/sec [Average]
[info]   (min, avg, max) = (989.348, 998.918, 1007.765), stdev = 7.209
[info]   CI (99.9%): [971.160, 1026.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   851.655 ±(99.9%) 32.358 B/op [Average]
[info]   (min, avg, max) = (838.586, 851.655, 859.970), stdev = 8.403
[info]   CI (99.9%): [819.297, 884.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 2.588
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 63.39% complete, ETA 00:11:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4370629.432 ops/s
[info] # Warmup Iteration   2: 4745915.560 ops/s
[info] # Warmup Iteration   3: 4845153.370 ops/s
[info] # Warmup Iteration   4: 4793944.185 ops/s
[info] # Warmup Iteration   5: 4830351.735 ops/s
[info] Iteration   1: 4879708.318 ops/s
[info]                  ·gc.alloc.rate:                   744.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.468 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4828508.937 ops/s
[info]                  ·gc.alloc.rate:                   736.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 215.173 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4867728.016 ops/s
[info]                  ·gc.alloc.rate:                   742.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 214.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4798540.296 ops/s
[info]                  ·gc.alloc.rate:                   731.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 327.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 4930258.849 ops/s
[info]                  ·gc.alloc.rate:                   751.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.102 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 213.275 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4860948.883 ±(99.9%) 193960.554 ops/s [Average]
[info]   (min, avg, max) = (4798540.296, 4860948.883, 4930258.849), stdev = 50370.940
[info]   CI (99.9%): [4666988.329, 5054909.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   741.231 ±(99.9%) 29.706 MB/sec [Average]
[info]   (min, avg, max) = (731.668, 741.231, 751.821), stdev = 7.715
[info]   CI (99.9%): [711.525, 770.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.020 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.020, 0.034), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   729.188 ±(99.9%) 577.625 MB/sec [Average]
[info]   (min, avg, max) = (657.468, 729.188, 997.436), stdev = 150.007
[info]   CI (99.9%): [151.563, 1306.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   236.398 ±(99.9%) 195.460 B/op [Average]
[info]   (min, avg, max) = (212.062, 236.398, 327.177), stdev = 50.760
[info]   CI (99.9%): [40.938, 431.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 10.000), stdev = 3.421
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 64.29% complete, ETA 00:10:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 324322.659 ops/s
[info] # Warmup Iteration   2: 517006.250 ops/s
[info] # Warmup Iteration   3: 515622.136 ops/s
[info] # Warmup Iteration   4: 525209.769 ops/s
[info] # Warmup Iteration   5: 521731.941 ops/s
[info] Iteration   1: 525988.865 ops/s
[info]                  ·gc.alloc.rate:                   1523.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1674.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5010.000 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 528839.969 ops/s
[info]                  ·gc.alloc.rate:                   1531.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.678 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4008.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 527998.476 ops/s
[info]                  ·gc.alloc.rate:                   1529.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.556 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5033.537 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 529132.232 ops/s
[info]                  ·gc.alloc.rate:                   1532.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4030.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 526504.160 ops/s
[info]                  ·gc.alloc.rate:                   1525.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1695.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5069.711 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   527692.740 ±(99.9%) 5376.324 ops/s [Average]
[info]   (min, avg, max) = (525988.865, 527692.740, 529132.232), stdev = 1396.214
[info]   CI (99.9%): [522316.416, 533069.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1528.709 ±(99.9%) 15.726 MB/sec [Average]
[info]   (min, avg, max) = (1523.698, 1528.709, 1532.917), stdev = 4.084
[info]   CI (99.9%): [1512.983, 1544.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4560.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4560.001, 4560.001, 4560.001), stdev = 0.001
[info]   CI (99.9%): [4560.001, 4560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.224 ±(99.9%) 0.363 B/op [Average]
[info]   (min, avg, max) = (0.124, 0.224, 0.372), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1551.959 ±(99.9%) 708.075 MB/sec [Average]
[info]   (min, avg, max) = (1346.678, 1551.959, 1695.720), stdev = 183.885
[info]   CI (99.9%): [843.885, 2260.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   4630.348 ±(99.9%) 2149.874 B/op [Average]
[info]   (min, avg, max) = (4008.395, 4630.348, 5069.711), stdev = 558.315
[info]   CI (99.9%): [2480.474, 6780.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 8.200, 10.000), stdev = 1.095
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 65.18% complete, ETA 00:10:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3844.222 ops/s
[info] # Warmup Iteration   2: 4893.633 ops/s
[info] # Warmup Iteration   3: 5039.324 ops/s
[info] # Warmup Iteration   4: 5060.865 ops/s
[info] # Warmup Iteration   5: 5085.879 ops/s
[info] Iteration   1: 5135.206 ops/s
[info]                  ·gc.alloc.rate:                   1225.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 407303.178 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 5145.995 ops/s
[info]                  ·gc.alloc.rate:                   1228.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1336.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 408899.829 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5128.684 ops/s
[info]                  ·gc.alloc.rate:                   1223.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.985 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309053.979 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5069.315 ops/s
[info]                  ·gc.alloc.rate:                   1209.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.087 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 418107.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 5109.988 ops/s
[info]                  ·gc.alloc.rate:                   1219.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              375656.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1013.233 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 312090.842 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5117.838 ±(99.9%) 115.971 ops/s [Average]
[info]   (min, avg, max) = (5069.315, 5117.838, 5145.995), stdev = 30.117
[info]   CI (99.9%): [5001.867, 5233.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1221.448 ±(99.9%) 27.647 MB/sec [Average]
[info]   (min, avg, max) = (1209.884, 1221.448, 1228.219), stdev = 7.180
[info]   CI (99.9%): [1193.801, 1249.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   375656.082 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (375656.079, 375656.082, 375656.087), stdev = 0.004
[info]   CI (99.9%): [375656.068, 375656.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.055 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.055, 0.131), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   16.990 ±(99.9%) 59.199 B/op [Average]
[info]   (min, avg, max) = (6.365, 16.990, 40.104), stdev = 15.374
[info]   CI (99.9%): [≈ 0, 76.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1206.504 ±(99.9%) 690.835 MB/sec [Average]
[info]   (min, avg, max) = (1006.985, 1206.504, 1346.606), stdev = 179.408
[info]   CI (99.9%): [515.669, 1897.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   371090.968 ±(99.9%) 213363.079 B/op [Average]
[info]   (min, avg, max) = (309053.979, 371090.968, 418107.015), stdev = 55409.714
[info]   CI (99.9%): [157727.890, 584454.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 18.000), stdev = 4.930
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 66.07% complete, ETA 00:10:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 19398.927 ops/s
[info] # Warmup Iteration   2: 27108.854 ops/s
[info] # Warmup Iteration   3: 27062.008 ops/s
[info] # Warmup Iteration   4: 26946.653 ops/s
[info] # Warmup Iteration   5: 27155.569 ops/s
[info] Iteration   1: 26658.959 ops/s
[info]                  ·gc.alloc.rate:                   386.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.950 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      646.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38183.660 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 27354.438 ops/s
[info]                  ·gc.alloc.rate:                   396.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.007 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18645.865 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 27275.725 ops/s
[info]                  ·gc.alloc.rate:                   395.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              22808.033 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18775.360 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 27425.344 ops/s
[info]                  ·gc.alloc.rate:                   397.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.806 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.454 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18674.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 27097.553 ops/s
[info]                  ·gc.alloc.rate:                   392.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.851 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 37953.476 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   27162.404 ±(99.9%) 1181.400 ops/s [Average]
[info]   (min, avg, max) = (26658.959, 27162.404, 27425.344), stdev = 306.806
[info]   CI (99.9%): [25981.004, 28343.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   393.605 ±(99.9%) 17.276 MB/sec [Average]
[info]   (min, avg, max) = (386.251, 393.605, 397.497), stdev = 4.487
[info]   CI (99.9%): [376.329, 410.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.842 ±(99.9%) 0.679 B/op [Average]
[info]   (min, avg, max) = (22807.568, 22807.842, 22808.033), stdev = 0.176
[info]   CI (99.9%): [22807.163, 22808.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1.944 ±(99.9%) 7.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.944, 4.916), stdev = 1.866
[info]   CI (99.9%): [≈ 0, 9.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   454.977 ±(99.9%) 685.596 MB/sec [Average]
[info]   (min, avg, max) = (324.007, 454.977, 653.361), stdev = 178.047
[info]   CI (99.9%): [≈ 0, 1140.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   26446.484 ±(99.9%) 40854.887 B/op [Average]
[info]   (min, avg, max) = (18645.865, 26446.484, 38183.660), stdev = 10609.884
[info]   CI (99.9%): [≈ 0, 67301.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 2.049
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 66.96% complete, ETA 00:10:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21385.654 ops/s
[info] # Warmup Iteration   2: 24586.791 ops/s
[info] # Warmup Iteration   3: 24628.928 ops/s
[info] # Warmup Iteration   4: 24646.091 ops/s
[info] # Warmup Iteration   5: 24347.121 ops/s
[info] Iteration   1: 24477.200 ops/s
[info]                  ·gc.alloc.rate:                   184.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16447.579 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 24426.848 ops/s
[info]                  ·gc.alloc.rate:                   183.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16481.240 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 24518.114 ops/s
[info]                  ·gc.alloc.rate:      184.637 MB/sec
[info]                  ·gc.alloc.rate.norm: 11856.019 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 24524.437 ops/s
[info]                  ·gc.alloc.rate:                   184.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              11856.018 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.355 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 20754.358 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 24404.424 ops/s
[info]                  ·gc.alloc.rate:      183.797 MB/sec
[info]                  ·gc.alloc.rate.norm: 11856.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   24470.205 ±(99.9%) 206.398 ops/s [Average]
[info]   (min, avg, max) = (24404.424, 24470.205, 24524.437), stdev = 53.601
[info]   CI (99.9%): [24263.807, 24676.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   184.295 ±(99.9%) 1.537 MB/sec [Average]
[info]   (min, avg, max) = (183.797, 184.295, 184.718), stdev = 0.399
[info]   CI (99.9%): [182.757, 185.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   11856.018 ±(99.9%) 0.004 B/op [Average]
[info]   (min, avg, max) = (11856.017, 11856.018, 11856.019), stdev = 0.001
[info]   CI (99.9%): [11856.014, 11856.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.106 ±(99.9%) 0.914 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.106, 0.531), stdev = 0.237
[info]   CI (99.9%): [≈ 0, 1.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   6.813 ±(99.9%) 58.663 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 6.813, 34.066), stdev = 15.235
[info]   CI (99.9%): [≈ 0, 65.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   166.968 ±(99.9%) 596.463 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.968, 323.355), stdev = 154.900
[info]   CI (99.9%): [≈ 0, 763.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   10736.636 ±(99.9%) 38338.610 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10736.636, 20754.358), stdev = 9956.415
[info]   CI (99.9%): [≈ 0, 49075.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 67.86% complete, ETA 00:09:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29458.732 ops/s
[info] # Warmup Iteration   2: 33584.978 ops/s
[info] # Warmup Iteration   3: 32583.137 ops/s
[info] # Warmup Iteration   4: 32996.490 ops/s
[info] # Warmup Iteration   5: 33277.904 ops/s
[info] Iteration   1: 33127.339 ops/s
[info]                  ·gc.alloc.rate:      0.505 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 33238.959 ops/s
[info]                  ·gc.alloc.rate:      0.507 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 33201.588 ops/s
[info]                  ·gc.alloc.rate:      0.507 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 33191.696 ops/s
[info]                  ·gc.alloc.rate:      0.506 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 33282.552 ops/s
[info]                  ·gc.alloc.rate:      0.508 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   33208.427 ±(99.9%) 222.279 ops/s [Average]
[info]   (min, avg, max) = (33127.339, 33208.427, 33282.552), stdev = 57.725
[info]   CI (99.9%): [32986.148, 33430.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.507 ±(99.9%) 0.003 MB/sec [Average]
[info]   (min, avg, max) = (0.505, 0.507, 0.508), stdev = 0.001
[info]   CI (99.9%): [0.503, 0.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (24.012, 24.013, 24.013), stdev = 0.001
[info]   CI (99.9%): [24.011, 24.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 68.75% complete, ETA 00:09:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2795.940 ops/s
[info] # Warmup Iteration   2: 4105.961 ops/s
[info] # Warmup Iteration   3: 4203.450 ops/s
[info] # Warmup Iteration   4: 4171.763 ops/s
[info] # Warmup Iteration   5: 4247.276 ops/s
[info] Iteration   1: 4247.969 ops/s
[info]                  ·gc.alloc.rate:                   1257.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              466048.766 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.138 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 492823.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4255.685 ops/s
[info]                  ·gc.alloc.rate:                   1260.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              466047.729 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.296 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 494852.991 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4159.952 ops/s
[info]                  ·gc.alloc.rate:                   1231.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              466048.867 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.804 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 508537.940 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 4210.387 ops/s
[info]                  ·gc.alloc.rate:                   1246.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              466047.390 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.767 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 377781.121 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4190.323 ops/s
[info]                  ·gc.alloc.rate:                   1241.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              466048.578 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.455 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 507528.794 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4212.863 ±(99.9%) 153.783 ops/s [Average]
[info]   (min, avg, max) = (4159.952, 4212.863, 4255.685), stdev = 39.937
[info]   CI (99.9%): [4059.080, 4366.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1247.544 ±(99.9%) 46.029 MB/sec [Average]
[info]   (min, avg, max) = (1231.527, 1247.544, 1260.395), stdev = 11.954
[info]   CI (99.9%): [1201.515, 1293.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   466048.266 ±(99.9%) 2.557 B/op [Average]
[info]   (min, avg, max) = (466047.390, 466048.266, 466048.867), stdev = 0.664
[info]   CI (99.9%): [466045.709, 466050.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   20.178 ±(99.9%) 44.818 B/op [Average]
[info]   (min, avg, max) = (7.780, 20.178, 38.487), stdev = 11.639
[info]   CI (99.9%): [≈ 0, 64.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1274.892 ±(99.9%) 569.339 MB/sec [Average]
[info]   (min, avg, max) = (1010.767, 1274.892, 1351.455), stdev = 147.856
[info]   CI (99.9%): [705.553, 1844.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   476304.832 ±(99.9%) 213855.741 B/op [Average]
[info]   (min, avg, max) = (377781.121, 476304.832, 508537.940), stdev = 55537.657
[info]   CI (99.9%): [262449.091, 690160.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 10.000), stdev = 2.074
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 69.64% complete, ETA 00:09:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 250170.005 ops/s
[info] # Warmup Iteration   2: 663628.504 ops/s
[info] # Warmup Iteration   3: 667163.404 ops/s
[info] # Warmup Iteration   4: 673848.764 ops/s
[info] # Warmup Iteration   5: 669003.324 ops/s
[info] Iteration   1: 678062.082 ops/s
[info]                  ·gc.alloc.rate:                   1484.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1662.442 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3860.090 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 680216.604 ops/s
[info]                  ·gc.alloc.rate:                   1490.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3099.583 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 670085.181 ops/s
[info]                  ·gc.alloc.rate:                   1467.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3952.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 679115.192 ops/s
[info]                  ·gc.alloc.rate:                   1487.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3130.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 671523.937 ops/s
[info]                  ·gc.alloc.rate:                   1470.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              3448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.505 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3173.278 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   675800.599 ±(99.9%) 17912.508 ops/s [Average]
[info]   (min, avg, max) = (670085.181, 675800.599, 680216.604), stdev = 4651.822
[info]   CI (99.9%): [657888.091, 693713.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1480.190 ±(99.9%) 39.345 MB/sec [Average]
[info]   (min, avg, max) = (1467.776, 1480.190, 1490.050), stdev = 10.218
[info]   CI (99.9%): [1440.845, 1519.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3448.001, 3448.001, 3448.001), stdev = 0.001
[info]   CI (99.9%): [3448.001, 3448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.136 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.136, 0.241), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1477.623 ±(99.9%) 685.495 MB/sec [Average]
[info]   (min, avg, max) = (1339.482, 1477.623, 1682.356), stdev = 178.021
[info]   CI (99.9%): [792.128, 2163.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   3443.026 ±(99.9%) 1635.638 B/op [Average]
[info]   (min, avg, max) = (3099.583, 3443.026, 3952.079), stdev = 424.770
[info]   CI (99.9%): [1807.388, 5078.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 14.000), stdev = 3.209
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.54% complete, ETA 00:08:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2201136.345 ops/s
[info] # Warmup Iteration   2: 2438060.273 ops/s
[info] # Warmup Iteration   3: 2439268.312 ops/s
[info] # Warmup Iteration   4: 2381836.171 ops/s
[info] # Warmup Iteration   5: 2448154.893 ops/s
[info] Iteration   1: 2448241.530 ops/s
[info]                  ·gc.alloc.rate:                   398.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.347 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 209.197 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2448697.057 ops/s
[info]                  ·gc.alloc.rate:                   398.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.380 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 209.159 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2433556.393 ops/s
[info]                  ·gc.alloc.rate:                   395.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.702 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211.309 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2423686.172 ops/s
[info]                  ·gc.alloc.rate:                   394.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 425.218 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2445142.130 ops/s
[info]                  ·gc.alloc.rate:                   397.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.087 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211.171 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2439864.657 ±(99.9%) 42074.897 ops/s [Average]
[info]   (min, avg, max) = (2423686.172, 2439864.657, 2448697.057), stdev = 10926.717
[info]   CI (99.9%): [2397789.760, 2481939.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   396.825 ±(99.9%) 6.800 MB/sec [Average]
[info]   (min, avg, max) = (394.208, 396.825, 398.248), stdev = 1.766
[info]   CI (99.9%): [390.025, 403.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.022 ±(99.9%) 0.079 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.041), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.060 ±(99.9%) 565.545 MB/sec [Average]
[info]   (min, avg, max) = (325.347, 392.060, 654.781), stdev = 146.870
[info]   CI (99.9%): [≈ 0, 957.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   253.211 ±(99.9%) 370.280 B/op [Average]
[info]   (min, avg, max) = (209.159, 253.211, 425.218), stdev = 96.160
[info]   CI (99.9%): [≈ 0, 623.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 71.43% complete, ETA 00:08:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111474.876 ops/s
[info] # Warmup Iteration   2: 236954.691 ops/s
[info] # Warmup Iteration   3: 240935.147 ops/s
[info] # Warmup Iteration   4: 237691.069 ops/s
[info] # Warmup Iteration   5: 239252.450 ops/s
[info] Iteration   1: 235144.327 ops/s
[info]                  ·gc.alloc.rate:                   914.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.382 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6623.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 236283.385 ops/s
[info]                  ·gc.alloc.rate:                   918.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.713 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6617.854 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 238800.666 ops/s
[info]                  ·gc.alloc.rate:                   928.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.284 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6585.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 236474.291 ops/s
[info]                  ·gc.alloc.rate:                   917.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.963 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6676.428 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 237288.453 ops/s
[info]                  ·gc.alloc.rate:                   922.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4449.222 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   236798.224 ±(99.9%) 5221.658 ops/s [Average]
[info]   (min, avg, max) = (235144.327, 236798.224, 238800.666), stdev = 1356.048
[info]   CI (99.9%): [231576.567, 242019.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   920.405 ±(99.9%) 21.289 MB/sec [Average]
[info]   (min, avg, max) = (914.204, 920.405, 928.683), stdev = 5.529
[info]   CI (99.9%): [899.116, 941.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6120.002, 6120.002, 6120.002), stdev = 0.001
[info]   CI (99.9%): [6120.002, 6120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.332 ±(99.9%) 1.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.332, 0.693), stdev = 0.318
[info]   CI (99.9%): [≈ 0, 1.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   930.820 ±(99.9%) 560.084 MB/sec [Average]
[info]   (min, avg, max) = (670.757, 930.820, 1000.963), stdev = 145.452
[info]   CI (99.9%): [370.736, 1490.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   6190.407 ±(99.9%) 3750.146 B/op [Average]
[info]   (min, avg, max) = (4449.222, 6190.407, 6676.428), stdev = 973.901
[info]   CI (99.9%): [2440.261, 9940.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 15.000), stdev = 4.336
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 72.32% complete, ETA 00:08:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 469931.005 ops/s
[info] # Warmup Iteration   2: 623439.629 ops/s
[info] # Warmup Iteration   3: 619529.209 ops/s
[info] # Warmup Iteration   4: 628576.117 ops/s
[info] # Warmup Iteration   5: 636884.027 ops/s
[info] Iteration   1: 630015.579 ops/s
[info]                  ·gc.alloc.rate:                   1495.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              3736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.499 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4181.104 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 632081.024 ops/s
[info]                  ·gc.alloc.rate:                   1500.263 MB/sec
[info]                  ·gc.alloc.rate.norm:              3736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.484 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3350.565 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 624742.514 ops/s
[info]                  ·gc.alloc.rate:                   1482.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              3736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4254.079 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 619730.581 ops/s
[info]                  ·gc.alloc.rate:                   1470.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              3736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3438.986 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 633082.772 ops/s
[info]                  ·gc.alloc.rate:                   1502.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              3736.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3372.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   627930.494 ±(99.9%) 21570.673 ops/s [Average]
[info]   (min, avg, max) = (619730.581, 627930.494, 633082.772), stdev = 5601.835
[info]   CI (99.9%): [606359.821, 649501.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1490.378 ±(99.9%) 51.360 MB/sec [Average]
[info]   (min, avg, max) = (1470.931, 1490.378, 1502.687), stdev = 13.338
[info]   CI (99.9%): [1439.018, 1541.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3736.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3736.001, 3736.001, 3736.001), stdev = 0.001
[info]   CI (99.9%): [3736.001, 3736.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.136 ±(99.9%) 0.366 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.136, 0.262), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1483.525 ±(99.9%) 694.207 MB/sec [Average]
[info]   (min, avg, max) = (1345.484, 1483.525, 1688.267), stdev = 180.283
[info]   CI (99.9%): [789.319, 2177.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3719.400 ±(99.9%) 1758.513 B/op [Average]
[info]   (min, avg, max) = (3350.565, 3719.400, 4254.079), stdev = 456.680
[info]   CI (99.9%): [1960.886, 5477.913] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.200, 18.000), stdev = 4.970
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 73.21% complete, ETA 00:08:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 815679.033 ops/s
[info] # Warmup Iteration   2: 1344318.083 ops/s
[info] # Warmup Iteration   3: 1374340.433 ops/s
[info] # Warmup Iteration   4: 1375504.214 ops/s
[info] # Warmup Iteration   5: 1388419.656 ops/s
[info] Iteration   1: 1373742.196 ops/s
[info]                  ·gc.alloc.rate:                   900.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1126.850 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1369938.179 ops/s
[info]                  ·gc.alloc.rate:                   898.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.823 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1136.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1358115.900 ops/s
[info]                  ·gc.alloc.rate:                   890.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1153.621 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1379661.685 ops/s
[info]                  ·gc.alloc.rate:                   904.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 760.284 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1377622.947 ops/s
[info]                  ·gc.alloc.rate:                   903.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              1032.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.272 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1146.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1371816.181 ±(99.9%) 32798.615 ops/s [Average]
[info]   (min, avg, max) = (1358115.900, 1371816.181, 1379661.685), stdev = 8517.696
[info]   CI (99.9%): [1339017.566, 1404614.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   899.476 ±(99.9%) 21.725 MB/sec [Average]
[info]   (min, avg, max) = (890.400, 899.476, 904.682), stdev = 5.642
[info]   CI (99.9%): [877.751, 921.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1032.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1032.000, 1032.000, 1032.000), stdev = 0.001
[info]   CI (99.9%): [1032.000, 1032.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.067 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.096), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   927.482 ±(99.9%) 562.531 MB/sec [Average]
[info]   (min, avg, max) = (666.487, 927.482, 1003.272), stdev = 146.088
[info]   CI (99.9%): [364.950, 1490.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1064.597 ±(99.9%) 656.218 B/op [Average]
[info]   (min, avg, max) = (760.284, 1064.597, 1153.621), stdev = 170.418
[info]   CI (99.9%): [408.379, 1720.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.408
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 74.11% complete, ETA 00:07:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4562018.624 ops/s
[info] # Warmup Iteration   2: 5161052.664 ops/s
[info] # Warmup Iteration   3: 5165422.023 ops/s
[info] # Warmup Iteration   4: 5184304.144 ops/s
[info] # Warmup Iteration   5: 5168776.647 ops/s
[info] Iteration   1: 5174303.712 ops/s
[info]                  ·gc.alloc.rate:                   578.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 198.769 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5180260.136 ops/s
[info]                  ·gc.alloc.rate:                   579.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.049 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.350 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5165493.380 ops/s
[info]                  ·gc.alloc.rate:                   577.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.764 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 200.731 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5181695.580 ops/s
[info]                  ·gc.alloc.rate:                   579.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      330.695 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 100.456 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5100741.873 ops/s
[info]                  ·gc.alloc.rate:                   570.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.494 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   5160498.936 ±(99.9%) 130953.397 ops/s [Average]
[info]   (min, avg, max) = (5100741.873, 5160498.936, 5181695.580), stdev = 34008.181
[info]   CI (99.9%): [5029545.539, 5291452.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   576.997 ±(99.9%) 14.617 MB/sec [Average]
[info]   (min, avg, max) = (570.323, 576.997, 579.381), stdev = 3.796
[info]   CI (99.9%): [562.379, 591.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.014 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.032), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   592.294 ±(99.9%) 563.270 MB/sec [Average]
[info]   (min, avg, max) = (330.695, 592.294, 662.657), stdev = 146.280
[info]   CI (99.9%): [29.024, 1155.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   180.760 ±(99.9%) 173.073 B/op [Average]
[info]   (min, avg, max) = (100.456, 180.760, 204.494), stdev = 44.947
[info]   CI (99.9%): [7.687, 353.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 75.00% complete, ETA 00:07:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 227172.012 ops/s
[info] # Warmup Iteration   2: 371452.600 ops/s
[info] # Warmup Iteration   3: 373277.525 ops/s
[info] # Warmup Iteration   4: 375717.898 ops/s
[info] # Warmup Iteration   5: 374334.979 ops/s
[info] Iteration   1: 374784.213 ops/s
[info]                  ·gc.alloc.rate:                   1285.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5599.939 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 374627.370 ops/s
[info]                  ·gc.alloc.rate:                   1285.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.229 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5630.359 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 372418.103 ops/s
[info]                  ·gc.alloc.rate:                   1277.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.659 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4267.516 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 375652.547 ops/s
[info]                  ·gc.alloc.rate:                   1288.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.523 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5654.401 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 373231.289 ops/s
[info]                  ·gc.alloc.rate:                   1280.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.995 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5706.569 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   374142.705 ±(99.9%) 4995.083 ops/s [Average]
[info]   (min, avg, max) = (372418.103, 374142.705, 375652.547), stdev = 1297.207
[info]   CI (99.9%): [369147.622, 379137.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1283.503 ±(99.9%) 17.267 MB/sec [Average]
[info]   (min, avg, max) = (1277.595, 1283.503, 1288.806), stdev = 4.484
[info]   CI (99.9%): [1266.236, 1300.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5400.001, 5400.001, 5400.001), stdev = 0.001
[info]   CI (99.9%): [5400.001, 5400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.175 ±(99.9%) 0.335 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.175, 0.262), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1277.082 ±(99.9%) 576.442 MB/sec [Average]
[info]   (min, avg, max) = (1009.659, 1277.082, 1352.995), stdev = 149.700
[info]   CI (99.9%): [700.640, 1853.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5371.757 ±(99.9%) 2381.707 B/op [Average]
[info]   (min, avg, max) = (4267.516, 5371.757, 5706.569), stdev = 618.522
[info]   CI (99.9%): [2990.050, 7753.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 3.114
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 75.89% complete, ETA 00:07:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 186356.879 ops/s
[info] # Warmup Iteration   2: 345751.178 ops/s
[info] # Warmup Iteration   3: 350140.663 ops/s
[info] # Warmup Iteration   4: 349221.057 ops/s
[info] # Warmup Iteration   5: 350722.016 ops/s
[info] Iteration   1: 346498.080 ops/s
[info]                  ·gc.alloc.rate:                   954.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4491.567 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 352106.663 ops/s
[info]                  ·gc.alloc.rate:                   969.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4449.881 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 351775.193 ops/s
[info]                  ·gc.alloc.rate:                   969.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.447 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4471.797 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 344570.905 ops/s
[info]                  ·gc.alloc.rate:                   949.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.226 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4586.807 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 348372.700 ops/s
[info]                  ·gc.alloc.rate:                   959.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              4336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4551.725 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   348664.708 ±(99.9%) 12634.123 ops/s [Average]
[info]   (min, avg, max) = (344570.905, 348664.708, 352106.663), stdev = 3281.042
[info]   CI (99.9%): [336030.585, 361298.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   960.507 ±(99.9%) 34.684 MB/sec [Average]
[info]   (min, avg, max) = (949.315, 960.507, 969.916), stdev = 9.007
[info]   CI (99.9%): [925.824, 995.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4336.001, 4336.001, 4336.001), stdev = 0.001
[info]   CI (99.9%): [4336.001, 4336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.263 ±(99.9%) 0.465 B/op [Average]
[info]   (min, avg, max) = (0.186, 0.263, 0.465), stdev = 0.121
[info]   CI (99.9%): [≈ 0, 0.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   999.053 ±(99.9%) 28.437 MB/sec [Average]
[info]   (min, avg, max) = (988.720, 999.053, 1007.482), stdev = 7.385
[info]   CI (99.9%): [970.616, 1027.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4510.355 ±(99.9%) 219.969 B/op [Average]
[info]   (min, avg, max) = (4449.881, 4510.355, 4586.807), stdev = 57.125
[info]   CI (99.9%): [4290.387, 4730.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 15.000), stdev = 4.336
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 76.79% complete, ETA 00:07:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 143024.837 ops/s
[info] # Warmup Iteration   2: 771213.791 ops/s
[info] # Warmup Iteration   3: 767651.911 ops/s
[info] # Warmup Iteration   4: 775069.830 ops/s
[info] # Warmup Iteration   5: 773472.030 ops/s
[info] Iteration   1: 777393.854 ops/s
[info]                  ·gc.alloc.rate:                   1220.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1320.134 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2672.988 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 768331.419 ops/s
[info]                  ·gc.alloc.rate:                   1206.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2725.362 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 763882.974 ops/s
[info]                  ·gc.alloc.rate:                   1199.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.275 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2066.868 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 777699.029 ops/s
[info]                  ·gc.alloc.rate:                   1221.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2717.831 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 767539.759 ops/s
[info]                  ·gc.alloc.rate:                   1205.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              2472.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.974 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2072.789 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   770969.407 ±(99.9%) 24008.720 ops/s [Average]
[info]   (min, avg, max) = (763882.974, 770969.407, 777699.029), stdev = 6234.988
[info]   CI (99.9%): [746960.687, 794978.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1210.958 ±(99.9%) 37.413 MB/sec [Average]
[info]   (min, avg, max) = (1199.929, 1210.958, 1221.552), stdev = 9.716
[info]   CI (99.9%): [1173.545, 1248.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2472.001, 2472.001, 2472.001), stdev = 0.001
[info]   CI (99.9%): [2472.000, 2472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.111 ±(99.9%) 0.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.111, 0.214), stdev = 0.099
[info]   CI (99.9%): [≈ 0, 0.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1201.571 ±(99.9%) 684.299 MB/sec [Average]
[info]   (min, avg, max) = (1003.275, 1201.571, 1343.031), stdev = 177.710
[info]   CI (99.9%): [517.272, 1885.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2451.168 ±(99.9%) 1342.700 B/op [Average]
[info]   (min, avg, max) = (2066.868, 2451.168, 2725.362), stdev = 348.695
[info]   CI (99.9%): [1108.468, 3793.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 15.000), stdev = 3.782
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 77.68% complete, ETA 00:06:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2247684.323 ops/s
[info] # Warmup Iteration   2: 2440682.389 ops/s
[info] # Warmup Iteration   3: 2444544.581 ops/s
[info] # Warmup Iteration   4: 2470973.069 ops/s
[info] # Warmup Iteration   5: 2480717.599 ops/s
[info] Iteration   1: 2450581.880 ops/s
[info]                  ·gc.alloc.rate:                   473.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.994 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2418252.604 ops/s
[info]                  ·gc.alloc.rate:                   467.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.438 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 425.303 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2475556.496 ops/s
[info]                  ·gc.alloc.rate:                   478.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.020 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.572 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2479525.376 ops/s
[info]                  ·gc.alloc.rate:                   478.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.438 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 417.343 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2485334.025 ops/s
[info]                  ·gc.alloc.rate:                   480.088 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      329.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208.602 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2461850.076 ±(99.9%) 106842.183 ops/s [Average]
[info]   (min, avg, max) = (2418252.604, 2461850.076, 2485334.025), stdev = 27746.576
[info]   CI (99.9%): [2355007.894, 2568692.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   475.478 ±(99.9%) 20.692 MB/sec [Average]
[info]   (min, avg, max) = (467.068, 475.478, 480.088), stdev = 5.374
[info]   CI (99.9%): [454.786, 496.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.019 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.054), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.735 ±(99.9%) 691.484 MB/sec [Average]
[info]   (min, avg, max) = (325.345, 458.735, 657.438), stdev = 179.576
[info]   CI (99.9%): [≈ 0, 1150.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   293.763 ±(99.9%) 448.523 B/op [Average]
[info]   (min, avg, max) = (208.572, 293.763, 425.303), stdev = 116.480
[info]   CI (99.9%): [≈ 0, 742.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 78.57% complete, ETA 00:06:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 124754.747 ops/s
[info] # Warmup Iteration   2: 247684.701 ops/s
[info] # Warmup Iteration   3: 255743.623 ops/s
[info] # Warmup Iteration   4: 255957.007 ops/s
[info] # Warmup Iteration   5: 259834.091 ops/s
[info] Iteration   1: 262073.769 ops/s
[info]                  ·gc.alloc.rate:                   957.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.375 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.546 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5948.638 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 259606.460 ops/s
[info]                  ·gc.alloc.rate:                   948.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.794 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4018.182 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 258019.059 ops/s
[info]                  ·gc.alloc.rate:                   942.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6095.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 257591.881 ops/s
[info]                  ·gc.alloc.rate:                   941.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.972 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6129.286 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 255712.320 ops/s
[info]                  ·gc.alloc.rate:                   934.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              5752.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.585 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6196.768 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   258600.698 ±(99.9%) 9187.746 ops/s [Average]
[info]   (min, avg, max) = (255712.320, 258600.698, 262073.769), stdev = 2386.028
[info]   CI (99.9%): [249412.952, 267788.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   945.006 ±(99.9%) 33.934 MB/sec [Average]
[info]   (min, avg, max) = (934.338, 945.006, 957.803), stdev = 8.813
[info]   CI (99.9%): [911.071, 978.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5752.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5752.002, 5752.002, 5752.002), stdev = 0.001
[info]   CI (99.9%): [5752.001, 5752.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.278 ±(99.9%) 0.402 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.278, 0.381), stdev = 0.104
[info]   CI (99.9%): [≈ 0, 0.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   932.398 ±(99.9%) 580.797 MB/sec [Average]
[info]   (min, avg, max) = (662.794, 932.398, 1006.585), stdev = 150.831
[info]   CI (99.9%): [351.601, 1513.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5677.580 ±(99.9%) 3589.024 B/op [Average]
[info]   (min, avg, max) = (4018.182, 5677.580, 6196.768), stdev = 932.058
[info]   CI (99.9%): [2088.557, 9266.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 9.000), stdev = 3.082
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 79.46% complete, ETA 00:06:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 416391.572 ops/s
[info] # Warmup Iteration   2: 571921.343 ops/s
[info] # Warmup Iteration   3: 588299.271 ops/s
[info] # Warmup Iteration   4: 592665.930 ops/s
[info] # Warmup Iteration   5: 594166.654 ops/s
[info] Iteration   1: 588841.306 ops/s
[info]                  ·gc.alloc.rate:                   1364.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3566.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 579678.293 ops/s
[info]                  ·gc.alloc.rate:                   1343.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3642.522 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 586758.107 ops/s
[info]                  ·gc.alloc.rate:                   1359.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.581 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3612.853 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 585799.950 ops/s
[info]                  ·gc.alloc.rate:                   1357.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3630.505 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 589304.149 ops/s
[info]                  ·gc.alloc.rate:                   1365.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              3648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3616.767 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   586076.361 ±(99.9%) 14856.200 ops/s [Average]
[info]   (min, avg, max) = (579678.293, 586076.361, 589304.149), stdev = 3858.108
[info]   CI (99.9%): [571220.161, 600932.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1358.207 ±(99.9%) 34.371 MB/sec [Average]
[info]   (min, avg, max) = (1343.441, 1358.207, 1365.913), stdev = 8.926
[info]   CI (99.9%): [1323.835, 1392.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3648.001, 3648.001, 3648.001), stdev = 0.001
[info]   CI (99.9%): [3648.001, 3648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.168 ±(99.9%) 0.409 B/op [Average]
[info]   (min, avg, max) = (0.056, 0.168, 0.339), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1345.410 ±(99.9%) 31.181 MB/sec [Average]
[info]   (min, avg, max) = (1333.769, 1345.410, 1354.218), stdev = 8.098
[info]   CI (99.9%): [1314.229, 1376.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3613.735 ±(99.9%) 112.196 B/op [Average]
[info]   (min, avg, max) = (3566.028, 3613.735, 3642.522), stdev = 29.137
[info]   CI (99.9%): [3501.539, 3725.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 10.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 80.36% complete, ETA 00:05:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 690700.218 ops/s
[info] # Warmup Iteration   2: 1264311.049 ops/s
[info] # Warmup Iteration   3: 1259165.693 ops/s
[info] # Warmup Iteration   4: 1280948.966 ops/s
[info] # Warmup Iteration   5: 1271948.187 ops/s
[info] Iteration   1: 1264842.335 ops/s
[info]                  ·gc.alloc.rate:                   687.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      977.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1215.999 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1270210.544 ops/s
[info]                  ·gc.alloc.rate:                   690.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 811.350 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1263853.049 ops/s
[info]                  ·gc.alloc.rate:                   687.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.432 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 818.757 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1270610.322 ops/s
[info]                  ·gc.alloc.rate:                   690.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 817.708 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1256593.493 ops/s
[info]                  ·gc.alloc.rate:                   683.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.808 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 830.178 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1265221.949 ±(99.9%) 21984.858 ops/s [Average]
[info]   (min, avg, max) = (1256593.493, 1265221.949, 1270610.322), stdev = 5709.398
[info]   CI (99.9%): [1243237.091, 1287206.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   688.053 ±(99.9%) 11.808 MB/sec [Average]
[info]   (min, avg, max) = (683.425, 688.053, 690.929), stdev = 3.066
[info]   CI (99.9%): [676.245, 699.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (856.000, 856.000, 856.000), stdev = 0.001
[info]   CI (99.9%): [856.000, 856.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.041 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.041, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   722.414 ±(99.9%) 548.298 MB/sec [Average]
[info]   (min, avg, max) = (654.733, 722.414, 977.074), stdev = 142.391
[info]   CI (99.9%): [174.116, 1270.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   898.798 ±(99.9%) 683.298 B/op [Average]
[info]   (min, avg, max) = (811.350, 898.798, 1215.999), stdev = 177.450
[info]   CI (99.9%): [215.500, 1582.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 8.000), stdev = 2.387
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 81.25% complete, ETA 00:05:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4249212.639 ops/s
[info] # Warmup Iteration   2: 4619382.717 ops/s
[info] # Warmup Iteration   3: 4665733.306 ops/s
[info] # Warmup Iteration   4: 4718199.224 ops/s
[info] # Warmup Iteration   5: 4679645.588 ops/s
[info] Iteration   1: 4707341.462 ops/s
[info]                  ·gc.alloc.rate:                   358.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.124 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4647968.157 ops/s
[info]                  ·gc.alloc.rate:                   354.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.183 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4740561.898 ops/s
[info]                  ·gc.alloc.rate:                   360.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.032 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4718327.318 ops/s
[info]                  ·gc.alloc.rate:                   359.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.352 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 217.983 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4740724.758 ops/s
[info]                  ·gc.alloc.rate:                   361.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 108.918 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   4710984.718 ±(99.9%) 146597.226 ops/s [Average]
[info]   (min, avg, max) = (4647968.157, 4710984.718, 4740724.758), stdev = 38070.834
[info]   CI (99.9%): [4564387.493, 4857581.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   359.005 ±(99.9%) 10.629 MB/sec [Average]
[info]   (min, avg, max) = (354.390, 359.005, 361.422), stdev = 2.760
[info]   CI (99.9%): [348.376, 369.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.007 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.035), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   390.970 ±(99.9%) 564.836 MB/sec [Average]
[info]   (min, avg, max) = (323.329, 390.970, 653.352), stdev = 146.686
[info]   CI (99.9%): [≈ 0, 955.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   130.648 ±(99.9%) 188.024 B/op [Average]
[info]   (min, avg, max) = (108.032, 130.648, 217.983), stdev = 48.829
[info]   CI (99.9%): [≈ 0, 318.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 9.000), stdev = 3.209
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 82.14% complete, ETA 00:05:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 223714.588 ops/s
[info] # Warmup Iteration   2: 390329.645 ops/s
[info] # Warmup Iteration   3: 386593.269 ops/s
[info] # Warmup Iteration   4: 392583.424 ops/s
[info] # Warmup Iteration   5: 393561.801 ops/s
[info] Iteration   1: 391512.179 ops/s
[info]                  ·gc.alloc.rate:                   1335.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5361.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 389795.894 ops/s
[info]                  ·gc.alloc.rate:                   1329.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.121 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5411.464 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 386035.013 ops/s
[info]                  ·gc.alloc.rate:                   1316.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.571 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5491.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 394165.305 ops/s
[info]                  ·gc.alloc.rate:                   1344.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5391.444 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 387829.104 ops/s
[info]                  ·gc.alloc.rate:                   1322.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5493.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   389867.499 ±(99.9%) 12180.494 ops/s [Average]
[info]   (min, avg, max) = (386035.013, 389867.499, 394165.305), stdev = 3163.236
[info]   CI (99.9%): [377687.005, 402047.993] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1329.547 ±(99.9%) 41.570 MB/sec [Average]
[info]   (min, avg, max) = (1316.396, 1329.547, 1344.214), stdev = 10.796
[info]   CI (99.9%): [1287.977, 1371.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5368.001, 5368.001, 5368.001), stdev = 0.001
[info]   CI (99.9%): [5368.001, 5368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.125), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.286 ±(99.9%) 0.543 B/op [Average]
[info]   (min, avg, max) = (0.166, 0.286, 0.504), stdev = 0.141
[info]   CI (99.9%): [≈ 0, 0.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1344.727 ±(99.9%) 31.007 MB/sec [Average]
[info]   (min, avg, max) = (1333.362, 1344.727, 1353.495), stdev = 8.052
[info]   CI (99.9%): [1313.720, 1375.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5429.616 ±(99.9%) 230.196 B/op [Average]
[info]   (min, avg, max) = (5361.026, 5429.616, 5493.097), stdev = 59.781
[info]   CI (99.9%): [5199.420, 5659.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.608
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 83.04% complete, ETA 00:05:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 172052.074 ops/s
[info] # Warmup Iteration   2: 336128.486 ops/s
[info] # Warmup Iteration   3: 339428.246 ops/s
[info] # Warmup Iteration   4: 337652.103 ops/s
[info] # Warmup Iteration   5: 341444.950 ops/s
[info] Iteration   1: 335534.336 ops/s
[info]                  ·gc.alloc.rate:                   910.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4632.168 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 336984.832 ops/s
[info]                  ·gc.alloc.rate:                   914.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4637.143 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 338394.177 ops/s
[info]                  ·gc.alloc.rate:                   918.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.938 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4642.349 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 337717.811 ops/s
[info]                  ·gc.alloc.rate:                   916.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.221 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4670.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 339992.277 ops/s
[info]                  ·gc.alloc.rate:                   922.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              4272.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      670.798 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3105.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   337724.686 ±(99.9%) 6366.750 ops/s [Average]
[info]   (min, avg, max) = (335534.336, 337724.686, 339992.277), stdev = 1653.425
[info]   CI (99.9%): [331357.937, 344091.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   916.607 ±(99.9%) 17.459 MB/sec [Average]
[info]   (min, avg, max) = (910.589, 916.607, 922.837), stdev = 4.534
[info]   CI (99.9%): [899.147, 934.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4272.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4272.001, 4272.001, 4272.001), stdev = 0.001
[info]   CI (99.9%): [4272.001, 4272.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.234 ±(99.9%) 0.683 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.234, 0.488), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   930.207 ±(99.9%) 558.810 MB/sec [Average]
[info]   (min, avg, max) = (670.798, 930.207, 1002.221), stdev = 145.121
[info]   CI (99.9%): [371.397, 1489.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4337.462 ±(99.9%) 2653.018 B/op [Average]
[info]   (min, avg, max) = (3105.261, 4337.462, 4670.389), stdev = 688.980
[info]   CI (99.9%): [1684.444, 6990.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.871
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 83.93% complete, ETA 00:04:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 90175.733 ops/s
[info] # Warmup Iteration   2: 644901.425 ops/s
[info] # Warmup Iteration   3: 774108.564 ops/s
[info] # Warmup Iteration   4: 777528.571 ops/s
[info] # Warmup Iteration   5: 776180.764 ops/s
[info] Iteration   1: 772734.288 ops/s
[info]                  ·gc.alloc.rate:                   1150.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2011.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 784488.020 ops/s
[info]                  ·gc.alloc.rate:                   1168.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2659.444 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 786340.823 ops/s
[info]                  ·gc.alloc.rate:                   1171.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2000.570 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 774428.354 ops/s
[info]                  ·gc.alloc.rate:                   1153.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2723.785 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 786312.531 ops/s
[info]                  ·gc.alloc.rate:                   1171.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.904 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2019.313 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   780860.803 ±(99.9%) 25854.235 ops/s [Average]
[info]   (min, avg, max) = (772734.288, 780860.803, 786340.823), stdev = 6714.263
[info]   CI (99.9%): [755006.568, 806715.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1163.000 ±(99.9%) 38.987 MB/sec [Average]
[info]   (min, avg, max) = (1150.604, 1163.000, 1171.244), stdev = 10.125
[info]   CI (99.9%): [1124.013, 1201.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.001, 2344.001, 2344.001), stdev = 0.001
[info]   CI (99.9%): [2344.000, 2344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.134 ±(99.9%) 0.176 B/op [Average]
[info]   (min, avg, max) = (0.083, 0.134, 0.169), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1132.409 ±(99.9%) 706.299 MB/sec [Average]
[info]   (min, avg, max) = (987.329, 1132.409, 1340.334), stdev = 183.424
[info]   CI (99.9%): [426.110, 1838.708] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2282.898 ±(99.9%) 1439.592 B/op [Average]
[info]   (min, avg, max) = (2000.570, 2282.898, 2723.785), stdev = 373.857
[info]   CI (99.9%): [843.306, 3722.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 84.82% complete, ETA 00:04:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1838210.170 ops/s
[info] # Warmup Iteration   2: 2074898.996 ops/s
[info] # Warmup Iteration   3: 2119465.453 ops/s
[info] # Warmup Iteration   4: 2123225.632 ops/s
[info] # Warmup Iteration   5: 2136124.154 ops/s
[info] Iteration   1: 2137105.170 ops/s
[info]                  ·gc.alloc.rate:                   434.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      650.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 479.311 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2142088.187 ops/s
[info]                  ·gc.alloc.rate:                   435.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2140254.619 ops/s
[info]                  ·gc.alloc.rate:                   435.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 240.273 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2127289.191 ops/s
[info]                  ·gc.alloc.rate:                   432.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.046 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 242.727 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2128677.384 ops/s
[info]                  ·gc.alloc.rate:                   432.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              320.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.302 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 486.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2135082.910 ±(99.9%) 25951.371 ops/s [Average]
[info]   (min, avg, max) = (2127289.191, 2135082.910, 2142088.187), stdev = 6739.489
[info]   CI (99.9%): [2109131.539, 2161034.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   434.042 ±(99.9%) 5.338 MB/sec [Average]
[info]   (min, avg, max) = (432.481, 434.042, 435.472), stdev = 1.386
[info]   CI (99.9%): [428.704, 439.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   320.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (320.000, 320.000, 320.000), stdev = 0.001
[info]   CI (99.9%): [320.000, 320.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.031 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.061), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   457.899 ±(99.9%) 689.426 MB/sec [Average]
[info]   (min, avg, max) = (326.704, 457.899, 657.302), stdev = 179.042
[info]   CI (99.9%): [≈ 0, 1147.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   337.702 ±(99.9%) 509.852 B/op [Average]
[info]   (min, avg, max) = (240.074, 337.702, 486.124), stdev = 132.407
[info]   CI (99.9%): [≈ 0, 847.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 85.71% complete, ETA 00:04:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106919.840 ops/s
[info] # Warmup Iteration   2: 248469.084 ops/s
[info] # Warmup Iteration   3: 253461.378 ops/s
[info] # Warmup Iteration   4: 250400.557 ops/s
[info] # Warmup Iteration   5: 253378.310 ops/s
[info] Iteration   1: 250096.817 ops/s
[info]                  ·gc.alloc.rate:                   959.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6227.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 252975.336 ops/s
[info]                  ·gc.alloc.rate:                   970.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6193.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 254040.230 ops/s
[info]                  ·gc.alloc.rate:                   975.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.316 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6196.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 254711.705 ops/s
[info]                  ·gc.alloc.rate:                   977.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6209.110 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 253947.027 ops/s
[info]                  ·gc.alloc.rate:                   974.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      671.298 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4161.442 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   253154.223 ±(99.9%) 7000.082 ops/s [Average]
[info]   (min, avg, max) = (250096.817, 253154.223, 254711.705), stdev = 1817.899
[info]   CI (99.9%): [246154.141, 260154.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   971.425 ±(99.9%) 26.953 MB/sec [Average]
[info]   (min, avg, max) = (959.649, 971.425, 977.353), stdev = 7.000
[info]   CI (99.9%): [944.472, 998.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6040.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6040.002, 6040.002, 6040.002), stdev = 0.001
[info]   CI (99.9%): [6040.001, 6040.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.363 ±(99.9%) 1.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.363, 0.655), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   932.214 ±(99.9%) 562.072 MB/sec [Average]
[info]   (min, avg, max) = (671.298, 932.214, 1004.717), stdev = 145.968
[info]   CI (99.9%): [370.142, 1494.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5797.476 ±(99.9%) 3522.062 B/op [Average]
[info]   (min, avg, max) = (4161.442, 5797.476, 6227.201), stdev = 914.668
[info]   CI (99.9%): [2275.414, 9319.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.775
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 86.61% complete, ETA 00:04:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 490992.869 ops/s
[info] # Warmup Iteration   2: 658533.260 ops/s
[info] # Warmup Iteration   3: 695784.243 ops/s
[info] # Warmup Iteration   4: 691667.277 ops/s
[info] # Warmup Iteration   5: 682819.131 ops/s
[info] Iteration   1: 693535.458 ops/s
[info]                  ·gc.alloc.rate:                   1201.630 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2262.165 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 680790.393 ops/s
[info]                  ·gc.alloc.rate:                   1179.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3087.430 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 692513.153 ops/s
[info]                  ·gc.alloc.rate:                   1200.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3052.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 697782.477 ops/s
[info]                  ·gc.alloc.rate:                   1209.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.937 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2280.088 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 693166.479 ops/s
[info]                  ·gc.alloc.rate:                   1201.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              2728.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3068.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   691557.592 ±(99.9%) 24512.557 ops/s [Average]
[info]   (min, avg, max) = (680790.393, 691557.592, 697782.477), stdev = 6365.833
[info]   CI (99.9%): [667045.035, 716070.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1198.615 ±(99.9%) 42.599 MB/sec [Average]
[info]   (min, avg, max) = (1179.922, 1198.615, 1209.531), stdev = 11.063
[info]   CI (99.9%): [1156.016, 1241.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2728.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2728.001, 2728.001, 2728.001), stdev = 0.001
[info]   CI (99.9%): [2728.001, 2728.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.114 ±(99.9%) 0.209 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.114, 0.189), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1207.436 ±(99.9%) 716.803 MB/sec [Average]
[info]   (min, avg, max) = (996.439, 1207.436, 1351.326), stdev = 186.152
[info]   CI (99.9%): [490.633, 1924.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2749.982 ±(99.9%) 1684.113 B/op [Average]
[info]   (min, avg, max) = (2262.165, 2749.982, 3087.430), stdev = 437.359
[info]   CI (99.9%): [1065.869, 4434.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 87.50% complete, ETA 00:03:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1140419.681 ops/s
[info] # Warmup Iteration   2: 1621407.095 ops/s
[info] # Warmup Iteration   3: 1623882.589 ops/s
[info] # Warmup Iteration   4: 1631993.547 ops/s
[info] # Warmup Iteration   5: 1638589.121 ops/s
[info] Iteration   1: 1649010.718 ops/s
[info]                  ·gc.alloc.rate:                   678.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      979.337 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 934.913 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1653212.739 ops/s
[info]                  ·gc.alloc.rate:                   680.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.211 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 624.646 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1646072.504 ops/s
[info]                  ·gc.alloc.rate:                   677.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.100 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.795 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 629.899 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1642071.131 ops/s
[info]                  ·gc.alloc.rate:                   676.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.449 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 634.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1636362.743 ops/s
[info]                  ·gc.alloc.rate:                   673.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 638.756 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1645345.967 ±(99.9%) 24900.542 ops/s [Average]
[info]   (min, avg, max) = (1636362.743, 1645345.967, 1653212.739), stdev = 6466.592
[info]   CI (99.9%): [1620445.425, 1670246.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   677.421 ±(99.9%) 10.181 MB/sec [Average]
[info]   (min, avg, max) = (673.818, 677.421, 680.745), stdev = 2.644
[info]   CI (99.9%): [667.240, 687.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   648.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.000, 648.000), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.048 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.048, 0.100), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   723.999 ±(99.9%) 549.753 MB/sec [Average]
[info]   (min, avg, max) = (656.211, 723.999, 979.337), stdev = 142.769
[info]   CI (99.9%): [174.247, 1273.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   692.449 ±(99.9%) 522.307 B/op [Average]
[info]   (min, avg, max) = (624.646, 692.449, 934.913), stdev = 135.641
[info]   CI (99.9%): [170.142, 1214.756] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.483
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 88.39% complete, ETA 00:03:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3825253.487 ops/s
[info] # Warmup Iteration   2: 4301834.849 ops/s
[info] # Warmup Iteration   3: 4311495.838 ops/s
[info] # Warmup Iteration   4: 4315774.236 ops/s
[info] # Warmup Iteration   5: 4289834.627 ops/s
[info] Iteration   1: 4316272.930 ops/s
[info]                  ·gc.alloc.rate:                   482.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.374 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.659 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4308799.405 ops/s
[info]                  ·gc.alloc.rate:                   481.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.703 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4309221.356 ops/s
[info]                  ·gc.alloc.rate:                   481.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.993 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.821 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4260927.037 ops/s
[info]                  ·gc.alloc.rate:                   476.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.356 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 242.858 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4300817.837 ops/s
[info]                  ·gc.alloc.rate:                   480.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      329.376 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.546 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4299207.713 ±(99.9%) 85052.563 ops/s [Average]
[info]   (min, avg, max) = (4260927.037, 4299207.713, 4316272.930), stdev = 22087.881
[info]   CI (99.9%): [4214155.150, 4384260.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   480.709 ±(99.9%) 9.589 MB/sec [Average]
[info]   (min, avg, max) = (476.389, 480.709, 482.608), stdev = 2.490
[info]   CI (99.9%): [471.120, 490.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.207 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.017 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.038), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.729 ±(99.9%) 691.550 MB/sec [Average]
[info]   (min, avg, max) = (325.374, 458.729, 657.356), stdev = 179.593
[info]   CI (99.9%): [≈ 0, 1150.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   168.117 ±(99.9%) 255.497 B/op [Average]
[info]   (min, avg, max) = (118.659, 168.117, 242.858), stdev = 66.352
[info]   CI (99.9%): [≈ 0, 423.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 89.29% complete, ETA 00:03:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3668973.608 ops/s
[info] # Warmup Iteration   2: 4073662.084 ops/s
[info] # Warmup Iteration   3: 4175402.522 ops/s
[info] # Warmup Iteration   4: 4180992.678 ops/s
[info] # Warmup Iteration   5: 4188424.964 ops/s
[info] Iteration   1: 4193785.199 ops/s
[info]                  ·gc.alloc.rate:      255.759 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4160495.970 ops/s
[info]                  ·gc.alloc.rate:                   253.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.382 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.340 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4167995.794 ops/s
[info]                  ·gc.alloc.rate:                   254.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.365 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 122.117 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4143924.610 ops/s
[info]                  ·gc.alloc.rate:                   252.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 123.589 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4197840.177 ops/s
[info]                  ·gc.alloc.rate:      256.045 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4172808.350 ±(99.9%) 87716.248 ops/s [Average]
[info]   (min, avg, max) = (4143924.610, 4172808.350, 4197840.177), stdev = 22779.631
[info]   CI (99.9%): [4085092.102, 4260524.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   254.506 ±(99.9%) 5.322 MB/sec [Average]
[info]   (min, avg, max) = (252.758, 254.506, 256.045), stdev = 1.382
[info]   CI (99.9%): [249.184, 259.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.100 ±(99.9%) 0.735 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.100, 0.438), stdev = 0.191
[info]   CI (99.9%): [≈ 0, 0.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.038 ±(99.9%) 0.278 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.166), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   194.429 ±(99.9%) 683.453 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 194.429, 325.398), stdev = 177.491
[info]   CI (99.9%): [≈ 0, 877.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   73.609 ±(99.9%) 258.756 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 73.609, 123.589), stdev = 67.198
[info]   CI (99.9%): [≈ 0, 332.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 90.18% complete, ETA 00:02:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110542.817 ops/s
[info] # Warmup Iteration   2: 218049.749 ops/s
[info] # Warmup Iteration   3: 221544.413 ops/s
[info] # Warmup Iteration   4: 216451.304 ops/s
[info] # Warmup Iteration   5: 220526.245 ops/s
[info] Iteration   1: 216393.318 ops/s
[info]                  ·gc.alloc.rate:                   1113.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1326.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9650.988 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 220716.247 ops/s
[info]                  ·gc.alloc.rate:                   1135.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7136.805 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 219126.085 ops/s
[info]                  ·gc.alloc.rate:                   1127.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.723 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7217.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 219200.343 ops/s
[info]                  ·gc.alloc.rate:                   1127.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9659.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 222274.175 ops/s
[info]                  ·gc.alloc.rate:                   1143.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.835 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7164.840 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   219542.034 ±(99.9%) 8402.779 ops/s [Average]
[info]   (min, avg, max) = (216393.318, 219542.034, 222274.175), stdev = 2182.175
[info]   CI (99.9%): [211139.255, 227944.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1129.227 ±(99.9%) 43.313 MB/sec [Average]
[info]   (min, avg, max) = (1113.036, 1129.227, 1143.336), stdev = 11.248
[info]   CI (99.9%): [1085.914, 1172.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.002, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.419 ±(99.9%) 0.756 B/op [Average]
[info]   (min, avg, max) = (0.147, 0.419, 0.606), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 1.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.843 ±(99.9%) 696.925 MB/sec [Average]
[info]   (min, avg, max) = (1000.791, 1137.843, 1345.052), stdev = 180.989
[info]   CI (99.9%): [440.919, 1834.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8165.766 ±(99.9%) 5236.104 B/op [Average]
[info]   (min, avg, max) = (7136.805, 8165.766, 9659.038), stdev = 1359.800
[info]   CI (99.9%): [2929.661, 13401.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 10.000), stdev = 2.345
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce
[info] # Run progress: 91.07% complete, ETA 00:02:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97668.233 ops/s
[info] # Warmup Iteration   2: 106555.326 ops/s
[info] # Warmup Iteration   3: 106933.484 ops/s
[info] # Warmup Iteration   4: 107020.415 ops/s
[info] # Warmup Iteration   5: 105688.420 ops/s
[info] Iteration   1: 107030.570 ops/s
[info]                  ·gc.alloc.rate:                   543.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              7992.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9589.947 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 107187.969 ops/s
[info]                  ·gc.alloc.rate:                   544.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              7992.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.345 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4807.290 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 107181.334 ops/s
[info]                  ·gc.alloc.rate:                   544.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              7992.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9634.860 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 106609.678 ops/s
[info]                  ·gc.alloc.rate:                   541.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              7992.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9725.700 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 107066.603 ops/s
[info]                  ·gc.alloc.rate:                   543.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              7992.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      330.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4851.980 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce":
[info]   107015.231 ±(99.9%) 912.806 ops/s [Average]
[info]   (min, avg, max) = (106609.678, 107015.231, 107187.969), stdev = 237.053
[info]   CI (99.9%): [106102.425, 107928.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate":
[info]   543.337 ±(99.9%) 4.612 MB/sec [Average]
[info]   (min, avg, max) = (541.293, 543.337, 544.203), stdev = 1.198
[info]   CI (99.9%): [538.725, 547.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate.norm":
[info]   7992.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7992.004, 7992.004, 7992.004), stdev = 0.001
[info]   CI (99.9%): [7992.003, 7992.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.613 ±(99.9%) 2.499 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.613, 1.528), stdev = 0.649
[info]   CI (99.9%): [≈ 0, 3.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space":
[info]   524.835 ±(99.9%) 689.547 MB/sec [Average]
[info]   (min, avg, max) = (327.345, 524.835, 658.716), stdev = 179.073
[info]   CI (99.9%): [≈ 0, 1214.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   7721.955 ±(99.9%) 10168.840 B/op [Average]
[info]   (min, avg, max) = (4807.290, 7721.955, 9725.700), stdev = 2640.816
[info]   CI (99.9%): [≈ 0, 17890.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 7.000), stdev = 2.280
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson
[info] # Run progress: 91.96% complete, ETA 00:02:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185124.545 ops/s
[info] # Warmup Iteration   2: 178769.860 ops/s
[info] # Warmup Iteration   3: 181602.519 ops/s
[info] # Warmup Iteration   4: 185597.215 ops/s
[info] # Warmup Iteration   5: 185675.437 ops/s
[info] Iteration   1: 178721.339 ops/s
[info]                  ·gc.alloc.rate:                   188.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.731 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2252.593 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 179808.430 ops/s
[info]                  ·gc.alloc.rate:                   190.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.768 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2238.990 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 181374.377 ops/s
[info]                  ·gc.alloc.rate:      191.757 MB/sec
[info]                  ·gc.alloc.rate.norm: 1664.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 186258.461 ops/s
[info]                  ·gc.alloc.rate:                   196.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2732.807 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 187030.754 ops/s
[info]                  ·gc.alloc.rate:                   197.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2721.339 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson":
[info]   182638.672 ±(99.9%) 14580.100 ops/s [Average]
[info]   (min, avg, max) = (178721.339, 182638.672, 187030.754), stdev = 3786.406
[info]   CI (99.9%): [168058.572, 197218.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate":
[info]   193.078 ±(99.9%) 15.450 MB/sec [Average]
[info]   (min, avg, max) = (188.910, 193.078, 197.732), stdev = 4.012
[info]   CI (99.9%): [177.628, 208.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate.norm":
[info]   1664.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1664.002, 1664.002, 1664.002), stdev = 0.001
[info]   CI (99.9%): [1664.002, 1664.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.098 ±(99.9%) 0.711 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.098, 0.427), stdev = 0.185
[info]   CI (99.9%): [≈ 0, 0.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.828 ±(99.9%) 6.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.828, 3.606), stdev = 1.560
[info]   CI (99.9%): [≈ 0, 6.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space":
[info]   231.651 ±(99.9%) 515.366 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 231.651, 323.381), stdev = 133.839
[info]   CI (99.9%): [≈ 0, 747.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1989.146 ±(99.9%) 4380.971 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1989.146, 2732.807), stdev = 1137.724
[info]   CI (99.9%): [≈ 0, 6370.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 2.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter
[info] # Run progress: 92.86% complete, ETA 00:02:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 242198.439 ops/s
[info] # Warmup Iteration   2: 236106.038 ops/s
[info] # Warmup Iteration   3: 257684.433 ops/s
[info] # Warmup Iteration   4: 259012.182 ops/s
[info] # Warmup Iteration   5: 259840.047 ops/s
[info] Iteration   1: 260447.829 ops/s
[info]                  ·gc.alloc.rate:                   219.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1545.759 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 261062.774 ops/s
[info]                  ·gc.alloc.rate:      220.260 MB/sec
[info]                  ·gc.alloc.rate.norm: 1328.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 258821.799 ops/s
[info]                  ·gc.alloc.rate:                   218.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.297 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1966.409 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 260690.280 ops/s
[info]                  ·gc.alloc.rate:                   219.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1952.539 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 261120.953 ops/s
[info]                  ·gc.alloc.rate:      220.306 MB/sec
[info]                  ·gc.alloc.rate.norm: 1328.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter":
[info]   260428.727 ±(99.9%) 3618.470 ops/s [Average]
[info]   (min, avg, max) = (258821.799, 260428.727, 261120.953), stdev = 939.705
[info]   CI (99.9%): [256810.257, 264047.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate":
[info]   219.714 ±(99.9%) 3.107 MB/sec [Average]
[info]   (min, avg, max) = (218.337, 219.714, 220.306), stdev = 0.807
[info]   CI (99.9%): [216.607, 222.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.002, 1328.002, 1328.002), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.546 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.333), stdev = 0.142
[info]   CI (99.9%): [≈ 0, 0.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.506 ±(99.9%) 3.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.506, 2.025), stdev = 0.863
[info]   CI (99.9%): [≈ 0, 3.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   180.486 ±(99.9%) 643.275 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 180.486, 323.396), stdev = 167.056
[info]   CI (99.9%): [≈ 0, 823.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1092.941 ±(99.9%) 3896.549 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1092.941, 1966.409), stdev = 1011.921
[info]   CI (99.9%): [≈ 0, 4989.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 1.000
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc
[info] # Run progress: 93.75% complete, ETA 00:01:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 156640.889 ops/s
[info] # Warmup Iteration   2: 119752.554 ops/s
[info] # Warmup Iteration   3: 261976.415 ops/s
[info] # Warmup Iteration   4: 262572.063 ops/s
[info] # Warmup Iteration   5: 261238.659 ops/s
[info] Iteration   1: 261899.907 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 261825.843 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 261721.002 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 261752.435 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 260740.957 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc":
[info]   261588.029 ±(99.9%) 1842.751 ops/s [Average]
[info]   (min, avg, max) = (260740.957, 261588.029, 261899.907), stdev = 478.556
[info]   CI (99.9%): [259745.278, 263430.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.002, 0.002, 0.002), stdev = 0.001
[info]   CI (99.9%): [0.002, 0.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay
[info] # Run progress: 94.64% complete, ETA 00:01:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 262683.036 ops/s
[info] # Warmup Iteration   2: 287130.914 ops/s
[info] # Warmup Iteration   3: 286821.589 ops/s
[info] # Warmup Iteration   4: 285474.607 ops/s
[info] # Warmup Iteration   5: 284075.706 ops/s
[info] Iteration   1: 289585.720 ops/s
[info]                  ·gc.alloc.rate:                   309.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.315 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1757.618 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 286796.336 ops/s
[info]                  ·gc.alloc.rate:                   306.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.425 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1774.837 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 286155.597 ops/s
[info]                  ·gc.alloc.rate:                   305.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.371 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1789.654 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 288576.996 ops/s
[info]                  ·gc.alloc.rate:                   308.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.363 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1774.686 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 289451.568 ops/s
[info]                  ·gc.alloc.rate:                   308.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.638 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1776.578 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay":
[info]   288113.243 ±(99.9%) 6009.038 ops/s [Average]
[info]   (min, avg, max) = (286155.597, 288113.243, 289585.720), stdev = 1560.528
[info]   CI (99.9%): [282104.206, 294122.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate":
[info]   307.500 ±(99.9%) 6.277 MB/sec [Average]
[info]   (min, avg, max) = (305.435, 307.500, 309.037), stdev = 1.630
[info]   CI (99.9%): [301.223, 313.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate.norm":
[info]   1680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.001, 1680.001, 1680.002), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.106 ±(99.9%) 0.702 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.106, 0.427), stdev = 0.182
[info]   CI (99.9%): [≈ 0, 0.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.577 ±(99.9%) 3.817 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.577, 2.319), stdev = 0.991
[info]   CI (99.9%): [≈ 0, 4.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space":
[info]   324.822 ±(99.9%) 5.485 MB/sec [Average]
[info]   (min, avg, max) = (323.315, 324.822, 326.638), stdev = 1.424
[info]   CI (99.9%): [319.337, 330.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   1774.675 ±(99.9%) 43.859 B/op [Average]
[info]   (min, avg, max) = (1757.618, 1774.675, 1789.654), stdev = 11.390
[info]   CI (99.9%): [1730.815, 1818.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeStringPlay:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.54% complete, ETA 00:01:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3584.076 ops/s
[info] # Warmup Iteration   2: 6767.149 ops/s
[info] # Warmup Iteration   3: 7413.524 ops/s
[info] # Warmup Iteration   4: 7458.216 ops/s
[info] # Warmup Iteration   5: 7353.788 ops/s
[info] Iteration   1: 7466.260 ops/s
[info]                  ·gc.alloc.rate:                   991.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              209016.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 208016.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 7393.103 ops/s
[info]                  ·gc.alloc.rate:                   981.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              209016.059 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 211487.641 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 7448.109 ops/s
[info]                  ·gc.alloc.rate:                   989.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              209016.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.048 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.164 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 210911.562 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 7483.321 ops/s
[info]                  ·gc.alloc.rate:                   993.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              209019.065 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.800 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 210905.968 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 7459.223 ops/s
[info]                  ·gc.alloc.rate:                   990.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              209040.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 212287.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7450.003 ±(99.9%) 132.002 ops/s [Average]
[info]   (min, avg, max) = (7393.103, 7450.003, 7483.321), stdev = 34.280
[info]   CI (99.9%): [7318.002, 7582.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   989.387 ±(99.9%) 17.421 MB/sec [Average]
[info]   (min, avg, max) = (981.876, 989.387, 993.829), stdev = 4.524
[info]   CI (99.9%): [971.966, 1006.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   209021.458 ±(99.9%) 40.344 B/op [Average]
[info]   (min, avg, max) = (209016.055, 209021.458, 209040.055), stdev = 10.477
[info]   CI (99.9%): [208981.113, 209061.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.080 ±(99.9%) 0.125 MB/sec [Average]
[info]   (min, avg, max) = (0.048, 0.080, 0.132), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   16.904 ±(99.9%) 26.799 B/op [Average]
[info]   (min, avg, max) = (10.215, 16.904, 28.016), stdev = 6.960
[info]   CI (99.9%): [≈ 0, 43.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   997.427 ±(99.9%) 29.388 MB/sec [Average]
[info]   (min, avg, max) = (986.706, 997.427, 1005.976), stdev = 7.632
[info]   CI (99.9%): [968.039, 1026.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   210721.704 ±(99.9%) 6216.915 B/op [Average]
[info]   (min, avg, max) = (208016.249, 210721.704, 212287.099), stdev = 1614.513
[info]   CI (99.9%): [204504.789, 216938.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.43% complete, ETA 00:01:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_dc032f7d/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 17087.066 ops/s
[info] # Warmup Iteration   2: 34041.832 ops/s
[info] # Warmup Iteration   3: 33809.367 ops/s
[info] # Warmup Iteration   4: 34069.339 ops/s
[info] # Warmup Iteration   5: 33604.018 ops/s
[info] Iteration   1: 33834.320 ops/s
[info]                  ·gc.alloc.rate:                   432.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15043.843 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 33754.974 ops/s
[info]                  ·gc.alloc.rate:                   431.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15078.599 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 33710.566 ops/s
[info]                  ·gc.alloc.rate:                   430.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.098 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.916 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      649.585 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30321.844 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 33912.316 ops/s
[info]                  ·gc.alloc.rate:                   433.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15117.896 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 33695.032 ops/s
[info]                  ·gc.alloc.rate:                   430.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15215.242 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   33781.442 ±(99.9%) 350.360 ops/s [Average]
[info]   (min, avg, max) = (33695.032, 33781.442, 33912.316), stdev = 90.987
[info]   CI (99.9%): [33431.082, 34131.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   431.394 ±(99.9%) 4.471 MB/sec [Average]
[info]   (min, avg, max) = (430.212, 431.394, 433.082), stdev = 1.161
[info]   CI (99.9%): [426.923, 435.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.041 ±(99.9%) 0.334 B/op [Average]
[info]   (min, avg, max) = (20099.946, 20100.041, 20100.162), stdev = 0.087
[info]   CI (99.9%): [20099.707, 20100.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.776 ±(99.9%) 4.878 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.776, 2.916), stdev = 1.267
[info]   CI (99.9%): [≈ 0, 5.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   389.538 ±(99.9%) 559.788 MB/sec [Average]
[info]   (min, avg, max) = (323.349, 389.538, 649.585), stdev = 145.375
[info]   CI (99.9%): [≈ 0, 949.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   18155.485 ±(99.9%) 26190.168 B/op [Average]
[info]   (min, avg, max) = (15043.843, 18155.485, 30321.844), stdev = 6801.504
[info]   CI (99.9%): [≈ 0, 44345.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.32% complete, ETA 00:00:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24337.213 ops/s
[info] # Warmup Iteration   2: 40810.445 ops/s
[info] # Warmup Iteration   3: 41165.046 ops/s
[info] # Warmup Iteration   4: 41177.267 ops/s
[info] # Warmup Iteration   5: 41520.339 ops/s
[info] Iteration   1: 41722.691 ops/s
[info]                  ·gc.alloc.rate:      269.517 MB/sec
[info]                  ·gc.alloc.rate.norm: 10168.010 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 41680.989 ops/s
[info]                  ·gc.alloc.rate:                   269.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     20.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12199.179 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 41741.774 ops/s
[info]                  ·gc.alloc.rate:                   269.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.094 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12180.771 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 41694.807 ops/s
[info]                  ·gc.alloc.rate:                   269.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.742 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12257.944 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 41533.795 ops/s
[info]                  ·gc.alloc.rate:                   268.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              10168.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.735 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12305.452 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   41674.811 ±(99.9%) 316.949 ops/s [Average]
[info]   (min, avg, max) = (41533.795, 41674.811, 41741.774), stdev = 82.311
[info]   CI (99.9%): [41357.862, 41991.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   269.245 ±(99.9%) 2.060 MB/sec [Average]
[info]   (min, avg, max) = (268.329, 269.245, 269.706), stdev = 0.535
[info]   CI (99.9%): [267.185, 271.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10168.010 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (10168.010, 10168.010, 10168.011), stdev = 0.001
[info]   CI (99.9%): [10168.008, 10168.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.115 ±(99.9%) 0.899 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.115, 0.531), stdev = 0.233
[info]   CI (99.9%): [≈ 0, 1.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   4.323 ±(99.9%) 33.942 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 4.323, 20.044), stdev = 8.815
[info]   CI (99.9%): [≈ 0, 38.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   259.133 ±(99.9%) 557.813 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 259.133, 324.742), stdev = 144.862
[info]   CI (99.9%): [≈ 0, 816.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   9788.669 ±(99.9%) 21071.703 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 9788.669, 12305.452), stdev = 5472.254
[info]   CI (99.9%): [≈ 0, 30860.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.140
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.21% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29750.297 ops/s
[info] # Warmup Iteration   2: 47625.323 ops/s
[info] # Warmup Iteration   3: 47670.626 ops/s
[info] # Warmup Iteration   4: 48001.553 ops/s
[info] # Warmup Iteration   5: 48250.289 ops/s
[info] Iteration   1: 48160.159 ops/s
[info]                  ·gc.alloc.rate:      10.769 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 48168.514 ops/s
[info]                  ·gc.alloc.rate:      10.772 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 48232.530 ops/s
[info]                  ·gc.alloc.rate:      10.786 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 48131.381 ops/s
[info]                  ·gc.alloc.rate:      10.764 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 48293.279 ops/s
[info]                  ·gc.alloc.rate:      10.802 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   48197.173 ±(99.9%) 251.080 ops/s [Average]
[info]   (min, avg, max) = (48131.381, 48197.173, 48293.279), stdev = 65.205
[info]   CI (99.9%): [47946.093, 48448.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   10.779 ±(99.9%) 0.059 MB/sec [Average]
[info]   (min, avg, max) = (10.764, 10.779, 10.802), stdev = 0.015
[info]   CI (99.9%): [10.719, 10.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   352.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.008, 352.008, 352.008), stdev = 0.001
[info]   CI (99.9%): [352.008, 352.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.11% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2529.955 ops/s
[info] # Warmup Iteration   2: 4876.930 ops/s
[info] # Warmup Iteration   3: 5052.779 ops/s
[info] # Warmup Iteration   4: 5111.850 ops/s
[info] # Warmup Iteration   5: 5080.861 ops/s
[info] Iteration   1: 5086.995 ops/s
[info]                  ·gc.alloc.rate:                   1038.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              321181.358 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.548 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 306762.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 5087.232 ops/s
[info]                  ·gc.alloc.rate:                   1038.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              321182.398 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.359 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307938.069 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 5123.986 ops/s
[info]                  ·gc.alloc.rate:                   1045.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              321182.408 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.131 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307514.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 5113.822 ops/s
[info]                  ·gc.alloc.rate:                   1043.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              321182.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.394 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 309140.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 5091.316 ops/s
[info]                  ·gc.alloc.rate:                   1038.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              321181.697 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.666 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 415683.280 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   5100.670 ±(99.9%) 65.905 ops/s [Average]
[info]   (min, avg, max) = (5086.995, 5100.670, 5123.986), stdev = 17.115
[info]   CI (99.9%): [5034.766, 5166.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   1040.888 ±(99.9%) 13.331 MB/sec [Average]
[info]   (min, avg, max) = (1038.156, 1040.888, 1045.629), stdev = 3.462
[info]   CI (99.9%): [1027.557, 1054.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   321182.074 ±(99.9%) 1.982 B/op [Average]
[info]   (min, avg, max) = (321181.358, 321182.074, 321182.509), stdev = 0.515
[info]   CI (99.9%): [321180.092, 321184.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.104), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   21.843 ±(99.9%) 56.912 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.843, 32.195), stdev = 14.780
[info]   CI (99.9%): [≈ 0, 78.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1067.420 ±(99.9%) 597.102 MB/sec [Average]
[info]   (min, avg, max) = (991.548, 1067.420, 1344.666), stdev = 155.065
[info]   CI (99.9%): [470.318, 1664.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   329407.560 ±(99.9%) 185744.615 B/op [Average]
[info]   (min, avg, max) = (306762.063, 329407.560, 415683.280), stdev = 48237.287
[info]   CI (99.9%): [143662.944, 515152.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.483
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:30:31
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1576068.967 ±  72178.612   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2283.083 ±    104.297  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2280.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.096 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.096 ±      0.156    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      2308.907 ±    582.798  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2305.196 ±    531.833    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        34.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        61.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    187136.996 ±   2691.183   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       336.678 ±      4.887  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      2832.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.117 ±      0.872  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.984 ±      7.367    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       324.290 ±      4.950  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2727.802 ±     23.529    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    341990.497 ±   8720.826   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       225.841 ±      5.510  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.087 ±      0.590  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.401 ±      2.699    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       245.392 ±    540.253  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1130.877 ±   2486.495    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5    775827.825 ±  51011.595   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5       272.078 ±     17.904  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       552.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5         0.079 ±      0.551  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5         0.162 ±      1.127    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5       259.634 ±    558.892  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5       528.543 ±   1138.237    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   2959787.835 ±  76153.635   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       330.934 ±      8.499  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5         0.008 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5         0.004 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5       325.560 ±      4.782  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5       173.145 ±      2.274    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    119949.010 ±   1238.685   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5       764.471 ±      7.928  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     10032.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.046 ±      0.191  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.601 ±      2.510    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5       794.323 ±    704.769  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5     10420.486 ±   9172.872    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    589227.103 ±  14731.340   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1521.304 ±     37.172  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5         0.071 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.189 ±      0.120    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5      1550.147 ±    692.295  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      4140.133 ±   1810.892    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1245232.480 ±  29564.363   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       886.096 ±     20.949  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5         0.083 ±      0.170  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.105 ±      0.215    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5       930.014 ±    572.958  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      1175.863 ±    732.580    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2973898.944 ±  71846.234   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       196.493 ±      4.752  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5         0.090 ±      0.645  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.047 ±      0.342    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5       231.663 ±    515.381  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5       122.763 ±    272.561    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    132032.346 ±   4308.455   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1112.610 ±     36.205  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13264.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5         0.058 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5         0.696 ±      1.257    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5      1137.281 ±    695.718  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5     13567.854 ±   8595.163    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1269839.824 ±  42235.096   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1968.216 ±     65.146  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2440.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.075 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.093 ±      0.149    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1965.572 ±    604.368  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2436.521 ±    734.866    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        29.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        62.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1902622.545 ±  89380.547   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1334.490 ±     62.645  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.055 ±      0.058    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1345.202 ±     31.450  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1112.939 ±     33.852    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        61.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   7731319.076 ± 203053.334   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       982.359 ±     25.807  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.058 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.012 ±      0.029    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       936.030 ±    570.170  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       190.502 ±    114.492    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    449381.633 ±  13197.027   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1169.381 ±     34.476  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4096.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.234 ±      0.238    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1206.192 ±    705.330  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      4225.184 ±   2476.522    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    642943.296 ±  39209.949   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2081.404 ±    126.422  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5096.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5         0.087 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.215 ±      0.271    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5      2102.425 ±    578.669  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5149.535 ±   1521.567    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        31.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        69.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1276841.373 ±  49268.556   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1200.530 ±     46.560  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5         0.060 ±      0.100  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.074 ±      0.122    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5      1206.981 ±    706.272  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1489.617 ±    917.516    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   3063673.237 ± 107339.768   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1276.837 ±     44.753  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.024 ±      0.068    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5      1278.855 ±    598.276  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       656.793 ±    298.457    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    226320.717 ±   9434.377   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1386.119 ±     58.459  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.378 ±      0.865    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5      1345.814 ±     30.264  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      9360.222 ±    270.356    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1559905.673 ±  46540.900   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5       990.953 ±     29.296  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.071 ±      0.073    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5       999.637 ±     25.577  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1008.785 ±     24.061    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   6536885.947 ± 191984.878   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       863.806 ±     25.541  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.012 ±      0.022    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       864.669 ±    690.630  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       208.437 ±    171.019    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    266669.619 ±   7723.871   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1198.041 ±     34.826  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7072.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.075 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.442 ±      0.264    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1206.560 ±    704.846  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      7120.598 ±   4102.805    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    586187.199 ±  15733.418   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1906.654 ±     51.621  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5120.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.067 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.179 ±      0.279    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5      1896.478 ±    723.611  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      5091.085 ±   1863.180    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        59.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    716977.162 ±  18803.987   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       889.201 ±     23.573  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.128 ±      0.338    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       930.269 ±    565.122  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5      2043.325 ±   1268.429    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   5261288.087 ±  73460.927   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       240.690 ±      3.385  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.085 ±      0.691  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.026 ±      0.207    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       245.611 ±    540.843  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        73.540 ±    161.836    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    219123.586 ±   4829.171   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1216.176 ±     26.850  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.329 ±      0.481    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1206.761 ±    700.170  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      8669.700 ±   5066.165    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      4932.693 ±    150.318   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1161.800 ±     32.767  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    370792.087 ±      0.024    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.054 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5        17.272 ±     42.912    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5      1136.640 ±    697.057  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    362791.508 ± 223109.556    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10170.228 ±     81.440   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       257.731 ±      2.025  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     39888.042 ±      0.007    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.162 ±      1.303  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5        25.009 ±    201.717    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       245.039 ±    539.315  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5     37949.316 ±  83515.327    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17786.791 ±    343.231   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       303.918 ±      5.835  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     26896.024 ±      0.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.107 ±      0.797  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5         9.473 ±     70.288    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       324.952 ±      5.101  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5     28758.072 ±    761.425    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1961.029 ±     28.302   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1224.995 ±     18.822  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    982976.221 ±      0.030    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5        53.486 ±    115.645    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1206.600 ±    721.658  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5    967883.678 ± 569050.013    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3518120.378 ± 121280.113   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1055.014 ±     36.068  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.022 ±      0.040    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5      1004.723 ±     22.530  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5       449.534 ±     20.727    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    254802.534 ±   3807.049   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1409.128 ±     21.301  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8704.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.360 ±      0.542    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1347.123 ±     27.789  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      8321.189 ±    264.263    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    504567.047 ±  10284.718   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1823.559 ±     37.237  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5688.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5         0.079 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.247 ±      0.210    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5      1828.067 ±    730.533  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5703.702 ±   2353.426    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        69.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    540635.025 ±  25084.176   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       629.263 ±     29.376  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.072 ±      0.303    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5       591.004 ±    568.978  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      1721.558 ±   1667.662    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   3214289.333 ± 137946.186   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1274.221 ±     54.944  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5         0.075 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.037 ±      0.070    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5      1278.790 ±    587.558  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5       626.918 ±    308.773    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        48.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    164877.788 ±   4031.813   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1140.526 ±     27.842  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10888.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.478 ±      1.394    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5      1137.982 ±    697.729  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5     10860.814 ±   6564.556    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    497554.749 ±  18953.738   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1729.570 ±     66.563  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5472.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.145 ±      0.329    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1756.795 ±    573.718  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5559.429 ±   1881.784    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    889182.504 ±  31203.208   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1048.442 ±     36.738  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.088 ±      0.127    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5      1066.337 ±    546.278  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      1886.488 ±    911.718    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   3664560.286 ±  84988.362   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       912.684 ±     21.475  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.075 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.032 ±      0.058    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       933.262 ±    568.257  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5       401.042 ±    248.691    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    266783.190 ±   6673.970   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1449.472 ±     35.880  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8552.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.071 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.417 ±      0.784    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5      1414.717 ±    570.749  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      8348.467 ±   3437.518    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    540644.619 ±  14934.580   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      2066.284 ±     57.409  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6016.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5         0.058 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.170 ±      0.104    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5      2034.554 ±     27.579  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5923.814 ±    149.899    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        57.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   2819793.261 ± 172170.127   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1820.257 ±    110.209  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5         0.079 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.044 ±      0.075    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5      1761.483 ±    588.015  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5       982.818 ±    297.159    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    169391.860 ±   1735.339   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1207.078 ±     12.372  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11216.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.425 ±      0.971    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5      1206.687 ±    704.964  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5     11213.796 ±   6593.350    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        43.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    687919.280 ±  12133.630   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       891.655 ±     15.876  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.133 ±      0.238    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       926.941 ±    569.545  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2121.359 ±   1317.617    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2524282.682 ±  95583.216   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1193.149 ±     45.141  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.067 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.042 ±      0.065    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5      1208.708 ±    707.905  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       754.012 ±    450.153    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    225216.288 ±   6902.741   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1231.685 ±     37.694  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8608.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.349 ±      0.307    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1275.512 ±    576.369  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8916.111 ±   4088.527    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    481669.101 ±  16573.500   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1507.911 ±     51.836  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4928.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.177 ±      0.351    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1481.736 ±    713.680  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      4844.627 ±   2412.478    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1033186.629 ±   9384.935   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       782.459 ±      6.950  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.089 ±      0.133    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       794.726 ±    704.370  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1210.491 ±   1068.459    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   4223479.757 ±  44976.360   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       128.778 ±      1.399  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.006 ±      0.054  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.002 ±      0.020    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       153.439 ±    539.361  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        57.266 ±    201.299    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    167188.853 ±   2089.703   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1108.190 ±     13.888  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10432.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.067 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.627 ±      0.981    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1137.724 ±    696.617  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5     10706.603 ±   6445.357    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readStringCirce                                                          thrpt    5    113828.901 ±   2760.312   ops/s
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate                                           thrpt    5       844.667 ±     20.218  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.alloc.rate.norm                                      thrpt    5     11680.004 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space                                  thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.805 ±      1.634    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space                              thrpt    5       797.526 ±    701.101  MB/sec
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5     11033.190 ±   9805.927    B/op
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.count                                                thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readStringCirce:·gc.time                                                 thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readStringJackson                                                        thrpt    5    582811.467 ±   6792.135   ops/s
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate                                         thrpt    5       764.231 ±      8.917  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.alloc.rate.norm                                    thrpt    5      2064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space                                thrpt    5         0.067 ±      0.183  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.180 ±      0.495    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space                            thrpt    5       796.183 ±    705.260  MB/sec
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      2150.484 ±   1908.905    B/op
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.count                                              thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readStringJackson:·gc.time                                               thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readStringJsoniter                                                       thrpt    5    630090.828 ±  21789.767   ops/s
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate                                        thrpt    5       538.004 ±     18.610  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.alloc.rate.norm                                   thrpt    5      1344.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.104 ±      0.377    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5       525.909 ±    690.977  MB/sec
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1315.462 ±   1746.458    B/op
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.count                                             thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readStringJsoniter:·gc.time                                              thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.readStringPlay                                                           thrpt    5    185642.243 ±   9279.296   ops/s
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate                                            thrpt    5      1691.734 ±     84.189  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.alloc.rate.norm                                       thrpt    5     14344.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space                                   thrpt    5         0.062 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.530 ±      0.502    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space                               thrpt    5      1691.866 ±     24.952  MB/sec
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5     14347.318 ±    839.056    B/op
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.count                                                 thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.readStringPlay:·gc.time                                                  thrpt    5        58.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      8597.863 ±    306.912   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1259.519 ±     45.257  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    230567.180 ±     80.008    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.125 ±      0.053  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5        22.819 ±     10.153    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1270.088 ±    556.825  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    232630.868 ± 106139.309    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11319.590 ±    241.508   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       159.916 ±      3.271  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     22236.789 ±     27.450    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.002 ±      0.018  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.292 ±      2.515    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       153.453 ±    539.410  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5     21334.094 ±  74996.079    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     21512.350 ±    563.665   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       199.230 ±      5.213  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     14576.026 ±      0.049    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.108 ±      0.888  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         7.956 ±     65.245    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       166.932 ±    596.247  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     12263.740 ±  43806.786    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3737.005 ±    109.646   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1095.728 ±     31.912  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461480.111 ±      0.014    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5        21.002 ±     38.007    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1135.021 ±    701.788  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5    478170.031 ± 299571.600    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    403692.000 ±   6749.690   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1327.421 ±     21.833  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5176.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.058 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.227 ±      0.141    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1343.369 ±     34.514  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5238.344 ±    202.076    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1610142.576 ±  37988.173   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       671.169 ±     15.892  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.041 ±      0.110    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5       723.774 ±    557.983  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5       707.262 ±    540.207    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5  10180855.878 ± 273136.831   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       517.441 ±     13.871  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.054 ±      0.193  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.008 ±      0.030    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       524.848 ±    694.231  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5        81.238 ±    108.435    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    242317.960 ±   8822.233   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       772.153 ±     28.096  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5016.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.037 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.245 ±      0.865    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5       728.799 ±    570.862  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      4737.241 ±   3789.110    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1489099.768 ±  74036.506   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1475.784 ±     73.534  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1560.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5         0.079 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.084 ±      0.156    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5      1483.614 ±    702.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1567.641 ±    711.775    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4465858.357 ± 144846.856   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1225.657 ±     39.651  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.067 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.023 ±      0.037    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5      1272.484 ±    576.160  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       448.417 ±    199.877    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        47.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  17324237.462 ± 397791.441   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       528.311 ±     12.100  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.004 ±      0.014    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       525.931 ±    698.040  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        47.820 ±     63.845    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  16706850.718 ± 185456.325   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                 B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5   1111919.199 ±  14070.736   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1633.329 ±     21.064  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.100 ±      0.101    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1622.280 ±    573.928  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2295.862 ±    788.510    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    704646.080 ±  30219.013   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1597.491 ±     67.783  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3568.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.083 ±      0.196  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.187 ±      0.446    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1553.912 ±    722.164  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      3473.151 ±   1699.407    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        59.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2779726.532 ±  63682.454   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1582.218 ±     36.607  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       896.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.096 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.054 ±      0.070    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1619.160 ±    577.674  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       917.294 ±    343.079    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        51.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   5142393.193 ±  76018.792   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1359.028 ±     19.735  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       416.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.018 ±      0.020    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5      1347.783 ±     28.310  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       412.567 ±     13.286    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    386039.701 ±   9715.426   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1334.147 ±     33.832  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5440.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.221 ±      0.298    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1344.595 ±     30.802  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5482.742 ±    156.918    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   1846297.514 ±  38780.233   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5       975.894 ±     20.530  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.057 ±      0.057    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5       998.918 ±     27.758  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       851.655 ±     32.358    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4860948.883 ± 193960.554   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       741.231 ±     29.706  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.020 ±      0.032    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       729.188 ±    577.625  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5       236.398 ±    195.460    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    527692.740 ±   5376.324   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1528.709 ±     15.726  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4560.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.075 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.224 ±      0.363    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1551.959 ±    708.075  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      4630.348 ±   2149.874    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5117.838 ±    115.971   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1221.448 ±     27.647  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    375656.082 ±      0.014    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5         0.055 ±      0.193  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5        16.990 ±     59.199    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5      1206.504 ±    690.835  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5    371090.968 ± 213363.079    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        47.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     27162.404 ±   1181.400   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       393.605 ±     17.276  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.842 ±      0.679    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5         1.944 ±      7.183    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5       454.977 ±    685.596  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5     26446.484 ±  40854.887    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     24470.205 ±    206.398   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       184.295 ±      1.537  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     11856.018 ±      0.004    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.106 ±      0.914  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         6.813 ±     58.663    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       166.968 ±    596.463  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5     10736.636 ±  38338.610    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     33208.427 ±    222.279   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.507 ±      0.003  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.013 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4212.863 ±    153.783   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1247.544 ±     46.029  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    466048.266 ±      2.557    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5        20.178 ±     44.818    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1274.892 ±    569.339  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    476304.832 ± 213855.741    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    675800.599 ±  17912.508   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1480.190 ±     39.345  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3448.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.136 ±      0.306    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5      1477.623 ±    685.495  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3443.026 ±   1635.638    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        43.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2439864.657 ±  42074.897   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       396.825 ±      6.800  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       256.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5         0.022 ±      0.079    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5       392.060 ±    565.545  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5       253.211 ±    370.280    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    236798.224 ±   5221.658   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       920.405 ±     21.289  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6120.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.332 ±      1.226    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5       930.820 ±    560.084  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      6190.407 ±   3750.146    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    627930.494 ±  21570.673   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1490.378 ±     51.360  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3736.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.136 ±      0.366    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1483.525 ±    694.207  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      3719.400 ±   1758.513    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        51.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1371816.181 ±  32798.615   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       899.476 ±     21.725  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1032.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.058 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.067 ±      0.152    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       927.482 ±    562.531  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1064.597 ±    656.218    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   5160498.936 ± 130953.397   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       576.997 ±     14.617  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.014 ±      0.047    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       592.294 ±    563.270  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       180.760 ±    173.073    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    374142.705 ±   4995.083   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1283.503 ±     17.267  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5400.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.175 ±      0.335    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1277.082 ±    576.442  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5371.757 ±   2381.707    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    348664.708 ±  12634.123   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5       960.507 ±     34.684  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4336.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5         0.058 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.263 ±      0.465    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5       999.053 ±     28.437  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      4510.355 ±    219.969    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    770969.407 ±  24008.720   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1210.958 ±     37.413  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2472.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5         0.054 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.111 ±      0.380    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5      1201.571 ±    684.299  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2451.168 ±   1342.700    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        43.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2461850.076 ± 106842.183   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       475.478 ±     20.692  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.019 ±      0.101    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5       458.735 ±    691.484  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5       293.763 ±    448.523    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    258600.698 ±   9187.746   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       945.006 ±     33.934  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5752.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.278 ±      0.402    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5       932.398 ±    580.797  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5677.580 ±   3589.024    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    586076.361 ±  14856.200   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1358.207 ±     34.371  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3648.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5         0.062 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.168 ±      0.409    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5      1345.410 ±     31.181  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3613.735 ±    112.196    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1265221.949 ±  21984.858   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       688.053 ±     11.808  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5         0.033 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.041 ±      0.134    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5       722.414 ±    548.298  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5       898.798 ±    683.298    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   4710984.718 ± 146597.226   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       359.005 ±     10.629  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5         0.021 ±      0.179  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5         0.007 ±      0.060    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5       390.970 ±    564.836  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5       130.648 ±    188.024    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    389867.499 ±  12180.494   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1329.547 ±     41.570  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5368.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5         0.071 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.286 ±      0.543    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5      1344.727 ±     31.007  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5429.616 ±    230.196    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    337724.686 ±   6366.750   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       916.607 ±     17.459  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4272.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.234 ±      0.683    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5       930.207 ±    558.810  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      4337.462 ±   2653.018    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    780860.803 ±  25854.235   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1163.000 ±     38.987  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2344.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.134 ±      0.176    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5      1132.409 ±    706.299  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      2282.898 ±   1439.592    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2135082.910 ±  25951.371   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       434.042 ±      5.338  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       320.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.031 ±      0.093    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5       457.899 ±    689.426  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5       337.702 ±    509.852    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    253154.223 ±   7000.082   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       971.425 ±     26.953  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6040.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5         0.058 ±      0.183  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.363 ±      1.142    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5       932.214 ±    562.072  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      5797.476 ±   3522.062    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    691557.592 ±  24512.557   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1198.615 ±     42.599  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2728.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.114 ±      0.209    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      1207.436 ±    716.803  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2749.982 ±   1684.113    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1645345.967 ±  24900.542   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       677.421 ±     10.181  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       648.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.050 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.048 ±      0.149    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       723.999 ±    549.753  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       692.449 ±    522.307    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4299207.713 ±  85052.563   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       480.709 ±      9.589  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.046 ±      0.207  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.017 ±      0.076    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       458.729 ±    691.550  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       168.117 ±    255.497    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4172808.350 ±  87716.248   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       254.506 ±      5.322  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        96.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5         0.100 ±      0.735  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5         0.038 ±      0.278    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5       194.429 ±    683.453  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5        73.609 ±    258.756    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    219542.034 ±   8402.779   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1129.227 ±     43.313  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8096.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.419 ±      0.756    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1137.843 ±    696.925  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8165.766 ±   5236.104    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.writeStringCirce                                                         thrpt    5    107015.231 ±    912.806   ops/s
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate                                          thrpt    5       543.337 ±      4.612  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.alloc.rate.norm                                     thrpt    5      7992.004 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.042 ±      0.170  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.613 ±      2.499    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space                             thrpt    5       524.835 ±    689.547  MB/sec
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      7721.955 ±  10168.840    B/op
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.count                                               thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeStringCirce:·gc.time                                                thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeStringJackson                                                       thrpt    5    182638.672 ±  14580.100   ops/s
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate                                        thrpt    5       193.078 ±     15.450  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.alloc.rate.norm                                   thrpt    5      1664.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.098 ±      0.711  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.828 ±      6.006    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space                           thrpt    5       231.651 ±    515.366  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1989.146 ±   4380.971    B/op
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.count                                             thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeStringJackson:·gc.time                                              thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeStringJsoniter                                                      thrpt    5    260428.727 ±   3618.470   ops/s
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate                                       thrpt    5       219.714 ±      3.107  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.alloc.rate.norm                                  thrpt    5      1328.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.083 ±      0.546  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.506 ±      3.324    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       180.486 ±    643.275  MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      1092.941 ±   3896.549    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.count                                            thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.writeStringJsoniter:·gc.time                                             thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc                                              thrpt    5    261588.029 ±   1842.751   ops/s
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate                               thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.alloc.rate.norm                          thrpt    5         0.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringJsoniterPrealloc:·gc.count                                    thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeStringPlay                                                          thrpt    5    288113.243 ±   6009.038   ops/s
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate                                           thrpt    5       307.500 ±      6.277  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.alloc.rate.norm                                      thrpt    5      1680.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.106 ±      0.702  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.577 ±      3.817    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space                              thrpt    5       324.822 ±      5.485  MB/sec
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      1774.675 ±     43.859    B/op
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.count                                                thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeStringPlay:·gc.time                                                 thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7450.003 ±    132.002   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       989.387 ±     17.421  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    209021.458 ±     40.344    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.080 ±      0.125  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5        16.904 ±     26.799    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5       997.427 ±     29.388  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5    210721.704 ±   6216.915    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     33781.442 ±    350.360   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       431.394 ±      4.471  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.041 ±      0.334    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.017 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.776 ±      4.878    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       389.538 ±    559.788  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     18155.485 ±  26190.168    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     41674.811 ±    316.949   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       269.245 ±      2.060  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10168.010 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.115 ±      0.899  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         4.323 ±     33.942    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       259.133 ±    557.813  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      9788.669 ±  21071.703    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     48197.173 ±    251.080   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        10.779 ±      0.059  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       352.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      5100.670 ±     65.905   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5      1040.888 ±     13.331  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    321182.074 ±      1.982    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.071 ±      0.185  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5        21.843 ±     56.912    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1067.420 ±    597.102  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    329407.560 ± 185744.615    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        39.000                   ms
[success] Total time: 1886 s, completed Dec 7, 2017, 12:23:00 PM
