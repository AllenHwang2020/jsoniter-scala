[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt,release.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Dec 20, 2017, 5:13:59 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}core...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:334:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/core/JsonWriter.scala:342:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos + 1)
[warn]       ^
[warn] two warnings found
[info] Done compiling.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/core/target/scala-2.12/core_2.12-0.2-SNAPSHOT.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.2-SNAPSHOT.jar ...
[info] Compiling 7 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done packaging.
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:12:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d1(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3138 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = d1(in, _os)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AnyRefs, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:13:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays): com.github.plokhotnyuk.jsoniter_scala.macros.Arrays = if (in.isNextToken('{'))
[info]         {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3104 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Arrays(aa = _aa, a = _a)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma();
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Arrays, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:14:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets): com.github.plokhotnyuk.jsoniter_scala.macros.BitSets = if (in.isNextToken('{'))
[info]         {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3153 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 107902 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.BitSets, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:15:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Vector[String]): scala.collection.immutable.Vector[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Vector.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.immutable.HashSet[Long]): scala.collection.immutable.HashSet[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = HashSet.newBuilder[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: List[scala.collection.immutable.HashSet[Long]]): List[scala.collection.immutable.HashSet[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.HashSet[Long]];
[info]             do 
[info]               x.+=(d4(in, HashSet.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables): com.github.plokhotnyuk.jsoniter_scala.macros.Iterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.immutable.Vector[String] = Vector.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[scala.collection.immutable.HashSet[Long]] = List.empty[scala.collection.immutable.HashSet[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.Vector[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.immutable.HashSet[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: List[scala.collection.immutable.HashSet[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Iterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:16:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Maps): com.github.plokhotnyuk.jsoniter_scala.macros.Maps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Maps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Maps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:17:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MissingReqFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:18:82: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.ArrayBuffer[String]): scala.collection.mutable.ArrayBuffer[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               ArrayBuffer.empty[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.TreeSet[Int]): scala.collection.mutable.TreeSet[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               TreeSet.empty[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d4(in: JsonReader, default: scala.collection.mutable.Set[Long]): scala.collection.mutable.Set[Long] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Set.empty[Long];
[info]             do 
[info]               x.+=(in.readLong())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]]): scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = ResizableArray.newBuilder[scala.collection.mutable.Set[Long]];
[info]             do 
[info]               x.+=(d4(in, Set.empty[Long]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables): com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables = if (in.isNextToken('{'))
[info]         {
[info]           var _l: scala.collection.mutable.ArrayBuffer[String] = ArrayBuffer.empty[String];
[info]           var _s: scala.collection.mutable.TreeSet[Int] = TreeSet.empty[Int];
[info]           var _ls: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]] = ResizableArray.empty[scala.collection.mutable.Set[Long]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 3463 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.ArrayBuffer[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.TreeSet[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e4(x: scala.collection.mutable.Set[Long], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.ResizableArray[scala.collection.mutable.Set[Long]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e4(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableIterables, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableIterablesCodec: JsonCodec[MutableIterables] = make[MutableIterables](CodecMakerConfig())
[info]                                                                                  ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:19:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readKeyAsString(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readKeyAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.MutableMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:20:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsInt(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readKeyAsLong(), in.readDouble())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = if (in.isNextToken('{'))
[info]         if (in.isNextToken('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.ne(null).&&(default.isEmpty))
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readKeyAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps = if (in.isNextToken('{'))
[info]         {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 109 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case 3488 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         x.foreach(((kv) => {
[info]           out.writeKey(kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.IntAndLongMaps, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:21:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives): com.github.plokhotnyuk.jsoniter_scala.macros.Primitives = if (in.isNextToken('{'))
[info]         {
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           var req0 = 255;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 105 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3146 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3173 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 99246 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.Primitives, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:22:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields = if (in.isNextToken('{'))
[info]         {
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 115 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.ExtractFields, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:23:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("a");
[info]       private val r1: Array[String] = Array("b");
[info]       private val r2: Array[String] = Array("l", "r");
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.A): com.github.plokhotnyuk.jsoniter_scala.macros.A = if (in.isNextToken('{'))
[info]         {
[info]           var _a: Int = 0;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 97 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       {
[info]                         _a = in.readInt();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.A(a = _a)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.B): com.github.plokhotnyuk.jsoniter_scala.macros.B = if (in.isNextToken('{'))
[info]         {
[info]           var _b: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 98 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readString(_b);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.B(b = _b)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.C): com.github.plokhotnyuk.jsoniter_scala.macros.C = if (in.isNextToken('{'))
[info]         {
[info]           var _l: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var _r: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 108 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = d0(in, _l);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 114 => if (in.isCharBufEqualsTo(l, "r"))
[info]                       {
[info]                         _r = d0(in, _r);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3575610 => in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.C(l = _l, r = _r)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase): com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase = {
[info]         in.setMark();
[info]         if (in.isNextToken('{'))
[info]           {
[info]             in.scanToKey("type");
[info]             val l = in.readStringAsCharBuf();
[info]             (in.charBufToHashCode(l): @switch) match {
[info]               case 65 => if (in.isCharBufEqualsTo(l, "A"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d1(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 66 => if (in.isCharBufEqualsTo(l, "B"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d2(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case 67 => if (in.isCharBufEqualsTo(l, "C"))
[info]                 {
[info]                   in.rollbackToMark();
[info]                   d3(in, null)
[info]                 }
[info]               else
[info]                 in.discriminatorValueError("type")
[info]               case _ => in.discriminatorValueError("type")
[info]             }
[info]           }
[info]         else
[info]           in.readNullOrTokenError(default, '{')
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.A, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("A")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("a");
[info]             out.writeVal(x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.B, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("B")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.C, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("type");
[info]             out.writeNonEscapedAsciiVal("C")
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("l");
[info]             e0(x.l, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("r");
[info]             e0(x.r, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.AdtBase, out: JsonWriter): Unit = x match {
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.A)) => e1(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.B)) => e2(x, out)
[info]         case (x @ ((_): com.github.plokhotnyuk.jsoniter_scala.macros.C)) => e3(x, out)
[info]         case null => out.writeNull()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val adtCodec: JsonCodec[AdtBase] = make[AdtBase](CodecMakerConfig())
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:24:52: Generated JSON codec for type 'String':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[String] {
[info]       def nullValue: String = null;
[info]       def decode(in: JsonReader, default: String): String = in.readString(default);
[info]       def encode(x: String, out: JsonWriter): Unit = out.writeVal(x)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val stringCodec: JsonCodec[String] = make[String](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:25:75: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Value): com.github.plokhotnyuk.jsoniter_scala.macros.Value = if (in.isNextToken('{'))
[info]         {
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 111972721 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Elements): com.github.plokhotnyuk.jsoniter_scala.macros.Elements = if (in.isNextToken('{'))
[info]         {
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.macros.Value = null;
[info]           var _status: String = null;
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 288459765 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1992012396 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Rows): com.github.plokhotnyuk.jsoniter_scala.macros.Rows = if (in.isNextToken('{'))
[info]         {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Elements];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -8339209 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Rows(elements = _elements)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix = if (in.isNextToken('{'))
[info]         {
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Rows];
[info]           var _status: String = null;
[info]           var req0 = 1;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 715423921 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 1780936137 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 3506649 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -892481550 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.macros.Value, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.Elements, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.macros.Rows, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.macros.DistanceMatrix, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val googleMapsAPICodec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/JsoniterCodecs.scala:26:64: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.core._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "possibly_sensitive", "lang");
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions): com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions = if (in.isNextToken('{'))
[info]         {
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 15;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r1, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Urls): com.github.plokhotnyuk.jsoniter_scala.macros.Urls = if (in.isNextToken('{'))
[info]         {
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           var req0 = 7;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -518939415 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1714674802 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1943391143 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredKeyError(r2, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Entities): com.github.plokhotnyuk.jsoniter_scala.macros.Entities = if (in.isNextToken('{'))
[info]         {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 149143079 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -1743438373 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -553518659 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d9(in: JsonReader, default: Option[String]): Option[String] = {
[info]         val x = in.readString(null);
[info]         if (x.eq(null))
[info]           None
[info]         else
[info]           Some(x)
[info]       };
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Url): com.github.plokhotnyuk.jsoniter_scala.macros.Url = if (in.isNextToken('{'))
[info]         {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.macros.Urls];
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3598564 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.macros.Url(urls = _urls)
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities): com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = if (in.isNextToken('{'))
[info]         {
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.macros.Url = null;
[info]           var req0 = 3;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d12(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d12(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredKeyError(r4, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.User): com.github.plokhotnyuk.jsoniter_scala.macros.User = if (in.isNextToken('{'))
[info]         {
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3373707 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -43264386 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1901043637 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1724546052 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 116079 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d11(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608539730 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -460163995 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1666926107 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1974943731 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 226316666 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1699658638 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 36848094 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1085743021 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1994383672 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1824078800 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 647263482 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 583435343 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1690715422 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1592986856 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1189803120 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 594447228 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1021718665 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -174080651 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -782008927 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -690137550 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1512257332 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1412739479 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 486184128 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1774134745 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -101767272 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 284519336 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -312724053 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 545330631 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 765915793 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 585125142 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1272354024 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -475640257 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredKeyError(r3, Array(req0, req1))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d13(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 32767;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r5, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet): com.github.plokhotnyuk.jsoniter_scala.macros.Tweet = if (in.isNextToken('{'))
[info]         {
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.macros.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.macros.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Boolean = false;
[info]           var _lang: String = null;
[info]           var req0 = 65535;
[info]           if (in.isNextToken('}').`unary_!`)
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readKeyAsCharBuf();
[info]                   (in.charBufToHashCode(l): @switch) match {
[info]                     case 1369680106 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3355 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1193609971 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3556653 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1607950270 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2102114367 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -896505829 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1960224851 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = d9(in, _in_reply_to_status_id)
[info]                     else
[info]                       in.skip()
[info]                     case 1577137221 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = d9(in, _in_reply_to_status_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case 2047002778 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = d9(in, _in_reply_to_user_id)
[info]                     else
[info]                       in.skip()
[info]                     case -1274685172 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = d9(in, _in_reply_to_user_id_str)
[info]                     else
[info]                       in.skip()
[info]                     case -866290807 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = d9(in, _in_reply_to_screen_name)
[info]                     else
[info]                       in.skip()
[info]                     case 3599307 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d10(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 102225 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = d9(in, _geo)
[info]                     else
[info]                       in.skip()
[info]                     case 1871919611 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = d9(in, _coordinates)
[info]                     else
[info]                       in.skip()
[info]                     case 106748167 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = d9(in, _place)
[info]                     else
[info]                       in.skip()
[info]                     case 1375976184 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = d9(in, _contributors)
[info]                     else
[info]                       in.skip()
[info]                     case 364396852 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d13(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -920773622 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1612760494 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1435051860 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1785238968 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -881681091 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -4566948 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       {
[info]                         _possibly_sensitive = in.readBoolean();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 3314158 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   }
[info]                 }
[info]                while (in.isNextToken(',')) ;
[info]               if (in.isCurrentToken('}').`unary_!`)
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.macros.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredKeyError(r0, Array(req0))
[info]         }
[info]       else
[info]         in.readNullOrTokenError(default, '{');
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet] = if (in.isNextToken('['))
[info]         if (in.isNextToken(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.isNextToken(',')) ;
[info]             if (in.isCurrentToken(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]       else
[info]         in.readNullOrTokenError(default, '[');
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.macros.Urls, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.macros.Entities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.macros.Url, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.macros.UserEntities, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.macros.User, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.macros.RetweetedStatus, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.macros.Tweet, out: JsonWriter): Unit = if (x.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           {
[info]             out.writeNonEscapedAsciiKey("created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 out.writeNonEscapedAsciiKey("contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("possibly_sensitive");
[info]             out.writeVal(x.possibly_sensitive)
[info]           };
[info]           {
[info]             out.writeNonEscapedAsciiKey("lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.macros.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         x.foreach(((x) => {
[info]           out.writeComma();
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val twitterAPICodec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                                ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:14:18: local val v1 in value arraysFormat is never used
[warn]     implicit val v1: Format[Array[BigInt]] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:20:18: local val v1 in value bitSetsFormat is never used
[warn]     implicit val v1: Reads[BitSet] = Reads[BitSet](js => JsSuccess(BitSet(js.as[Array[Int]]: _*)))
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:21:18: local val v2 in value bitSetsFormat is never used
[warn]     implicit val v2: Reads[mutable.BitSet] =
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:28:18: local val v1 in value mapsFormat is never used
[warn]     implicit val v1: OFormat[HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:31:18: local val v2 in value mapsFormat is never used
[warn]     implicit val v2: OFormat[Map[Int, HashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:43:18: local val v1 in value mutableMapsFormat is never used
[warn]     implicit val v1: OFormat[mutable.HashMap[String, Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:46:18: local val v2 in value mutableMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.Map[Int, mutable.OpenHashMap[Long, Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:63:18: local val v1 in value intAndLongMapsFormat is never used
[warn]     implicit val v1: OFormat[IntMap[Double]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:68:18: local val v2 in value intAndLongMapsFormat is never used
[warn]     implicit val v2: OFormat[mutable.LongMap[LongMap[Double]]] = OFormat(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:80:18: local val v1 in value primitivesFormat is never used
[warn]     implicit val v1: Format[Char] = Format(
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:87:23: local val v1 in value adtFormat is never used
[warn]     implicit lazy val v1: OFormat[A] = Json.format[A]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:88:23: local val v2 in value adtFormat is never used
[warn]     implicit lazy val v2: OFormat[B] = Json.format[B]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:89:23: local val v3 in value adtFormat is never used
[warn]     implicit lazy val v3: OFormat[C] = Json.format[C]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:94:18: local val v1 in value googleMapsAPIFormat is never used
[warn]     implicit val v1: OFormat[Value] = Json.format[Value]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:95:18: local val v2 in value googleMapsAPIFormat is never used
[warn]     implicit val v2: OFormat[Elements] = Json.format[Elements]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:96:18: local val v3 in value googleMapsAPIFormat is never used
[warn]     implicit val v3: OFormat[Rows] = Json.format[Rows]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:108:18: local val v1 in value twitterAPIFormat is never used
[warn]     implicit val v1: OFormat[Urls] = Json.format[Urls]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:109:18: local val v2 in value twitterAPIFormat is never used
[warn]     implicit val v2: OFormat[Url] = Json.format[Url]
[warn]                  ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/macros/PlayJsonFormats.scala:111:18: local val v4 in value twitterAPIFormat is never used
[warn]     implicit val v4: OFormat[UserMentions] = Json.format[UserMentions]
[warn]                  ^
[warn] 19 warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT.jar ...
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
Processing 295 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 123 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.2-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[error] WARNING: An illegal reflective access operation has occurred
[error] WARNING: Illegal reflective access by org.openjdk.jmh.util.Utils (file:/tmp/sbt_423d32aa/target/1ea93b88/jmh-core-1.19.jar) to field java.io.PrintStream.charOut
[error] WARNING: Please consider reporting this to the maintainers of org.openjdk.jmh.util.Utils
[error] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[error] WARNING: All illegal access operations will be denied in a future release
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:19:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 939608.103 ops/s
[info] # Warmup Iteration   2: 1536453.494 ops/s
[info] # Warmup Iteration   3: 1530004.780 ops/s
[info] # Warmup Iteration   4: 1491619.232 ops/s
[info] # Warmup Iteration   5: 1527669.417 ops/s
[info] Iteration   1: 1545628.146 ops/s
[info]                  ·gc.alloc.rate:                   2285.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2019.469 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2056.932 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1539755.569 ops/s
[info]                  ·gc.alloc.rate:                   2277.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2367.967 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2420.200 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1552700.237 ops/s
[info]                  ·gc.alloc.rate:                   2296.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2375.277 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2407.750 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1541317.644 ops/s
[info]                  ·gc.alloc.rate:                   2279.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2378.439 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2428.983 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1561755.827 ops/s
[info]                  ·gc.alloc.rate:                   2309.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2042.127 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2058.153 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1548231.484 ±(99.9%) 34937.952 ops/s [Average]
[info]   (min, avg, max) = (1539755.569, 1548231.484, 1561755.827), stdev = 9073.275
[info]   CI (99.9%): [1513293.533, 1583169.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2289.878 ±(99.9%) 51.544 MB/sec [Average]
[info]   (min, avg, max) = (2277.757, 2289.878, 2309.873), stdev = 13.386
[info]   CI (99.9%): [2238.334, 2341.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.068 ±(99.9%) 0.158 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.068, 0.128), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   2236.656 ±(99.9%) 724.424 MB/sec [Average]
[info]   (min, avg, max) = (2019.469, 2236.656, 2378.439), stdev = 188.131
[info]   CI (99.9%): [1512.232, 2961.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2274.404 ±(99.9%) 762.853 B/op [Average]
[info]   (min, avg, max) = (2056.932, 2274.404, 2428.983), stdev = 198.110
[info]   CI (99.9%): [1511.551, 3037.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   33.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 7.000), stdev = 0.548
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 9.000), stdev = 1.304
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 0.84% complete, ETA 00:31:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29610.632 ops/s
[info] # Warmup Iteration   2: 185741.620 ops/s
[info] # Warmup Iteration   3: 187169.774 ops/s
[info] # Warmup Iteration   4: 187021.575 ops/s
[info] # Warmup Iteration   5: 188058.020 ops/s
[info] Iteration   1: 186776.131 ops/s
[info]                  ·gc.alloc.rate:                   333.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              2808.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.000 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2722.349 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 188438.116 ops/s
[info]                  ·gc.alloc.rate:                   336.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              2808.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.980 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2698.400 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 187827.095 ops/s
[info]                  ·gc.alloc.rate:                   335.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              2808.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.701 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2720.943 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 186846.581 ops/s
[info]                  ·gc.alloc.rate:                   333.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              2808.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2735.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 186829.832 ops/s
[info]                  ·gc.alloc.rate:                   333.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              2808.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.728 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2752.455 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   187343.551 ±(99.9%) 2897.427 ops/s [Average]
[info]   (min, avg, max) = (186776.131, 187343.551, 188438.116), stdev = 752.452
[info]   CI (99.9%): [184446.124, 190240.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   334.195 ±(99.9%) 5.110 MB/sec [Average]
[info]   (min, avg, max) = (333.162, 334.195, 336.098), stdev = 1.327
[info]   CI (99.9%): [329.085, 339.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   2808.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2808.002, 2808.002, 2808.002), stdev = 0.001
[info]   CI (99.9%): [2808.002, 2808.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   0.083 ±(99.9%) 0.586 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.354), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.701 ±(99.9%) 4.941 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.701, 2.982), stdev = 1.283
[info]   CI (99.9%): [≈ 0, 5.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   324.417 ±(99.9%) 5.954 MB/sec [Average]
[info]   (min, avg, max) = (322.980, 324.417, 326.728), stdev = 1.546
[info]   CI (99.9%): [318.463, 330.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2725.892 ±(99.9%) 76.705 B/op [Average]
[info]   (min, avg, max) = (2698.400, 2725.892, 2752.455), stdev = 19.920
[info]   CI (99.9%): [2649.188, 2802.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 4.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 1.68% complete, ETA 00:31:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 434374.589 ops/s
[info] # Warmup Iteration   2: 457663.231 ops/s
[info] # Warmup Iteration   3: 463650.904 ops/s
[info] # Warmup Iteration   4: 459443.109 ops/s
[info] # Warmup Iteration   5: 463480.900 ops/s
[info] Iteration   1: 461393.263 ops/s
[info]                  ·gc.alloc.rate:                   293.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.722 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 872.537 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 462278.136 ops/s
[info]                  ·gc.alloc.rate:                   293.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1119.207 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 465664.700 ops/s
[info]                  ·gc.alloc.rate:                   295.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.725 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1111.059 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 463331.611 ops/s
[info]                  ·gc.alloc.rate:                   294.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.694 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1113.289 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 461952.505 ops/s
[info]                  ·gc.alloc.rate:                   293.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1116.605 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   462924.043 ±(99.9%) 6495.410 ops/s [Average]
[info]   (min, avg, max) = (461393.263, 462924.043, 465664.700), stdev = 1686.837
[info]   CI (99.9%): [456428.633, 469419.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   294.096 ±(99.9%) 4.196 MB/sec [Average]
[info]   (min, avg, max) = (293.079, 294.096, 295.866), stdev = 1.090
[info]   CI (99.9%): [289.901, 298.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1000.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.001, 1000.001, 1000.001), stdev = 0.001
[info]   CI (99.9%): [1000.001, 1000.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.651 ±(99.9%) 5.252 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.651, 3.090), stdev = 1.364
[info]   CI (99.9%): [≈ 0, 5.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   2.217 ±(99.9%) 17.885 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.217, 10.522), stdev = 4.645
[info]   CI (99.9%): [≈ 0, 20.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   313.712 ±(99.9%) 124.844 MB/sec [Average]
[info]   (min, avg, max) = (255.722, 313.712, 328.725), stdev = 32.421
[info]   CI (99.9%): [188.869, 438.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1066.539 ±(99.9%) 417.777 B/op [Average]
[info]   (min, avg, max) = (872.537, 1066.539, 1119.207), stdev = 108.495
[info]   CI (99.9%): [648.763, 1484.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 2.52% complete, ETA 00:30:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1601780.935 ops/s
[info] # Warmup Iteration   2: 1761144.992 ops/s
[info] # Warmup Iteration   3: 1819657.536 ops/s
[info] # Warmup Iteration   4: 1834855.291 ops/s
[info] # Warmup Iteration   5: 1844889.555 ops/s
[info] Iteration   1: 1819834.103 ops/s
[info]                  ·gc.alloc.rate:                   591.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 565.729 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1842201.706 ops/s
[info]                  ·gc.alloc.rate:                   599.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 279.999 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1833276.606 ops/s
[info]                  ·gc.alloc.rate:                   596.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.860 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 563.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1848795.246 ops/s
[info]                  ·gc.alloc.rate:                   601.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.287 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 559.427 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1851482.059 ops/s
[info]                  ·gc.alloc.rate:                   602.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              512.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      659.133 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 560.313 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1839117.944 ±(99.9%) 49538.009 ops/s [Average]
[info]   (min, avg, max) = (1819834.103, 1839117.944, 1851482.059), stdev = 12864.864
[info]   CI (99.9%): [1789579.935, 1888655.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   598.294 ±(99.9%) 16.375 MB/sec [Average]
[info]   (min, avg, max) = (591.880, 598.294, 602.299), stdev = 4.253
[info]   CI (99.9%): [581.919, 614.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   512.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (512.000, 512.000, 512.000), stdev = 0.001
[info]   CI (99.9%): [512.000, 512.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.054), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   590.802 ±(99.9%) 566.311 MB/sec [Average]
[info]   (min, avg, max) = (327.738, 590.802, 659.133), stdev = 147.069
[info]   CI (99.9%): [24.491, 1157.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   505.696 ±(99.9%) 485.923 B/op [Average]
[info]   (min, avg, max) = (279.999, 505.696, 565.729), stdev = 126.193
[info]   CI (99.9%): [19.774, 991.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 3.000), stdev = 0.837
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 3.36% complete, ETA 00:30:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4290674.391 ops/s
[info] # Warmup Iteration   2: 4565334.623 ops/s
[info] # Warmup Iteration   3: 4726633.269 ops/s
[info] # Warmup Iteration   4: 4674098.098 ops/s
[info] # Warmup Iteration   5: 4689194.190 ops/s
[info] Iteration   1: 4679789.266 ops/s
[info]                  ·gc.alloc.rate:                   404.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              136.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.679 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.562 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4683582.080 ops/s
[info]                  ·gc.alloc.rate:                   404.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              136.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 220.267 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4716029.799 ops/s
[info]                  ·gc.alloc.rate:                   407.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              136.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.048 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.154 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4704335.211 ops/s
[info]                  ·gc.alloc.rate:                   406.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              136.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.051 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.424 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4721407.420 ops/s
[info]                  ·gc.alloc.rate:                   407.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              136.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.349 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 109.137 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   4701028.755 ±(99.9%) 72212.570 ops/s [Average]
[info]   (min, avg, max) = (4679789.266, 4701028.755, 4721407.420), stdev = 18753.375
[info]   CI (99.9%): [4628816.185, 4773241.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   406.172 ±(99.9%) 6.283 MB/sec [Average]
[info]   (min, avg, max) = (404.302, 406.172, 407.924), stdev = 1.632
[info]   CI (99.9%): [399.889, 412.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   136.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (136.000, 136.000, 136.000), stdev = 0.001
[info]   CI (99.9%): [136.000, 136.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   0.010 ±(99.9%) 0.052 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.028), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   393.106 ±(99.9%) 564.623 MB/sec [Average]
[info]   (min, avg, max) = (327.048, 393.106, 655.404), stdev = 146.631
[info]   CI (99.9%): [≈ 0, 957.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   131.709 ±(99.9%) 190.642 B/op [Average]
[info]   (min, avg, max) = (109.137, 131.709, 220.267), stdev = 49.509
[info]   CI (99.9%): [≈ 0, 322.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 4.20% complete, ETA 00:30:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13274.438 ops/s
[info] # Warmup Iteration   2: 101778.753 ops/s
[info] # Warmup Iteration   3: 113883.457 ops/s
[info] # Warmup Iteration   4: 117926.407 ops/s
[info] # Warmup Iteration   5: 117830.892 ops/s
[info] Iteration   1: 118467.599 ops/s
[info]                  ·gc.alloc.rate:                   755.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.438 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8681.789 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 118507.932 ops/s
[info]                  ·gc.alloc.rate:                   755.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.842 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13056.972 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 118817.143 ops/s
[info]                  ·gc.alloc.rate:                   757.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8744.384 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 118314.167 ops/s
[info]                  ·gc.alloc.rate:                   754.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.809 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8816.775 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 119752.858 ops/s
[info]                  ·gc.alloc.rate:                   763.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              10032.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8737.477 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   118771.940 ±(99.9%) 2225.496 ops/s [Average]
[info]   (min, avg, max) = (118314.167, 118771.940, 119752.858), stdev = 577.954
[info]   CI (99.9%): [116546.444, 120997.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   757.143 ±(99.9%) 13.930 MB/sec [Average]
[info]   (min, avg, max) = (754.164, 757.143, 763.275), stdev = 3.618
[info]   CI (99.9%): [743.213, 771.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   10032.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10032.003, 10032.004, 10032.004), stdev = 0.001
[info]   CI (99.9%): [10032.003, 10032.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.553 ±(99.9%) 1.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.553, 0.831), stdev = 0.339
[info]   CI (99.9%): [≈ 0, 1.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   724.995 ±(99.9%) 557.433 MB/sec [Average]
[info]   (min, avg, max) = (653.438, 724.995, 983.842), stdev = 144.764
[info]   CI (99.9%): [167.562, 1282.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   9607.479 ±(99.9%) 7427.591 B/op [Average]
[info]   (min, avg, max) = (8681.789, 9607.479, 13056.972), stdev = 1928.922
[info]   CI (99.9%): [2179.888, 17035.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce
[info] # Run progress: 5.04% complete, ETA 00:30:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 310413.694 ops/s
[info] # Warmup Iteration   2: 504559.651 ops/s
[info] # Warmup Iteration   3: 522414.016 ops/s
[info] # Warmup Iteration   4: 512683.731 ops/s
[info] # Warmup Iteration   5: 516683.630 ops/s
[info] Iteration   1: 526274.269 ops/s
[info]                  ·gc.alloc.rate:                   1391.151 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1320.378 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3948.366 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 525909.333 ops/s
[info]                  ·gc.alloc.rate:                   1389.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1663.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4978.837 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 513651.685 ops/s
[info]                  ·gc.alloc.rate:                   1357.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4102.570 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 518764.635 ops/s
[info]                  ·gc.alloc.rate:                   1371.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.779 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4080.377 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 525316.182 ops/s
[info]                  ·gc.alloc.rate:                   1388.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.002 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4042.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce":
[info]   521983.221 ±(99.9%) 21500.758 ops/s [Average]
[info]   (min, avg, max) = (513651.685, 521983.221, 526274.269), stdev = 5583.679
[info]   CI (99.9%): [500482.462, 543483.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate":
[info]   1379.589 ±(99.9%) 56.894 MB/sec [Average]
[info]   (min, avg, max) = (1357.587, 1379.589, 1391.151), stdev = 14.775
[info]   CI (99.9%): [1322.695, 1436.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.150 ±(99.9%) 0.363 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.150, 0.311), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1403.304 ±(99.9%) 561.704 MB/sec [Average]
[info]   (min, avg, max) = (1320.378, 1403.304, 1663.515), stdev = 145.873
[info]   CI (99.9%): [841.600, 1965.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4230.503 ±(99.9%) 1626.762 B/op [Average]
[info]   (min, avg, max) = (3948.366, 4230.503, 4978.837), stdev = 422.465
[info]   CI (99.9%): [2603.741, 5857.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson
[info] # Run progress: 5.88% complete, ETA 00:29:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 475866.439 ops/s
[info] # Warmup Iteration   2: 1270859.877 ops/s
[info] # Warmup Iteration   3: 1300311.569 ops/s
[info] # Warmup Iteration   4: 1293654.586 ops/s
[info] # Warmup Iteration   5: 1297935.757 ops/s
[info] Iteration   1: 1300047.805 ops/s
[info]                  ·gc.alloc.rate:                   925.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.335 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1197.897 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1297396.081 ops/s
[info]                  ·gc.alloc.rate:                   923.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.771 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1206.878 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1309072.691 ops/s
[info]                  ·gc.alloc.rate:                   931.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 800.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1298334.837 ops/s
[info]                  ·gc.alloc.rate:                   922.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.162 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1215.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1306550.665 ops/s
[info]                  ·gc.alloc.rate:                   929.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1212.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson":
[info]   1302280.416 ±(99.9%) 20080.554 ops/s [Average]
[info]   (min, avg, max) = (1297396.081, 1302280.416, 1309072.691), stdev = 5214.856
[info]   CI (99.9%): [1282199.862, 1322360.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate":
[info]   926.368 ±(99.9%) 15.662 MB/sec [Average]
[info]   (min, avg, max) = (922.393, 926.368, 931.558), stdev = 4.067
[info]   CI (99.9%): [910.707, 942.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.070 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.070, 0.126), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   931.383 ±(99.9%) 572.919 MB/sec [Average]
[info]   (min, avg, max) = (665.472, 931.383, 1006.176), stdev = 148.785
[info]   CI (99.9%): [358.464, 1504.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1126.520 ±(99.9%) 703.139 B/op [Average]
[info]   (min, avg, max) = (800.089, 1126.520, 1215.645), stdev = 182.603
[info]   CI (99.9%): [423.382, 1829.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter
[info] # Run progress: 6.72% complete, ETA 00:29:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1568948.891 ops/s
[info] # Warmup Iteration   2: 2531996.006 ops/s
[info] # Warmup Iteration   3: 2679985.638 ops/s
[info] # Warmup Iteration   4: 2645552.774 ops/s
[info] # Warmup Iteration   5: 2646767.714 ops/s
[info] Iteration   1: 2649488.694 ops/s
[info]                  ·gc.alloc.rate:                   175.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.942 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2673357.916 ops/s
[info]                  ·gc.alloc.rate:      176.641 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2653203.753 ops/s
[info]                  ·gc.alloc.rate:                   175.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.734 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 151.729 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2642842.541 ops/s
[info]                  ·gc.alloc.rate:                   174.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 152.324 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2655375.929 ops/s
[info]                  ·gc.alloc.rate:      175.482 MB/sec
[info]                  ·gc.alloc.rate.norm: 104.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter":
[info]   2654853.767 ±(99.9%) 43838.710 ops/s [Average]
[info]   (min, avg, max) = (2642842.541, 2654853.767, 2673357.916), stdev = 11384.774
[info]   CI (99.9%): [2611015.057, 2698692.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate":
[info]   175.423 ±(99.9%) 2.896 MB/sec [Average]
[info]   (min, avg, max) = (174.623, 175.423, 176.641), stdev = 0.752
[info]   CI (99.9%): [172.527, 178.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm":
[info]   104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (104.000, 104.000, 104.000), stdev = 0.001
[info]   CI (99.9%): [104.000, 104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.005 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   153.457 ±(99.9%) 539.423 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.457, 255.789), stdev = 140.087
[info]   CI (99.9%): [≈ 0, 692.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   91.199 ±(99.9%) 320.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 91.199, 152.324), stdev = 83.253
[info]   CI (99.9%): [≈ 0, 411.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay
[info] # Run progress: 7.56% complete, ETA 00:29:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24079.257 ops/s
[info] # Warmup Iteration   2: 123021.212 ops/s
[info] # Warmup Iteration   3: 126829.716 ops/s
[info] # Warmup Iteration   4: 127762.190 ops/s
[info] # Warmup Iteration   5: 129175.464 ops/s
[info] Iteration   1: 128373.660 ops/s
[info]                  ·gc.alloc.rate:                   1067.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1319.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16185.711 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 127073.537 ops/s
[info]                  ·gc.alloc.rate:                   1056.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.004 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12346.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 129138.368 ops/s
[info]                  ·gc.alloc.rate:                   1073.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12201.995 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 127172.142 ops/s
[info]                  ·gc.alloc.rate:                   1057.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12440.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 126819.571 ops/s
[info]                  ·gc.alloc.rate:                   1054.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              13088.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.826 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12519.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay":
[info]   127715.456 ±(99.9%) 3835.100 ops/s [Average]
[info]   (min, avg, max) = (126819.571, 127715.456, 129138.368), stdev = 995.963
[info]   CI (99.9%): [123880.356, 131550.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate":
[info]   1062.036 ±(99.9%) 31.486 MB/sec [Average]
[info]   (min, avg, max) = (1054.657, 1062.036, 1073.840), stdev = 8.177
[info]   CI (99.9%): [1030.550, 1093.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm":
[info]   13088.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13088.003, 13088.003, 13088.003), stdev = 0.001
[info]   CI (99.9%): [13088.003, 13088.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.769 ±(99.9%) 1.202 B/op [Average]
[info]   (min, avg, max) = (0.258, 0.769, 1.031), stdev = 0.312
[info]   CI (99.9%): [≈ 0, 1.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   1066.401 ±(99.9%) 545.808 MB/sec [Average]
[info]   (min, avg, max) = (997.004, 1066.401, 1319.838), stdev = 141.745
[info]   CI (99.9%): [520.593, 1612.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   13138.672 ±(99.9%) 6574.724 B/op [Average]
[info]   (min, avg, max) = (12201.995, 13138.672, 16185.711), stdev = 1707.435
[info]   CI (99.9%): [6563.948, 19713.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAdtPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 8.40% complete, ETA 00:29:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 559874.594 ops/s
[info] # Warmup Iteration   2: 985123.559 ops/s
[info] # Warmup Iteration   3: 982903.695 ops/s
[info] # Warmup Iteration   4: 1009889.665 ops/s
[info] # Warmup Iteration   5: 1021318.835 ops/s
[info] Iteration   1: 1021533.418 ops/s
[info]                  ·gc.alloc.rate:                   1593.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1660.658 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2558.959 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1011986.053 ops/s
[info]                  ·gc.alloc.rate:                   1579.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2081.219 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 989396.230 ops/s
[info]                  ·gc.alloc.rate:                   1543.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1681.086 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2674.460 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1012734.699 ops/s
[info]                  ·gc.alloc.rate:                   1580.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.460 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2624.269 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1013542.167 ops/s
[info]                  ·gc.alloc.rate:                   1581.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.997 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2102.951 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1009838.514 ±(99.9%) 46422.807 ops/s [Average]
[info]   (min, avg, max) = (989396.230, 1009838.514, 1021533.418), stdev = 12055.856
[info]   CI (99.9%): [963415.706, 1056261.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1575.651 ±(99.9%) 72.354 MB/sec [Average]
[info]   (min, avg, max) = (1543.768, 1575.651, 1593.842), stdev = 18.790
[info]   CI (99.9%): [1503.297, 1648.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.104 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (0.065, 0.104, 0.160), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1544.474 ±(99.9%) 698.808 MB/sec [Average]
[info]   (min, avg, max) = (1338.167, 1544.474, 1688.460), stdev = 181.478
[info]   CI (99.9%): [845.666, 2243.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2408.372 ±(99.9%) 1123.309 B/op [Average]
[info]   (min, avg, max) = (2081.219, 2408.372, 2674.460), stdev = 291.720
[info]   CI (99.9%): [1285.062, 3531.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 9.24% complete, ETA 00:28:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 823082.549 ops/s
[info] # Warmup Iteration   2: 1931749.302 ops/s
[info] # Warmup Iteration   3: 1973299.599 ops/s
[info] # Warmup Iteration   4: 1942098.915 ops/s
[info] # Warmup Iteration   5: 1919812.436 ops/s
[info] Iteration   1: 1946081.952 ops/s
[info]                  ·gc.alloc.rate:                   1364.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.163 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1079.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1956975.170 ops/s
[info]                  ·gc.alloc.rate:                   1372.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.805 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1078.975 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1948056.451 ops/s
[info]                  ·gc.alloc.rate:                   1366.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1088.208 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1938927.739 ops/s
[info]                  ·gc.alloc.rate:                   1360.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.599 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1097.117 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1905181.484 ops/s
[info]                  ·gc.alloc.rate:                   1336.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.997 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1118.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1939044.559 ±(99.9%) 76988.023 ops/s [Average]
[info]   (min, avg, max) = (1905181.484, 1939044.559, 1956975.170), stdev = 19993.545
[info]   CI (99.9%): [1862056.536, 2016032.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1360.153 ±(99.9%) 54.404 MB/sec [Average]
[info]   (min, avg, max) = (1336.251, 1360.153, 1372.926), stdev = 14.129
[info]   CI (99.9%): [1305.749, 1414.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.064 ±(99.9%) 0.160 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.064, 0.134), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1345.711 ±(99.9%) 30.658 MB/sec [Average]
[info]   (min, avg, max) = (1334.163, 1345.711, 1353.997), stdev = 7.962
[info]   CI (99.9%): [1315.052, 1376.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1092.409 ±(99.9%) 63.482 B/op [Average]
[info]   (min, avg, max) = (1078.975, 1092.409, 1118.662), stdev = 16.486
[info]   CI (99.9%): [1028.927, 1155.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 10.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 10.08% complete, ETA 00:28:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5627099.158 ops/s
[info] # Warmup Iteration   2: 6232549.775 ops/s
[info] # Warmup Iteration   3: 6495862.001 ops/s
[info] # Warmup Iteration   4: 6544841.304 ops/s
[info] # Warmup Iteration   5: 6597803.775 ops/s
[info] Iteration   1: 6481481.104 ops/s
[info]                  ·gc.alloc.rate:                   823.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.657 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 238.906 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6601500.170 ops/s
[info]                  ·gc.alloc.rate:                   838.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.949 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 156.912 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6616580.172 ops/s
[info]                  ·gc.alloc.rate:                   840.745 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 235.783 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6635563.841 ops/s
[info]                  ·gc.alloc.rate:                   843.112 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      663.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 157.284 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6617552.931 ops/s
[info]                  ·gc.alloc.rate:                   840.765 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.035 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.411 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6590535.644 ±(99.9%) 239305.232 ops/s [Average]
[info]   (min, avg, max) = (6481481.104, 6590535.644, 6635563.841), stdev = 62146.809
[info]   CI (99.9%): [6351230.412, 6829840.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   837.342 ±(99.9%) 30.483 MB/sec [Average]
[info]   (min, avg, max) = (823.469, 837.342, 843.112), stdev = 7.916
[info]   CI (99.9%): [806.859, 867.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.015 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.015, 0.025), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   858.770 ±(99.9%) 697.273 MB/sec [Average]
[info]   (min, avg, max) = (657.949, 858.770, 998.035), stdev = 181.080
[info]   CI (99.9%): [161.497, 1556.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   205.259 ±(99.9%) 169.347 B/op [Average]
[info]   (min, avg, max) = (156.912, 205.259, 238.906), stdev = 43.979
[info]   CI (99.9%): [35.912, 374.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.92% complete, ETA 00:28:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89981.916 ops/s
[info] # Warmup Iteration   2: 459742.853 ops/s
[info] # Warmup Iteration   3: 462201.808 ops/s
[info] # Warmup Iteration   4: 461045.187 ops/s
[info] # Warmup Iteration   5: 461743.706 ops/s
[info] Iteration   1: 465777.272 ops/s
[info]                  ·gc.alloc.rate:                   1176.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3355.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 459394.141 ops/s
[info]                  ·gc.alloc.rate:                   1160.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.264 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4564.414 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 469587.301 ops/s
[info]                  ·gc.alloc.rate:                   1186.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.664 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3367.991 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 459654.661 ops/s
[info]                  ·gc.alloc.rate:                   1161.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.928 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4602.338 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 466894.439 ops/s
[info]                  ·gc.alloc.rate:                   1179.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3409.833 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   464261.563 ±(99.9%) 17488.478 ops/s [Average]
[info]   (min, avg, max) = (459394.141, 464261.563, 469587.301), stdev = 4541.702
[info]   CI (99.9%): [446773.084, 481750.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1172.674 ±(99.9%) 43.921 MB/sec [Average]
[info]   (min, avg, max) = (1160.517, 1172.674, 1186.032), stdev = 11.406
[info]   CI (99.9%): [1128.753, 1216.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   3976.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3976.001, 3976.001, 3976.001), stdev = 0.001
[info]   CI (99.9%): [3976.001, 3976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.227 ±(99.9%) 0.496 B/op [Average]
[info]   (min, avg, max) = (0.140, 0.227, 0.428), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1136.994 ±(99.9%) 707.550 MB/sec [Average]
[info]   (min, avg, max) = (992.715, 1136.994, 1343.928), stdev = 183.748
[info]   CI (99.9%): [429.444, 1844.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   3859.918 ±(99.9%) 2544.778 B/op [Average]
[info]   (min, avg, max) = (3355.013, 3859.918, 4602.338), stdev = 660.871
[info]   CI (99.9%): [1315.140, 6404.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 11.76% complete, ETA 00:28:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 348511.460 ops/s
[info] # Warmup Iteration   2: 614285.789 ops/s
[info] # Warmup Iteration   3: 611665.805 ops/s
[info] # Warmup Iteration   4: 601714.134 ops/s
[info] # Warmup Iteration   5: 608471.239 ops/s
[info] Iteration   1: 610924.816 ops/s
[info]                  ·gc.alloc.rate:                   1977.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1675.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4316.734 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 620452.875 ops/s
[info]                  ·gc.alloc.rate:                   2008.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2022.254 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5130.064 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 612611.608 ops/s
[info]                  ·gc.alloc.rate:                   1983.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2030.022 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5216.396 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 619064.951 ops/s
[info]                  ·gc.alloc.rate:                   2004.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2035.565 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5175.360 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 594022.402 ops/s
[info]                  ·gc.alloc.rate:                   1923.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              5096.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.110 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2038.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5400.746 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce":
[info]   611415.330 ±(99.9%) 40586.388 ops/s [Average]
[info]   (min, avg, max) = (594022.402, 611415.330, 620452.875), stdev = 10540.156
[info]   CI (99.9%): [570828.942, 652001.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   1979.496 ±(99.9%) 131.300 MB/sec [Average]
[info]   (min, avg, max) = (1923.315, 1979.496, 2008.826), stdev = 34.098
[info]   CI (99.9%): [1848.196, 2110.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5096.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5096.001, 5096.001, 5096.001), stdev = 0.001
[info]   CI (99.9%): [5096.000, 5096.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.182 ±(99.9%) 0.230 B/op [Average]
[info]   (min, avg, max) = (0.110, 0.182, 0.267), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   1960.309 ±(99.9%) 613.799 MB/sec [Average]
[info]   (min, avg, max) = (1675.375, 1960.309, 2038.330), stdev = 159.402
[info]   CI (99.9%): [1346.511, 2574.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5047.860 ±(99.9%) 1622.867 B/op [Average]
[info]   (min, avg, max) = (4316.734, 5047.860, 5400.746), stdev = 421.453
[info]   CI (99.9%): [3424.993, 6670.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.400, 12.000), stdev = 2.510
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 12.61% complete, ETA 00:27:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 525510.102 ops/s
[info] # Warmup Iteration   2: 1326347.184 ops/s
[info] # Warmup Iteration   3: 1337491.751 ops/s
[info] # Warmup Iteration   4: 1327356.408 ops/s
[info] # Warmup Iteration   5: 1341508.327 ops/s
[info] Iteration   1: 1342198.540 ops/s
[info]                  ·gc.alloc.rate:                   1261.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.045 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1170.513 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1329734.994 ops/s
[info]                  ·gc.alloc.rate:                   1250.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.257 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1583.970 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1341854.939 ops/s
[info]                  ·gc.alloc.rate:                   1261.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.026 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1576.728 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1353716.996 ops/s
[info]                  ·gc.alloc.rate:                   1272.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.511 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1569.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1329857.588 ops/s
[info]                  ·gc.alloc.rate:                   1250.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1014.412 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1200.613 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1339472.611 ±(99.9%) 38663.924 ops/s [Average]
[info]   (min, avg, max) = (1329734.994, 1339472.611, 1353716.996), stdev = 10040.898
[info]   CI (99.9%): [1300808.687, 1378136.535] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1259.461 ±(99.9%) 36.238 MB/sec [Average]
[info]   (min, avg, max) = (1250.416, 1259.461, 1272.916), stdev = 9.411
[info]   CI (99.9%): [1223.223, 1295.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.073 ±(99.9%) 0.116 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.073, 0.099), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1208.850 ±(99.9%) 712.756 MB/sec [Average]
[info]   (min, avg, max) = (998.045, 1208.850, 1349.511), stdev = 185.101
[info]   CI (99.9%): [496.094, 1921.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1420.176 ±(99.9%) 825.964 B/op [Average]
[info]   (min, avg, max) = (1170.513, 1420.176, 1583.970), stdev = 214.500
[info]   CI (99.9%): [594.212, 2246.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 13.45% complete, ETA 00:27:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1831848.739 ops/s
[info] # Warmup Iteration   2: 2840699.198 ops/s
[info] # Warmup Iteration   3: 2925950.917 ops/s
[info] # Warmup Iteration   4: 2934064.728 ops/s
[info] # Warmup Iteration   5: 2885667.202 ops/s
[info] Iteration   1: 2906706.402 ops/s
[info]                  ·gc.alloc.rate:                   1211.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1321.395 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 715.576 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2890794.676 ops/s
[info]                  ·gc.alloc.rate:                   1204.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.123 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 542.914 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2934701.687 ops/s
[info]                  ·gc.alloc.rate:                   1223.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.838 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 716.449 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2932008.557 ops/s
[info]                  ·gc.alloc.rate:                   1221.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 720.144 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2880614.400 ops/s
[info]                  ·gc.alloc.rate:                   1200.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 551.556 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2908965.144 ±(99.9%) 92983.305 ops/s [Average]
[info]   (min, avg, max) = (2880614.400, 2908965.144, 2934701.687), stdev = 24147.469
[info]   CI (99.9%): [2815981.839, 3001948.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1212.313 ±(99.9%) 38.632 MB/sec [Average]
[info]   (min, avg, max) = (1200.495, 1212.313, 1223.129), stdev = 10.033
[info]   CI (99.9%): [1173.681, 1250.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.027 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.022, 0.027, 0.034), stdev = 0.006
[info]   CI (99.9%): [0.003, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1200.984 ±(99.9%) 695.852 MB/sec [Average]
[info]   (min, avg, max) = (997.123, 1200.984, 1341.204), stdev = 180.711
[info]   CI (99.9%): [505.132, 1896.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   649.328 ±(99.9%) 359.123 B/op [Average]
[info]   (min, avg, max) = (542.914, 649.328, 720.144), stdev = 93.263
[info]   CI (99.9%): [290.204, 1008.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 14.29% complete, ETA 00:27:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36915.149 ops/s
[info] # Warmup Iteration   2: 233267.945 ops/s
[info] # Warmup Iteration   3: 233043.937 ops/s
[info] # Warmup Iteration   4: 230270.523 ops/s
[info] # Warmup Iteration   5: 236926.888 ops/s
[info] Iteration   1: 232332.821 ops/s
[info]                  ·gc.alloc.rate:                   1419.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.016 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9024.938 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 236431.459 ops/s
[info]                  ·gc.alloc.rate:                   1444.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.209 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8921.900 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 236397.045 ops/s
[info]                  ·gc.alloc.rate:                   1443.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11205.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 236025.030 ops/s
[info]                  ·gc.alloc.rate:                   1441.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9010.461 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 235663.498 ops/s
[info]                  ·gc.alloc.rate:                   1439.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              9616.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9044.089 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay":
[info]   235369.971 ±(99.9%) 6647.571 ops/s [Average]
[info]   (min, avg, max) = (232332.821, 235369.971, 236431.459), stdev = 1726.353
[info]   CI (99.9%): [228722.400, 242017.542] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1437.868 ±(99.9%) 40.739 MB/sec [Average]
[info]   (min, avg, max) = (1419.253, 1437.868, 1444.474), stdev = 10.580
[info]   CI (99.9%): [1397.129, 1478.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9616.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9616.002, 9616.002, 9616.002), stdev = 0.001
[info]   CI (99.9%): [9616.002, 9616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.445 ±(99.9%) 0.954 B/op [Average]
[info]   (min, avg, max) = (0.139, 0.445, 0.832), stdev = 0.248
[info]   CI (99.9%): [≈ 0, 1.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1412.006 ±(99.9%) 583.478 MB/sec [Average]
[info]   (min, avg, max) = (1332.016, 1412.006, 1682.609), stdev = 151.527
[info]   CI (99.9%): [828.527, 1995.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   9441.283 ±(99.9%) 3800.875 B/op [Average]
[info]   (min, avg, max) = (8921.900, 9441.283, 11205.028), stdev = 987.075
[info]   CI (99.9%): [5640.408, 13242.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 9.000), stdev = 1.789
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce
[info] # Run progress: 15.13% complete, ETA 00:26:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139390.012 ops/s
[info] # Warmup Iteration   2: 160260.589 ops/s
[info] # Warmup Iteration   3: 159104.889 ops/s
[info] # Warmup Iteration   4: 160475.998 ops/s
[info] # Warmup Iteration   5: 159905.693 ops/s
[info] Iteration   1: 160818.542 ops/s
[info]                  ·gc.alloc.rate:                   358.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     30.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.645 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3197.633 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 161187.047 ops/s
[info]                  ·gc.alloc.rate:                   359.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.343 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6370.714 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 161133.452 ops/s
[info]                  ·gc.alloc.rate:                   359.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.712 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3181.643 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 160211.148 ops/s
[info]                  ·gc.alloc.rate:                   357.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.774 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3199.731 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 161885.183 ops/s
[info]                  ·gc.alloc.rate:                   361.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              3512.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.761 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3166.886 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce":
[info]   161047.075 ±(99.9%) 2342.635 ops/s [Average]
[info]   (min, avg, max) = (160211.148, 161047.075, 161885.183), stdev = 608.375
[info]   CI (99.9%): [158704.440, 163389.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate":
[info]   359.347 ±(99.9%) 5.196 MB/sec [Average]
[info]   (min, avg, max) = (357.568, 359.347, 361.261), stdev = 1.349
[info]   CI (99.9%): [354.151, 364.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm":
[info]   3512.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3512.003, 3512.003, 3512.003), stdev = 0.001
[info]   CI (99.9%): [3512.002, 3512.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.648 ±(99.9%) 5.354 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.648, 3.135), stdev = 1.390
[info]   CI (99.9%): [≈ 0, 6.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   6.341 ±(99.9%) 52.410 B/op [Average]
[info]   (min, avg, max) = (0.202, 6.341, 30.688), stdev = 13.611
[info]   CI (99.9%): [≈ 0, 58.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   391.247 ±(99.9%) 562.031 MB/sec [Average]
[info]   (min, avg, max) = (325.712, 391.247, 652.343), stdev = 145.958
[info]   CI (99.9%): [≈ 0, 953.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3823.322 ±(99.9%) 5483.694 B/op [Average]
[info]   (min, avg, max) = (3166.886, 3823.322, 6370.714), stdev = 1424.098
[info]   CI (99.9%): [≈ 0, 9307.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson
[info] # Run progress: 15.97% complete, ETA 00:26:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382477.603 ops/s
[info] # Warmup Iteration   2: 597292.850 ops/s
[info] # Warmup Iteration   3: 591173.336 ops/s
[info] # Warmup Iteration   4: 607046.734 ops/s
[info] # Warmup Iteration   5: 613030.453 ops/s
[info] Iteration   1: 610324.279 ops/s
[info]                  ·gc.alloc.rate:                   800.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1698.890 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 608476.799 ops/s
[info]                  ·gc.alloc.rate:                   798.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2568.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 610819.277 ops/s
[info]                  ·gc.alloc.rate:                   801.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.518 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1714.610 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 608235.938 ops/s
[info]                  ·gc.alloc.rate:                   797.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.028 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2590.668 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 605335.515 ops/s
[info]                  ·gc.alloc.rate:                   793.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              2064.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1741.455 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson":
[info]   608638.362 ±(99.9%) 8324.776 ops/s [Average]
[info]   (min, avg, max) = (605335.515, 608638.362, 610819.277), stdev = 2161.918
[info]   CI (99.9%): [600313.586, 616963.138] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate":
[info]   798.156 ±(99.9%) 11.098 MB/sec [Average]
[info]   (min, avg, max) = (793.760, 798.156, 801.132), stdev = 2.882
[info]   CI (99.9%): [787.058, 809.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm":
[info]   2064.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2064.001, 2064.001, 2064.001), stdev = 0.001
[info]   CI (99.9%): [2064.001, 2064.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.097 ±(99.9%) 0.308 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.215), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   797.591 ±(99.9%) 701.168 MB/sec [Average]
[info]   (min, avg, max) = (658.738, 797.591, 1001.028), stdev = 182.091
[info]   CI (99.9%): [96.423, 1498.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2062.738 ±(99.9%) 1817.231 B/op [Average]
[info]   (min, avg, max) = (1698.890, 2062.738, 2590.668), stdev = 471.929
[info]   CI (99.9%): [245.507, 3879.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter
[info] # Run progress: 16.81% complete, ETA 00:26:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 631945.815 ops/s
[info] # Warmup Iteration   2: 674250.542 ops/s
[info] # Warmup Iteration   3: 672658.642 ops/s
[info] # Warmup Iteration   4: 681699.357 ops/s
[info] # Warmup Iteration   5: 688269.221 ops/s
[info] Iteration   1: 688144.484 ops/s
[info]                  ·gc.alloc.rate:                   587.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1496.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 690153.866 ops/s
[info]                  ·gc.alloc.rate:                   589.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.696 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 747.368 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 688093.135 ops/s
[info]                  ·gc.alloc.rate:                   587.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.758 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1500.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 684052.905 ops/s
[info]                  ·gc.alloc.rate:                   584.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.068 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1511.921 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 673533.395 ops/s
[info]                  ·gc.alloc.rate:                   575.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              1344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      659.057 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1540.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter":
[info]   684795.557 ±(99.9%) 25700.606 ops/s [Average]
[info]   (min, avg, max) = (673533.395, 684795.557, 690153.866), stdev = 6674.366
[info]   CI (99.9%): [659094.950, 710496.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate":
[info]   584.726 ±(99.9%) 21.818 MB/sec [Average]
[info]   (min, avg, max) = (575.169, 584.726, 589.300), stdev = 5.666
[info]   CI (99.9%): [562.907, 606.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1344.001, 1344.001, 1344.001), stdev = 0.001
[info]   CI (99.9%): [1344.001, 1344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.096 ±(99.9%) 0.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.238), stdev = 0.089
[info]   CI (99.9%): [≈ 0, 0.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   590.717 ±(99.9%) 566.217 MB/sec [Average]
[info]   (min, avg, max) = (327.696, 590.717, 659.057), stdev = 147.045
[info]   CI (99.9%): [24.500, 1156.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1359.087 ±(99.9%) 1318.433 B/op [Average]
[info]   (min, avg, max) = (747.368, 1359.087, 1540.021), stdev = 342.393
[info]   CI (99.9%): [40.655, 2677.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.65% complete, ETA 00:26:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 671180.971 ops/s
[info] # Warmup Iteration   2: 1586233.987 ops/s
[info] # Warmup Iteration   3: 1595658.315 ops/s
[info] # Warmup Iteration   4: 1619597.275 ops/s
[info] # Warmup Iteration   5: 1614078.842 ops/s
[info] Iteration   1: 1601397.212 ops/s
[info]                  ·gc.alloc.rate:                   1017.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.294 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 976.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1599876.211 ops/s
[info]                  ·gc.alloc.rate:                   1016.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.272 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 980.946 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1596267.009 ops/s
[info]                  ·gc.alloc.rate:                   1014.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.797 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 988.757 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1609953.228 ops/s
[info]                  ·gc.alloc.rate:                   1023.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.609 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 982.980 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1622308.019 ops/s
[info]                  ·gc.alloc.rate:                   1030.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.790 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 979.709 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1605960.336 ±(99.9%) 40155.275 ops/s [Average]
[info]   (min, avg, max) = (1596267.009, 1605960.336, 1622308.019), stdev = 10428.197
[info]   CI (99.9%): [1565805.061, 1646115.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1020.431 ±(99.9%) 25.361 MB/sec [Average]
[info]   (min, avg, max) = (1014.200, 1020.431, 1030.704), stdev = 6.586
[info]   CI (99.9%): [995.069, 1045.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.075, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.074 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.074, 0.123), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   1001.752 ±(99.9%) 25.265 MB/sec [Average]
[info]   (min, avg, max) = (993.294, 1001.752, 1009.790), stdev = 6.561
[info]   CI (99.9%): [976.488, 1027.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   981.704 ±(99.9%) 17.959 B/op [Average]
[info]   (min, avg, max) = (976.129, 981.704, 988.757), stdev = 4.664
[info]   CI (99.9%): [963.746, 999.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.49% complete, ETA 00:25:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4461069.198 ops/s
[info] # Warmup Iteration   2: 3627284.232 ops/s
[info] # Warmup Iteration   3: 3698722.395 ops/s
[info] # Warmup Iteration   4: 3704363.756 ops/s
[info] # Warmup Iteration   5: 3700807.373 ops/s
[info] Iteration   1: 3703135.086 ops/s
[info]                  ·gc.alloc.rate:                   489.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.593 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.281 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3663348.923 ops/s
[info]                  ·gc.alloc.rate:                   484.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.061 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 281.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3695993.229 ops/s
[info]                  ·gc.alloc.rate:                   488.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.391 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.424 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 3703546.271 ops/s
[info]                  ·gc.alloc.rate:                   489.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 278.550 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3710736.537 ops/s
[info]                  ·gc.alloc.rate:                   490.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.066 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 139.147 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3695352.009 ±(99.9%) 71755.761 ops/s [Average]
[info]   (min, avg, max) = (3663348.923, 3695352.009, 3710736.537), stdev = 18634.743
[info]   CI (99.9%): [3623596.248, 3767107.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   488.320 ±(99.9%) 9.521 MB/sec [Average]
[info]   (min, avg, max) = (484.082, 488.320, 490.401), stdev = 2.473
[info]   CI (99.9%): [478.799, 497.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.014 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.522 ±(99.9%) 689.879 MB/sec [Average]
[info]   (min, avg, max) = (327.391, 458.522, 655.500), stdev = 179.159
[info]   CI (99.9%): [≈ 0, 1148.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   195.488 ±(99.9%) 296.366 B/op [Average]
[info]   (min, avg, max) = (139.147, 195.488, 281.037), stdev = 76.965
[info]   CI (99.9%): [≈ 0, 491.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.33% complete, ETA 00:25:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 38537.035 ops/s
[info] # Warmup Iteration   2: 279513.088 ops/s
[info] # Warmup Iteration   3: 287678.359 ops/s
[info] # Warmup Iteration   4: 283921.411 ops/s
[info] # Warmup Iteration   5: 286813.244 ops/s
[info] Iteration   1: 284637.880 ops/s
[info]                  ·gc.alloc.rate:                   1291.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1328.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7344.496 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 280170.044 ops/s
[info]                  ·gc.alloc.rate:                   1271.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.702 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.527 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7502.631 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 288085.102 ops/s
[info]                  ·gc.alloc.rate:                   1307.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7336.644 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 285766.084 ops/s
[info]                  ·gc.alloc.rate:                   1297.465 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7425.573 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 285433.391 ops/s
[info]                  ·gc.alloc.rate:                   1295.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1013.763 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5590.407 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   284818.500 ±(99.9%) 11158.143 ops/s [Average]
[info]   (min, avg, max) = (280170.044, 284818.500, 288085.102), stdev = 2897.734
[info]   CI (99.9%): [273660.357, 295976.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1292.787 ±(99.9%) 50.677 MB/sec [Average]
[info]   (min, avg, max) = (1271.688, 1292.787, 1307.531), stdev = 13.161
[info]   CI (99.9%): [1242.110, 1343.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.001, 7144.001, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.324 ±(99.9%) 0.872 B/op [Average]
[info]   (min, avg, max) = (0.114, 0.324, 0.702), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1273.739 ±(99.9%) 560.409 MB/sec [Average]
[info]   (min, avg, max) = (1013.763, 1273.739, 1348.602), stdev = 145.537
[info]   CI (99.9%): [713.329, 1834.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   7039.950 ±(99.9%) 3131.079 B/op [Average]
[info]   (min, avg, max) = (5590.407, 7039.950, 7502.631), stdev = 813.131
[info]   CI (99.9%): [3908.872, 10171.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.17% complete, ETA 00:25:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 317651.330 ops/s
[info] # Warmup Iteration   2: 497457.498 ops/s
[info] # Warmup Iteration   3: 511215.113 ops/s
[info] # Warmup Iteration   4: 509418.511 ops/s
[info] # Warmup Iteration   5: 510199.164 ops/s
[info] Iteration   1: 502912.536 ops/s
[info]                  ·gc.alloc.rate:                   1635.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1664.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5210.609 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 498272.656 ops/s
[info]                  ·gc.alloc.rate:                   1620.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1675.477 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5292.714 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 500474.237 ops/s
[info]                  ·gc.alloc.rate:                   1627.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1684.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5297.954 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 510274.951 ops/s
[info]                  ·gc.alloc.rate:                   1661.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1687.082 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5199.236 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 513039.779 ops/s
[info]                  ·gc.alloc.rate:                   1668.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              5120.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1694.436 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5198.821 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   504994.832 ±(99.9%) 24547.683 ops/s [Average]
[info]   (min, avg, max) = (498272.656, 504994.832, 513039.779), stdev = 6374.955
[info]   CI (99.9%): [480447.149, 529542.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1642.839 ±(99.9%) 81.259 MB/sec [Average]
[info]   (min, avg, max) = (1620.802, 1642.839, 1668.746), stdev = 21.103
[info]   CI (99.9%): [1561.580, 1724.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5120.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5120.001, 5120.001, 5120.001), stdev = 0.001
[info]   CI (99.9%): [5120.001, 5120.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.104), stdev = 0.017
[info]   CI (99.9%): [0.012, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.247 ±(99.9%) 0.215 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.247, 0.329), stdev = 0.056
[info]   CI (99.9%): [0.031, 0.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   1681.158 ±(99.9%) 44.437 MB/sec [Average]
[info]   (min, avg, max) = (1664.457, 1681.158, 1694.436), stdev = 11.540
[info]   CI (99.9%): [1636.721, 1725.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5239.867 ±(99.9%) 195.955 B/op [Average]
[info]   (min, avg, max) = (5198.821, 5239.867, 5297.954), stdev = 50.889
[info]   CI (99.9%): [5043.912, 5435.822] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.01% complete, ETA 00:25:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 248867.870 ops/s
[info] # Warmup Iteration   2: 692258.057 ops/s
[info] # Warmup Iteration   3: 689683.153 ops/s
[info] # Warmup Iteration   4: 696434.308 ops/s
[info] # Warmup Iteration   5: 689577.838 ops/s
[info] Iteration   1: 683690.245 ops/s
[info]                  ·gc.alloc.rate:                   847.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.781 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2271.683 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 704308.961 ops/s
[info]                  ·gc.alloc.rate:                   873.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.462 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1478.157 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 692667.495 ops/s
[info]                  ·gc.alloc.rate:                   858.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.090 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2265.832 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 687380.746 ops/s
[info]                  ·gc.alloc.rate:                   852.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.971 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2292.408 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 702310.327 ops/s
[info]                  ·gc.alloc.rate:                   870.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      669.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1500.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   694071.555 ±(99.9%) 34826.076 ops/s [Average]
[info]   (min, avg, max) = (683690.245, 694071.555, 704308.961), stdev = 9044.221
[info]   CI (99.9%): [659245.479, 728897.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   860.738 ±(99.9%) 43.281 MB/sec [Average]
[info]   (min, avg, max) = (847.916, 860.738, 873.503), stdev = 11.240
[info]   CI (99.9%): [817.457, 904.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.094 ±(99.9%) 0.287 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.094, 0.189), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   863.137 ±(99.9%) 695.365 MB/sec [Average]
[info]   (min, avg, max) = (661.462, 863.137, 1000.971), stdev = 180.584
[info]   CI (99.9%): [167.772, 1558.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1961.665 ±(99.9%) 1661.486 B/op [Average]
[info]   (min, avg, max) = (1478.157, 1961.665, 2292.408), stdev = 431.483
[info]   CI (99.9%): [300.178, 3623.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.85% complete, ETA 00:24:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4223958.809 ops/s
[info] # Warmup Iteration   2: 4396960.738 ops/s
[info] # Warmup Iteration   3: 4591653.750 ops/s
[info] # Warmup Iteration   4: 4582762.059 ops/s
[info] # Warmup Iteration   5: 4591440.221 ops/s
[info] Iteration   1: 4605989.831 ops/s
[info]                  ·gc.alloc.rate:                   210.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.819 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.408 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4627776.681 ops/s
[info]                  ·gc.alloc.rate:      211.664 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4589954.072 ops/s
[info]                  ·gc.alloc.rate:                   209.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 87.708 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4571757.976 ops/s
[info]                  ·gc.alloc.rate:                   209.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.746 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 113.169 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4622827.855 ops/s
[info]                  ·gc.alloc.rate:      211.461 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4603661.283 ±(99.9%) 89481.721 ops/s [Average]
[info]   (min, avg, max) = (4571757.976, 4603661.283, 4627776.681), stdev = 23238.119
[info]   CI (99.9%): [4514179.562, 4693143.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   210.582 ±(99.9%) 4.065 MB/sec [Average]
[info]   (min, avg, max) = (209.153, 210.582, 211.664), stdev = 1.056
[info]   CI (99.9%): [206.517, 214.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.627 ±(99.9%) 5.395 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.627, 3.133), stdev = 1.401
[info]   CI (99.9%): [≈ 0, 6.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.216 ±(99.9%) 1.857 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.216, 1.079), stdev = 0.482
[info]   CI (99.9%): [≈ 0, 2.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   168.054 ±(99.9%) 601.771 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 168.054, 328.746), stdev = 156.278
[info]   CI (99.9%): [≈ 0, 769.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   57.657 ±(99.9%) 206.633 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.657, 113.169), stdev = 53.662
[info]   CI (99.9%): [≈ 0, 264.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.871
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.69% complete, ETA 00:24:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 21152.911 ops/s
[info] # Warmup Iteration   2: 207683.023 ops/s
[info] # Warmup Iteration   3: 224641.099 ops/s
[info] # Warmup Iteration   4: 227898.212 ops/s
[info] # Warmup Iteration   5: 229009.590 ops/s
[info] Iteration   1: 228680.240 ops/s
[info]                  ·gc.alloc.rate:                   1255.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.478 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9123.474 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 227651.552 ops/s
[info]                  ·gc.alloc.rate:                   1249.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.180 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9224.617 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 230669.265 ops/s
[info]                  ·gc.alloc.rate:                   1266.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.384 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6860.612 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 229054.644 ops/s
[info]                  ·gc.alloc.rate:                   1257.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.559 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9246.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 228478.917 ops/s
[info]                  ·gc.alloc.rate:                   1254.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9301.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   228906.924 ±(99.9%) 4278.462 ops/s [Average]
[info]   (min, avg, max) = (227651.552, 228906.924, 230669.265), stdev = 1111.103
[info]   CI (99.9%): [224628.461, 233185.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1256.486 ±(99.9%) 23.467 MB/sec [Average]
[info]   (min, avg, max) = (1249.625, 1256.486, 1266.143), stdev = 6.094
[info]   CI (99.9%): [1233.019, 1279.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.487 ±(99.9%) 0.493 B/op [Average]
[info]   (min, avg, max) = (0.286, 0.487, 0.576), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   1272.123 ±(99.9%) 575.370 MB/sec [Average]
[info]   (min, avg, max) = (1005.384, 1272.123, 1350.014), stdev = 149.422
[info]   CI (99.9%): [696.753, 1847.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8751.167 ±(99.9%) 4077.088 B/op [Average]
[info]   (min, avg, max) = (6860.612, 8751.167, 9301.118), stdev = 1058.807
[info]   CI (99.9%): [4674.079, 12828.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 23.53% complete, ETA 00:24:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2561.746 ops/s
[info] # Warmup Iteration   2: 3734.890 ops/s
[info] # Warmup Iteration   3: 3840.235 ops/s
[info] # Warmup Iteration   4: 3880.150 ops/s
[info] # Warmup Iteration   5: 3818.280 ops/s
[info] Iteration   1: 3827.791 ops/s
[info]                  ·gc.alloc.rate:                   921.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              378792.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      979.274 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 402698.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3843.617 ops/s
[info]                  ·gc.alloc.rate:                   924.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              378792.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.470 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 403204.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3828.429 ops/s
[info]                  ·gc.alloc.rate:                   921.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              378792.107 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     51.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 406805.863 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3877.544 ops/s
[info]                  ·gc.alloc.rate:                   933.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              378792.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 268969.611 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3864.401 ops/s
[info]                  ·gc.alloc.rate:                   930.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              378792.106 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.615 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 406272.331 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   3848.356 ±(99.9%) 85.060 ops/s [Average]
[info]   (min, avg, max) = (3827.791, 3848.356, 3877.544), stdev = 22.090
[info]   CI (99.9%): [3763.296, 3933.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   926.130 ±(99.9%) 21.072 MB/sec [Average]
[info]   (min, avg, max) = (921.139, 926.130, 933.366), stdev = 5.472
[info]   CI (99.9%): [905.058, 947.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   378792.111 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (378792.106, 378792.111, 378792.115), stdev = 0.005
[info]   CI (99.9%): [378792.094, 378792.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.051 ±(99.9%) 0.235 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.125), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   20.833 ±(99.9%) 96.350 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20.833, 51.347), stdev = 25.022
[info]   CI (99.9%): [≈ 0, 117.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   922.677 ±(99.9%) 560.099 MB/sec [Average]
[info]   (min, avg, max) = (662.757, 922.677, 997.615), stdev = 145.456
[info]   CI (99.9%): [362.577, 1482.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   377589.992 ±(99.9%) 233917.731 B/op [Average]
[info]   (min, avg, max) = (268969.611, 377589.992, 406805.863), stdev = 60747.692
[info]   CI (99.9%): [143672.261, 611507.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 24.37% complete, ETA 00:23:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4302.358 ops/s
[info] # Warmup Iteration   2: 10069.196 ops/s
[info] # Warmup Iteration   3: 10248.905 ops/s
[info] # Warmup Iteration   4: 10224.917 ops/s
[info] # Warmup Iteration   5: 10229.908 ops/s
[info] Iteration   1: 10294.322 ops/s
[info]                  ·gc.alloc.rate:                   260.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              39872.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.726 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39107.730 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 10304.790 ops/s
[info]                  ·gc.alloc.rate:                   261.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              39872.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     69.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.005 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49341.162 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10329.083 ops/s
[info]                  ·gc.alloc.rate:                   261.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              39872.043 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49226.538 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10285.940 ops/s
[info]                  ·gc.alloc.rate:      260.586 MB/sec
[info]                  ·gc.alloc.rate.norm: 39872.040 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 10224.307 ops/s
[info]                  ·gc.alloc.rate:                   258.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              39872.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 49988.343 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   10287.688 ±(99.9%) 150.005 ops/s [Average]
[info]   (min, avg, max) = (10224.307, 10287.688, 10329.083), stdev = 38.956
[info]   CI (99.9%): [10137.683, 10437.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   260.588 ±(99.9%) 3.826 MB/sec [Average]
[info]   (min, avg, max) = (258.967, 260.588, 261.645), stdev = 0.993
[info]   CI (99.9%): [256.762, 264.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   39872.042 ±(99.9%) 0.005 B/op [Average]
[info]   (min, avg, max) = (39872.040, 39872.042, 39872.043), stdev = 0.001
[info]   CI (99.9%): [39872.037, 39872.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.112 ±(99.9%) 0.764 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.112, 0.458), stdev = 0.198
[info]   CI (99.9%): [≈ 0, 0.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   17.160 ±(99.9%) 116.654 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.160, 69.942), stdev = 30.295
[info]   CI (99.9%): [≈ 0, 133.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   245.287 ±(99.9%) 539.986 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.287, 324.672), stdev = 140.233
[info]   CI (99.9%): [≈ 0, 785.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   37532.755 ±(99.9%) 82643.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 37532.755, 49988.343), stdev = 21462.252
[info]   CI (99.9%): [≈ 0, 120176.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 25.21% complete, ETA 00:23:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12935.431 ops/s
[info] # Warmup Iteration   2: 17334.275 ops/s
[info] # Warmup Iteration   3: 17283.043 ops/s
[info] # Warmup Iteration   4: 17350.236 ops/s
[info] # Warmup Iteration   5: 17327.503 ops/s
[info] Iteration   1: 17312.637 ops/s
[info]                  ·gc.alloc.rate:                   295.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.719 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 23253.245 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 17329.647 ops/s
[info]                  ·gc.alloc.rate:                   296.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29853.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 17428.215 ops/s
[info]                  ·gc.alloc.rate:                   297.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.025 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.697 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29685.191 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 17342.518 ops/s
[info]                  ·gc.alloc.rate:                   296.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.769 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29741.692 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 17503.933 ops/s
[info]                  ·gc.alloc.rate:                   299.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              26896.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.754 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 29466.495 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   17383.390 ±(99.9%) 311.074 ops/s [Average]
[info]   (min, avg, max) = (17312.637, 17383.390, 17503.933), stdev = 80.785
[info]   CI (99.9%): [17072.316, 17694.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   297.054 ±(99.9%) 5.432 MB/sec [Average]
[info]   (min, avg, max) = (295.779, 297.054, 299.163), stdev = 1.411
[info]   CI (99.9%): [291.622, 302.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   26896.026 ±(99.9%) 0.007 B/op [Average]
[info]   (min, avg, max) = (26896.025, 26896.026, 26896.030), stdev = 0.002
[info]   CI (99.9%): [26896.019, 26896.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.631 ±(99.9%) 5.257 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.631, 3.072), stdev = 1.365
[info]   CI (99.9%): [≈ 0, 5.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   57.316 ±(99.9%) 477.490 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 57.316, 279.063), stdev = 124.003
[info]   CI (99.9%): [≈ 0, 534.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   313.720 ±(99.9%) 124.865 MB/sec [Average]
[info]   (min, avg, max) = (255.719, 313.720, 328.697), stdev = 32.427
[info]   CI (99.9%): [188.855, 438.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   28399.929 ±(99.9%) 11091.864 B/op [Average]
[info]   (min, avg, max) = (23253.245, 28399.929, 29853.020), stdev = 2880.522
[info]   CI (99.9%): [17308.065, 39491.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 6.000), stdev = 2.302
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 26.05% complete, ETA 00:23:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351.526 ops/s
[info] # Warmup Iteration   2: 1939.153 ops/s
[info] # Warmup Iteration   3: 2015.190 ops/s
[info] # Warmup Iteration   4: 2018.871 ops/s
[info] # Warmup Iteration   5: 2030.452 ops/s
[info] Iteration   1: 2031.148 ops/s
[info]                  ·gc.alloc.rate:                   1229.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              952664.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1324.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1026644.661 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2019.121 ops/s
[info]                  ·gc.alloc.rate:                   1222.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              952664.202 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     32.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1039232.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2050.367 ops/s
[info]                  ·gc.alloc.rate:                   1241.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              952664.199 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.030 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 771477.905 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2035.403 ops/s
[info]                  ·gc.alloc.rate:                   1232.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              952664.200 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1039820.699 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2031.038 ops/s
[info]                  ·gc.alloc.rate:                   1229.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              952664.217 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.503 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1045479.811 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   2033.415 ±(99.9%) 43.327 ops/s [Average]
[info]   (min, avg, max) = (2019.121, 2033.415, 2050.367), stdev = 11.252
[info]   CI (99.9%): [1990.089, 2076.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1230.930 ±(99.9%) 26.031 MB/sec [Average]
[info]   (min, avg, max) = (1222.266, 1230.930, 1241.068), stdev = 6.760
[info]   CI (99.9%): [1204.899, 1256.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   952664.207 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (952664.199, 952664.207, 952664.217), stdev = 0.009
[info]   CI (99.9%): [952664.173, 952664.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   28.939 ±(99.9%) 80.042 B/op [Average]
[info]   (min, avg, max) = (16.094, 28.939, 63.906), stdev = 20.787
[info]   CI (99.9%): [≈ 0, 108.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1271.537 ±(99.9%) 574.872 MB/sec [Average]
[info]   (min, avg, max) = (1005.030, 1271.537, 1349.503), stdev = 149.292
[info]   CI (99.9%): [696.665, 1846.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   984531.066 ±(99.9%) 459378.420 B/op [Average]
[info]   (min, avg, max) = (771477.905, 984531.066, 1045479.811), stdev = 119299.117
[info]   CI (99.9%): [525152.646, 1443909.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 26.89% complete, ETA 00:23:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2142629.743 ops/s
[info] # Warmup Iteration   2: 2812002.465 ops/s
[info] # Warmup Iteration   3: 2892358.624 ops/s
[info] # Warmup Iteration   4: 2871259.217 ops/s
[info] # Warmup Iteration   5: 2884192.053 ops/s
[info] Iteration   1: 2880629.230 ops/s
[info]                  ·gc.alloc.rate:                   864.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.791 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 537.376 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2890694.060 ops/s
[info]                  ·gc.alloc.rate:                   866.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.608 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 537.665 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2896257.842 ops/s
[info]                  ·gc.alloc.rate:                   868.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 359.085 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2831605.388 ops/s
[info]                  ·gc.alloc.rate:                   849.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.866 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 552.952 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2865831.918 ops/s
[info]                  ·gc.alloc.rate:                   859.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 365.434 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   2873003.688 ±(99.9%) 99617.642 ops/s [Average]
[info]   (min, avg, max) = (2831605.388, 2873003.688, 2896257.842), stdev = 25870.385
[info]   CI (99.9%): [2773386.045, 2972621.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   861.652 ±(99.9%) 29.914 MB/sec [Average]
[info]   (min, avg, max) = (849.219, 861.652, 868.529), stdev = 7.769
[info]   CI (99.9%): [831.738, 891.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.034 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.023, 0.034, 0.045), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   858.480 ±(99.9%) 687.103 MB/sec [Average]
[info]   (min, avg, max) = (660.753, 858.480, 994.866), stdev = 178.438
[info]   CI (99.9%): [171.377, 1545.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   470.502 ±(99.9%) 381.360 B/op [Average]
[info]   (min, avg, max) = (359.085, 470.502, 552.952), stdev = 99.038
[info]   CI (99.9%): [89.142, 851.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 27.73% complete, ETA 00:22:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36035.681 ops/s
[info] # Warmup Iteration   2: 248876.963 ops/s
[info] # Warmup Iteration   3: 251597.324 ops/s
[info] # Warmup Iteration   4: 255373.001 ops/s
[info] # Warmup Iteration   5: 259776.561 ops/s
[info] Iteration   1: 261656.140 ops/s
[info]                  ·gc.alloc.rate:                   1438.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1663.399 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10006.987 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 260896.123 ops/s
[info]                  ·gc.alloc.rate:                   1434.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.242 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8085.351 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 259972.341 ops/s
[info]                  ·gc.alloc.rate:                   1429.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8146.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 257152.999 ops/s
[info]                  ·gc.alloc.rate:                   1414.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.555 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 10335.116 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 258753.913 ops/s
[info]                  ·gc.alloc.rate:                   1423.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              8656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.188 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8237.043 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   259686.303 ±(99.9%) 6864.715 ops/s [Average]
[info]   (min, avg, max) = (257152.999, 259686.303, 261656.140), stdev = 1782.745
[info]   CI (99.9%): [252821.588, 266551.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1428.120 ±(99.9%) 37.576 MB/sec [Average]
[info]   (min, avg, max) = (1414.221, 1428.120, 1438.833), stdev = 9.758
[info]   CI (99.9%): [1390.543, 1465.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8656.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8656.002, 8656.002, 8656.002), stdev = 0.001
[info]   CI (99.9%): [8656.001, 8656.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.328 ±(99.9%) 0.551 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.328, 0.502), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1478.360 ±(99.9%) 695.759 MB/sec [Average]
[info]   (min, avg, max) = (1340.242, 1478.360, 1688.555), stdev = 180.686
[info]   CI (99.9%): [782.601, 2174.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8962.106 ±(99.9%) 4278.082 B/op [Average]
[info]   (min, avg, max) = (8085.351, 8962.106, 10335.116), stdev = 1111.004
[info]   CI (99.9%): [4684.024, 13240.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 6.600, 8.000), stdev = 0.894
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 28.57% complete, ETA 00:22:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 273052.547 ops/s
[info] # Warmup Iteration   2: 435434.306 ops/s
[info] # Warmup Iteration   3: 447846.447 ops/s
[info] # Warmup Iteration   4: 441989.700 ops/s
[info] # Warmup Iteration   5: 445100.979 ops/s
[info] Iteration   1: 453358.323 ops/s
[info]                  ·gc.alloc.rate:                   1633.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.410 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4618.198 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 454470.233 ops/s
[info]                  ·gc.alloc.rate:                   1638.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1674.330 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5797.252 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 449516.632 ops/s
[info]                  ·gc.alloc.rate:                   1620.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.760 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5891.505 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 438895.530 ops/s
[info]                  ·gc.alloc.rate:                   1581.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1689.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6059.738 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 447023.453 ops/s
[info]                  ·gc.alloc.rate:                   1610.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1693.845 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5964.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   448652.834 ±(99.9%) 23938.324 ops/s [Average]
[info]   (min, avg, max) = (438895.530, 448652.834, 454470.233), stdev = 6216.707
[info]   CI (99.9%): [424714.510, 472591.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1616.843 ±(99.9%) 87.625 MB/sec [Average]
[info]   (min, avg, max) = (1581.102, 1616.843, 1638.156), stdev = 22.756
[info]   CI (99.9%): [1529.217, 1704.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5672.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5672.001, 5672.001, 5672.001), stdev = 0.001
[info]   CI (99.9%): [5672.001, 5672.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.107 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.263 ±(99.9%) 0.387 B/op [Average]
[info]   (min, avg, max) = (0.147, 0.263, 0.373), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1614.106 ±(99.9%) 611.329 MB/sec [Average]
[info]   (min, avg, max) = (1330.410, 1614.106, 1693.845), stdev = 158.760
[info]   CI (99.9%): [1002.777, 2225.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5666.147 ±(99.9%) 2286.054 B/op [Average]
[info]   (min, avg, max) = (4618.198, 5666.147, 6059.738), stdev = 593.681
[info]   CI (99.9%): [3380.093, 7952.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.280
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 29.41% complete, ETA 00:22:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 155907.328 ops/s
[info] # Warmup Iteration   2: 556119.674 ops/s
[info] # Warmup Iteration   3: 559604.349 ops/s
[info] # Warmup Iteration   4: 555442.159 ops/s
[info] # Warmup Iteration   5: 557736.595 ops/s
[info] Iteration   1: 560754.501 ops/s
[info]                  ·gc.alloc.rate:                   652.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.210 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1830.367 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 557411.552 ops/s
[info]                  ·gc.alloc.rate:                   648.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.942 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1848.853 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 552530.482 ops/s
[info]                  ·gc.alloc.rate:                   643.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.576 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1872.840 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 552057.173 ops/s
[info]                  ·gc.alloc.rate:                   642.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1881.980 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 555967.109 ops/s
[info]                  ·gc.alloc.rate:                   647.156 MB/sec
[info]                  ·gc.alloc.rate.norm:              1832.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.820 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1876.343 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   555744.163 ±(99.9%) 13864.326 ops/s [Average]
[info]   (min, avg, max) = (552057.173, 555744.163, 560754.501), stdev = 3600.522
[info]   CI (99.9%): [541879.837, 569608.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   646.949 ±(99.9%) 16.230 MB/sec [Average]
[info]   (min, avg, max) = (642.590, 646.949, 652.792), stdev = 4.215
[info]   CI (99.9%): [630.719, 663.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1832.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1832.001, 1832.001, 1832.001), stdev = 0.001
[info]   CI (99.9%): [1832.001, 1832.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.118 ±(99.9%) 0.320 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.118, 0.235), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   657.534 ±(99.9%) 16.074 MB/sec [Average]
[info]   (min, avg, max) = (652.210, 657.534, 662.820), stdev = 4.174
[info]   CI (99.9%): [641.460, 673.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1862.077 ±(99.9%) 83.832 B/op [Average]
[info]   (min, avg, max) = (1830.367, 1862.077, 1881.980), stdev = 21.771
[info]   CI (99.9%): [1778.245, 1945.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 30.25% complete, ETA 00:22:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1901087.513 ops/s
[info] # Warmup Iteration   2: 2470454.924 ops/s
[info] # Warmup Iteration   3: 2643424.467 ops/s
[info] # Warmup Iteration   4: 2630373.063 ops/s
[info] # Warmup Iteration   5: 2598261.134 ops/s
[info] Iteration   1: 2584568.509 ops/s
[info]                  ·gc.alloc.rate:                   1024.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 601.762 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2617444.045 ops/s
[info]                  ·gc.alloc.rate:                   1037.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.196 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 596.635 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2612453.212 ops/s
[info]                  ·gc.alloc.rate:                   1035.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.140 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 600.760 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2618151.293 ops/s
[info]                  ·gc.alloc.rate:                   1037.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.120 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 601.869 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2567476.732 ops/s
[info]                  ·gc.alloc.rate:                   1017.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.827 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 615.968 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2600018.758 ±(99.9%) 87908.159 ops/s [Average]
[info]   (min, avg, max) = (2567476.732, 2600018.758, 2618151.293), stdev = 22829.470
[info]   CI (99.9%): [2512110.599, 2687926.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   1030.821 ±(99.9%) 34.657 MB/sec [Average]
[info]   (min, avg, max) = (1017.929, 1030.821, 1037.932), stdev = 9.000
[info]   CI (99.9%): [996.164, 1065.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.000), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.040 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.040, 0.063), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   996.717 ±(99.9%) 25.583 MB/sec [Average]
[info]   (min, avg, max) = (988.304, 996.717, 1004.827), stdev = 6.644
[info]   CI (99.9%): [971.135, 1022.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   603.399 ±(99.9%) 28.278 B/op [Average]
[info]   (min, avg, max) = (596.635, 603.399, 615.968), stdev = 7.344
[info]   CI (99.9%): [575.121, 631.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 31.09% complete, ETA 00:21:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 16065.495 ops/s
[info] # Warmup Iteration   2: 145602.258 ops/s
[info] # Warmup Iteration   3: 155798.472 ops/s
[info] # Warmup Iteration   4: 157953.472 ops/s
[info] # Warmup Iteration   5: 158716.850 ops/s
[info] Iteration   1: 155032.200 ops/s
[info]                  ·gc.alloc.rate:                   1076.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1320.194 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13402.622 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 158068.085 ops/s
[info]                  ·gc.alloc.rate:                   1097.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.926 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9925.702 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 158815.155 ops/s
[info]                  ·gc.alloc.rate:                   1102.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.619 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9921.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 158218.123 ops/s
[info]                  ·gc.alloc.rate:                   1098.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.966 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9999.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 158042.822 ops/s
[info]                  ·gc.alloc.rate:                   1097.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              10928.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.326 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13398.891 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   157635.277 ±(99.9%) 5731.269 ops/s [Average]
[info]   (min, avg, max) = (155032.200, 157635.277, 158815.155), stdev = 1488.392
[info]   CI (99.9%): [151904.008, 163366.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1094.426 ±(99.9%) 39.575 MB/sec [Average]
[info]   (min, avg, max) = (1076.437, 1094.426, 1102.534), stdev = 10.278
[info]   CI (99.9%): [1054.851, 1134.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10928.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10928.003, 10928.003, 10928.003), stdev = 0.001
[info]   CI (99.9%): [10928.002, 10928.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.146), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.751 ±(99.9%) 2.118 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.751, 1.479), stdev = 0.550
[info]   CI (99.9%): [≈ 0, 2.869] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1133.675 ±(99.9%) 700.735 MB/sec [Average]
[info]   (min, avg, max) = (996.926, 1133.675, 1345.326), stdev = 181.979
[info]   CI (99.9%): [432.940, 1834.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   11329.504 ±(99.9%) 7281.718 B/op [Average]
[info]   (min, avg, max) = (9921.246, 11329.504, 13402.622), stdev = 1891.039
[info]   CI (99.9%): [4047.786, 18611.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 31.93% complete, ETA 00:21:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 222902.730 ops/s
[info] # Warmup Iteration   2: 431746.260 ops/s
[info] # Warmup Iteration   3: 439309.267 ops/s
[info] # Warmup Iteration   4: 439005.832 ops/s
[info] # Warmup Iteration   5: 446689.059 ops/s
[info] Iteration   1: 446725.359 ops/s
[info]                  ·gc.alloc.rate:                   1553.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1658.952 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5843.819 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 447925.468 ops/s
[info]                  ·gc.alloc.rate:                   1557.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1335.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4694.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 445167.282 ops/s
[info]                  ·gc.alloc.rate:                   1547.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1679.140 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5936.153 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 434620.365 ops/s
[info]                  ·gc.alloc.rate:                   1510.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1686.486 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6107.563 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 450564.340 ops/s
[info]                  ·gc.alloc.rate:                   1566.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              5472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4726.994 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce":
[info]   445000.563 ±(99.9%) 23600.859 ops/s [Average]
[info]   (min, avg, max) = (434620.365, 445000.563, 450564.340), stdev = 6129.068
[info]   CI (99.9%): [421399.703, 468601.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1547.218 ±(99.9%) 82.262 MB/sec [Average]
[info]   (min, avg, max) = (1510.988, 1547.218, 1566.482), stdev = 21.363
[info]   CI (99.9%): [1464.956, 1629.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5472.001, 5472.001, 5472.001), stdev = 0.001
[info]   CI (99.9%): [5472.001, 5472.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.206 ±(99.9%) 0.368 B/op [Average]
[info]   (min, avg, max) = (0.145, 0.206, 0.366), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   1542.755 ±(99.9%) 698.025 MB/sec [Average]
[info]   (min, avg, max) = (1335.988, 1542.755, 1686.486), stdev = 181.275
[info]   CI (99.9%): [844.730, 2240.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5461.732 ±(99.9%) 2665.869 B/op [Average]
[info]   (min, avg, max) = (4694.131, 5461.732, 6107.563), stdev = 692.318
[info]   CI (99.9%): [2795.863, 8127.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.159
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 32.77% complete, ETA 00:21:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 171199.592 ops/s
[info] # Warmup Iteration   2: 884965.837 ops/s
[info] # Warmup Iteration   3: 919923.683 ops/s
[info] # Warmup Iteration   4: 914514.064 ops/s
[info] # Warmup Iteration   5: 921326.116 ops/s
[info] Iteration   1: 925996.772 ops/s
[info]                  ·gc.alloc.rate:                   1091.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.321 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1685.244 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 929627.464 ops/s
[info]                  ·gc.alloc.rate:                   1096.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.822 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1687.690 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 931130.653 ops/s
[info]                  ·gc.alloc.rate:                   1098.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.699 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1692.890 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 913934.353 ops/s
[info]                  ·gc.alloc.rate:                   1077.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2310.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 926542.239 ops/s
[info]                  ·gc.alloc.rate:                   1092.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1714.790 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson":
[info]   925446.296 ±(99.9%) 26103.775 ops/s [Average]
[info]   (min, avg, max) = (913934.353, 925446.296, 931130.653), stdev = 6779.067
[info]   CI (99.9%): [899342.521, 951550.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1091.317 ±(99.9%) 30.686 MB/sec [Average]
[info]   (min, avg, max) = (1077.875, 1091.317, 1098.214), stdev = 7.969
[info]   CI (99.9%): [1060.631, 1122.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.000), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.106 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.106, 0.143), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1068.181 ±(99.9%) 589.292 MB/sec [Average]
[info]   (min, avg, max) = (991.321, 1068.181, 1341.685), stdev = 153.037
[info]   CI (99.9%): [478.889, 1657.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1818.174 ±(99.9%) 1060.199 B/op [Average]
[info]   (min, avg, max) = (1685.244, 1818.174, 2310.258), stdev = 275.330
[info]   CI (99.9%): [757.975, 2878.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 33.61% complete, ETA 00:21:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2288448.828 ops/s
[info] # Warmup Iteration   2: 2785512.783 ops/s
[info] # Warmup Iteration   3: 2814085.525 ops/s
[info] # Warmup Iteration   4: 2828140.801 ops/s
[info] # Warmup Iteration   5: 2798934.568 ops/s
[info] Iteration   1: 2836168.455 ops/s
[info]                  ·gc.alloc.rate:                   706.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.489 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 363.193 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2835049.903 ops/s
[info]                  ·gc.alloc.rate:                   706.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.493 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 546.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2870349.899 ops/s
[info]                  ·gc.alloc.rate:                   714.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.143 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 360.876 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2826330.741 ops/s
[info]                  ·gc.alloc.rate:                   704.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.247 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.612 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2838330.270 ops/s
[info]                  ·gc.alloc.rate:                   706.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.153 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 367.155 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   2841245.854 ±(99.9%) 65068.376 ops/s [Average]
[info]   (min, avg, max) = (2826330.741, 2841245.854, 2870349.899), stdev = 16898.051
[info]   CI (99.9%): [2776177.478, 2906314.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   707.679 ±(99.9%) 16.119 MB/sec [Average]
[info]   (min, avg, max) = (704.049, 707.679, 714.905), stdev = 4.186
[info]   CI (99.9%): [691.561, 723.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.028 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.028, 0.046), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   723.705 ±(99.9%) 559.321 MB/sec [Average]
[info]   (min, avg, max) = (654.489, 723.705, 983.493), stdev = 145.254
[info]   CI (99.9%): [164.384, 1283.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   400.970 ±(99.9%) 312.400 B/op [Average]
[info]   (min, avg, max) = (360.876, 400.970, 546.011), stdev = 81.129
[info]   CI (99.9%): [88.570, 713.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 34.45% complete, ETA 00:20:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 49929.715 ops/s
[info] # Warmup Iteration   2: 264925.962 ops/s
[info] # Warmup Iteration   3: 265503.063 ops/s
[info] # Warmup Iteration   4: 265279.568 ops/s
[info] # Warmup Iteration   5: 270438.841 ops/s
[info] Iteration   1: 270471.333 ops/s
[info]                  ·gc.alloc.rate:                   1445.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1331.833 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7752.127 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 266723.873 ops/s
[info]                  ·gc.alloc.rate:                   1426.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1675.467 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9887.591 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 270926.210 ops/s
[info]                  ·gc.alloc.rate:                   1448.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.871 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7824.588 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 273124.070 ops/s
[info]                  ·gc.alloc.rate:                   1460.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7786.465 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 267601.646 ops/s
[info]                  ·gc.alloc.rate:                   1431.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1354.396 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7963.968 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay":
[info]   269769.426 ±(99.9%) 10015.213 ops/s [Average]
[info]   (min, avg, max) = (266723.873, 269769.426, 273124.070), stdev = 2600.919
[info]   CI (99.9%): [259754.213, 279784.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1442.469 ±(99.9%) 53.259 MB/sec [Average]
[info]   (min, avg, max) = (1426.104, 1442.469, 1460.409), stdev = 13.831
[info]   CI (99.9%): [1389.210, 1495.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8416.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8416.002, 8416.002, 8416.002), stdev = 0.001
[info]   CI (99.9%): [8416.001, 8416.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.365 ±(99.9%) 1.003 B/op [Average]
[info]   (min, avg, max) = (0.120, 0.365, 0.737), stdev = 0.261
[info]   CI (99.9%): [≈ 0, 1.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1411.947 ±(99.9%) 568.223 MB/sec [Average]
[info]   (min, avg, max) = (1331.833, 1411.947, 1675.467), stdev = 147.566
[info]   CI (99.9%): [843.725, 1980.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8242.948 ±(99.9%) 3553.765 B/op [Average]
[info]   (min, avg, max) = (7752.127, 8242.948, 9887.591), stdev = 922.901
[info]   CI (99.9%): [4689.183, 11796.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce
[info] # Run progress: 35.29% complete, ETA 00:20:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 246758.493 ops/s
[info] # Warmup Iteration   2: 460302.624 ops/s
[info] # Warmup Iteration   3: 476624.752 ops/s
[info] # Warmup Iteration   4: 473110.893 ops/s
[info] # Warmup Iteration   5: 480709.838 ops/s
[info] Iteration   1: 485846.226 ops/s
[info]                  ·gc.alloc.rate:                   1851.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1668.807 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5407.700 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 484757.305 ops/s
[info]                  ·gc.alloc.rate:                   1847.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2016.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6546.760 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 485768.196 ops/s
[info]                  ·gc.alloc.rate:                   1851.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1688.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5471.057 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 483152.427 ops/s
[info]                  ·gc.alloc.rate:                   1841.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2032.211 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6620.516 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 481585.755 ops/s
[info]                  ·gc.alloc.rate:                   1835.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              6000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1696.546 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5544.946 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce":
[info]   484221.982 ±(99.9%) 7050.244 ops/s [Average]
[info]   (min, avg, max) = (481585.755, 484221.982, 485846.226), stdev = 1830.926
[info]   CI (99.9%): [477171.738, 491272.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate":
[info]   1845.693 ±(99.9%) 26.371 MB/sec [Average]
[info]   (min, avg, max) = (1835.776, 1845.693, 1851.589), stdev = 6.848
[info]   CI (99.9%): [1819.323, 1872.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   6000.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6000.001, 6000.001, 6000.001), stdev = 0.001
[info]   CI (99.9%): [6000.001, 6000.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.149 ±(99.9%) 0.218 B/op [Average]
[info]   (min, avg, max) = (0.067, 0.149, 0.203), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1820.416 ±(99.9%) 717.708 MB/sec [Average]
[info]   (min, avg, max) = (1668.807, 1820.416, 2032.211), stdev = 186.386
[info]   CI (99.9%): [1102.708, 2538.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5918.196 ±(99.9%) 2348.736 B/op [Average]
[info]   (min, avg, max) = (5407.700, 5918.196, 6620.516), stdev = 609.959
[info]   CI (99.9%): [3569.460, 8266.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter
[info] # Run progress: 36.13% complete, ETA 00:20:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1706731.084 ops/s
[info] # Warmup Iteration   2: 1840852.168 ops/s
[info] # Warmup Iteration   3: 1874641.405 ops/s
[info] # Warmup Iteration   4: 1869591.570 ops/s
[info] # Warmup Iteration   5: 1874935.193 ops/s
[info] Iteration   1: 1881287.634 ops/s
[info]                  ·gc.alloc.rate:                   1214.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1324.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1107.869 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1889937.244 ops/s
[info]                  ·gc.alloc.rate:                   1219.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.130 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 831.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1877876.910 ops/s
[info]                  ·gc.alloc.rate:                   1212.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.296 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1121.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1882049.464 ops/s
[info]                  ·gc.alloc.rate:                   1214.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.633 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1123.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1907460.723 ops/s
[info]                  ·gc.alloc.rate:                   1230.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.515 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 834.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter":
[info]   1887722.395 ±(99.9%) 45765.555 ops/s [Average]
[info]   (min, avg, max) = (1877876.910, 1887722.395, 1907460.723), stdev = 11885.169
[info]   CI (99.9%): [1841956.840, 1933487.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate":
[info]   1218.379 ±(99.9%) 29.359 MB/sec [Average]
[info]   (min, avg, max) = (1212.026, 1218.379, 1230.985), stdev = 7.625
[info]   CI (99.9%): [1189.020, 1247.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.042, 0.087), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1202.528 ±(99.9%) 697.409 MB/sec [Average]
[info]   (min, avg, max) = (998.130, 1202.528, 1342.633), stdev = 181.115
[info]   CI (99.9%): [505.119, 1899.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1003.443 ±(99.9%) 600.809 B/op [Average]
[info]   (min, avg, max) = (831.257, 1003.443, 1123.047), stdev = 156.028
[info]   CI (99.9%): [402.635, 1604.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay
[info] # Run progress: 36.97% complete, ETA 00:19:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11240.259 ops/s
[info] # Warmup Iteration   2: 151041.997 ops/s
[info] # Warmup Iteration   3: 159542.845 ops/s
[info] # Warmup Iteration   4: 158994.384 ops/s
[info] # Warmup Iteration   5: 163202.098 ops/s
[info] Iteration   1: 161651.292 ops/s
[info]                  ·gc.alloc.rate:                   1154.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.320 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9653.909 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 161369.578 ops/s
[info]                  ·gc.alloc.rate:                   1152.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12973.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 160277.745 ops/s
[info]                  ·gc.alloc.rate:                   1144.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9847.673 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 161585.581 ops/s
[info]                  ·gc.alloc.rate:                   1154.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13080.112 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 160621.755 ops/s
[info]                  ·gc.alloc.rate:                   1147.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              11240.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.895 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9904.911 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay":
[info]   161101.191 ±(99.9%) 2371.508 ops/s [Average]
[info]   (min, avg, max) = (160277.745, 161101.191, 161651.292), stdev = 615.873
[info]   CI (99.9%): [158729.683, 163472.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate":
[info]   1150.483 ±(99.9%) 16.552 MB/sec [Average]
[info]   (min, avg, max) = (1144.730, 1150.483, 1154.190), stdev = 4.299
[info]   CI (99.9%): [1133.931, 1167.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   11240.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11240.003, 11240.003, 11240.003), stdev = 0.001
[info]   CI (99.9%): [11240.002, 11240.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.691 ±(99.9%) 0.887 B/op [Average]
[info]   (min, avg, max) = (0.408, 0.691, 1.015), stdev = 0.230
[info]   CI (99.9%): [≈ 0, 1.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1135.621 ±(99.9%) 706.781 MB/sec [Average]
[info]   (min, avg, max) = (991.320, 1135.621, 1342.981), stdev = 183.549
[info]   CI (99.9%): [428.840, 1842.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   11091.980 ±(99.9%) 6811.801 B/op [Average]
[info]   (min, avg, max) = (9653.909, 11091.980, 13080.112), stdev = 1769.003
[info]   CI (99.9%): [4280.178, 17903.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 37.82% complete, ETA 00:19:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 47430.375 ops/s
[info] # Warmup Iteration   2: 648109.404 ops/s
[info] # Warmup Iteration   3: 717587.038 ops/s
[info] # Warmup Iteration   4: 720656.431 ops/s
[info] # Warmup Iteration   5: 714461.642 ops/s
[info] Iteration   1: 716560.178 ops/s
[info]                  ·gc.alloc.rate:                   928.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.639 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2163.227 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 720067.189 ops/s
[info]                  ·gc.alloc.rate:                   933.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.398 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2167.240 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 720660.200 ops/s
[info]                  ·gc.alloc.rate:                   934.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.965 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2177.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 717062.615 ops/s
[info]                  ·gc.alloc.rate:                   929.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1463.491 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 721071.351 ops/s
[info]                  ·gc.alloc.rate:                   934.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.152 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2191.797 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   719084.307 ±(99.9%) 8135.780 ops/s [Average]
[info]   (min, avg, max) = (716560.178, 719084.307, 721071.351), stdev = 2112.836
[info]   CI (99.9%): [710948.527, 727220.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   931.982 ±(99.9%) 10.817 MB/sec [Average]
[info]   (min, avg, max) = (928.550, 931.982, 934.608), stdev = 2.809
[info]   CI (99.9%): [921.164, 942.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.082 ±(99.9%) 0.337 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.082, 0.227), stdev = 0.087
[info]   CI (99.9%): [≈ 0, 0.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   928.780 ±(99.9%) 564.721 MB/sec [Average]
[info]   (min, avg, max) = (666.747, 928.780, 1004.152), stdev = 146.656
[info]   CI (99.9%): [364.059, 1493.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2032.581 ±(99.9%) 1225.743 B/op [Average]
[info]   (min, avg, max) = (1463.491, 2032.581, 2191.797), stdev = 318.322
[info]   CI (99.9%): [806.838, 3258.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 38.66% complete, ETA 00:19:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1637069.420 ops/s
[info] # Warmup Iteration   2: 1505889.277 ops/s
[info] # Warmup Iteration   3: 1580579.662 ops/s
[info] # Warmup Iteration   4: 1582408.119 ops/s
[info] # Warmup Iteration   5: 1601018.270 ops/s
[info] Iteration   1: 1595974.952 ops/s
[info]                  ·gc.alloc.rate:                   754.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.566 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 969.950 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1600221.269 ops/s
[info]                  ·gc.alloc.rate:                   756.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 646.312 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1598148.199 ops/s
[info]                  ·gc.alloc.rate:                   755.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      659.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 649.119 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1595281.499 ops/s
[info]                  ·gc.alloc.rate:                   754.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.243 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 978.858 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1601816.582 ops/s
[info]                  ·gc.alloc.rate:                   757.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.205 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 652.546 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   1598288.500 ±(99.9%) 10649.869 ops/s [Average]
[info]   (min, avg, max) = (1595281.499, 1598288.500, 1601816.582), stdev = 2765.737
[info]   CI (99.9%): [1587638.631, 1608938.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   755.552 ±(99.9%) 5.046 MB/sec [Average]
[info]   (min, avg, max) = (754.174, 755.552, 757.293), stdev = 1.310
[info]   CI (99.9%): [750.506, 760.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.033 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.033, 0.062), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   791.241 ±(99.9%) 691.473 MB/sec [Average]
[info]   (min, avg, max) = (657.076, 791.241, 992.243), stdev = 179.573
[info]   CI (99.9%): [99.768, 1482.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   779.357 ±(99.9%) 685.777 B/op [Average]
[info]   (min, avg, max) = (646.312, 779.357, 978.858), stdev = 178.094
[info]   CI (99.9%): [93.580, 1465.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 39.50% complete, ETA 00:19:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 43135.953 ops/s
[info] # Warmup Iteration   2: 216617.740 ops/s
[info] # Warmup Iteration   3: 217628.307 ops/s
[info] # Warmup Iteration   4: 220915.536 ops/s
[info] # Warmup Iteration   5: 222840.414 ops/s
[info] Iteration   1: 222080.672 ops/s
[info]                  ·gc.alloc.rate:                   1173.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.704 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7036.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 220903.371 ops/s
[info]                  ·gc.alloc.rate:                   1167.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.006 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9491.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 223615.259 ops/s
[info]                  ·gc.alloc.rate:                   1181.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.293 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.060 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7067.993 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 222776.152 ops/s
[info]                  ·gc.alloc.rate:                   1177.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.246 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9496.914 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 220833.411 ops/s
[info]                  ·gc.alloc.rate:                   1167.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.756 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7204.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   222041.773 ±(99.9%) 4625.897 ops/s [Average]
[info]   (min, avg, max) = (220833.411, 222041.773, 223615.259), stdev = 1201.331
[info]   CI (99.9%): [217415.876, 226667.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1173.664 ±(99.9%) 24.436 MB/sec [Average]
[info]   (min, avg, max) = (1167.293, 1173.664, 1181.918), stdev = 6.346
[info]   CI (99.9%): [1149.227, 1198.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8320.002, 8320.002, 8320.002), stdev = 0.001
[info]   CI (99.9%): [8320.002, 8320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.354 ±(99.9%) 0.511 B/op [Average]
[info]   (min, avg, max) = (0.148, 0.354, 0.445), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   1136.755 ±(99.9%) 708.481 MB/sec [Average]
[info]   (min, avg, max) = (992.704, 1136.755, 1344.246), stdev = 183.990
[info]   CI (99.9%): [428.273, 1845.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8059.341 ±(99.9%) 5049.200 B/op [Average]
[info]   (min, avg, max) = (7036.266, 8059.341, 9496.914), stdev = 1311.261
[info]   CI (99.9%): [3010.141, 13108.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 6.000), stdev = 1.095
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce
[info] # Run progress: 40.34% complete, ETA 00:18:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 586273.797 ops/s
[info] # Warmup Iteration   2: 679102.912 ops/s
[info] # Warmup Iteration   3: 684266.879 ops/s
[info] # Warmup Iteration   4: 680613.258 ops/s
[info] # Warmup Iteration   5: 683197.135 ops/s
[info] Iteration   1: 680217.582 ops/s
[info]                  ·gc.alloc.rate:                   1016.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2278.615 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 688503.666 ops/s
[info]                  ·gc.alloc.rate:                   1028.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.190 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2260.338 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 692254.947 ops/s
[info]                  ·gc.alloc.rate:                   1034.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3018.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 695879.745 ops/s
[info]                  ·gc.alloc.rate:                   1039.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.815 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2263.638 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 693448.101 ops/s
[info]                  ·gc.alloc.rate:                   1036.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              2352.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.142 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2279.142 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce":
[info]   690060.808 ±(99.9%) 23537.942 ops/s [Average]
[info]   (min, avg, max) = (680217.582, 690060.808, 695879.745), stdev = 6112.729
[info]   CI (99.9%): [666522.866, 713598.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate":
[info]   1031.142 ±(99.9%) 35.307 MB/sec [Average]
[info]   (min, avg, max) = (1016.393, 1031.142, 1039.883), stdev = 9.169
[info]   CI (99.9%): [995.834, 1066.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   2352.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2352.001, 2352.001, 2352.001), stdev = 0.001
[info]   CI (99.9%): [2352.001, 2352.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.133 ±(99.9%) 0.155 B/op [Average]
[info]   (min, avg, max) = (0.094, 0.133, 0.190), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   1061.163 ±(99.9%) 574.155 MB/sec [Average]
[info]   (min, avg, max) = (984.680, 1061.163, 1327.497), stdev = 149.106
[info]   CI (99.9%): [487.008, 1635.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2420.024 ±(99.9%) 1288.436 B/op [Average]
[info]   (min, avg, max) = (2260.338, 2420.024, 3018.385), stdev = 334.603
[info]   CI (99.9%): [1131.587, 3708.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson
[info] # Run progress: 41.18% complete, ETA 00:18:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 543448.354 ops/s
[info] # Warmup Iteration   2: 905366.386 ops/s
[info] # Warmup Iteration   3: 897692.786 ops/s
[info] # Warmup Iteration   4: 901631.360 ops/s
[info] # Warmup Iteration   5: 909894.279 ops/s
[info] Iteration   1: 909893.381 ops/s
[info]                  ·gc.alloc.rate:                   638.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.981 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1134.938 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 911086.798 ops/s
[info]                  ·gc.alloc.rate:                   639.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1138.089 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 912788.286 ops/s
[info]                  ·gc.alloc.rate:                   640.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      330.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 569.122 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 905784.759 ops/s
[info]                  ·gc.alloc.rate:                   635.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.718 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1151.692 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 906329.969 ops/s
[info]                  ·gc.alloc.rate:                   635.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.495 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1155.640 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson":
[info]   909176.639 ±(99.9%) 11681.930 ops/s [Average]
[info]   (min, avg, max) = (905784.759, 909176.639, 912788.286), stdev = 3033.760
[info]   CI (99.9%): [897494.708, 920858.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate":
[info]   637.667 ±(99.9%) 8.099 MB/sec [Average]
[info]   (min, avg, max) = (635.274, 637.667, 640.172), stdev = 2.103
[info]   CI (99.9%): [629.568, 645.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.222 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.079 ±(99.9%) 0.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.252), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   594.594 ±(99.9%) 569.700 MB/sec [Average]
[info]   (min, avg, max) = (330.014, 594.594, 665.495), stdev = 147.949
[info]   CI (99.9%): [24.894, 1164.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1029.896 ±(99.9%) 992.426 B/op [Average]
[info]   (min, avg, max) = (569.122, 1029.896, 1155.640), stdev = 257.730
[info]   CI (99.9%): [37.471, 2022.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter
[info] # Run progress: 42.02% complete, ETA 00:18:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1279608.008 ops/s
[info] # Warmup Iteration   2: 1353494.065 ops/s
[info] # Warmup Iteration   3: 1364056.466 ops/s
[info] # Warmup Iteration   4: 1370115.426 ops/s
[info] # Warmup Iteration   5: 1377179.412 ops/s
[info] Iteration   1: 1374650.197 ops/s
[info]                  ·gc.alloc.rate:                   335.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.703 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 376.365 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1387516.670 ops/s
[info]                  ·gc.alloc.rate:                   338.460 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.661 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.883 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1384283.490 ops/s
[info]                  ·gc.alloc.rate:                   337.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.717 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 372.624 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1382018.109 ops/s
[info]                  ·gc.alloc.rate:                   337.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.720 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 373.229 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 1378362.468 ops/s
[info]                  ·gc.alloc.rate:                   336.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 373.464 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter":
[info]   1381366.187 ±(99.9%) 19338.798 ops/s [Average]
[info]   (min, avg, max) = (1374650.197, 1381366.187, 1387516.670), stdev = 5022.224
[info]   CI (99.9%): [1362027.389, 1400704.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   337.002 ±(99.9%) 4.659 MB/sec [Average]
[info]   (min, avg, max) = (335.371, 337.002, 338.460), stdev = 1.210
[info]   CI (99.9%): [332.343, 341.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.640 ±(99.9%) 5.332 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.640, 3.117), stdev = 1.385
[info]   CI (99.9%): [≈ 0, 5.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.733 ±(99.9%) 6.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.733, 3.569), stdev = 1.585
[info]   CI (99.9%): [≈ 0, 6.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   327.971 ±(99.9%) 2.713 MB/sec [Average]
[info]   (min, avg, max) = (327.052, 327.971, 328.703), stdev = 0.704
[info]   CI (99.9%): [325.258, 330.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   373.713 ±(99.9%) 5.841 B/op [Average]
[info]   (min, avg, max) = (372.624, 373.713, 376.365), stdev = 1.517
[info]   CI (99.9%): [367.872, 379.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 42.86% complete, ETA 00:18:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 219819.901 ops/s
[info] # Warmup Iteration   2: 421525.141 ops/s
[info] # Warmup Iteration   3: 444777.982 ops/s
[info] # Warmup Iteration   4: 446640.007 ops/s
[info] # Warmup Iteration   5: 459401.050 ops/s
[info] Iteration   1: 458913.696 ops/s
[info]                  ·gc.alloc.rate:                   1413.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              4848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1321.250 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4532.654 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 454860.915 ops/s
[info]                  ·gc.alloc.rate:                   1400.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              4848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.171 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4603.001 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 449795.197 ops/s
[info]                  ·gc.alloc.rate:                   1385.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              4848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4682.641 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 450896.260 ops/s
[info]                  ·gc.alloc.rate:                   1388.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              4848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1681.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5868.852 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 447350.866 ops/s
[info]                  ·gc.alloc.rate:                   1378.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              4848.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.955 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4749.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   452363.387 ±(99.9%) 17542.380 ops/s [Average]
[info]   (min, avg, max) = (447350.866, 452363.387, 458913.696), stdev = 4555.700
[info]   CI (99.9%): [434821.007, 469905.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1393.334 ±(99.9%) 53.293 MB/sec [Average]
[info]   (min, avg, max) = (1378.005, 1393.334, 1413.172), stdev = 13.840
[info]   CI (99.9%): [1340.041, 1446.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4848.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4848.001, 4848.001, 4848.001), stdev = 0.001
[info]   CI (99.9%): [4848.001, 4848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.188 ±(99.9%) 0.575 B/op [Average]
[info]   (min, avg, max) = (0.073, 0.188, 0.432), stdev = 0.149
[info]   CI (99.9%): [≈ 0, 0.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1404.221 ±(99.9%) 598.035 MB/sec [Average]
[info]   (min, avg, max) = (1321.250, 1404.221, 1681.400), stdev = 155.308
[info]   CI (99.9%): [806.187, 2002.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4887.293 ±(99.9%) 2136.126 B/op [Average]
[info]   (min, avg, max) = (4532.654, 4887.293, 5868.852), stdev = 554.745
[info]   CI (99.9%): [2751.166, 7023.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.095
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 43.70% complete, ETA 00:17:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 420597.555 ops/s
[info] # Warmup Iteration   2: 1089252.251 ops/s
[info] # Warmup Iteration   3: 1096037.327 ops/s
[info] # Warmup Iteration   4: 1076894.263 ops/s
[info] # Warmup Iteration   5: 1090309.395 ops/s
[info] Iteration   1: 1100162.747 ops/s
[info]                  ·gc.alloc.rate:                   833.150 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 940.559 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1100338.261 ops/s
[info]                  ·gc.alloc.rate:                   833.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.817 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1417.280 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1100487.555 ops/s
[info]                  ·gc.alloc.rate:                   833.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      663.929 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 949.754 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1092142.125 ops/s
[info]                  ·gc.alloc.rate:                   827.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.036 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1441.346 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1084979.499 ops/s
[info]                  ·gc.alloc.rate:                   821.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              1192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.715 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 970.150 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   1095622.037 ±(99.9%) 26671.616 ops/s [Average]
[info]   (min, avg, max) = (1084979.499, 1095622.037, 1100487.555), stdev = 6926.534
[info]   CI (99.9%): [1068950.422, 1122293.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   829.683 ±(99.9%) 20.190 MB/sec [Average]
[info]   (min, avg, max) = (821.634, 829.683, 833.325), stdev = 5.243
[info]   CI (99.9%): [809.493, 849.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1192.000, 1192.000, 1192.000), stdev = 0.001
[info]   CI (99.9%): [1192.000, 1192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.096 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (0.060, 0.096, 0.179), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   796.180 ±(99.9%) 700.662 MB/sec [Average]
[info]   (min, avg, max) = (657.404, 796.180, 1000.036), stdev = 181.960
[info]   CI (99.9%): [95.519, 1496.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1143.818 ±(99.9%) 1004.937 B/op [Average]
[info]   (min, avg, max) = (940.559, 1143.818, 1441.346), stdev = 260.979
[info]   CI (99.9%): [138.880, 2148.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 44.54% complete, ETA 00:17:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2888274.118 ops/s
[info] # Warmup Iteration   2: 3256063.061 ops/s
[info] # Warmup Iteration   3: 3233731.945 ops/s
[info] # Warmup Iteration   4: 3351123.132 ops/s
[info] # Warmup Iteration   5: 3332172.643 ops/s
[info] Iteration   1: 3294517.892 ops/s
[info]                  ·gc.alloc.rate:      100.463 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3294438.947 ops/s
[info]                  ·gc.alloc.rate:      100.477 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3326624.980 ops/s
[info]                  ·gc.alloc.rate:                   101.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.770 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 121.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3369124.595 ops/s
[info]                  ·gc.alloc.rate:      102.732 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3335322.340 ops/s
[info]                  ·gc.alloc.rate:                   101.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.050 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 120.696 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3324005.751 ±(99.9%) 120457.555 ops/s [Average]
[info]   (min, avg, max) = (3294438.947, 3324005.751, 3369124.595), stdev = 31282.445
[info]   CI (99.9%): [3203548.196, 3444463.306] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   101.365 ±(99.9%) 3.651 MB/sec [Average]
[info]   (min, avg, max) = (100.463, 101.365, 102.732), stdev = 0.948
[info]   CI (99.9%): [97.714, 105.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.012 ±(99.9%) 0.083 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.050), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.006 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.024), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   102.304 ±(99.9%) 539.418 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.304, 255.770), stdev = 140.085
[info]   CI (99.9%): [≈ 0, 641.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   48.343 ±(99.9%) 254.901 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.343, 121.021), stdev = 66.197
[info]   CI (99.9%): [≈ 0, 303.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 45.38% complete, ETA 00:17:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 29235.261 ops/s
[info] # Warmup Iteration   2: 166660.005 ops/s
[info] # Warmup Iteration   3: 171648.020 ops/s
[info] # Warmup Iteration   4: 174896.886 ops/s
[info] # Warmup Iteration   5: 176514.494 ops/s
[info] Iteration   1: 174203.919 ops/s
[info]                  ·gc.alloc.rate:                   1177.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.912 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8970.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 172809.895 ops/s
[info]                  ·gc.alloc.rate:                   1168.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.079 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12133.768 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 175871.213 ops/s
[info]                  ·gc.alloc.rate:                   1189.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.264 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8986.466 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 172016.392 ops/s
[info]                  ·gc.alloc.rate:                   1163.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.362 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12298.904 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 175435.289 ops/s
[info]                  ·gc.alloc.rate:                   1186.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              10640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.676 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9074.790 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   174067.342 ±(99.9%) 6365.644 ops/s [Average]
[info]   (min, avg, max) = (172016.392, 174067.342, 175871.213), stdev = 1653.137
[info]   CI (99.9%): [167701.698, 180432.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1176.821 ±(99.9%) 43.234 MB/sec [Average]
[info]   (min, avg, max) = (1163.032, 1176.821, 1189.052), stdev = 11.228
[info]   CI (99.9%): [1133.587, 1220.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10640.002, 10640.002, 10640.002), stdev = 0.001
[info]   CI (99.9%): [10640.002, 10640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.528 ±(99.9%) 1.087 B/op [Average]
[info]   (min, avg, max) = (0.188, 0.528, 0.948), stdev = 0.282
[info]   CI (99.9%): [≈ 0, 1.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1137.059 ±(99.9%) 707.779 MB/sec [Average]
[info]   (min, avg, max) = (992.912, 1137.059, 1344.362), stdev = 183.808
[info]   CI (99.9%): [429.280, 1844.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   10292.792 ±(99.9%) 6767.004 B/op [Average]
[info]   (min, avg, max) = (8970.032, 10292.792, 12298.904), stdev = 1757.369
[info]   CI (99.9%): [3525.788, 17059.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 7.000), stdev = 1.225
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 46.22% complete, ETA 00:17:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3144.663 ops/s
[info] # Warmup Iteration   2: 5120.479 ops/s
[info] # Warmup Iteration   3: 6141.733 ops/s
[info] # Warmup Iteration   4: 7527.915 ops/s
[info] # Warmup Iteration   5: 7567.349 ops/s
[info] Iteration   1: 8644.667 ops/s
[info]                  ·gc.alloc.rate:                   1263.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              230120.227 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1306.115 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237798.714 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 8508.449 ops/s
[info]                  ·gc.alloc.rate:                   1243.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              230120.055 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.022 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1314.491 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243230.203 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 8631.180 ops/s
[info]                  ·gc.alloc.rate:                   1262.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              230120.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.662 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241708.125 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 8622.064 ops/s
[info]                  ·gc.alloc.rate:                   1260.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              230136.129 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     26.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243419.429 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 8622.357 ops/s
[info]                  ·gc.alloc.rate:                   1260.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              230176.047 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 183412.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   8605.744 ±(99.9%) 212.403 ops/s [Average]
[info]   (min, avg, max) = (8508.449, 8605.744, 8644.667), stdev = 55.160
[info]   CI (99.9%): [8393.341, 8818.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1258.231 ±(99.9%) 31.815 MB/sec [Average]
[info]   (min, avg, max) = (1243.640, 1258.231, 1263.941), stdev = 8.262
[info]   CI (99.9%): [1226.416, 1290.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   230134.501 ±(99.9%) 93.335 B/op [Average]
[info]   (min, avg, max) = (230120.047, 230134.501, 230176.047), stdev = 24.239
[info]   CI (99.9%): [230041.166, 230227.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.117 ±(99.9%) 0.237 MB/sec [Average]
[info]   (min, avg, max) = (0.022, 0.117, 0.189), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   21.423 ±(99.9%) 43.145 B/op [Average]
[info]   (min, avg, max) = (4.119, 21.423, 34.366), stdev = 11.205
[info]   CI (99.9%): [≈ 0, 64.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1256.869 ±(99.9%) 544.358 MB/sec [Average]
[info]   (min, avg, max) = (1004.671, 1256.869, 1333.407), stdev = 141.368
[info]   CI (99.9%): [712.512, 1801.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   229913.793 ±(99.9%) 100474.839 B/op [Average]
[info]   (min, avg, max) = (183412.495, 229913.793, 243419.429), stdev = 26092.997
[info]   CI (99.9%): [129438.954, 330388.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.414
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 47.06% complete, ETA 00:16:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1514.033 ops/s
[info] # Warmup Iteration   2: 10910.476 ops/s
[info] # Warmup Iteration   3: 11867.596 ops/s
[info] # Warmup Iteration   4: 11898.445 ops/s
[info] # Warmup Iteration   5: 12138.395 ops/s
[info] Iteration   1: 12072.334 ops/s
[info]                  ·gc.alloc.rate:                   157.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              20592.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.751 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33346.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 12161.335 ops/s
[info]                  ·gc.alloc.rate:      159.220 MB/sec
[info]                  ·gc.alloc.rate.norm: 20606.813 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 12000.135 ops/s
[info]                  ·gc.alloc.rate:                   157.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              20608.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.752 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33546.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 12048.608 ops/s
[info]                  ·gc.alloc.rate:                   157.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              20608.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.031 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33412.429 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 12118.290 ops/s
[info]                  ·gc.alloc.rate:      158.699 MB/sec
[info]                  ·gc.alloc.rate.norm: 20608.045 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   12080.140 ±(99.9%) 239.731 ops/s [Average]
[info]   (min, avg, max) = (12000.135, 12080.140, 12161.335), stdev = 62.257
[info]   CI (99.9%): [11840.409, 12319.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   158.143 ±(99.9%) 3.180 MB/sec [Average]
[info]   (min, avg, max) = (157.114, 158.143, 159.220), stdev = 0.826
[info]   CI (99.9%): [154.962, 161.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20604.594 ±(99.9%) 27.103 B/op [Average]
[info]   (min, avg, max) = (20592.039, 20604.594, 20608.045), stdev = 7.038
[info]   CI (99.9%): [20577.491, 20631.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.816 ±(99.9%) 7.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.816, 4.080), stdev = 1.825
[info]   CI (99.9%): [≈ 0, 7.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   153.453 ±(99.9%) 539.408 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.453, 255.762), stdev = 140.083
[info]   CI (99.9%): [≈ 0, 692.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   20060.899 ±(99.9%) 70517.432 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 20060.899, 33546.045), stdev = 18313.153
[info]   CI (99.9%): [≈ 0, 90578.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 47.90% complete, ETA 00:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8196.996 ops/s
[info] # Warmup Iteration   2: 18933.737 ops/s
[info] # Warmup Iteration   3: 23847.255 ops/s
[info] # Warmup Iteration   4: 23747.571 ops/s
[info] # Warmup Iteration   5: 23660.607 ops/s
[info] Iteration   1: 23717.642 ops/s
[info]                  ·gc.alloc.rate:                   213.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              14190.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.731 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16974.545 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 23819.027 ops/s
[info]                  ·gc.alloc.rate:                   214.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.743 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16901.867 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 23931.238 ops/s
[info]                  ·gc.alloc.rate:                   215.774 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.030 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.772 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16822.778 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 23934.946 ops/s
[info]                  ·gc.alloc.rate:      215.896 MB/sec
[info]                  ·gc.alloc.rate.norm: 14192.017 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 23758.000 ops/s
[info]                  ·gc.alloc.rate:                   214.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              14192.017 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.732 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 21777.302 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   23832.170 ±(99.9%) 381.039 ops/s [Average]
[info]   (min, avg, max) = (23717.642, 23832.170, 23934.946), stdev = 98.955
[info]   CI (99.9%): [23451.132, 24213.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   214.886 ±(99.9%) 3.581 MB/sec [Average]
[info]   (min, avg, max) = (213.790, 214.886, 215.896), stdev = 0.930
[info]   CI (99.9%): [211.305, 218.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   14191.742 ±(99.9%) 2.369 B/op [Average]
[info]   (min, avg, max) = (14190.642, 14191.742, 14192.018), stdev = 0.615
[info]   CI (99.9%): [14189.373, 14194.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.628 ±(99.9%) 5.340 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.628, 3.108), stdev = 1.387
[info]   CI (99.9%): [≈ 0, 5.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   41.579 ±(99.9%) 353.786 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 41.579, 205.926), stdev = 91.877
[info]   CI (99.9%): [≈ 0, 395.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   219.196 ±(99.9%) 487.275 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 219.196, 328.732), stdev = 126.544
[info]   CI (99.9%): [≈ 0, 706.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   14495.298 ±(99.9%) 32245.358 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14495.298, 21777.302), stdev = 8374.017
[info]   CI (99.9%): [≈ 0, 46740.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.517
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay
[info] # Run progress: 48.74% complete, ETA 00:16:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 399.688 ops/s
[info] # Warmup Iteration   2: 3312.661 ops/s
[info] # Warmup Iteration   3: 3682.493 ops/s
[info] # Warmup Iteration   4: 3737.581 ops/s
[info] # Warmup Iteration   5: 3812.561 ops/s
[info] Iteration   1: 3820.849 ops/s
[info]                  ·gc.alloc.rate:                   1120.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.115 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1319.828 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 543767.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3844.024 ops/s
[info]                  ·gc.alloc.rate:                   1127.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.114 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.140 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 407840.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3837.784 ops/s
[info]                  ·gc.alloc.rate:                   1125.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.123 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.969 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 410526.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3831.533 ops/s
[info]                  ·gc.alloc.rate:                   1123.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.309 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 550823.839 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3790.042 ops/s
[info]                  ·gc.alloc.rate:                   1111.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              461480.116 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.507 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 419181.463 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay":
[info]   3824.846 ±(99.9%) 81.848 ops/s [Average]
[info]   (min, avg, max) = (3790.042, 3824.846, 3844.024), stdev = 21.256
[info]   CI (99.9%): [3742.999, 3906.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate":
[info]   1121.517 ±(99.9%) 23.992 MB/sec [Average]
[info]   (min, avg, max) = (1111.374, 1121.517, 1127.155), stdev = 6.231
[info]   CI (99.9%): [1097.525, 1145.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   461480.117 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (461480.114, 461480.117, 461480.123), stdev = 0.004
[info]   CI (99.9%): [461480.103, 461480.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   17.165 ±(99.9%) 52.473 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.165, 34.575), stdev = 13.627
[info]   CI (99.9%): [≈ 0, 69.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1133.551 ±(99.9%) 693.408 MB/sec [Average]
[info]   (min, avg, max) = (996.140, 1133.551, 1341.309), stdev = 180.076
[info]   CI (99.9%): [440.143, 1826.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   466427.722 ±(99.9%) 284881.148 B/op [Average]
[info]   (min, avg, max) = (407840.158, 466427.722, 550823.839), stdev = 73982.729
[info]   CI (99.9%): [181546.574, 751308.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 6.000), stdev = 0.894
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce
[info] # Run progress: 49.58% complete, ETA 00:15:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 205572.294 ops/s
[info] # Warmup Iteration   2: 364251.027 ops/s
[info] # Warmup Iteration   3: 379976.236 ops/s
[info] # Warmup Iteration   4: 382208.249 ops/s
[info] # Warmup Iteration   5: 383659.259 ops/s
[info] Iteration   1: 384025.170 ops/s
[info]                  ·gc.alloc.rate:                   1219.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              5000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4045.984 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 376854.706 ops/s
[info]                  ·gc.alloc.rate:                   1197.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              5000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1323.137 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5526.567 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 381815.965 ops/s
[info]                  ·gc.alloc.rate:                   1212.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              5000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1332.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5491.494 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 378564.203 ops/s
[info]                  ·gc.alloc.rate:                   1202.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              5000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.338 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4171.862 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 378474.357 ops/s
[info]                  ·gc.alloc.rate:                   1202.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              5000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.108 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5590.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce":
[info]   379946.880 ±(99.9%) 11188.024 ops/s [Average]
[info]   (min, avg, max) = (376854.706, 379946.880, 384025.170), stdev = 2905.494
[info]   CI (99.9%): [368758.856, 391134.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate":
[info]   1206.920 ±(99.9%) 35.709 MB/sec [Average]
[info]   (min, avg, max) = (1197.070, 1206.920, 1219.964), stdev = 9.274
[info]   CI (99.9%): [1171.211, 1242.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm":
[info]   5000.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5000.001, 5000.001, 5000.001), stdev = 0.001
[info]   CI (99.9%): [5000.001, 5000.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.190 ±(99.9%) 0.436 B/op [Average]
[info]   (min, avg, max) = (0.085, 0.190, 0.348), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space":
[info]   1197.969 ±(99.9%) 713.449 MB/sec [Average]
[info]   (min, avg, max) = (987.191, 1197.969, 1344.108), stdev = 185.280
[info]   CI (99.9%): [484.520, 1911.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4965.213 ±(99.9%) 3017.929 B/op [Average]
[info]   (min, avg, max) = (4045.984, 4965.213, 5590.160), stdev = 783.747
[info]   CI (99.9%): [1947.284, 7983.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtCirce:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson
[info] # Run progress: 50.42% complete, ETA 00:15:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 604109.649 ops/s
[info] # Warmup Iteration   2: 1549412.515 ops/s
[info] # Warmup Iteration   3: 1570559.176 ops/s
[info] # Warmup Iteration   4: 1578302.684 ops/s
[info] # Warmup Iteration   5: 1578348.663 ops/s
[info] Iteration   1: 1561403.742 ops/s
[info]                  ·gc.alloc.rate:                   650.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.571 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 658.707 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1568136.278 ops/s
[info]                  ·gc.alloc.rate:                   653.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.970 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 658.499 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1591115.779 ops/s
[info]                  ·gc.alloc.rate:                   663.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.738 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 651.659 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1566285.969 ops/s
[info]                  ·gc.alloc.rate:                   652.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.388 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 664.688 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1584478.283 ops/s
[info]                  ·gc.alloc.rate:                   660.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      663.846 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 659.246 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson":
[info]   1574284.010 ±(99.9%) 49270.799 ops/s [Average]
[info]   (min, avg, max) = (1561403.742, 1574284.010, 1591115.779), stdev = 12795.470
[info]   CI (99.9%): [1525013.211, 1623554.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate":
[info]   656.162 ±(99.9%) 20.621 MB/sec [Average]
[info]   (min, avg, max) = (650.885, 656.162, 663.126), stdev = 5.355
[info]   CI (99.9%): [635.541, 676.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.042 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.084), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space":
[info]   658.702 ±(99.9%) 15.814 MB/sec [Average]
[info]   (min, avg, max) = (653.571, 658.702, 663.846), stdev = 4.107
[info]   CI (99.9%): [642.888, 674.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   658.560 ±(99.9%) 17.820 B/op [Average]
[info]   (min, avg, max) = (651.659, 658.560, 664.688), stdev = 4.628
[info]   CI (99.9%): [640.740, 676.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter
[info] # Run progress: 51.26% complete, ETA 00:15:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8444131.434 ops/s
[info] # Warmup Iteration   2: 9739949.403 ops/s
[info] # Warmup Iteration   3: 9983558.131 ops/s
[info] # Warmup Iteration   4: 10013118.860 ops/s
[info] # Warmup Iteration   5: 10063089.962 ops/s
[info] Iteration   1: 10021279.995 ops/s
[info]                  ·gc.alloc.rate:                   509.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.945 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.735 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 10092770.422 ops/s
[info]                  ·gc.alloc.rate:                   512.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 10092084.096 ops/s
[info]                  ·gc.alloc.rate:                   512.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.329 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 51.057 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10167111.774 ops/s
[info]                  ·gc.alloc.rate:                   516.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.431 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 101.467 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 10178035.420 ops/s
[info]                  ·gc.alloc.rate:                   517.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 50.731 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter":
[info]   10110256.341 ±(99.9%) 246406.026 ops/s [Average]
[info]   (min, avg, max) = (10021279.995, 10110256.341, 10178035.420), stdev = 63990.863
[info]   CI (99.9%): [9863850.315, 10356662.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate":
[info]   513.813 ±(99.9%) 12.654 MB/sec [Average]
[info]   (min, avg, max) = (509.229, 513.813, 517.252), stdev = 3.286
[info]   CI (99.9%): [501.159, 526.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.005 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.013), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space":
[info]   523.749 ±(99.9%) 689.255 MB/sec [Average]
[info]   (min, avg, max) = (327.329, 523.749, 655.431), stdev = 178.997
[info]   CI (99.9%): [≈ 0, 1213.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   81.599 ±(99.9%) 107.949 B/op [Average]
[info]   (min, avg, max) = (50.731, 81.599, 102.735), stdev = 28.034
[info]   CI (99.9%): [≈ 0, 189.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay
[info] # Run progress: 52.10% complete, ETA 00:15:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58005.432 ops/s
[info] # Warmup Iteration   2: 253204.554 ops/s
[info] # Warmup Iteration   3: 257203.149 ops/s
[info] # Warmup Iteration   4: 261419.986 ops/s
[info] # Warmup Iteration   5: 261012.058 ops/s
[info] Iteration   1: 260166.357 ops/s
[info]                  ·gc.alloc.rate:                   834.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.602 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5957.910 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 259914.072 ops/s
[info]                  ·gc.alloc.rate:                   833.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.702 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5987.841 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 262083.058 ops/s
[info]                  ·gc.alloc.rate:                   840.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.500 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.685 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3980.273 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 261184.327 ops/s
[info]                  ·gc.alloc.rate:                   837.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6019.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 262072.420 ops/s
[info]                  ·gc.alloc.rate:                   840.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              5048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.671 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4010.566 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay":
[info]   261084.047 ±(99.9%) 3943.837 ops/s [Average]
[info]   (min, avg, max) = (259914.072, 261084.047, 262083.058), stdev = 1024.202
[info]   CI (99.9%): [257140.210, 265027.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate":
[info]   837.224 ±(99.9%) 12.653 MB/sec [Average]
[info]   (min, avg, max) = (833.518, 837.224, 840.453), stdev = 3.286
[info]   CI (99.9%): [824.571, 849.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm":
[info]   5048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5048.002, 5048.002, 5048.002), stdev = 0.001
[info]   CI (99.9%): [5048.001, 5048.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.301 ±(99.9%) 0.733 B/op [Average]
[info]   (min, avg, max) = (0.125, 0.301, 0.504), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 1.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space":
[info]   860.465 ±(99.9%) 686.776 MB/sec [Average]
[info]   (min, avg, max) = (662.685, 860.465, 998.663), stdev = 178.354
[info]   CI (99.9%): [173.688, 1547.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5191.147 ±(99.9%) 4204.181 B/op [Average]
[info]   (min, avg, max) = (3980.273, 5191.147, 6019.147), stdev = 1091.812
[info]   CI (99.9%): [986.967, 9395.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAdtPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 52.94% complete, ETA 00:14:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 834805.354 ops/s
[info] # Warmup Iteration   2: 1308688.439 ops/s
[info] # Warmup Iteration   3: 1354732.172 ops/s
[info] # Warmup Iteration   4: 1347602.082 ops/s
[info] # Warmup Iteration   5: 1339598.198 ops/s
[info] Iteration   1: 1348792.122 ops/s
[info]                  ·gc.alloc.rate:                   1247.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      987.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1153.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1321972.981 ops/s
[info]                  ·gc.alloc.rate:                   1222.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1578.185 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1323267.974 ops/s
[info]                  ·gc.alloc.rate:                   1223.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1334.033 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1586.946 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1347059.819 ops/s
[info]                  ·gc.alloc.rate:                   1245.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1174.442 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1331266.028 ops/s
[info]                  ·gc.alloc.rate:                   1231.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.244 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1590.812 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1334471.785 ±(99.9%) 49295.500 ops/s [Average]
[info]   (min, avg, max) = (1321972.981, 1334471.785, 1348792.122), stdev = 12801.885
[info]   CI (99.9%): [1285176.285, 1383767.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1234.298 ±(99.9%) 45.548 MB/sec [Average]
[info]   (min, avg, max) = (1222.802, 1234.298, 1247.567), stdev = 11.829
[info]   CI (99.9%): [1188.751, 1279.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1456.000, 1456.000, 1456.000), stdev = 0.001
[info]   CI (99.9%): [1456.000, 1456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.064 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (0.049, 0.064, 0.099), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   1199.532 ±(99.9%) 714.635 MB/sec [Average]
[info]   (min, avg, max) = (987.976, 1199.532, 1345.244), stdev = 185.588
[info]   CI (99.9%): [484.897, 1914.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1416.685 ±(99.9%) 889.787 B/op [Average]
[info]   (min, avg, max) = (1153.039, 1416.685, 1590.812), stdev = 231.075
[info]   CI (99.9%): [526.898, 2306.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 11.000), stdev = 3.209
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 53.78% complete, ETA 00:14:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 1754515.441 ops/s
[info] # Warmup Iteration   2: 4445095.543 ops/s
[info] # Warmup Iteration   3: 4429626.661 ops/s
[info] # Warmup Iteration   4: 4405509.822 ops/s
[info] # Warmup Iteration   5: 4428623.529 ops/s
[info] Iteration   1: 4395464.881 ops/s
[info]                  ·gc.alloc.rate:                   1206.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.318 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 474.637 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 4423800.432 ops/s
[info]                  ·gc.alloc.rate:                   1214.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.663 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 356.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4400230.945 ops/s
[info]                  ·gc.alloc.rate:                   1207.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 479.250 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4453068.087 ops/s
[info]                  ·gc.alloc.rate:                   1222.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.584 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 475.579 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4429232.015 ops/s
[info]                  ·gc.alloc.rate:                   1215.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1012.500 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 359.798 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   4420359.272 ±(99.9%) 90003.685 ops/s [Average]
[info]   (min, avg, max) = (4395464.881, 4420359.272, 4453068.087), stdev = 23373.671
[info]   CI (99.9%): [4330355.587, 4510362.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1213.179 ±(99.9%) 25.068 MB/sec [Average]
[info]   (min, avg, max) = (1206.264, 1213.179, 1222.284), stdev = 6.510
[info]   CI (99.9%): [1188.111, 1238.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.022 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.022, 0.030), stdev = 0.005
[info]   CI (99.9%): [0.002, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   1204.738 ±(99.9%) 697.312 MB/sec [Average]
[info]   (min, avg, max) = (1000.663, 1204.738, 1345.584), stdev = 181.090
[info]   CI (99.9%): [507.426, 1902.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   429.063 ±(99.9%) 250.201 B/op [Average]
[info]   (min, avg, max) = (356.052, 429.063, 479.250), stdev = 64.976
[info]   CI (99.9%): [178.862, 679.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.62% complete, ETA 00:14:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12220968.911 ops/s
[info] # Warmup Iteration   2: 14841511.973 ops/s
[info] # Warmup Iteration   3: 15397154.829 ops/s
[info] # Warmup Iteration   4: 15555119.883 ops/s
[info] # Warmup Iteration   5: 15537156.599 ops/s
[info] Iteration   1: 15667617.404 ops/s
[info]                  ·gc.alloc.rate:                   477.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.976 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.855 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 15417772.809 ops/s
[info]                  ·gc.alloc.rate:                   470.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.776 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 15563923.486 ops/s
[info]                  ·gc.alloc.rate:                   474.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.074 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15536953.276 ops/s
[info]                  ·gc.alloc.rate:                   473.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.836 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 66.330 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 15579425.669 ops/s
[info]                  ·gc.alloc.rate:                   475.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.142 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15553138.529 ±(99.9%) 347084.784 ops/s [Average]
[info]   (min, avg, max) = (15417772.809, 15553138.529, 15667617.404), stdev = 90136.816
[info]   CI (99.9%): [15206053.745, 15900223.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   474.326 ±(99.9%) 10.512 MB/sec [Average]
[info]   (min, avg, max) = (470.161, 474.326, 477.696), stdev = 2.730
[info]   CI (99.9%): [463.814, 484.838] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.002 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.215 ±(99.9%) 689.803 MB/sec [Average]
[info]   (min, avg, max) = (326.976, 458.215, 654.836), stdev = 179.140
[info]   CI (99.9%): [≈ 0, 1148.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   46.435 ±(99.9%) 70.719 B/op [Average]
[info]   (min, avg, max) = (32.855, 46.435, 66.776), stdev = 18.366
[info]   CI (99.9%): [≈ 0, 117.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc
[info] # Run progress: 55.46% complete, ETA 00:14:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 11546601.652 ops/s
[info] # Warmup Iteration   2: 15182946.757 ops/s
[info] # Warmup Iteration   3: 15686640.315 ops/s
[info] # Warmup Iteration   4: 15608453.544 ops/s
[info] # Warmup Iteration   5: 15599039.266 ops/s
[info] Iteration   1: 15555857.066 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 15540558.986 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 15519240.366 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 15519050.369 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 15602438.195 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc":
[info]   15547428.996 ±(99.9%) 132612.436 ops/s [Average]
[info]   (min, avg, max) = (15519050.369, 15547428.996, 15602438.195), stdev = 34439.029
[info]   CI (99.9%): [15414816.560, 15680041.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁵ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 56.30% complete, ETA 00:13:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 276272.925 ops/s
[info] # Warmup Iteration   2: 1047966.951 ops/s
[info] # Warmup Iteration   3: 1057753.331 ops/s
[info] # Warmup Iteration   4: 1062008.289 ops/s
[info] # Warmup Iteration   5: 1052274.634 ops/s
[info] Iteration   1: 1057118.158 ops/s
[info]                  ·gc.alloc.rate:                   1552.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1670.490 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2487.588 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1058165.801 ops/s
[info]                  ·gc.alloc.rate:                   1554.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.155 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.072 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1999.381 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1062255.956 ops/s
[info]                  ·gc.alloc.rate:                   1560.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1686.288 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2498.480 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1055909.402 ops/s
[info]                  ·gc.alloc.rate:                   1550.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.414 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2017.596 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1054160.075 ops/s
[info]                  ·gc.alloc.rate:                   1548.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              2312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1695.206 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2531.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   1057521.878 ±(99.9%) 11694.001 ops/s [Average]
[info]   (min, avg, max) = (1054160.075, 1057521.878, 1062255.956), stdev = 3036.895
[info]   CI (99.9%): [1045827.877, 1069215.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1553.316 ±(99.9%) 17.386 MB/sec [Average]
[info]   (min, avg, max) = (1548.441, 1553.316, 1560.428), stdev = 4.515
[info]   CI (99.9%): [1535.929, 1570.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2312.000, 2312.000, 2312.000), stdev = 0.001
[info]   CI (99.9%): [2312.000, 2312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.112 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (0.093, 0.112, 0.155), stdev = 0.028
[info]   CI (99.9%): [0.005, 0.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   1549.894 ±(99.9%) 708.009 MB/sec [Average]
[info]   (min, avg, max) = (1344.072, 1549.894, 1695.206), stdev = 183.868
[info]   CI (99.9%): [841.885, 2257.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   2306.836 ±(99.9%) 1050.842 B/op [Average]
[info]   (min, avg, max) = (1999.381, 2306.836, 2531.137), stdev = 272.900
[info]   CI (99.9%): [1255.994, 3357.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 57.14% complete, ETA 00:13:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361758.132 ops/s
[info] # Warmup Iteration   2: 701446.834 ops/s
[info] # Warmup Iteration   3: 731559.451 ops/s
[info] # Warmup Iteration   4: 734131.458 ops/s
[info] # Warmup Iteration   5: 742302.027 ops/s
[info] Iteration   1: 734184.976 ops/s
[info]                  ·gc.alloc.rate:                   1615.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1660.692 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3560.679 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 736623.632 ops/s
[info]                  ·gc.alloc.rate:                   1620.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.693 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3576.625 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 733053.318 ops/s
[info]                  ·gc.alloc.rate:                   1613.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1682.537 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3612.756 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 742603.861 ops/s
[info]                  ·gc.alloc.rate:                   1634.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.670 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2863.218 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 739946.982 ops/s
[info]                  ·gc.alloc.rate:                   1628.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              3464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1693.375 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3601.650 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   737282.554 ±(99.9%) 15321.872 ops/s [Average]
[info]   (min, avg, max) = (733053.318, 737282.554, 742603.861), stdev = 3979.042
[info]   CI (99.9%): [721960.682, 752604.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1622.517 ±(99.9%) 33.747 MB/sec [Average]
[info]   (min, avg, max) = (1613.259, 1622.517, 1634.078), stdev = 8.764
[info]   CI (99.9%): [1588.770, 1656.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3464.001, 3464.001, 3464.001), stdev = 0.001
[info]   CI (99.9%): [3464.000, 3464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.142 ±(99.9%) 0.371 B/op [Average]
[info]   (min, avg, max) = (0.088, 0.142, 0.311), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   1612.193 ±(99.9%) 564.837 MB/sec [Average]
[info]   (min, avg, max) = (1350.670, 1612.193, 1693.375), stdev = 146.686
[info]   CI (99.9%): [1047.356, 2177.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3442.986 ±(99.9%) 1250.478 B/op [Average]
[info]   (min, avg, max) = (2863.218, 3442.986, 3612.756), stdev = 324.745
[info]   CI (99.9%): [2192.507, 4693.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.673
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 57.98% complete, ETA 00:13:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 996794.659 ops/s
[info] # Warmup Iteration   2: 2718181.892 ops/s
[info] # Warmup Iteration   3: 2704508.148 ops/s
[info] # Warmup Iteration   4: 2734750.799 ops/s
[info] # Warmup Iteration   5: 2723527.256 ops/s
[info] Iteration   1: 2721785.281 ops/s
[info]                  ·gc.alloc.rate:                   1549.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1670.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 966.246 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2738555.262 ops/s
[info]                  ·gc.alloc.rate:                   1558.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1680.600 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 966.021 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2725091.624 ops/s
[info]                  ·gc.alloc.rate:                   1551.141 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.327 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 779.424 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2675071.874 ops/s
[info]                  ·gc.alloc.rate:                   1523.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1692.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 995.807 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2708692.273 ops/s
[info]                  ·gc.alloc.rate:                   1541.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              896.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1356.339 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 788.250 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2713839.263 ±(99.9%) 92936.179 ops/s [Average]
[info]   (min, avg, max) = (2675071.874, 2713839.263, 2738555.262), stdev = 24135.231
[info]   CI (99.9%): [2620903.084, 2806775.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1544.810 ±(99.9%) 52.269 MB/sec [Average]
[info]   (min, avg, max) = (1523.082, 1544.810, 1558.783), stdev = 13.574
[info]   CI (99.9%): [1492.541, 1597.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   896.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (896.000, 896.000, 896.000), stdev = 0.001
[info]   CI (99.9%): [896.000, 896.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   0.100 ±(99.9%) 0.215 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.100, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.058 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.058, 0.084), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   1549.954 ±(99.9%) 693.623 MB/sec [Average]
[info]   (min, avg, max) = (1349.327, 1549.954, 1692.740), stdev = 180.132
[info]   CI (99.9%): [856.331, 2243.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   899.150 ±(99.9%) 408.192 B/op [Average]
[info]   (min, avg, max) = (779.424, 899.150, 995.807), stdev = 106.006
[info]   CI (99.9%): [490.958, 1307.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 7.000), stdev = 0.837
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 58.82% complete, ETA 00:13:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4612987.110 ops/s
[info] # Warmup Iteration   2: 5281661.045 ops/s
[info] # Warmup Iteration   3: 5342139.201 ops/s
[info] # Warmup Iteration   4: 5369459.825 ops/s
[info] # Warmup Iteration   5: 5432269.940 ops/s
[info] Iteration   1: 5402337.709 ops/s
[info]                  ·gc.alloc.rate:                   1427.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.179 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 387.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5413923.875 ops/s
[info]                  ·gc.alloc.rate:                   1430.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1672.744 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 486.327 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5362571.228 ops/s
[info]                  ·gc.alloc.rate:                   1417.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1344.019 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 394.521 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5433228.648 ops/s
[info]                  ·gc.alloc.rate:                   1435.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.911 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 390.827 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 5350051.579 ops/s
[info]                  ·gc.alloc.rate:                   1414.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              416.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1352.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 398.004 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   5392422.608 ±(99.9%) 134939.602 ops/s [Average]
[info]   (min, avg, max) = (5350051.579, 5392422.608, 5433228.648), stdev = 35043.386
[info]   CI (99.9%): [5257483.006, 5527362.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1425.082 ±(99.9%) 35.454 MB/sec [Average]
[info]   (min, avg, max) = (1414.008, 1425.082, 1435.796), stdev = 9.207
[info]   CI (99.9%): [1389.629, 1460.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   416.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (416.000, 416.000, 416.000), stdev = 0.001
[info]   CI (99.9%): [416.000, 416.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.021 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.021, 0.030), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1409.539 ±(99.9%) 567.620 MB/sec [Average]
[info]   (min, avg, max) = (1329.179, 1409.539, 1672.744), stdev = 147.409
[info]   CI (99.9%): [841.919, 1977.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   411.402 ±(99.9%) 162.013 B/op [Average]
[info]   (min, avg, max) = (387.330, 411.402, 486.327), stdev = 42.074
[info]   CI (99.9%): [249.389, 573.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 59.66% complete, ETA 00:12:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 42686.947 ops/s
[info] # Warmup Iteration   2: 342038.212 ops/s
[info] # Warmup Iteration   3: 350906.957 ops/s
[info] # Warmup Iteration   4: 351614.981 ops/s
[info] # Warmup Iteration   5: 347110.348 ops/s
[info] Iteration   1: 347796.988 ops/s
[info]                  ·gc.alloc.rate:                   1212.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              5488.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1325.306 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5998.598 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 349999.815 ops/s
[info]                  ·gc.alloc.rate:                   1220.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              5488.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4494.483 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 345790.352 ops/s
[info]                  ·gc.alloc.rate:                   1205.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              5488.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.560 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6097.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 352638.077 ops/s
[info]                  ·gc.alloc.rate:                   1229.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              5488.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.762 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6005.454 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 351641.841 ops/s
[info]                  ·gc.alloc.rate:                   1226.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              5488.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1011.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4528.951 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   349573.415 ±(99.9%) 10774.858 ops/s [Average]
[info]   (min, avg, max) = (345790.352, 349573.415, 352638.077), stdev = 2798.196
[info]   CI (99.9%): [338798.557, 360348.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1218.868 ±(99.9%) 37.855 MB/sec [Average]
[info]   (min, avg, max) = (1205.729, 1218.868, 1229.806), stdev = 9.831
[info]   CI (99.9%): [1181.013, 1256.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5488.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5488.001, 5488.001, 5488.001), stdev = 0.001
[info]   CI (99.9%): [5488.001, 5488.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.282 ±(99.9%) 0.369 B/op [Average]
[info]   (min, avg, max) = (0.186, 0.282, 0.379), stdev = 0.096
[info]   CI (99.9%): [≈ 0, 0.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   1204.354 ±(99.9%) 699.539 MB/sec [Average]
[info]   (min, avg, max) = (999.336, 1204.354, 1345.762), stdev = 181.668
[info]   CI (99.9%): [504.815, 1903.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5424.927 ±(99.9%) 3213.897 B/op [Average]
[info]   (min, avg, max) = (4494.483, 5424.927, 6097.148), stdev = 834.639
[info]   CI (99.9%): [2211.030, 8638.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce
[info] # Run progress: 60.50% complete, ETA 00:12:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 154079.997 ops/s
[info] # Warmup Iteration   2: 183073.224 ops/s
[info] # Warmup Iteration   3: 183774.201 ops/s
[info] # Warmup Iteration   4: 184189.469 ops/s
[info] # Warmup Iteration   5: 185578.052 ops/s
[info] Iteration   1: 181422.625 ops/s
[info]                  ·gc.alloc.rate:                   617.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      649.995 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5640.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 185701.929 ops/s
[info]                  ·gc.alloc.rate:                   632.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      651.443 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5521.436 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 185514.170 ops/s
[info]                  ·gc.alloc.rate:                   631.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.939 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5538.423 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 185033.520 ops/s
[info]                  ·gc.alloc.rate:                   630.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.812 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5569.846 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 185762.616 ops/s
[info]                  ·gc.alloc.rate:                   632.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              5360.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.567 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5570.447 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce":
[info]   184686.972 ±(99.9%) 7112.614 ops/s [Average]
[info]   (min, avg, max) = (181422.625, 184686.972, 185762.616), stdev = 1847.123
[info]   CI (99.9%): [177574.358, 191799.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate":
[info]   628.978 ±(99.9%) 24.529 MB/sec [Average]
[info]   (min, avg, max) = (617.723, 628.978, 632.725), stdev = 6.370
[info]   CI (99.9%): [604.449, 653.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm":
[info]   5360.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5360.002, 5360.002, 5360.002), stdev = 0.001
[info]   CI (99.9%): [5360.002, 5360.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.533 ±(99.9%) 0.503 B/op [Average]
[info]   (min, avg, max) = (0.353, 0.533, 0.722), stdev = 0.131
[info]   CI (99.9%): [0.030, 1.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   653.351 ±(99.9%) 11.387 MB/sec [Average]
[info]   (min, avg, max) = (649.995, 653.351, 657.567), stdev = 2.957
[info]   CI (99.9%): [641.964, 664.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   5568.035 ±(99.9%) 174.766 B/op [Average]
[info]   (min, avg, max) = (5521.436, 5568.035, 5640.022), stdev = 45.386
[info]   CI (99.9%): [5393.269, 5742.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson
[info] # Run progress: 61.34% complete, ETA 00:12:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 156994.186 ops/s
[info] # Warmup Iteration   2: 221570.910 ops/s
[info] # Warmup Iteration   3: 233074.078 ops/s
[info] # Warmup Iteration   4: 222563.596 ops/s
[info] # Warmup Iteration   5: 216012.743 ops/s
[info] Iteration   1: 224326.216 ops/s
[info]                  ·gc.alloc.rate:                   237.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1794.667 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 232464.065 ops/s
[info]                  ·gc.alloc.rate:                   245.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2191.796 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 219726.470 ops/s
[info]                  ·gc.alloc.rate:      232.299 MB/sec
[info]                  ·gc.alloc.rate.norm: 1664.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 219347.480 ops/s
[info]                  ·gc.alloc.rate:                   231.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.747 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.814 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2322.967 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 219310.257 ops/s
[info]                  ·gc.alloc.rate:                   231.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              1664.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.672 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2337.648 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson":
[info]   223034.898 ±(99.9%) 21866.808 ops/s [Average]
[info]   (min, avg, max) = (219310.257, 223034.898, 232464.065), stdev = 5678.741
[info]   CI (99.9%): [201168.090, 244901.705] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate":
[info]   235.794 ±(99.9%) 23.089 MB/sec [Average]
[info]   (min, avg, max) = (231.822, 235.794, 245.759), stdev = 5.996
[info]   CI (99.9%): [212.705, 258.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm":
[info]   1664.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1664.002, 1664.002, 1664.002), stdev = 0.001
[info]   CI (99.9%): [1664.002, 1664.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.291 ±(99.9%) 1.324 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.291, 0.747), stdev = 0.344
[info]   CI (99.9%): [≈ 0, 1.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   245.790 ±(99.9%) 541.328 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.790, 325.672), stdev = 140.581
[info]   CI (99.9%): [≈ 0, 787.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1729.416 ±(99.9%) 3817.376 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1729.416, 2337.648), stdev = 991.360
[info]   CI (99.9%): [≈ 0, 5546.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter
[info] # Run progress: 62.18% complete, ETA 00:11:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 640034.974 ops/s
[info] # Warmup Iteration   2: 681801.048 ops/s
[info] # Warmup Iteration   3: 688308.893 ops/s
[info] # Warmup Iteration   4: 688397.647 ops/s
[info] # Warmup Iteration   5: 692497.084 ops/s
[info] Iteration   1: 685294.033 ops/s
[info]                  ·gc.alloc.rate:                   578.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1502.319 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 691877.277 ops/s
[info]                  ·gc.alloc.rate:                   583.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 744.753 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 690418.888 ops/s
[info]                  ·gc.alloc.rate:                   582.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.508 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1494.211 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 685854.690 ops/s
[info]                  ·gc.alloc.rate:                   578.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.824 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1507.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 683135.899 ops/s
[info]                  ·gc.alloc.rate:                   576.359 MB/sec
[info]                  ·gc.alloc.rate.norm:              1328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.400 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1517.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter":
[info]   687316.158 ±(99.9%) 14165.214 ops/s [Average]
[info]   (min, avg, max) = (683135.899, 687316.158, 691877.277), stdev = 3678.661
[info]   CI (99.9%): [673150.943, 701481.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate":
[info]   579.923 ±(99.9%) 12.108 MB/sec [Average]
[info]   (min, avg, max) = (576.359, 579.923, 583.804), stdev = 3.144
[info]   CI (99.9%): [567.815, 592.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   1328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1328.001, 1328.001, 1328.001), stdev = 0.001
[info]   CI (99.9%): [1328.001, 1328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.105 ±(99.9%) 0.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.237), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   590.425 ±(99.9%) 566.211 MB/sec [Average]
[info]   (min, avg, max) = (327.402, 590.425, 658.400), stdev = 147.043
[info]   CI (99.9%): [24.214, 1156.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   1353.090 ±(99.9%) 1309.877 B/op [Average]
[info]   (min, avg, max) = (744.753, 1353.090, 1517.033), stdev = 340.171
[info]   CI (99.9%): [43.213, 2662.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.225
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc
[info] # Run progress: 63.03% complete, ETA 00:11:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 688358.892 ops/s
[info] # Warmup Iteration   2: 718058.647 ops/s
[info] # Warmup Iteration   3: 721212.675 ops/s
[info] # Warmup Iteration   4: 719025.807 ops/s
[info] # Warmup Iteration   5: 721246.065 ops/s
[info] Iteration   1: 721411.463 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 718805.157 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 720649.384 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 718453.051 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 717437.813 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: 0.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc":
[info]   719351.374 ±(99.9%) 6296.672 ops/s [Average]
[info]   (min, avg, max) = (717437.813, 719351.374, 721411.463), stdev = 1635.226
[info]   CI (99.9%): [713054.702, 725648.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   0.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (0.001, 0.001, 0.001), stdev = 0.001
[info]   CI (99.9%): [0.001, 0.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay
[info] # Run progress: 63.87% complete, ETA 00:11:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164770.926 ops/s
[info] # Warmup Iteration   2: 204715.899 ops/s
[info] # Warmup Iteration   3: 253028.355 ops/s
[info] # Warmup Iteration   4: 252039.551 ops/s
[info] # Warmup Iteration   5: 244200.517 ops/s
[info] Iteration   1: 250213.509 ops/s
[info]                  ·gc.alloc.rate:                   267.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.740 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1608.965 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 251976.298 ops/s
[info]                  ·gc.alloc.rate:                   268.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.383 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2026.286 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 198494.595 ops/s
[info]                  ·gc.alloc.rate:                   211.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.389 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2572.201 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 198996.331 ops/s
[info]                  ·gc.alloc.rate:      212.412 MB/sec
[info]                  ·gc.alloc.rate.norm: 1680.002 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 198927.620 ops/s
[info]                  ·gc.alloc.rate:                   212.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              1680.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.304 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2582.466 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay":
[info]   219721.671 ±(99.9%) 110309.929 ops/s [Average]
[info]   (min, avg, max) = (198494.595, 219721.671, 251976.298), stdev = 28647.138
[info]   CI (99.9%): [109411.741, 330031.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate":
[info]   234.507 ±(99.9%) 117.726 MB/sec [Average]
[info]   (min, avg, max) = (211.871, 234.507, 268.948), stdev = 30.573
[info]   CI (99.9%): [116.781, 352.233] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm":
[info]   1680.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1680.002, 1680.002, 1680.002), stdev = 0.001
[info]   CI (99.9%): [1680.001, 1680.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.288 ±(99.9%) 1.315 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.288, 0.780), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   246.163 ±(99.9%) 542.341 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.163, 326.304), stdev = 140.844
[info]   CI (99.9%): [≈ 0, 788.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   1757.984 ±(99.9%) 4096.649 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1757.984, 2582.466), stdev = 1063.887
[info]   CI (99.9%): [≈ 0, 5854.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.71% complete, ETA 00:11:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 917676.234 ops/s
[info] # Warmup Iteration   2: 2050818.296 ops/s
[info] # Warmup Iteration   3: 2058685.594 ops/s
[info] # Warmup Iteration   4: 2087689.518 ops/s
[info] # Warmup Iteration   5: 2060786.687 ops/s
[info] Iteration   1: 2070044.839 ops/s
[info]                  ·gc.alloc.rate:                   1094.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      992.691 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 754.869 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2084431.547 ops/s
[info]                  ·gc.alloc.rate:                   1101.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.975 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 753.645 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2099485.078 ops/s
[info]                  ·gc.alloc.rate:                   1109.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.055 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 751.316 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2086115.213 ops/s
[info]                  ·gc.alloc.rate:                   1102.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1342.606 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1013.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2073218.050 ops/s
[info]                  ·gc.alloc.rate:                   1095.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1010.406 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 767.136 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2082658.945 ±(99.9%) 45006.963 ops/s [Average]
[info]   (min, avg, max) = (2070044.839, 2082658.945, 2099485.078), stdev = 11688.165
[info]   CI (99.9%): [2037651.983, 2127665.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1100.778 ±(99.9%) 23.711 MB/sec [Average]
[info]   (min, avg, max) = (1094.122, 1100.778, 1109.666), stdev = 6.158
[info]   CI (99.9%): [1077.067, 1124.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.038 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (0.016, 0.038, 0.047), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   1069.146 ±(99.9%) 589.169 MB/sec [Average]
[info]   (min, avg, max) = (992.691, 1069.146, 1342.606), stdev = 153.005
[info]   CI (99.9%): [479.977, 1658.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   808.027 ±(99.9%) 442.212 B/op [Average]
[info]   (min, avg, max) = (751.316, 808.027, 1013.167), stdev = 114.841
[info]   CI (99.9%): [365.815, 1250.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.55% complete, ETA 00:10:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4328988.689 ops/s
[info] # Warmup Iteration   2: 4907806.982 ops/s
[info] # Warmup Iteration   3: 5012485.072 ops/s
[info] # Warmup Iteration   4: 4960554.981 ops/s
[info] # Warmup Iteration   5: 5057379.068 ops/s
[info] Iteration   1: 5005056.887 ops/s
[info]                  ·gc.alloc.rate:                   763.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 308.872 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4990760.195 ops/s
[info]                  ·gc.alloc.rate:                   761.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.806 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 207.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 5040660.724 ops/s
[info]                  ·gc.alloc.rate:                   768.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.514 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.598 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5076178.299 ops/s
[info]                  ·gc.alloc.rate:                   774.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.286 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 307.326 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5074247.938 ops/s
[info]                  ·gc.alloc.rate:                   773.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.195 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.990 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   5037380.809 ±(99.9%) 150292.386 ops/s [Average]
[info]   (min, avg, max) = (4990760.195, 5037380.809, 5076178.299), stdev = 39030.455
[info]   CI (99.9%): [4887088.423, 5187673.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   768.148 ±(99.9%) 23.227 MB/sec [Average]
[info]   (min, avg, max) = (761.018, 768.148, 774.124), stdev = 6.032
[info]   CI (99.9%): [744.921, 791.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.016 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.026), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   790.562 ±(99.9%) 689.463 MB/sec [Average]
[info]   (min, avg, max) = (656.806, 790.562, 991.286), stdev = 179.051
[info]   CI (99.9%): [101.099, 1480.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   246.984 ±(99.9%) 214.849 B/op [Average]
[info]   (min, avg, max) = (205.598, 246.984, 308.872), stdev = 55.796
[info]   CI (99.9%): [32.136, 461.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 12.000), stdev = 4.336
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 66.39% complete, ETA 00:10:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85855.938 ops/s
[info] # Warmup Iteration   2: 468399.470 ops/s
[info] # Warmup Iteration   3: 477905.419 ops/s
[info] # Warmup Iteration   4: 477252.371 ops/s
[info] # Warmup Iteration   5: 471756.636 ops/s
[info] Iteration   1: 465485.799 ops/s
[info]                  ·gc.alloc.rate:                   1357.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4497.755 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 472731.101 ops/s
[info]                  ·gc.alloc.rate:                   1379.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1672.887 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5569.629 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 470992.901 ops/s
[info]                  ·gc.alloc.rate:                   1373.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4496.495 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 475301.136 ops/s
[info]                  ·gc.alloc.rate:                   1386.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4469.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 474818.362 ops/s
[info]                  ·gc.alloc.rate:                   1385.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              4592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1353.024 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4484.595 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   471865.860 ±(99.9%) 15249.506 ops/s [Average]
[info]   (min, avg, max) = (465485.799, 471865.860, 475301.136), stdev = 3960.248
[info]   CI (99.9%): [456616.354, 487115.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1376.628 ±(99.9%) 45.277 MB/sec [Average]
[info]   (min, avg, max) = (1357.694, 1376.628, 1386.787), stdev = 11.758
[info]   CI (99.9%): [1331.351, 1421.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4592.001, 4592.001, 4592.001), stdev = 0.001
[info]   CI (99.9%): [4592.001, 4592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.222 ±(99.9%) 0.478 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.222, 0.348), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   1410.158 ±(99.9%) 566.575 MB/sec [Average]
[info]   (min, avg, max) = (1329.829, 1410.158, 1672.887), stdev = 147.138
[info]   CI (99.9%): [843.583, 1976.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   4703.497 ±(99.9%) 1864.947 B/op [Average]
[info]   (min, avg, max) = (4469.009, 4703.497, 5569.629), stdev = 484.321
[info]   CI (99.9%): [2838.550, 6568.443] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.240
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 67.23% complete, ETA 00:10:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3437.568 ops/s
[info] # Warmup Iteration   2: 4878.204 ops/s
[info] # Warmup Iteration   3: 5028.856 ops/s
[info] # Warmup Iteration   4: 5132.731 ops/s
[info] # Warmup Iteration   5: 5107.483 ops/s
[info] Iteration   1: 5169.269 ops/s
[info]                  ·gc.alloc.rate:                   1111.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              338544.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     25.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      984.690 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 299810.407 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5161.070 ops/s
[info]                  ·gc.alloc.rate:                   1110.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              338544.079 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.482 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 301696.620 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5133.262 ops/s
[info]                  ·gc.alloc.rate:                   1104.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              338544.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.798 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 407076.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5149.236 ops/s
[info]                  ·gc.alloc.rate:                   1107.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              338544.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.267 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 305961.896 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5095.365 ops/s
[info]                  ·gc.alloc.rate:                   1095.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              338544.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1004.999 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 310437.745 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5141.640 ±(99.9%) 112.432 ops/s [Average]
[info]   (min, avg, max) = (5095.365, 5141.640, 5169.269), stdev = 29.198
[info]   CI (99.9%): [5029.209, 5254.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1106.076 ±(99.9%) 24.387 MB/sec [Average]
[info]   (min, avg, max) = (1095.989, 1106.076, 1111.906), stdev = 6.333
[info]   CI (99.9%): [1081.689, 1130.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   338544.084 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (338544.079, 338544.084, 338544.091), stdev = 0.005
[info]   CI (99.9%): [338544.065, 338544.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.067 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   20.378 ±(99.9%) 31.921 B/op [Average]
[info]   (min, avg, max) = (12.693, 20.378, 31.907), stdev = 8.290
[info]   CI (99.9%): [≈ 0, 52.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   1061.647 ±(99.9%) 573.802 MB/sec [Average]
[info]   (min, avg, max) = (984.690, 1061.647, 1327.798), stdev = 149.014
[info]   CI (99.9%): [487.845, 1635.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   324996.572 ±(99.9%) 177386.563 B/op [Average]
[info]   (min, avg, max) = (299810.407, 324996.572, 407076.194), stdev = 46066.727
[info]   CI (99.9%): [147610.010, 502383.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 5.000), stdev = 0.837
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 68.07% complete, ETA 00:10:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 11909.112 ops/s
[info] # Warmup Iteration   2: 26989.075 ops/s
[info] # Warmup Iteration   3: 26972.133 ops/s
[info] # Warmup Iteration   4: 26700.932 ops/s
[info] # Warmup Iteration   5: 26969.844 ops/s
[info] Iteration   1: 27028.624 ops/s
[info]                  ·gc.alloc.rate:                   391.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.649 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      322.944 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18810.451 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 26782.085 ops/s
[info]                  ·gc.alloc.rate:                   388.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.637 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19081.743 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 26643.300 ops/s
[info]                  ·gc.alloc.rate:                   386.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.949 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      650.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 38444.114 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 26815.341 ops/s
[info]                  ·gc.alloc.rate:                   388.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.029 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19137.880 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 27026.454 ops/s
[info]                  ·gc.alloc.rate:                   391.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              22807.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19065.371 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   26859.161 ±(99.9%) 641.919 ops/s [Average]
[info]   (min, avg, max) = (26643.300, 26859.161, 27028.624), stdev = 166.704
[info]   CI (99.9%): [26217.242, 27501.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   389.161 ±(99.9%) 9.219 MB/sec [Average]
[info]   (min, avg, max) = (386.066, 389.161, 391.589), stdev = 2.394
[info]   CI (99.9%): [379.942, 398.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   22807.855 ±(99.9%) 0.471 B/op [Average]
[info]   (min, avg, max) = (22807.649, 22807.855, 22807.949), stdev = 0.122
[info]   CI (99.9%): [22807.383, 22808.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1.465 ±(99.9%) 7.725 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.465, 3.689), stdev = 2.006
[info]   CI (99.9%): [≈ 0, 9.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   390.336 ±(99.9%) 560.568 MB/sec [Average]
[info]   (min, avg, max) = (322.944, 390.336, 650.737), stdev = 145.578
[info]   CI (99.9%): [≈ 0, 950.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   22907.912 ±(99.9%) 33446.372 B/op [Average]
[info]   (min, avg, max) = (18810.451, 22907.912, 38444.114), stdev = 8685.917
[info]   CI (99.9%): [≈ 0, 56354.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 5.000), stdev = 1.732
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 68.91% complete, ETA 00:09:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44684.615 ops/s
[info] # Warmup Iteration   2: 53354.032 ops/s
[info] # Warmup Iteration   3: 54386.391 ops/s
[info] # Warmup Iteration   4: 54486.304 ops/s
[info] # Warmup Iteration   5: 54790.790 ops/s
[info] Iteration   1: 54573.220 ops/s
[info]                  ·gc.alloc.rate:                   419.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.204 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9470.860 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 54912.201 ops/s
[info]                  ·gc.alloc.rate:                   421.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.951 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18747.413 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 54420.308 ops/s
[info]                  ·gc.alloc.rate:                   418.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9458.779 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 54559.256 ops/s
[info]                  ·gc.alloc.rate:                   419.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.014 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9434.859 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 54367.562 ops/s
[info]                  ·gc.alloc.rate:                   417.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              12096.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 18936.345 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   54566.510 ±(99.9%) 818.105 ops/s [Average]
[info]   (min, avg, max) = (54367.562, 54566.510, 54912.201), stdev = 212.459
[info]   CI (99.9%): [53748.405, 55384.614] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   419.271 ±(99.9%) 6.214 MB/sec [Average]
[info]   (min, avg, max) = (417.811, 419.271, 421.935), stdev = 1.614
[info]   CI (99.9%): [413.057, 425.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   12096.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (12096.007, 12096.008, 12096.008), stdev = 0.001
[info]   CI (99.9%): [12096.007, 12096.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1.080 ±(99.9%) 1.932 B/op [Average]
[info]   (min, avg, max) = (0.600, 1.080, 1.801), stdev = 0.502
[info]   CI (99.9%): [≈ 0, 3.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.053 ±(99.9%) 688.847 MB/sec [Average]
[info]   (min, avg, max) = (327.011, 458.053, 654.084), stdev = 178.891
[info]   CI (99.9%): [≈ 0, 1146.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   13209.651 ±(99.9%) 19799.807 B/op [Average]
[info]   (min, avg, max) = (9434.859, 13209.651, 18936.345), stdev = 5141.947
[info]   CI (99.9%): [≈ 0, 33009.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc
[info] # Run progress: 69.75% complete, ETA 00:09:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44069.988 ops/s
[info] # Warmup Iteration   2: 50776.721 ops/s
[info] # Warmup Iteration   3: 50255.801 ops/s
[info] # Warmup Iteration   4: 50495.769 ops/s
[info] # Warmup Iteration   5: 50741.030 ops/s
[info] Iteration   1: 50638.195 ops/s
[info]                  ·gc.alloc.rate:      0.772 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 50690.737 ops/s
[info]                  ·gc.alloc.rate:      0.773 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 50692.034 ops/s
[info]                  ·gc.alloc.rate:      0.773 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.009 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 50506.572 ops/s
[info]                  ·gc.alloc.rate:      0.771 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 50523.196 ops/s
[info]                  ·gc.alloc.rate:      0.771 MB/sec
[info]                  ·gc.alloc.rate.norm: 24.008 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc":
[info]   50610.147 ±(99.9%) 345.891 ops/s [Average]
[info]   (min, avg, max) = (50506.572, 50610.147, 50692.034), stdev = 89.827
[info]   CI (99.9%): [50264.256, 50956.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   0.772 ±(99.9%) 0.005 MB/sec [Average]
[info]   (min, avg, max) = (0.771, 0.772, 0.773), stdev = 0.001
[info]   CI (99.9%): [0.767, 0.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   24.008 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (24.008, 24.008, 24.009), stdev = 0.001
[info]   CI (99.9%): [24.007, 24.009] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 70.59% complete, ETA 00:09:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1218.283 ops/s
[info] # Warmup Iteration   2: 4449.289 ops/s
[info] # Warmup Iteration   3: 4654.909 ops/s
[info] # Warmup Iteration   4: 4596.466 ops/s
[info] # Warmup Iteration   5: 4608.179 ops/s
[info] Iteration   1: 4551.756 ops/s
[info]                  ·gc.alloc.rate:                   1338.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              462799.770 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.849 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 459917.916 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 4593.624 ops/s
[info]                  ·gc.alloc.rate:                   1350.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              462800.548 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1337.402 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 458224.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4618.708 ops/s
[info]                  ·gc.alloc.rate:                   1357.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              462801.238 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     28.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1343.782 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 458014.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 4634.536 ops/s
[info]                  ·gc.alloc.rate:                   1362.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              462798.690 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.294 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 457903.821 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4605.367 ops/s
[info]                  ·gc.alloc.rate:                   1354.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              462799.845 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1351.807 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 462038.046 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   4600.798 ±(99.9%) 120.797 ops/s [Average]
[info]   (min, avg, max) = (4551.756, 4600.798, 4634.536), stdev = 31.371
[info]   CI (99.9%): [4480.001, 4721.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1352.702 ±(99.9%) 35.645 MB/sec [Average]
[info]   (min, avg, max) = (1338.181, 1352.702, 1362.707), stdev = 9.257
[info]   CI (99.9%): [1317.057, 1388.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   462800.018 ±(99.9%) 3.665 B/op [Average]
[info]   (min, avg, max) = (462798.690, 462800.018, 462801.238), stdev = 0.952
[info]   CI (99.9%): [462796.353, 462803.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.079 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.079, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   27.069 ±(99.9%) 56.201 B/op [Average]
[info]   (min, avg, max) = (14.136, 27.069, 49.789), stdev = 14.595
[info]   CI (99.9%): [≈ 0, 83.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   1342.227 ±(99.9%) 33.762 MB/sec [Average]
[info]   (min, avg, max) = (1329.849, 1342.227, 1351.807), stdev = 8.768
[info]   CI (99.9%): [1308.465, 1375.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   459219.687 ±(99.9%) 6835.787 B/op [Average]
[info]   (min, avg, max) = (457903.821, 459219.687, 462038.046), stdev = 1775.232
[info]   CI (99.9%): [452383.901, 466055.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 71.43% complete, ETA 00:09:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 57096.285 ops/s
[info] # Warmup Iteration   2: 641513.267 ops/s
[info] # Warmup Iteration   3: 638620.242 ops/s
[info] # Warmup Iteration   4: 644587.964 ops/s
[info] # Warmup Iteration   5: 651933.561 ops/s
[info] Iteration   1: 649755.425 ops/s
[info]                  ·gc.alloc.rate:                   1456.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1329.525 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3220.559 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 656415.664 ops/s
[info]                  ·gc.alloc.rate:                   1471.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1673.070 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4012.007 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 651513.849 ops/s
[info]                  ·gc.alloc.rate:                   1460.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.407 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3250.520 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 654013.132 ops/s
[info]                  ·gc.alloc.rate:                   1465.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.422 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3247.700 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 659192.960 ops/s
[info]                  ·gc.alloc.rate:                   1477.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              3528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1691.613 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4039.401 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   654178.206 ±(99.9%) 14515.575 ops/s [Average]
[info]   (min, avg, max) = (649755.425, 654178.206, 659192.960), stdev = 3769.649
[info]   CI (99.9%): [639662.631, 668693.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1466.254 ±(99.9%) 32.358 MB/sec [Average]
[info]   (min, avg, max) = (1456.444, 1466.254, 1477.450), stdev = 8.403
[info]   CI (99.9%): [1433.896, 1498.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3528.001, 3528.001, 3528.001), stdev = 0.001
[info]   CI (99.9%): [3528.001, 3528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.130 ±(99.9%) 0.172 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.130, 0.151), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1477.807 ±(99.9%) 719.980 MB/sec [Average]
[info]   (min, avg, max) = (1329.525, 1477.807, 1691.613), stdev = 186.977
[info]   CI (99.9%): [757.827, 2197.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   3554.038 ±(99.9%) 1659.005 B/op [Average]
[info]   (min, avg, max) = (3220.559, 3554.038, 4039.401), stdev = 430.838
[info]   CI (99.9%): [1895.033, 5213.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 8.000), stdev = 1.140
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 72.27% complete, ETA 00:08:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2155870.046 ops/s
[info] # Warmup Iteration   2: 2527789.048 ops/s
[info] # Warmup Iteration   3: 2498611.748 ops/s
[info] # Warmup Iteration   4: 2568387.765 ops/s
[info] # Warmup Iteration   5: 2554444.684 ops/s
[info] Iteration   1: 2563683.847 ops/s
[info]                  ·gc.alloc.rate:                   338.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.660 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 201.813 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2576321.799 ops/s
[info]                  ·gc.alloc.rate:                   340.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.737 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 200.818 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2585767.731 ops/s
[info]                  ·gc.alloc.rate:                   341.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.110 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.077 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2582474.749 ops/s
[info]                  ·gc.alloc.rate:                   341.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.095 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.326 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2575351.206 ops/s
[info]                  ·gc.alloc.rate:                   340.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 199.884 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2576719.866 ±(99.9%) 32614.295 ops/s [Average]
[info]   (min, avg, max) = (2563683.847, 2576719.866, 2585767.731), stdev = 8469.829
[info]   CI (99.9%): [2544105.571, 2609334.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   340.543 ±(99.9%) 4.482 MB/sec [Average]
[info]   (min, avg, max) = (338.736, 340.543, 341.771), stdev = 1.164
[info]   CI (99.9%): [336.061, 345.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.645 ±(99.9%) 5.378 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.645, 3.144), stdev = 1.397
[info]   CI (99.9%): [≈ 0, 6.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.396 ±(99.9%) 3.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.396, 1.930), stdev = 0.858
[info]   CI (99.9%): [≈ 0, 3.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   327.741 ±(99.9%) 3.368 MB/sec [Average]
[info]   (min, avg, max) = (327.095, 327.741, 328.737), stdev = 0.875
[info]   CI (99.9%): [324.373, 331.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   200.184 ±(99.9%) 4.350 B/op [Average]
[info]   (min, avg, max) = (199.077, 200.184, 201.813), stdev = 1.130
[info]   CI (99.9%): [195.833, 204.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 73.11% complete, ETA 00:08:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 20846.523 ops/s
[info] # Warmup Iteration   2: 232153.542 ops/s
[info] # Warmup Iteration   3: 238575.300 ops/s
[info] # Warmup Iteration   4: 243279.503 ops/s
[info] # Warmup Iteration   5: 242533.117 ops/s
[info] Iteration   1: 240381.139 ops/s
[info]                  ·gc.alloc.rate:                   934.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      985.409 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6452.796 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 242099.052 ops/s
[info]                  ·gc.alloc.rate:                   941.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.497 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6445.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 240532.696 ops/s
[info]                  ·gc.alloc.rate:                   935.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.803 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6522.898 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 241586.558 ops/s
[info]                  ·gc.alloc.rate:                   939.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.078 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6522.733 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 239132.144 ops/s
[info]                  ·gc.alloc.rate:                   929.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              6120.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.074 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6615.995 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   240746.318 ±(99.9%) 4440.963 ops/s [Average]
[info]   (min, avg, max) = (239132.144, 240746.318, 242099.052), stdev = 1153.304
[info]   CI (99.9%): [236305.355, 245187.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   936.046 ±(99.9%) 17.429 MB/sec [Average]
[info]   (min, avg, max) = (929.724, 936.046, 941.414), stdev = 4.526
[info]   CI (99.9%): [918.617, 953.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6120.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6120.002, 6120.002, 6120.002), stdev = 0.001
[info]   CI (99.9%): [6120.002, 6120.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.381 ±(99.9%) 1.006 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.381, 0.681), stdev = 0.261
[info]   CI (99.9%): [≈ 0, 1.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   995.972 ±(99.9%) 29.901 MB/sec [Average]
[info]   (min, avg, max) = (985.409, 995.972, 1005.074), stdev = 7.765
[info]   CI (99.9%): [966.071, 1025.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   6512.002 ±(99.9%) 265.141 B/op [Average]
[info]   (min, avg, max) = (6445.587, 6512.002, 6615.995), stdev = 68.856
[info]   CI (99.9%): [6246.861, 6777.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 73.95% complete, ETA 00:08:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 341697.504 ops/s
[info] # Warmup Iteration   2: 593986.819 ops/s
[info] # Warmup Iteration   3: 600545.118 ops/s
[info] # Warmup Iteration   4: 595909.495 ops/s
[info] # Warmup Iteration   5: 602419.538 ops/s
[info] Iteration   1: 598770.399 ops/s
[info]                  ·gc.alloc.rate:                   1375.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              3616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1319.892 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3470.187 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 606570.589 ops/s
[info]                  ·gc.alloc.rate:                   1393.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              3616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1663.859 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4317.898 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 611340.531 ops/s
[info]                  ·gc.alloc.rate:                   1404.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              3616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1338.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3447.780 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 602449.294 ops/s
[info]                  ·gc.alloc.rate:                   1383.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              3616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1345.268 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3515.248 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 610245.458 ops/s
[info]                  ·gc.alloc.rate:                   1401.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              3616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.507 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3481.401 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   605875.254 ±(99.9%) 20345.433 ops/s [Average]
[info]   (min, avg, max) = (598770.399, 605875.254, 611340.531), stdev = 5283.644
[info]   CI (99.9%): [585529.821, 626220.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1391.714 ±(99.9%) 46.808 MB/sec [Average]
[info]   (min, avg, max) = (1375.352, 1391.714, 1404.322), stdev = 12.156
[info]   CI (99.9%): [1344.906, 1438.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3616.001, 3616.001, 3616.001), stdev = 0.001
[info]   CI (99.9%): [3616.001, 3616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.140 ±(99.9%) 0.235 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.140, 0.216), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1403.503 ±(99.9%) 562.131 MB/sec [Average]
[info]   (min, avg, max) = (1319.892, 1403.503, 1663.859), stdev = 145.984
[info]   CI (99.9%): [841.373, 1965.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3646.503 ±(99.9%) 1448.266 B/op [Average]
[info]   (min, avg, max) = (3447.780, 3646.503, 4317.898), stdev = 376.110
[info]   CI (99.9%): [2198.236, 5094.769] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.600, 12.000), stdev = 3.050
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 74.79% complete, ETA 00:07:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 357682.433 ops/s
[info] # Warmup Iteration   2: 1112335.871 ops/s
[info] # Warmup Iteration   3: 1122961.444 ops/s
[info] # Warmup Iteration   4: 1124021.025 ops/s
[info] # Warmup Iteration   5: 1132661.767 ops/s
[info] Iteration   1: 1130943.451 ops/s
[info]                  ·gc.alloc.rate:                   764.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.411 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 909.390 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1121272.986 ops/s
[info]                  ·gc.alloc.rate:                   758.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.191 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 920.982 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1127077.743 ops/s
[info]                  ·gc.alloc.rate:                   762.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1381.798 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1140151.971 ops/s
[info]                  ·gc.alloc.rate:                   770.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      662.839 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 914.928 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1135706.413 ops/s
[info]                  ·gc.alloc.rate:                   767.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1064.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      665.113 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 921.693 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1131030.513 ±(99.9%) 28290.203 ops/s [Average]
[info]   (min, avg, max) = (1121272.986, 1131030.513, 1140151.971), stdev = 7346.876
[info]   CI (99.9%): [1102740.310, 1159320.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   764.649 ±(99.9%) 19.084 MB/sec [Average]
[info]   (min, avg, max) = (758.091, 764.649, 770.838), stdev = 4.956
[info]   CI (99.9%): [745.565, 783.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   1064.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1064.000, 1064.000, 1064.000), stdev = 0.001
[info]   CI (99.9%): [1064.000, 1064.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.052 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.052, 0.087), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   725.433 ±(99.9%) 568.956 MB/sec [Average]
[info]   (min, avg, max) = (653.411, 725.433, 989.610), stdev = 147.756
[info]   CI (99.9%): [156.476, 1294.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   1009.758 ±(99.9%) 801.075 B/op [Average]
[info]   (min, avg, max) = (909.390, 1009.758, 1381.798), stdev = 208.037
[info]   CI (99.9%): [208.683, 1810.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 75.63% complete, ETA 00:07:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4201219.241 ops/s
[info] # Warmup Iteration   2: 4935921.921 ops/s
[info] # Warmup Iteration   3: 5015013.473 ops/s
[info] # Warmup Iteration   4: 5013160.398 ops/s
[info] # Warmup Iteration   5: 5079559.157 ops/s
[info] Iteration   1: 5081465.224 ops/s
[info]                  ·gc.alloc.rate:                   568.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      653.991 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 202.613 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5033417.368 ops/s
[info]                  ·gc.alloc.rate:                   562.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.418 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204.649 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5027310.935 ops/s
[info]                  ·gc.alloc.rate:                   562.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.333 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 102.492 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5035852.626 ops/s
[info]                  ·gc.alloc.rate:                   563.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.101 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5034506.053 ops/s
[info]                  ·gc.alloc.rate:                   562.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.404 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 205.532 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   5042510.441 ±(99.9%) 84792.473 ops/s [Average]
[info]   (min, avg, max) = (5027310.935, 5042510.441, 5081465.224), stdev = 22020.336
[info]   CI (99.9%): [4957717.968, 5127302.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   563.808 ±(99.9%) 9.337 MB/sec [Average]
[info]   (min, avg, max) = (562.097, 563.808, 568.091), stdev = 2.425
[info]   CI (99.9%): [554.472, 573.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.016 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.026), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   589.849 ±(99.9%) 565.110 MB/sec [Average]
[info]   (min, avg, max) = (327.333, 589.849, 657.404), stdev = 146.757
[info]   CI (99.9%): [24.739, 1154.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   184.071 ±(99.9%) 175.656 B/op [Average]
[info]   (min, avg, max) = (102.492, 184.071, 205.532), stdev = 45.617
[info]   CI (99.9%): [8.415, 359.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 76.47% complete, ETA 00:07:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 61092.040 ops/s
[info] # Warmup Iteration   2: 359409.586 ops/s
[info] # Warmup Iteration   3: 359545.815 ops/s
[info] # Warmup Iteration   4: 360343.245 ops/s
[info] # Warmup Iteration   5: 364211.901 ops/s
[info] Iteration   1: 358613.273 ops/s
[info]                  ·gc.alloc.rate:                   1230.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.381 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4369.140 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 358626.807 ops/s
[info]                  ·gc.alloc.rate:                   1230.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1333.634 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5853.631 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 364344.078 ops/s
[info]                  ·gc.alloc.rate:                   1249.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.910 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5793.738 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 363948.782 ops/s
[info]                  ·gc.alloc.rate:                   1248.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1009.423 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4365.658 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 358625.520 ops/s
[info]                  ·gc.alloc.rate:                   1230.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              5400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1349.453 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5922.771 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   360831.692 ±(99.9%) 11664.209 ops/s [Average]
[info]   (min, avg, max) = (358613.273, 360831.692, 364344.078), stdev = 3029.158
[info]   CI (99.9%): [349167.483, 372495.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1237.845 ±(99.9%) 39.887 MB/sec [Average]
[info]   (min, avg, max) = (1230.233, 1237.845, 1249.783), stdev = 10.359
[info]   CI (99.9%): [1197.958, 1277.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5400.001, 5400.001, 5400.001), stdev = 0.001
[info]   CI (99.9%): [5400.001, 5400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.218 ±(99.9%) 0.725 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.218, 0.457), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1205.760 ±(99.9%) 715.413 MB/sec [Average]
[info]   (min, avg, max) = (995.381, 1205.760, 1349.453), stdev = 185.790
[info]   CI (99.9%): [490.348, 1921.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5260.988 ±(99.9%) 3146.010 B/op [Average]
[info]   (min, avg, max) = (4365.658, 5260.988, 5922.771), stdev = 817.009
[info]   CI (99.9%): [2114.977, 8406.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.342
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 77.31% complete, ETA 00:07:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123295.579 ops/s
[info] # Warmup Iteration   2: 340183.262 ops/s
[info] # Warmup Iteration   3: 350815.311 ops/s
[info] # Warmup Iteration   4: 353522.331 ops/s
[info] # Warmup Iteration   5: 358703.354 ops/s
[info] Iteration   1: 359490.787 ops/s
[info]                  ·gc.alloc.rate:                   960.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      651.970 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2855.121 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 360077.224 ops/s
[info]                  ·gc.alloc.rate:                   962.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.364 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.796 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4297.383 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 359569.278 ops/s
[info]                  ·gc.alloc.rate:                   961.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      986.978 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4321.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 358139.603 ops/s
[info]                  ·gc.alloc.rate:                   957.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.272 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4366.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 353101.405 ops/s
[info]                  ·gc.alloc.rate:                   943.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      997.961 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4449.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   358075.659 ±(99.9%) 11057.961 ops/s [Average]
[info]   (min, avg, max) = (353101.405, 358075.659, 360077.224), stdev = 2871.717
[info]   CI (99.9%): [347017.699, 369133.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   957.117 ±(99.9%) 29.382 MB/sec [Average]
[info]   (min, avg, max) = (943.890, 957.117, 962.355), stdev = 7.630
[info]   CI (99.9%): [927.735, 986.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4208.001, 4208.001, 4208.001), stdev = 0.001
[info]   CI (99.9%): [4208.001, 4208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.146 ±(99.9%) 0.586 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.364), stdev = 0.152
[info]   CI (99.9%): [≈ 0, 0.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   922.595 ±(99.9%) 582.970 MB/sec [Average]
[info]   (min, avg, max) = (651.970, 922.595, 997.961), stdev = 151.395
[info]   CI (99.9%): [339.626, 1505.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4057.763 ±(99.9%) 2598.345 B/op [Average]
[info]   (min, avg, max) = (2855.121, 4057.763, 4449.057), stdev = 674.782
[info]   CI (99.9%): [1459.418, 6656.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 4.000), stdev = 0.894
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 78.15% complete, ETA 00:06:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 82014.646 ops/s
[info] # Warmup Iteration   2: 762289.592 ops/s
[info] # Warmup Iteration   3: 780791.209 ops/s
[info] # Warmup Iteration   4: 783011.745 ops/s
[info] # Warmup Iteration   5: 785507.118 ops/s
[info] Iteration   1: 788004.569 ops/s
[info]                  ·gc.alloc.rate:                   1201.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.589 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1978.875 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 778467.005 ops/s
[info]                  ·gc.alloc.rate:                   1187.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1330.994 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2690.818 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 793665.348 ops/s
[info]                  ·gc.alloc.rate:                   1210.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.165 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.185 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1989.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 794134.126 ops/s
[info]                  ·gc.alloc.rate:                   1211.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.960 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1997.476 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 783611.674 ops/s
[info]                  ·gc.alloc.rate:                   1194.730 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1348.009 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2707.912 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   787576.544 ±(99.9%) 25756.354 ops/s [Average]
[info]   (min, avg, max) = (778467.005, 787576.544, 794134.126), stdev = 6688.843
[info]   CI (99.9%): [761820.190, 813332.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1200.920 ±(99.9%) 39.393 MB/sec [Average]
[info]   (min, avg, max) = (1187.143, 1200.920, 1211.081), stdev = 10.230
[info]   CI (99.9%): [1161.527, 1240.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.000, 2400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.108 ±(99.9%) 0.142 B/op [Average]
[info]   (min, avg, max) = (0.083, 0.108, 0.165), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1136.147 ±(99.9%) 715.610 MB/sec [Average]
[info]   (min, avg, max) = (990.589, 1136.147, 1348.009), stdev = 185.842
[info]   CI (99.9%): [420.537, 1851.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2272.892 ±(99.9%) 1499.508 B/op [Average]
[info]   (min, avg, max) = (1978.875, 2272.892, 2707.912), stdev = 389.418
[info]   CI (99.9%): [773.384, 3772.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 78.99% complete, ETA 00:06:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1982604.495 ops/s
[info] # Warmup Iteration   2: 2295582.378 ops/s
[info] # Warmup Iteration   3: 2307233.225 ops/s
[info] # Warmup Iteration   4: 2281225.747 ops/s
[info] # Warmup Iteration   5: 2308298.533 ops/s
[info] Iteration   1: 2333184.501 ops/s
[info]                  ·gc.alloc.rate:                   391.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.341 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 221.527 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2315040.831 ops/s
[info]                  ·gc.alloc.rate:                   388.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.064 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.351 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2319587.691 ops/s
[info]                  ·gc.alloc.rate:                   389.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.084 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 221.925 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2315644.702 ops/s
[info]                  ·gc.alloc.rate:                   388.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.067 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 222.300 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2300181.146 ops/s
[info]                  ·gc.alloc.rate:                   385.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.071 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 447.587 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2316727.774 ±(99.9%) 45431.589 ops/s [Average]
[info]   (min, avg, max) = (2300181.146, 2316727.774, 2333184.501), stdev = 11798.439
[info]   CI (99.9%): [2271296.186, 2362159.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   388.586 ±(99.9%) 7.580 MB/sec [Average]
[info]   (min, avg, max) = (385.791, 388.586, 391.294), stdev = 1.969
[info]   CI (99.9%): [381.006, 396.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.020 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.043), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.726 ±(99.9%) 562.571 MB/sec [Average]
[info]   (min, avg, max) = (327.064, 392.726, 654.071), stdev = 146.098
[info]   CI (99.9%): [≈ 0, 955.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   267.138 ±(99.9%) 388.432 B/op [Average]
[info]   (min, avg, max) = (221.527, 267.138, 447.587), stdev = 100.875
[info]   CI (99.9%): [≈ 0, 655.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 79.83% complete, ETA 00:06:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 23435.721 ops/s
[info] # Warmup Iteration   2: 255318.989 ops/s
[info] # Warmup Iteration   3: 259971.839 ops/s
[info] # Warmup Iteration   4: 263506.651 ops/s
[info] # Warmup Iteration   5: 265004.743 ops/s
[info] Iteration   1: 265083.060 ops/s
[info]                  ·gc.alloc.rate:                   955.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.988 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3907.447 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 262900.976 ops/s
[info]                  ·gc.alloc.rate:                   947.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      991.733 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5935.863 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 266606.964 ops/s
[info]                  ·gc.alloc.rate:                   960.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.918 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5885.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 265847.902 ops/s
[info]                  ·gc.alloc.rate:                   958.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5927.277 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 264752.987 ops/s
[info]                  ·gc.alloc.rate:                   954.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              5672.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.310 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5975.570 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   265038.378 ±(99.9%) 5365.995 ops/s [Average]
[info]   (min, avg, max) = (262900.976, 265038.378, 266606.964), stdev = 1393.532
[info]   CI (99.9%): [259672.382, 270404.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   955.196 ±(99.9%) 19.088 MB/sec [Average]
[info]   (min, avg, max) = (947.648, 955.196, 960.832), stdev = 4.957
[info]   CI (99.9%): [936.108, 974.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5672.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5672.002, 5672.002, 5672.002), stdev = 0.001
[info]   CI (99.9%): [5672.001, 5672.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.322 ±(99.9%) 0.932 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.322, 0.623), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   930.641 ±(99.9%) 587.227 MB/sec [Average]
[info]   (min, avg, max) = (657.988, 930.641, 1005.310), stdev = 152.501
[info]   CI (99.9%): [343.414, 1517.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5526.236 ±(99.9%) 3486.766 B/op [Average]
[info]   (min, avg, max) = (3907.447, 5526.236, 5975.570), stdev = 905.502
[info]   CI (99.9%): [2039.470, 9013.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce
[info] # Run progress: 80.67% complete, ETA 00:06:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 324218.409 ops/s
[info] # Warmup Iteration   2: 563608.326 ops/s
[info] # Warmup Iteration   3: 581017.618 ops/s
[info] # Warmup Iteration   4: 583676.087 ops/s
[info] # Warmup Iteration   5: 581968.159 ops/s
[info] Iteration   1: 588616.336 ops/s
[info]                  ·gc.alloc.rate:                   1292.401 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1318.843 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3526.709 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 579671.734 ops/s
[info]                  ·gc.alloc.rate:                   1272.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3605.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 584679.992 ops/s
[info]                  ·gc.alloc.rate:                   1283.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.954 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2694.881 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 578634.086 ops/s
[info]                  ·gc.alloc.rate:                   1270.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1340.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3647.350 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 577250.879 ops/s
[info]                  ·gc.alloc.rate:                   1267.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.665 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3672.325 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce":
[info]   581770.606 ±(99.9%) 18265.157 ops/s [Average]
[info]   (min, avg, max) = (577250.879, 581770.606, 588616.336), stdev = 4743.403
[info]   CI (99.9%): [563505.448, 600035.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate":
[info]   1277.289 ±(99.9%) 40.271 MB/sec [Average]
[info]   (min, avg, max) = (1267.337, 1277.289, 1292.401), stdev = 10.458
[info]   CI (99.9%): [1237.018, 1317.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm":
[info]   3456.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3456.001, 3456.001, 3456.001), stdev = 0.001
[info]   CI (99.9%): [3456.001, 3456.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   0.071 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.167), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.192 ±(99.9%) 0.568 B/op [Average]
[info]   (min, avg, max) = (0.112, 0.192, 0.452), stdev = 0.148
[info]   CI (99.9%): [≈ 0, 0.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   1266.967 ±(99.9%) 574.138 MB/sec [Average]
[info]   (min, avg, max) = (1000.954, 1266.967, 1346.665), stdev = 149.102
[info]   CI (99.9%): [692.830, 1841.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   3429.317 ±(99.9%) 1595.173 B/op [Average]
[info]   (min, avg, max) = (2694.881, 3429.317, 3672.325), stdev = 414.261
[info]   CI (99.9%): [1834.144, 5024.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson
[info] # Run progress: 81.51% complete, ETA 00:05:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 359370.999 ops/s
[info] # Warmup Iteration   2: 1229272.970 ops/s
[info] # Warmup Iteration   3: 1242921.951 ops/s
[info] # Warmup Iteration   4: 1259600.532 ops/s
[info] # Warmup Iteration   5: 1269246.111 ops/s
[info] Iteration   1: 1264102.377 ops/s
[info]                  ·gc.alloc.rate:                   726.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.099 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 811.953 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1254238.201 ops/s
[info]                  ·gc.alloc.rate:                   720.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      982.757 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1233.317 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1248790.416 ops/s
[info]                  ·gc.alloc.rate:                   717.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 830.295 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1262020.091 ops/s
[info]                  ·gc.alloc.rate:                   724.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.377 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 824.892 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1259161.940 ops/s
[info]                  ·gc.alloc.rate:                   723.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              904.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 830.101 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson":
[info]   1257662.605 ±(99.9%) 23826.483 ops/s [Average]
[info]   (min, avg, max) = (1248790.416, 1257662.605, 1264102.377), stdev = 6187.662
[info]   CI (99.9%): [1233836.122, 1281489.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate":
[info]   722.326 ±(99.9%) 13.681 MB/sec [Average]
[info]   (min, avg, max) = (717.233, 722.326, 726.024), stdev = 3.553
[info]   CI (99.9%): [708.645, 736.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm":
[info]   904.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (904.000, 904.000, 904.000), stdev = 0.001
[info]   CI (99.9%): [904.000, 904.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.068 ±(99.9%) 0.115 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.068, 0.104), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   723.818 ±(99.9%) 557.648 MB/sec [Average]
[info]   (min, avg, max) = (652.099, 723.818, 982.757), stdev = 144.819
[info]   CI (99.9%): [166.171, 1281.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   906.111 ±(99.9%) 704.919 B/op [Average]
[info]   (min, avg, max) = (811.953, 906.111, 1233.317), stdev = 183.065
[info]   CI (99.9%): [201.192, 1611.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 5.000), stdev = 0.894
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter
[info] # Run progress: 82.35% complete, ETA 00:05:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3181070.483 ops/s
[info] # Warmup Iteration   2: 3585517.675 ops/s
[info] # Warmup Iteration   3: 3621330.521 ops/s
[info] # Warmup Iteration   4: 3606348.008 ops/s
[info] # Warmup Iteration   5: 3613485.332 ops/s
[info] Iteration   1: 3627126.518 ops/s
[info]                  ·gc.alloc.rate:                   276.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.706 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 110.994 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3623960.799 ops/s
[info]                  ·gc.alloc.rate:                   276.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.385 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.625 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3615482.044 ops/s
[info]                  ·gc.alloc.rate:                   275.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.960 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3639313.788 ops/s
[info]                  ·gc.alloc.rate:      277.413 MB/sec
[info]                  ·gc.alloc.rate.norm: 120.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3613263.910 ops/s
[info]                  ·gc.alloc.rate:                   275.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              120.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.012 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 142.469 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter":
[info]   3623829.412 ±(99.9%) 40015.327 ops/s [Average]
[info]   (min, avg, max) = (3613263.910, 3623829.412, 3639313.788), stdev = 10391.853
[info]   CI (99.9%): [3583814.085, 3663844.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate":
[info]   276.248 ±(99.9%) 3.000 MB/sec [Average]
[info]   (min, avg, max) = (275.438, 276.248, 277.413), stdev = 0.779
[info]   CI (99.9%): [273.248, 279.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm":
[info]   120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (120.000, 120.000, 120.000), stdev = 0.001
[info]   CI (99.9%): [120.000, 120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.633 ±(99.9%) 5.302 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.633, 3.095), stdev = 1.377
[info]   CI (99.9%): [≈ 0, 5.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.275 ±(99.9%) 2.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.275, 1.344), stdev = 0.598
[info]   CI (99.9%): [≈ 0, 2.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   247.896 ±(99.9%) 547.038 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.896, 328.385), stdev = 142.064
[info]   CI (99.9%): [≈ 0, 794.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   107.810 ±(99.9%) 238.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 107.810, 142.960), stdev = 61.810
[info]   CI (99.9%): [≈ 0, 345.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay
[info] # Run progress: 83.19% complete, ETA 00:05:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67847.880 ops/s
[info] # Warmup Iteration   2: 366282.399 ops/s
[info] # Warmup Iteration   3: 372876.507 ops/s
[info] # Warmup Iteration   4: 367512.294 ops/s
[info] # Warmup Iteration   5: 368756.579 ops/s
[info] Iteration   1: 372803.097 ops/s
[info]                  ·gc.alloc.rate:                   1263.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1327.962 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5607.674 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 372719.559 ops/s
[info]                  ·gc.alloc.rate:                   1263.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.379 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4229.116 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 372603.634 ops/s
[info]                  ·gc.alloc.rate:                   1263.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1341.360 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5666.899 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 367608.757 ops/s
[info]                  ·gc.alloc.rate:                   1246.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1346.466 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5765.340 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 369483.429 ops/s
[info]                  ·gc.alloc.rate:                   1252.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              5336.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1350.819 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5754.531 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay":
[info]   371043.695 ±(99.9%) 9146.931 ops/s [Average]
[info]   (min, avg, max) = (367608.757, 371043.695, 372803.097), stdev = 2375.429
[info]   CI (99.9%): [361896.764, 380190.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate":
[info]   1257.780 ±(99.9%) 30.775 MB/sec [Average]
[info]   (min, avg, max) = (1246.196, 1257.780, 1263.627), stdev = 7.992
[info]   CI (99.9%): [1227.006, 1288.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm":
[info]   5336.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5336.001, 5336.001, 5336.001), stdev = 0.001
[info]   CI (99.9%): [5336.001, 5336.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.104 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.247 ±(99.9%) 0.441 B/op [Average]
[info]   (min, avg, max) = (0.089, 0.247, 0.352), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   1273.597 ±(99.9%) 586.902 MB/sec [Average]
[info]   (min, avg, max) = (1001.379, 1273.597, 1350.819), stdev = 152.417
[info]   CI (99.9%): [686.695, 1860.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5404.712 ±(99.9%) 2542.874 B/op [Average]
[info]   (min, avg, max) = (4229.116, 5404.712, 5765.340), stdev = 660.376
[info]   CI (99.9%): [2861.838, 7947.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 84.03% complete, ETA 00:05:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108780.586 ops/s
[info] # Warmup Iteration   2: 331759.161 ops/s
[info] # Warmup Iteration   3: 325616.608 ops/s
[info] # Warmup Iteration   4: 335032.092 ops/s
[info] # Warmup Iteration   5: 335262.188 ops/s
[info] Iteration   1: 332509.867 ops/s
[info]                  ·gc.alloc.rate:                   860.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              4072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      976.610 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4623.757 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 332544.695 ops/s
[info]                  ·gc.alloc.rate:                   860.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              4072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      980.747 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4642.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 334896.109 ops/s
[info]                  ·gc.alloc.rate:                   866.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              4072.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.710 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3086.708 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 331466.540 ops/s
[info]                  ·gc.alloc.rate:                   857.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              4072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.395 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.417 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4698.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 333520.660 ops/s
[info]                  ·gc.alloc.rate:                   862.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              4072.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.643 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4694.840 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   332987.574 ±(99.9%) 4970.380 ops/s [Average]
[info]   (min, avg, max) = (331466.540, 332987.574, 334896.109), stdev = 1290.792
[info]   CI (99.9%): [328017.194, 337957.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   861.375 ±(99.9%) 12.794 MB/sec [Average]
[info]   (min, avg, max) = (857.517, 861.375, 866.336), stdev = 3.323
[info]   CI (99.9%): [848.581, 874.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4072.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4072.001, 4072.001, 4072.001), stdev = 0.001
[info]   CI (99.9%): [4072.001, 4072.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.237 ±(99.9%) 0.636 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 0.395), stdev = 0.165
[info]   CI (99.9%): [≈ 0, 0.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   919.625 ±(99.9%) 566.601 MB/sec [Average]
[info]   (min, avg, max) = (656.710, 919.625, 994.643), stdev = 147.144
[info]   CI (99.9%): [353.025, 1486.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   4349.189 ±(99.9%) 2720.460 B/op [Average]
[info]   (min, avg, max) = (3086.708, 4349.189, 4698.341), stdev = 706.495
[info]   CI (99.9%): [1628.729, 7069.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 5.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 84.87% complete, ETA 00:04:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 49099.527 ops/s
[info] # Warmup Iteration   2: 650884.485 ops/s
[info] # Warmup Iteration   3: 742951.404 ops/s
[info] # Warmup Iteration   4: 751939.931 ops/s
[info] # Warmup Iteration   5: 753219.356 ops/s
[info] Iteration   1: 753602.867 ops/s
[info]                  ·gc.alloc.rate:                   1122.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1317.272 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2751.806 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 753123.289 ops/s
[info]                  ·gc.alloc.rate:                   1121.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      994.601 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2078.901 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 754029.979 ops/s
[info]                  ·gc.alloc.rate:                   1122.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1000.065 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2087.692 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 754936.359 ops/s
[info]                  ·gc.alloc.rate:                   1124.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1339.789 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2793.386 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 741023.126 ops/s
[info]                  ·gc.alloc.rate:                   1103.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              2344.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.332 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2141.995 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   751343.124 ±(99.9%) 22362.622 ops/s [Average]
[info]   (min, avg, max) = (741023.126, 751343.124, 754936.359), stdev = 5807.502
[info]   CI (99.9%): [728980.502, 773705.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1118.802 ±(99.9%) 33.347 MB/sec [Average]
[info]   (min, avg, max) = (1103.425, 1118.802, 1124.251), stdev = 8.660
[info]   CI (99.9%): [1085.455, 1152.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2344.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2344.001, 2344.001, 2344.001), stdev = 0.001
[info]   CI (99.9%): [2344.000, 2344.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.113 ±(99.9%) 0.255 B/op [Average]
[info]   (min, avg, max) = (0.043, 0.113, 0.174), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   1132.012 ±(99.9%) 691.727 MB/sec [Average]
[info]   (min, avg, max) = (994.601, 1132.012, 1339.789), stdev = 179.639
[info]   CI (99.9%): [440.285, 1823.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   2370.756 ±(99.9%) 1416.718 B/op [Average]
[info]   (min, avg, max) = (2078.901, 2370.756, 2793.386), stdev = 367.917
[info]   CI (99.9%): [954.038, 3787.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 8.000), stdev = 1.673
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 85.71% complete, ETA 00:04:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1820996.578 ops/s
[info] # Warmup Iteration   2: 2049287.318 ops/s
[info] # Warmup Iteration   3: 2092738.406 ops/s
[info] # Warmup Iteration   4: 2082777.817 ops/s
[info] # Warmup Iteration   5: 2099475.735 ops/s
[info] Iteration   1: 2109279.455 ops/s
[info]                  ·gc.alloc.rate:                   396.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.968 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 244.793 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2112674.321 ops/s
[info]                  ·gc.alloc.rate:                   397.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.032 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243.655 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2134214.666 ops/s
[info]                  ·gc.alloc.rate:                   401.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 241.198 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2113485.935 ops/s
[info]                  ·gc.alloc.rate:                   397.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.171 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 487.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2112917.495 ops/s
[info]                  ·gc.alloc.rate:                   397.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              296.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.121 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 243.628 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2116514.374 ±(99.9%) 38626.554 ops/s [Average]
[info]   (min, avg, max) = (2109279.455, 2116514.374, 2134214.666), stdev = 10031.193
[info]   CI (99.9%): [2077887.821, 2155140.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   398.037 ±(99.9%) 7.287 MB/sec [Average]
[info]   (min, avg, max) = (396.574, 398.037, 401.355), stdev = 1.893
[info]   CI (99.9%): [390.750, 405.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   296.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (296.000, 296.000, 296.000), stdev = 0.001
[info]   CI (99.9%): [296.000, 296.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.016 ±(99.9%) 0.084 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.047), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.668 ±(99.9%) 562.907 MB/sec [Average]
[info]   (min, avg, max) = (327.032, 392.668, 654.171), stdev = 146.185
[info]   CI (99.9%): [≈ 0, 955.575] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   292.075 ±(99.9%) 419.835 B/op [Average]
[info]   (min, avg, max) = (241.198, 292.075, 487.099), stdev = 109.030
[info]   CI (99.9%): [≈ 0, 711.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 86.55% complete, ETA 00:04:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 24268.153 ops/s
[info] # Warmup Iteration   2: 243872.506 ops/s
[info] # Warmup Iteration   3: 249730.164 ops/s
[info] # Warmup Iteration   4: 248387.517 ops/s
[info] # Warmup Iteration   5: 254818.494 ops/s
[info] Iteration   1: 252967.934 ops/s
[info]                  ·gc.alloc.rate:                   970.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.174 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6148.298 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 250832.397 ops/s
[info]                  ·gc.alloc.rate:                   962.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.011 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6229.831 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 252703.957 ops/s
[info]                  ·gc.alloc.rate:                   969.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6221.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 250123.346 ops/s
[info]                  ·gc.alloc.rate:                   959.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      667.716 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 4202.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 253461.480 ops/s
[info]                  ·gc.alloc.rate:                   972.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              6040.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.091 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6241.795 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   252017.823 ±(99.9%) 5597.328 ops/s [Average]
[info]   (min, avg, max) = (250123.346, 252017.823, 253461.480), stdev = 1453.608
[info]   CI (99.9%): [246420.494, 257615.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   967.132 ±(99.9%) 21.374 MB/sec [Average]
[info]   (min, avg, max) = (959.779, 967.132, 972.597), stdev = 5.551
[info]   CI (99.9%): [945.757, 988.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6040.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6040.002, 6040.002, 6040.002), stdev = 0.001
[info]   CI (99.9%): [6040.001, 6040.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.364 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (0.259, 0.364, 0.648), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 1.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   930.564 ±(99.9%) 566.326 MB/sec [Average]
[info]   (min, avg, max) = (667.716, 930.564, 1005.091), stdev = 147.073
[info]   CI (99.9%): [364.238, 1496.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   5808.598 ±(99.9%) 3461.146 B/op [Average]
[info]   (min, avg, max) = (4202.016, 5808.598, 6241.795), stdev = 898.849
[info]   CI (99.9%): [2347.453, 9269.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce
[info] # Run progress: 87.39% complete, ETA 00:03:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 985928.658 ops/s
[info] # Warmup Iteration   2: 1213206.768 ops/s
[info] # Warmup Iteration   3: 1250502.868 ops/s
[info] # Warmup Iteration   4: 1248243.282 ops/s
[info] # Warmup Iteration   5: 1254616.033 ops/s
[info] Iteration   1: 1245919.372 ops/s
[info]                  ·gc.alloc.rate:                   861.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      652.684 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 824.645 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1231085.007 ops/s
[info]                  ·gc.alloc.rate:                   850.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      983.446 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1257.372 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1253993.076 ops/s
[info]                  ·gc.alloc.rate:                   866.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      988.840 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1241.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1255914.117 ops/s
[info]                  ·gc.alloc.rate:                   867.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.052 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      661.301 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 828.914 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1252058.586 ops/s
[info]                  ·gc.alloc.rate:                   865.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              1088.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.078 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.755 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1253.467 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce":
[info]   1247794.031 ±(99.9%) 38758.612 ops/s [Average]
[info]   (min, avg, max) = (1231085.007, 1247794.031, 1255914.117), stdev = 10065.488
[info]   CI (99.9%): [1209035.420, 1286552.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate":
[info]   862.423 ±(99.9%) 26.611 MB/sec [Average]
[info]   (min, avg, max) = (850.973, 862.423, 867.998), stdev = 6.911
[info]   CI (99.9%): [835.813, 889.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm":
[info]   1088.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1088.000, 1088.000, 1088.000), stdev = 0.001
[info]   CI (99.9%): [1088.000, 1088.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.068 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.068, 0.106), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space":
[info]   856.605 ±(99.9%) 702.001 MB/sec [Average]
[info]   (min, avg, max) = (652.684, 856.605, 996.755), stdev = 182.307
[info]   CI (99.9%): [154.605, 1558.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   1081.103 ±(99.9%) 894.301 B/op [Average]
[info]   (min, avg, max) = (824.645, 1081.103, 1257.372), stdev = 232.247
[info]   CI (99.9%): [186.802, 1975.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.095
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson
[info] # Run progress: 88.24% complete, ETA 00:03:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 563857.626 ops/s
[info] # Warmup Iteration   2: 819325.100 ops/s
[info] # Warmup Iteration   3: 817607.483 ops/s
[info] # Warmup Iteration   4: 822225.982 ops/s
[info] # Warmup Iteration   5: 821554.746 ops/s
[info] Iteration   1: 786101.171 ops/s
[info]                  ·gc.alloc.rate:                   323.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      323.729 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 648.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 767779.907 ops/s
[info]                  ·gc.alloc.rate:                   316.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.785 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 667.727 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 767289.390 ops/s
[info]                  ·gc.alloc.rate:                   315.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.745 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 668.163 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 762276.216 ops/s
[info]                  ·gc.alloc.rate:      313.821 MB/sec
[info]                  ·gc.alloc.rate.norm: 648.001 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 764409.043 ops/s
[info]                  ·gc.alloc.rate:                   314.659 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.334 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 674.104 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson":
[info]   769571.145 ±(99.9%) 36607.454 ops/s [Average]
[info]   (min, avg, max) = (762276.216, 769571.145, 786101.171), stdev = 9506.840
[info]   CI (99.9%): [732963.691, 806178.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate":
[info]   316.843 ±(99.9%) 15.119 MB/sec [Average]
[info]   (min, avg, max) = (313.821, 316.843, 323.658), stdev = 3.926
[info]   CI (99.9%): [301.724, 331.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm":
[info]   648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.001, 648.001, 648.001), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.043 ±(99.9%) 0.286 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.043, 0.171), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space":
[info]   260.519 ±(99.9%) 560.808 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 260.519, 327.334), stdev = 145.640
[info]   CI (99.9%): [≈ 0, 821.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   531.628 ±(99.9%) 1144.990 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 531.628, 674.104), stdev = 297.350
[info]   CI (99.9%): [≈ 0, 1676.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter
[info] # Run progress: 89.08% complete, ETA 00:03:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2105615.219 ops/s
[info] # Warmup Iteration   2: 2263210.220 ops/s
[info] # Warmup Iteration   3: 2267918.655 ops/s
[info] # Warmup Iteration   4: 2277162.302 ops/s
[info] # Warmup Iteration   5: 2288032.349 ops/s
[info] Iteration   1: 2273928.788 ops/s
[info]                  ·gc.alloc.rate:                   450.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.008 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 226.356 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2281458.219 ops/s
[info]                  ·gc.alloc.rate:                   452.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.235 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 451.261 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 2294252.780 ops/s
[info]                  ·gc.alloc.rate:                   454.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.038 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 224.372 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2284205.988 ops/s
[info]                  ·gc.alloc.rate:                   452.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 225.582 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2287355.976 ops/s
[info]                  ·gc.alloc.rate:                   453.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      655.300 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 450.970 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter":
[info]   2284240.350 ±(99.9%) 28817.229 ops/s [Average]
[info]   (min, avg, max) = (2273928.788, 2284240.350, 2294252.780), stdev = 7483.743
[info]   CI (99.9%): [2255423.122, 2313057.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate":
[info]   452.784 ±(99.9%) 5.663 MB/sec [Average]
[info]   (min, avg, max) = (450.736, 452.784, 454.763), stdev = 1.471
[info]   CI (99.9%): [447.122, 458.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.029 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.072), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space":
[info]   458.182 ±(99.9%) 691.029 MB/sec [Average]
[info]   (min, avg, max) = (327.008, 458.182, 655.300), stdev = 179.458
[info]   CI (99.9%): [≈ 0, 1149.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   315.708 ±(99.9%) 475.984 B/op [Average]
[info]   (min, avg, max) = (224.372, 315.708, 451.261), stdev = 123.611
[info]   CI (99.9%): [≈ 0, 791.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 7.000), stdev = 2.608
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc
[info] # Run progress: 89.92% complete, ETA 00:03:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2299855.855 ops/s
[info] # Warmup Iteration   2: 2360838.810 ops/s
[info] # Warmup Iteration   3: 2409622.855 ops/s
[info] # Warmup Iteration   4: 2415401.462 ops/s
[info] # Warmup Iteration   5: 2402493.669 ops/s
[info] Iteration   1: 2407804.277 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2416053.399 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 2417557.117 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 2408555.857 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 2410233.370 ops/s
[info]                  ·gc.alloc.rate:      ≈ 10⁻⁴ MB/sec
[info]                  ·gc.alloc.rate.norm: ≈ 10⁻⁴ B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc":
[info]   2412040.804 ±(99.9%) 17208.809 ops/s [Average]
[info]   (min, avg, max) = (2407804.277, 2412040.804, 2417557.117), stdev = 4469.073
[info]   CI (99.9%): [2394831.995, 2429249.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate":
[info]   ≈ 10⁻⁴ MB/sec
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   ≈ 10⁻⁴ B/op
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay
[info] # Run progress: 90.76% complete, ETA 00:02:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1275369.548 ops/s
[info] # Warmup Iteration   2: 1928994.916 ops/s
[info] # Warmup Iteration   3: 1929637.753 ops/s
[info] # Warmup Iteration   4: 1963373.998 ops/s
[info] # Warmup Iteration   5: 1958703.884 ops/s
[info] Iteration   1: 1928314.039 ops/s
[info]                  ·gc.alloc.rate:                   813.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      990.724 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 808.710 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1916932.478 ops/s
[info]                  ·gc.alloc.rate:                   808.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      664.075 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 545.281 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1931292.756 ops/s
[info]                  ·gc.alloc.rate:                   814.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.311 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 814.525 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1913039.486 ops/s
[info]                  ·gc.alloc.rate:                   806.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      668.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 550.210 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1932820.613 ops/s
[info]                  ·gc.alloc.rate:                   815.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              664.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1006.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 819.327 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay":
[info]   1924479.874 ±(99.9%) 34361.996 ops/s [Average]
[info]   (min, avg, max) = (1913039.486, 1924479.874, 1932820.613), stdev = 8923.701
[info]   CI (99.9%): [1890117.879, 1958841.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate":
[info]   811.786 ±(99.9%) 14.529 MB/sec [Average]
[info]   (min, avg, max) = (806.893, 811.786, 815.299), stdev = 3.773
[info]   CI (99.9%): [797.258, 826.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm":
[info]   664.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (664.000, 664.000, 664.000), stdev = 0.001
[info]   CI (99.9%): [664.000, 664.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.034 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.034, 0.051), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space":
[info]   865.749 ±(99.9%) 701.269 MB/sec [Average]
[info]   (min, avg, max) = (664.075, 865.749, 1006.018), stdev = 182.117
[info]   CI (99.9%): [164.480, 1567.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   707.611 ±(99.9%) 562.174 B/op [Average]
[info]   (min, avg, max) = (545.281, 707.611, 819.327), stdev = 145.995
[info]   CI (99.9%): [145.436, 1269.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.342
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.60% complete, ETA 00:02:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 353237.422 ops/s
[info] # Warmup Iteration   2: 618563.398 ops/s
[info] # Warmup Iteration   3: 648856.774 ops/s
[info] # Warmup Iteration   4: 651221.358 ops/s
[info] # Warmup Iteration   5: 652982.011 ops/s
[info] Iteration   1: 648756.509 ops/s
[info]                  ·gc.alloc.rate:                   1028.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      980.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2379.572 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 648404.638 ops/s
[info]                  ·gc.alloc.rate:                   1028.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1316.192 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3194.773 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 644410.400 ops/s
[info]                  ·gc.alloc.rate:                   1021.913 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      993.488 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2426.574 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 641911.289 ops/s
[info]                  ·gc.alloc.rate:                   1017.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      998.145 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2447.479 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 648158.609 ops/s
[info]                  ·gc.alloc.rate:                   1027.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1002.625 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2435.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   646328.289 ±(99.9%) 11670.966 ops/s [Average]
[info]   (min, avg, max) = (641911.289, 646328.289, 648756.509), stdev = 3030.913
[info]   CI (99.9%): [634657.323, 657999.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1024.894 ±(99.9%) 18.337 MB/sec [Average]
[info]   (min, avg, max) = (1017.933, 1024.894, 1028.605), stdev = 4.762
[info]   CI (99.9%): [1006.557, 1043.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   2496.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2496.001, 2496.001, 2496.001), stdev = 0.001
[info]   CI (99.9%): [2496.001, 2496.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   0.142 ±(99.9%) 0.253 B/op [Average]
[info]   (min, avg, max) = (0.101, 0.142, 0.253), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   1058.215 ±(99.9%) 556.217 MB/sec [Average]
[info]   (min, avg, max) = (980.625, 1058.215, 1316.192), stdev = 144.448
[info]   CI (99.9%): [501.998, 1614.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   2576.694 ±(99.9%) 1334.136 B/op [Average]
[info]   (min, avg, max) = (2379.572, 2576.694, 3194.773), stdev = 346.471
[info]   CI (99.9%): [1242.558, 3910.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 6.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.44% complete, ETA 00:02:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 728520.327 ops/s
[info] # Warmup Iteration   2: 1769133.021 ops/s
[info] # Warmup Iteration   3: 1769267.699 ops/s
[info] # Warmup Iteration   4: 1791170.581 ops/s
[info] # Warmup Iteration   5: 1756605.094 ops/s
[info] Iteration   1: 1777173.645 ops/s
[info]                  ·gc.alloc.rate:                   731.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.752 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 579.897 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1770010.436 ops/s
[info]                  ·gc.alloc.rate:                   728.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      657.350 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 584.577 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1770844.076 ops/s
[info]                  ·gc.alloc.rate:                   729.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      660.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 586.706 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1793061.829 ops/s
[info]                  ·gc.alloc.rate:                   738.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.387 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 873.857 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1769507.043 ops/s
[info]                  ·gc.alloc.rate:                   728.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              648.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      666.058 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 592.472 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1776119.406 ±(99.9%) 38363.174 ops/s [Average]
[info]   (min, avg, max) = (1769507.043, 1776119.406, 1793061.829), stdev = 9962.794
[info]   CI (99.9%): [1737756.232, 1814482.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   731.184 ±(99.9%) 15.723 MB/sec [Average]
[info]   (min, avg, max) = (728.483, 731.184, 738.120), stdev = 4.083
[info]   CI (99.9%): [715.461, 746.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   648.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (648.000, 648.000, 648.000), stdev = 0.001
[info]   CI (99.9%): [648.000, 648.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   0.041 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.041, 0.056), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   726.719 ±(99.9%) 578.554 MB/sec [Average]
[info]   (min, avg, max) = (654.752, 726.719, 995.387), stdev = 150.249
[info]   CI (99.9%): [148.165, 1305.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   643.502 ±(99.9%) 496.161 B/op [Average]
[info]   (min, avg, max) = (579.897, 643.502, 873.857), stdev = 128.852
[info]   CI (99.9%): [147.340, 1139.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.28% complete, ETA 00:02:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3717268.048 ops/s
[info] # Warmup Iteration   2: 4287662.718 ops/s
[info] # Warmup Iteration   3: 4310907.692 ops/s
[info] # Warmup Iteration   4: 4336472.424 ops/s
[info] # Warmup Iteration   5: 4324358.580 ops/s
[info] Iteration   1: 4358893.805 ops/s
[info]                  ·gc.alloc.rate:                   487.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.256 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.190 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4379711.925 ops/s
[info]                  ·gc.alloc.rate:                   489.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.116 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.534 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4351606.980 ops/s
[info]                  ·gc.alloc.rate:                   486.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      654.424 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.710 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4367718.985 ops/s
[info]                  ·gc.alloc.rate:                   488.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.361 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 117.979 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4348724.869 ops/s
[info]                  ·gc.alloc.rate:                   486.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              176.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.076 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 237.456 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4361331.313 ±(99.9%) 48633.945 ops/s [Average]
[info]   (min, avg, max) = (4348724.869, 4361331.313, 4379711.925), stdev = 12630.081
[info]   CI (99.9%): [4312697.368, 4409965.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   487.716 ±(99.9%) 5.547 MB/sec [Average]
[info]   (min, avg, max) = (486.277, 487.716, 489.836), stdev = 1.440
[info]   CI (99.9%): [482.169, 493.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   176.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (176.000, 176.000, 176.000), stdev = 0.001
[info]   CI (99.9%): [176.000, 176.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   0.008 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.023), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   523.847 ±(99.9%) 691.111 MB/sec [Average]
[info]   (min, avg, max) = (327.116, 523.847, 656.076), stdev = 179.479
[info]   CI (99.9%): [≈ 0, 1214.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   189.174 ±(99.9%) 251.049 B/op [Average]
[info]   (min, avg, max) = (117.534, 189.174, 237.456), stdev = 65.197
[info]   CI (99.9%): [≈ 0, 440.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 5.000), stdev = 1.643
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc
[info] # Run progress: 94.12% complete, ETA 00:01:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3768102.943 ops/s
[info] # Warmup Iteration   2: 4276993.480 ops/s
[info] # Warmup Iteration   3: 4351044.476 ops/s
[info] # Warmup Iteration   4: 4325707.415 ops/s
[info] # Warmup Iteration   5: 4325626.096 ops/s
[info] Iteration   1: 4324601.069 ops/s
[info]                  ·gc.alloc.rate:                   263.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      255.776 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 93.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4330716.003 ops/s
[info]                  ·gc.alloc.rate:                   264.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.347 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4364789.325 ops/s
[info]                  ·gc.alloc.rate:      266.217 MB/sec
[info]                  ·gc.alloc.rate.norm: 96.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4312808.317 ops/s
[info]                  ·gc.alloc.rate:                   263.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      328.358 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 119.842 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4345491.453 ops/s
[info]                  ·gc.alloc.rate:                   264.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              96.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.982 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 118.456 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc":
[info]   4335681.233 ±(99.9%) 77351.837 ops/s [Average]
[info]   (min, avg, max) = (4312808.317, 4335681.233, 4364789.325), stdev = 20088.026
[info]   CI (99.9%): [4258329.396, 4413033.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate":
[info]   264.426 ±(99.9%) 4.716 MB/sec [Average]
[info]   (min, avg, max) = (263.033, 264.426, 266.217), stdev = 1.225
[info]   CI (99.9%): [259.710, 269.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   96.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (96.000, 96.000, 96.000), stdev = 0.001
[info]   CI (99.9%): [96.000, 96.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space":
[info]   0.659 ±(99.9%) 5.411 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.659, 3.172), stdev = 1.405
[info]   CI (99.9%): [≈ 0, 6.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm":
[info]   0.240 ±(99.9%) 1.967 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.240, 1.153), stdev = 0.511
[info]   CI (99.9%): [≈ 0, 2.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space":
[info]   247.895 ±(99.9%) 547.000 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 247.895, 328.358), stdev = 142.054
[info]   CI (99.9%): [≈ 0, 794.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm":
[info]   90.148 ±(99.9%) 198.887 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 90.148, 119.842), stdev = 51.650
[info]   CI (99.9%): [≈ 0, 289.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 4.000), stdev = 1.643
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 94.96% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 22356.556 ops/s
[info] # Warmup Iteration   2: 205195.914 ops/s
[info] # Warmup Iteration   3: 206817.738 ops/s
[info] # Warmup Iteration   4: 211616.037 ops/s
[info] # Warmup Iteration   5: 209240.355 ops/s
[info] Iteration   1: 208105.925 ops/s
[info]                  ·gc.alloc.rate:                   1072.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              8112.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1320.813 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9989.509 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 209230.969 ops/s
[info]                  ·gc.alloc.rate:                   1078.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              8112.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.626 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      996.890 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7498.418 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 206713.524 ops/s
[info]                  ·gc.alloc.rate:                   1065.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              8112.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1001.616 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7625.242 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 206333.175 ops/s
[info]                  ·gc.alloc.rate:                   1063.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              8112.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1005.328 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7669.583 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 209263.840 ops/s
[info]                  ·gc.alloc.rate:                   1078.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              8112.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     0.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1008.472 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 7587.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   207929.487 ±(99.9%) 5284.040 ops/s [Average]
[info]   (min, avg, max) = (206333.175, 207929.487, 209263.840), stdev = 1372.249
[info]   CI (99.9%): [202645.446, 213213.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1071.625 ±(99.9%) 27.020 MB/sec [Average]
[info]   (min, avg, max) = (1063.320, 1071.625, 1078.464), stdev = 7.017
[info]   CI (99.9%): [1044.605, 1098.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8112.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8112.002, 8112.002, 8112.002), stdev = 0.001
[info]   CI (99.9%): [8112.002, 8112.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   0.567 ±(99.9%) 0.538 B/op [Average]
[info]   (min, avg, max) = (0.470, 0.567, 0.787), stdev = 0.140
[info]   CI (99.9%): [0.029, 1.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   1066.624 ±(99.9%) 547.415 MB/sec [Average]
[info]   (min, avg, max) = (996.890, 1066.624, 1320.813), stdev = 142.162
[info]   CI (99.9%): [519.209, 1614.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   8074.004 ±(99.9%) 4130.393 B/op [Average]
[info]   (min, avg, max) = (7498.418, 8074.004, 9989.509), stdev = 1072.650
[info]   CI (99.9%): [3943.611, 12204.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 6.000), stdev = 1.095
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 95.80% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3264.755 ops/s
[info] # Warmup Iteration   2: 6343.866 ops/s
[info] # Warmup Iteration   3: 7466.695 ops/s
[info] # Warmup Iteration   4: 7474.058 ops/s
[info] # Warmup Iteration   5: 7496.340 ops/s
[info] Iteration   1: 7537.026 ops/s
[info]                  ·gc.alloc.rate:                   752.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              157096.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      649.487 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135679.253 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 7513.310 ops/s
[info]                  ·gc.alloc.rate:                   749.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              157096.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      651.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136391.622 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7534.323 ops/s
[info]                  ·gc.alloc.rate:                   751.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              157096.063 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     17.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      980.753 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 204886.964 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 7592.906 ops/s
[info]                  ·gc.alloc.rate:                   757.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              157098.561 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.047 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 135990.436 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 7609.905 ops/s
[info]                  ·gc.alloc.rate:                   759.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              157120.054 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      658.709 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 136237.738 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7557.494 ±(99.9%) 160.032 ops/s [Average]
[info]   (min, avg, max) = (7513.310, 7557.494, 7609.905), stdev = 41.560
[info]   CI (99.9%): [7397.462, 7717.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   754.281 ±(99.9%) 16.338 MB/sec [Average]
[info]   (min, avg, max) = (749.858, 754.281, 759.674), stdev = 4.243
[info]   CI (99.9%): [737.943, 770.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   157101.358 ±(99.9%) 40.460 B/op [Average]
[info]   (min, avg, max) = (157096.054, 157101.358, 157120.054), stdev = 10.507
[info]   CI (99.9%): [157060.898, 157141.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   0.039 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   8.181 ±(99.9%) 25.227 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 8.181, 17.393), stdev = 6.551
[info]   CI (99.9%): [≈ 0, 33.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   719.205 ±(99.9%) 563.183 MB/sec [Average]
[info]   (min, avg, max) = (649.487, 719.205, 980.753), stdev = 146.257
[info]   CI (99.9%): [156.022, 1282.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   149837.203 ±(99.9%) 118503.305 B/op [Average]
[info]   (min, avg, max) = (135679.253, 149837.203, 204886.964), stdev = 30774.932
[info]   CI (99.9%): [31333.897, 268340.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 96.64% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: WARNING: An illegal reflective access operation has occurred
[info] WARNING: Illegal reflective access by com.fasterxml.jackson.module.afterburner.util.MyClassLoader (file:/tmp/sbt_423d32aa/target/1f542b95/jackson-module-afterburner-2.9.2.jar) to method java.lang.ClassLoader.defineClass(java.lang.String,byte[],int,int)
[info] WARNING: Please consider reporting this to the maintainers of com.fasterxml.jackson.module.afterburner.util.MyClassLoader
[info] WARNING: Use --illegal-access=warn to enable warnings of further illegal reflective access operations
[info] WARNING: All illegal access operations will be denied in a future release
[info] 9594.369 ops/s
[info] # Warmup Iteration   2: 33827.129 ops/s
[info] # Warmup Iteration   3: 34224.184 ops/s
[info] # Warmup Iteration   4: 34304.422 ops/s
[info] # Warmup Iteration   5: 33987.658 ops/s
[info] Iteration   1: 33652.062 ops/s
[info]                  ·gc.alloc.rate:                   429.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.111 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      646.765 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30251.279 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 34128.523 ops/s
[info]                  ·gc.alloc.rate:                   435.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      324.037 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 14944.550 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 33723.675 ops/s
[info]                  ·gc.alloc.rate:                   430.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.032 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      325.331 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15185.266 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 33452.886 ops/s
[info]                  ·gc.alloc.rate:                   427.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              20100.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      651.993 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 30679.176 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 32710.920 ops/s
[info]                  ·gc.alloc.rate:                   417.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              20099.956 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.680 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15720.467 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   33533.613 ±(99.9%) 2007.707 ops/s [Average]
[info]   (min, avg, max) = (32710.920, 33533.613, 34128.523), stdev = 521.395
[info]   CI (99.9%): [31525.906, 35541.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   428.207 ±(99.9%) 25.676 MB/sec [Average]
[info]   (min, avg, max) = (417.689, 428.207, 435.819), stdev = 6.668
[info]   CI (99.9%): [402.531, 453.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   20100.026 ±(99.9%) 0.309 B/op [Average]
[info]   (min, avg, max) = (20099.932, 20100.026, 20100.111), stdev = 0.080
[info]   CI (99.9%): [20099.716, 20100.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1.367 ±(99.9%) 5.672 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1.367, 2.921), stdev = 1.473
[info]   CI (99.9%): [≈ 0, 7.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   454.961 ±(99.9%) 683.453 MB/sec [Average]
[info]   (min, avg, max) = (324.037, 454.961, 651.993), stdev = 177.490
[info]   CI (99.9%): [≈ 0, 1138.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   21356.148 ±(99.9%) 32043.251 B/op [Average]
[info]   (min, avg, max) = (14944.550, 21356.148, 30679.176), stdev = 8321.530
[info]   CI (99.9%): [≈ 0, 53399.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 1.095
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 97.48% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41726.072 ops/s
[info] # Warmup Iteration   2: 56246.525 ops/s
[info] # Warmup Iteration   3: 56726.099 ops/s
[info] # Warmup Iteration   4: 57298.179 ops/s
[info] # Warmup Iteration   5: 57355.284 ops/s
[info] Iteration   1: 57839.441 ops/s
[info]                  ·gc.alloc.rate:                   377.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          3.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     87.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      656.558 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 17872.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 58262.289 ops/s
[info]                  ·gc.alloc.rate:                   380.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.984 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8834.849 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 57563.815 ops/s
[info]                  ·gc.alloc.rate:                   376.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8942.574 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 57823.542 ops/s
[info]                  ·gc.alloc.rate:                   377.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.008 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      327.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8902.371 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 56655.632 ops/s
[info]                  ·gc.alloc.rate:                   370.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              10288.007 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      326.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 9085.068 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   57628.944 ±(99.9%) 2306.277 ops/s [Average]
[info]   (min, avg, max) = (56655.632, 57628.944, 58262.289), stdev = 598.933
[info]   CI (99.9%): [55322.667, 59935.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   376.631 ±(99.9%) 15.033 MB/sec [Average]
[info]   (min, avg, max) = (370.285, 376.631, 380.766), stdev = 3.904
[info]   CI (99.9%): [361.598, 391.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10288.007 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10288.007, 10288.007, 10288.008), stdev = 0.001
[info]   CI (99.9%): [10288.006, 10288.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   0.658 ±(99.9%) 5.483 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.658, 3.205), stdev = 1.424
[info]   CI (99.9%): [≈ 0, 6.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   17.905 ±(99.9%) 149.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 17.905, 87.235), stdev = 38.761
[info]   CI (99.9%): [≈ 0, 167.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   392.917 ±(99.9%) 567.508 MB/sec [Average]
[info]   (min, avg, max) = (326.984, 392.917, 656.558), stdev = 147.380
[info]   CI (99.9%): [≈ 0, 960.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   10727.375 ±(99.9%) 15383.410 B/op [Average]
[info]   (min, avg, max) = (8834.849, 10727.375, 17872.013), stdev = 3995.023
[info]   CI (99.9%): [≈ 0, 26110.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 7.000), stdev = 2.828
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc
[info] # Run progress: 98.32% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 52093.860 ops/s
[info] # Warmup Iteration   2: 69540.933 ops/s
[info] # Warmup Iteration   3: 69641.650 ops/s
[info] # Warmup Iteration   4: 69482.352 ops/s
[info] # Warmup Iteration   5: 69269.233 ops/s
[info] Iteration   1: 69302.226 ops/s
[info]                  ·gc.alloc.rate:      15.499 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 69595.206 ops/s
[info]                  ·gc.alloc.rate:      15.564 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 69520.158 ops/s
[info]                  ·gc.alloc.rate:      15.549 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 69512.018 ops/s
[info]                  ·gc.alloc.rate:      15.546 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 69249.238 ops/s
[info]                  ·gc.alloc.rate:      15.488 MB/sec
[info]                  ·gc.alloc.rate.norm: 352.006 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc":
[info]   69435.769 ±(99.9%) 580.743 ops/s [Average]
[info]   (min, avg, max) = (69249.238, 69435.769, 69595.206), stdev = 150.817
[info]   CI (99.9%): [68855.026, 70016.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate":
[info]   15.529 ±(99.9%) 0.128 MB/sec [Average]
[info]   (min, avg, max) = (15.488, 15.529, 15.564), stdev = 0.033
[info]   CI (99.9%): [15.401, 15.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm":
[info]   352.006 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.006, 352.006, 352.006), stdev = 0.001
[info]   CI (99.9%): [352.006, 352.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count":
[info]   ≈ 0 counts
[info] # JMH version: 1.19
[info] # VM version: JDK 9.0.1, VM 9.0.1+11
[info] # VM invoker: /usr/lib/jvm/java-9-oracle/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch -XX:+UseParallelGC
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay
[info] # Run progress: 99.16% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 973.354 ops/s
[info] # Warmup Iteration   2: 4803.119 ops/s
[info] # Warmup Iteration   3: 5057.998 ops/s
[info] # Warmup Iteration   4: 5154.730 ops/s
[info] # Warmup Iteration   5: 5206.231 ops/s
[info] Iteration   1: 5278.951 ops/s
[info]                  ·gc.alloc.rate:                   1056.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              314990.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      989.336 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 295011.297 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 5228.096 ops/s
[info]                  ·gc.alloc.rate:                   1046.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              314989.255 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      995.545 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 299693.408 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 5248.857 ops/s
[info]                  ·gc.alloc.rate:                   1050.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              314990.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      999.457 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 299693.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5194.546 ops/s
[info]                  ·gc.alloc.rate:                   1039.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              314990.517 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.042 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1003.989 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 304220.231 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 5209.763 ops/s
[info]                  ·gc.alloc.rate:                   1042.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              314990.274 B/op
[info]                  ·gc.churn.PS_Eden_Space:          0.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     18.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      1007.373 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 304350.643 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay":
[info]   5232.043 ±(99.9%) 127.727 ops/s [Average]
[info]   (min, avg, max) = (5194.546, 5232.043, 5278.951), stdev = 33.170
[info]   CI (99.9%): [5104.315, 5359.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate":
[info]   1047.058 ±(99.9%) 25.459 MB/sec [Average]
[info]   (min, avg, max) = (1039.534, 1047.058, 1056.337), stdev = 6.612
[info]   CI (99.9%): [1021.599, 1072.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm":
[info]   314990.164 ±(99.9%) 2.010 B/op [Average]
[info]   (min, avg, max) = (314989.255, 314990.164, 314990.517), stdev = 0.522
[info]   CI (99.9%): [314988.154, 314992.175] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   16.307 ±(99.9%) 43.808 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16.307, 31.333), stdev = 11.377
[info]   CI (99.9%): [≈ 0, 60.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   999.140 ±(99.9%) 27.258 MB/sec [Average]
[info]   (min, avg, max) = (989.336, 999.140, 1007.373), stdev = 7.079
[info]   CI (99.9%): [971.882, 1026.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   300593.717 ±(99.9%) 14919.859 B/op [Average]
[info]   (min, avg, max) = (295011.297, 300593.717, 304350.643), stdev = 3874.640
[info]   CI (99.9%): [285673.858, 315513.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.macros.JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.200, 5.000), stdev = 0.837
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:31:42
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1548231.484 ±  34937.952   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2289.878 ±     51.544  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2328.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.067 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.068 ±      0.158    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      2236.656 ±    724.424  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2274.404 ±    762.853    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        33.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    187343.551 ±   2897.427   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       334.195 ±      5.110  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      2808.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.083 ±      0.586  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.701 ±      4.941    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       324.417 ±      5.954  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2725.892 ±     76.705    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    462924.043 ±   6495.410   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       294.096 ±      4.196  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1000.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.651 ±      5.252  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         2.217 ±     17.885    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       313.712 ±    124.844  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1066.539 ±    417.777    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1839117.944 ±  49538.009   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5       598.294 ±     16.375  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       512.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5         0.021 ±      0.090    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5       590.802 ±    566.311  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5       505.696 ±    485.923    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   4701028.755 ±  72212.570   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       406.172 ±      6.283  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       136.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5         0.010 ±      0.052    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5       393.106 ±    564.623  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5       131.709 ±    190.642    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    118771.940 ±   2225.496   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5       757.143 ±     13.930  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     10032.004 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.553 ±      1.304    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5       724.995 ±    557.433  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      9607.479 ±   7427.591    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readAdtCirce                                                             thrpt    5    521983.221 ±  21500.758   ops/s
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate                                              thrpt    5      1379.589 ±     56.894  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.alloc.rate.norm                                         thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space                                     thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.150 ±      0.363    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space                                 thrpt    5      1403.304 ±    561.704  MB/sec
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      4230.503 ±   1626.762    B/op
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.count                                                   thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readAdtCirce:·gc.time                                                    thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJackson                                                           thrpt    5   1302280.416 ±  20080.554   ops/s
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate                                            thrpt    5       926.368 ±     15.662  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.alloc.rate.norm                                       thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space                                   thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.070 ±      0.144    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space                               thrpt    5       931.383 ±    572.919  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      1126.520 ±    703.139    B/op
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.count                                                 thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readAdtJackson:·gc.time                                                  thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readAdtJsoniter                                                          thrpt    5   2654853.767 ±  43838.710   ops/s
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate                                           thrpt    5       175.423 ±      2.896  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.alloc.rate.norm                                      thrpt    5       104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space                                  thrpt    5         0.008 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.005 ±      0.043    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space                              thrpt    5       153.457 ±    539.423  MB/sec
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                         thrpt    5        91.199 ±    320.578    B/op
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.count                                                thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readAdtJsoniter:·gc.time                                                 thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.readAdtPlay                                                              thrpt    5    127715.456 ±   3835.100   ops/s
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate                                               thrpt    5      1062.036 ±     31.486  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.alloc.rate.norm                                          thrpt    5     13088.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space                                      thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Eden_Space.norm                                 thrpt    5         0.769 ±      1.202    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space                                  thrpt    5      1066.401 ±    545.808  MB/sec
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.churn.PS_Survivor_Space.norm                             thrpt    5     13138.672 ±   6574.724    B/op
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.count                                                    thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readAdtPlay:·gc.time                                                     thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1009838.514 ±  46422.807   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1575.651 ±     72.354  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2456.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.104 ±      0.134    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1544.474 ±    698.808  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2408.372 ±   1123.309    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1939044.559 ±  76988.023   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1360.153 ±     54.404  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.079 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.064 ±      0.160    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1345.711 ±     30.658  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      1092.409 ±     63.482    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6590535.644 ± 239305.232   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       837.342 ±     30.483  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.062 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.015 ±      0.027    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       858.770 ±    697.273  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       205.259 ±    169.347    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    464261.563 ±  17488.478   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1172.674 ±     43.921  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      3976.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.227 ±      0.496    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1136.994 ±    707.550  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      3859.918 ±   2544.778    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    611415.330 ±  40586.388   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      1979.496 ±    131.300  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5096.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5         0.071 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.182 ±      0.230    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5      1960.309 ±    613.799  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5047.860 ±   1622.867    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        29.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1339472.611 ±  38663.924   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1259.461 ±     36.238  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.073 ±      0.116    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5      1208.850 ±    712.756  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1420.176 ±    825.964    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2908965.144 ±  92983.305   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1212.313 ±     38.632  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.027 ±      0.024    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5      1200.984 ±    695.852  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       649.328 ±    359.123    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    235369.971 ±   6647.571   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1437.868 ±     40.739  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9616.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.445 ±      0.954    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5      1412.006 ±    583.478  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      9441.283 ±   3800.875    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringCirce                                                     thrpt    5    161047.075 ±   2342.635   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate                                      thrpt    5       359.347 ±      5.196  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.alloc.rate.norm                                 thrpt    5      3512.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.648 ±      5.354  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         6.341 ±     52.410    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space                         thrpt    5       391.247 ±    562.031  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      3823.322 ±   5483.694    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.count                                           thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringCirce:·gc.time                                            thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJackson                                                   thrpt    5    608638.362 ±   8324.776   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate                                    thrpt    5       798.156 ±     11.098  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.alloc.rate.norm                               thrpt    5      2064.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.097 ±      0.308    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       797.591 ±    701.168  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2062.738 ±   1817.231    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.count                                         thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJackson:·gc.time                                          thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter                                                  thrpt    5    684795.557 ±  25700.606   ops/s
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate                                   thrpt    5       584.726 ±     21.818  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.alloc.rate.norm                              thrpt    5      1344.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.096 ±      0.343    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       590.717 ±    566.217  MB/sec
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1359.087 ±   1318.433    B/op
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.count                                        thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.readAsciiStringJsoniter:·gc.time                                         thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1605960.336 ±  40155.275   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1020.431 ±     25.361  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.075 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.074 ±      0.164    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1001.752 ±     25.265  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       981.704 ±     17.959    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3695352.009 ±  71755.761   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       488.320 ±      9.521  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.033 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.014 ±      0.062    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5       458.522 ±    689.879  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       195.488 ±    296.366    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    284818.500 ±  11158.143   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1292.787 ±     50.677  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.324 ±      0.872    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1273.739 ±    560.409  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      7039.950 ±   3131.079    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    504994.832 ±  24547.683   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1642.839 ±     81.259  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5120.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.079 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.247 ±      0.215    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5      1681.158 ±     44.437  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      5239.867 ±    195.955    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        25.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    694071.555 ±  34826.076   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       860.738 ±     43.281  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.094 ±      0.287    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       863.137 ±    695.365  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5      1961.665 ±   1661.486    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4603661.283 ±  89481.721   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       210.582 ±      4.065  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.627 ±      5.395  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.216 ±      1.857    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       168.054 ±    601.771  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        57.657 ±    206.633    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    228906.924 ±   4278.462   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1256.486 ±     23.467  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.487 ±      0.493    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1272.123 ±    575.370  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      8751.167 ±   4077.088    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      3848.356 ±     85.060   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5       926.130 ±     21.072  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    378792.111 ±      0.017    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5         0.051 ±      0.235  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5        20.833 ±     96.350    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5       922.677 ±    560.099  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    377589.992 ± 233917.731    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5     10287.688 ±    150.005   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       260.588 ±      3.826  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     39872.042 ±      0.005    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5         0.112 ±      0.764  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5        17.160 ±    116.654    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5       245.287 ±    539.986  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5     37532.755 ±  82643.489    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     17383.390 ±    311.074   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       297.054 ±      5.432  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     26896.026 ±      0.007    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5         0.631 ±      5.257  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        57.316 ±    477.490    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5       313.720 ±    124.865  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5     28399.929 ±  11091.864    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      2033.415 ±     43.327   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1230.930 ±     26.031  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    952664.207 ±      0.034    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5         0.037 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5        28.939 ±     80.042    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5      1271.537 ±    574.872  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5    984531.066 ± 459378.420    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   2873003.688 ±  99617.642   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       861.652 ±     29.914  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.034 ±      0.043    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       858.480 ±    687.103  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5       470.502 ±    381.360    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    259686.303 ±   6864.715   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1428.120 ±     37.576  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8656.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.328 ±      0.551    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1478.360 ±    695.759  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      8962.106 ±   4278.082    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    448652.834 ±  23938.324   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1616.843 ±     87.625  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5672.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5         0.075 ±      0.107  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.263 ±      0.387    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5      1614.106 ±    611.329  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5666.147 ±   2286.054    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    555744.163 ±  13864.326   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       646.949 ±     16.230  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1832.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.118 ±      0.320    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5       657.534 ±     16.074  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      1862.077 ±     83.832    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2600018.758 ±  87908.159   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5      1030.821 ±     34.657  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       624.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5         0.067 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.040 ±      0.063    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5       996.717 ±     25.583  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5       603.399 ±     28.278    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    157635.277 ±   5731.269   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1094.426 ±     39.575  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10928.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5         0.075 ±      0.209  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.751 ±      2.118    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5      1133.675 ±    700.735  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5     11329.504 ±   7281.718    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    445000.563 ±  23600.859   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1547.218 ±     82.262  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5472.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.206 ±      0.368    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1542.755 ±    698.025  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5461.732 ±   2665.869    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    925446.296 ±  26103.775   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1091.317 ±     30.686  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.062 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.106 ±      0.194    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5      1068.181 ±    589.292  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      1818.174 ±   1060.199    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   2841245.854 ±  65068.376   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       707.679 ±     16.119  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.028 ±      0.051    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       723.705 ±    559.321  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5       400.970 ±    312.400    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    269769.426 ±  10015.213   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1442.469 ±     53.259  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8416.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.062 ±      0.170  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.365 ±      1.003    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5      1411.947 ±    568.223  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      8242.948 ±   3553.765    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce                                                thrpt    5    484221.982 ±   7050.244   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate                                 thrpt    5      1845.693 ±     26.371  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.alloc.rate.norm                            thrpt    5      6000.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space                        thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.149 ±      0.218    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space                    thrpt    5      1820.416 ±    717.708  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5918.196 ±   2348.736    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.count                                      thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesCirce:·gc.time                                       thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter                                             thrpt    5   1887722.395 ±  45765.555   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate                              thrpt    5      1218.379 ±     29.359  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.alloc.rate.norm                         thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.042 ±      0.113    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5      1202.528 ±    697.409  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5      1003.443 ±    600.809    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.count                                   thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesJsoniter:·gc.time                                    thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay                                                 thrpt    5    161101.191 ±   2371.508   ops/s
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate                                  thrpt    5      1150.483 ±     16.552  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.alloc.rate.norm                             thrpt    5     11240.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space                         thrpt    5         0.071 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.691 ±      0.887    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space                     thrpt    5      1135.621 ±    706.781  MB/sec
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5     11091.980 ±   6811.801    B/op
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.count                                       thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readMutableIterablesPlay:·gc.time                                        thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    719084.307 ±   8135.780   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       931.982 ±     10.817  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.037 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.082 ±      0.337    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       928.780 ±    564.721  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5      2032.581 ±   1225.743    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   1598288.500 ±  10649.869   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5       755.552 ±      5.046  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.033 ±      0.071    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       791.241 ±    691.473  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       779.357 ±    685.777    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    222041.773 ±   4625.897   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1173.664 ±     24.436  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8320.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.354 ±      0.511    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1136.755 ±    708.481  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8059.341 ±   5049.200    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce                                                  thrpt    5    690060.808 ±  23537.942   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate                                   thrpt    5      1031.142 ±     35.307  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.alloc.rate.norm                              thrpt    5      2352.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space                          thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.133 ±      0.155    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                      thrpt    5      1061.163 ±    574.155  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      2420.024 ±   1288.436    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.count                                        thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringCirce:·gc.time                                         thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson                                                thrpt    5    909176.639 ±  11681.930   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate                                 thrpt    5       637.667 ±      8.099  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.alloc.rate.norm                            thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space                        thrpt    5         0.046 ±      0.222  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.079 ±      0.384    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                    thrpt    5       594.594 ±    569.700  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5      1029.896 ±    992.426    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.count                                      thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJackson:·gc.time                                       thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter                                               thrpt    5   1381366.187 ±  19338.798   ops/s
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate                                thrpt    5       337.002 ±      4.659  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.alloc.rate.norm                           thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.640 ±      5.332  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.733 ±      6.105    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       327.971 ±      2.713  MB/sec
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5       373.713 ±      5.841    B/op
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.count                                     thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readNonAsciiStringJsoniter:·gc.time                                      thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    452363.387 ±  17542.380   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1393.334 ±     53.293  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4848.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.188 ±      0.575    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1404.221 ±    598.035  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      4887.293 ±   2136.126    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5   1095622.037 ±  26671.616   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       829.683 ±     20.190  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1192.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.067 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.096 ±      0.187    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       796.180 ±    700.662  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1143.818 ±   1004.937    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3324005.751 ± 120457.555   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       101.365 ±      3.651  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.012 ±      0.083  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.006 ±      0.039    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       102.304 ±    539.418  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        48.343 ±    254.901    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    174067.342 ±   6365.644   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1176.821 ±     43.234  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.528 ±      1.087    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1137.059 ±    707.779  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5     10292.792 ±   6767.004    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      8605.744 ±    212.403   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1258.231 ±     31.815  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    230134.501 ±     93.335    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.117 ±      0.237  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5        21.423 ±     43.145    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1256.869 ±    544.358  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    229913.793 ± 100474.839    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     12080.140 ±    239.731   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       158.143 ±      3.180  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     20604.594 ±     27.103    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.006 ±      0.054  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.816 ±      7.026    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       153.453 ±    539.408  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5     20060.899 ±  70517.432    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     23832.170 ±    381.039   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       214.886 ±      3.581  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     14191.742 ±      2.369    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.628 ±      5.340  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        41.579 ±    353.786    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       219.196 ±    487.275  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     14495.298 ±  32245.358    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay                                                       thrpt    5      3824.846 ±     81.848   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate                                        thrpt    5      1121.517 ±     23.992  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.alloc.rate.norm                                   thrpt    5    461480.117 ±      0.014    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5        17.165 ±     52.473    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1133.551 ±    693.408  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5    466427.722 ± 284881.148    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIPlay:·gc.time                                              thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtCirce                                                            thrpt    5    379946.880 ±  11188.024   ops/s
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate                                             thrpt    5      1206.920 ±     35.709  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.alloc.rate.norm                                        thrpt    5      5000.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space                                    thrpt    5         0.046 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.190 ±      0.436    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space                                thrpt    5      1197.969 ±    713.449  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      4965.213 ±   3017.929    B/op
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.count                                                  thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeAdtCirce:·gc.time                                                   thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJackson                                                          thrpt    5   1574284.010 ±  49270.799   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate                                           thrpt    5       656.162 ±     20.621  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.alloc.rate.norm                                      thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space                                  thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.042 ±      0.114    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space                              thrpt    5       658.702 ±     15.814  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5       658.560 ±     17.820    B/op
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.count                                                thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJackson:·gc.time                                                 thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtJsoniter                                                         thrpt    5  10110256.341 ± 246406.026   ops/s
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate                                          thrpt    5       513.813 ±     12.654  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.alloc.rate.norm                                     thrpt    5        80.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5         0.029 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.005 ±      0.021    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5       523.749 ±    689.255  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5        81.599 ±    107.949    B/op
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.count                                               thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeAdtJsoniter:·gc.time                                                thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writeAdtPlay                                                             thrpt    5    261084.047 ±   3943.837   ops/s
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate                                              thrpt    5       837.224 ±     12.653  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.alloc.rate.norm                                         thrpt    5      5048.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space                                     thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5         0.301 ±      0.733    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5       860.465 ±    686.776  MB/sec
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5      5191.147 ±   4204.181    B/op
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.count                                                   thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeAdtPlay:·gc.time                                                    thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1334471.785 ±  49295.500   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1234.298 ±     45.548  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1456.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.064 ±      0.087    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5      1199.532 ±    714.635  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5      1416.685 ±    889.787    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   4420359.272 ±  90003.685   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1213.179 ±     25.068  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.062 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.022 ±      0.021    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5      1204.738 ±    697.312  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       429.063 ±    250.201    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15553138.529 ± 347084.784   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       474.326 ±     10.512  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.002 ±      0.012    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       458.215 ±    689.803  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        46.435 ±     70.719    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc                                             thrpt    5  15547428.996 ± 132612.436   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate                              thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.alloc.rate.norm                         thrpt    5        ≈ 10⁻⁵                 B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniterPrealloc:·gc.count                                   thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5   1057521.878 ±  11694.001   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1553.316 ±     17.386  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.075 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.112 ±      0.107    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1549.894 ±    708.009  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2306.836 ±   1050.842    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    737282.554 ±  15321.872   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1622.517 ±     33.747  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3464.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5         0.067 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.142 ±      0.371    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5      1612.193 ±    564.837  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      3442.986 ±   1250.478    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2713839.263 ±  92936.179   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1544.810 ±     52.269  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       896.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5         0.100 ±      0.215  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.058 ±      0.124    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5      1549.954 ±    693.623  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5       899.150 ±    408.192    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   5392422.608 ± 134939.602   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1425.082 ±     35.454  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       416.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5         0.071 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.021 ±      0.026    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5      1409.539 ±    567.620  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       411.402 ±    162.013    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    349573.415 ±  10774.858   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1218.868 ±     37.855  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5488.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5         0.282 ±      0.369    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5      1204.354 ±    699.539  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5      5424.927 ±   3213.897    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce                                                    thrpt    5    184686.972 ±   7112.614   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate                                     thrpt    5       628.978 ±     24.529  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.alloc.rate.norm                                thrpt    5      5360.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space                            thrpt    5         0.062 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.533 ±      0.503    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space                        thrpt    5       653.351 ±     11.387  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      5568.035 ±    174.766    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.count                                          thrpt    5        10.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringCirce:·gc.time                                           thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson                                                  thrpt    5    223034.898 ±  21866.808   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate                                   thrpt    5       235.794 ±     23.089  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.alloc.rate.norm                              thrpt    5      1664.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space                          thrpt    5         0.042 ±      0.188  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.291 ±      1.324    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space                      thrpt    5       245.790 ±    541.328  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      1729.416 ±   3817.376    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.count                                        thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJackson:·gc.time                                         thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter                                                 thrpt    5    687316.158 ±  14165.214   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate                                  thrpt    5       579.923 ±     12.108  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.alloc.rate.norm                             thrpt    5      1328.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5         0.046 ±      0.183  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.105 ±      0.418    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5       590.425 ±    566.211  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5      1353.090 ±   1309.877    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.count                                       thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniter:·gc.time                                        thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc                                         thrpt    5    719351.374 ±   6296.672   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate                          thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                     thrpt    5         0.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringJsoniterPrealloc:·gc.count                               thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay                                                     thrpt    5    219721.671 ± 110309.929   ops/s
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate                                      thrpt    5       234.507 ±    117.726  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.alloc.rate.norm                                 thrpt    5      1680.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space                             thrpt    5         0.042 ±      0.204  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.288 ±      1.315    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space                         thrpt    5       246.163 ±    542.341  MB/sec
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      1757.984 ±   4096.649    B/op
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.count                                           thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeAsciiStringPlay:·gc.time                                            thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2082658.945 ±  45006.963   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1100.778 ±     23.711  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.038 ±      0.054    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5      1069.146 ±    589.169  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5       808.027 ±    442.212    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   5037380.809 ± 150292.386   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       768.148 ±     23.227  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.016 ±      0.042    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5       790.562 ±    689.463  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5       246.984 ±    214.849    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    471865.860 ±  15249.506   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1376.628 ±     45.277  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5         0.067 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.222 ±      0.478    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5      1410.158 ±    566.575  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      4703.497 ±   1864.947    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5141.640 ±    112.432   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1106.076 ±     24.387  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    338544.084 ±      0.019    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5         0.067 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5        20.378 ±     31.921    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5      1061.647 ±    573.802  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5    324996.572 ± 177386.563    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     26859.161 ±    641.919   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       389.161 ±      9.219  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     22807.855 ±      0.471    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5         0.025 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5         1.465 ±      7.725    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5       390.336 ±    560.568  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5     22907.912 ±  33446.372    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     54566.510 ±    818.105   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       419.271 ±      6.214  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     12096.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5         1.080 ±      1.932    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5       458.053 ±    688.847  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5     13209.651 ±  19799.807    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc                                       thrpt    5     50610.147 ±    345.891   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate                        thrpt    5         0.772 ±      0.005  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.alloc.rate.norm                   thrpt    5        24.008 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniterPrealloc:·gc.count                             thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      4600.798 ±    120.797   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1352.702 ±     35.645  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    462800.018 ±      3.665    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5         0.079 ±      0.164  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5        27.069 ±     56.201    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5      1342.227 ±     33.762  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5    459219.687 ±   6835.787    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    654178.206 ±  14515.575   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1466.254 ±     32.358  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3528.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.130 ±      0.172    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5      1477.807 ±    719.980  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3554.038 ±   1659.005    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2576719.866 ±  32614.295   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       340.543 ±      4.482  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5         0.645 ±      5.378  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5         0.396 ±      3.303    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5       327.741 ±      3.368  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5       200.184 ±      4.350    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    240746.318 ±   4440.963   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       936.046 ±     17.429  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6120.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5         0.058 ±      0.154  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.381 ±      1.006    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5       995.972 ±     29.901  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      6512.002 ±    265.141    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    605875.254 ±  20345.433   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1391.714 ±     46.808  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      3616.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.140 ±      0.235    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5      1403.503 ±    562.131  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      3646.503 ±   1448.266    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1131030.513 ±  28290.203   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       764.649 ±     19.084  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5      1064.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.052 ±      0.094    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5       725.433 ±    568.956  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      1009.758 ±    801.075    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   5042510.441 ±  84792.473   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       563.808 ±      9.337  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.016 ±      0.038    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5       589.849 ±    565.110  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       184.071 ±    175.656    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         9.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    360831.692 ±  11664.209   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1237.845 ±     39.887  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5400.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5         0.218 ±      0.725    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5      1205.760 ±    715.413  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5      5260.988 ±   3146.010    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    358075.659 ±  11057.961   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5       957.117 ±     29.382  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4208.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5         0.033 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5         0.146 ±      0.586    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5       922.595 ±    582.970  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5      4057.763 ±   2598.345    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    787576.544 ±  25756.354   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1200.920 ±     39.393  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2400.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5         0.108 ±      0.142    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5      1136.147 ±    715.610  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5      2272.892 ±   1499.508    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2316727.774 ±  45431.589   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       388.586 ±      7.580  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       264.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5         0.020 ±      0.083    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5       392.726 ±    562.571  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5       267.138 ±    388.432    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    265038.378 ±   5365.995   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       955.196 ±     19.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5672.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5         0.054 ±      0.156  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5         0.322 ±      0.932    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5       930.641 ±    587.227  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5      5526.236 ±   3486.766    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce                                               thrpt    5    581770.606 ±  18265.157   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate                                thrpt    5      1277.289 ±     40.271  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.alloc.rate.norm                           thrpt    5      3456.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space                       thrpt    5         0.071 ±      0.209  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.192 ±      0.568    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space                   thrpt    5      1266.967 ±    574.138  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5      3429.317 ±   1595.173    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.count                                     thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesCirce:·gc.time                                      thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson                                             thrpt    5   1257662.605 ±  23826.483   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate                              thrpt    5       722.326 ±     13.681  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.alloc.rate.norm                         thrpt    5       904.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space                     thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5         0.068 ±      0.115    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space                 thrpt    5       723.818 ±    557.648  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5       906.111 ±    704.919    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.count                                   thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJackson:·gc.time                                    thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter                                            thrpt    5   3623829.412 ±  40015.327   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate                             thrpt    5       276.248 ±      3.000  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.alloc.rate.norm                        thrpt    5       120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5         0.633 ±      5.302  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5         0.275 ±      2.303    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5       247.896 ±    547.038  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5       107.810 ±    238.009    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.count                                  thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesJsoniter:·gc.time                                   thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay                                                thrpt    5    371043.695 ±   9146.931   ops/s
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate                                 thrpt    5      1257.780 ±     30.775  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.alloc.rate.norm                            thrpt    5      5336.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space                        thrpt    5         0.058 ±      0.104  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5         0.247 ±      0.441    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space                    thrpt    5      1273.597 ±    586.902  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5      5404.712 ±   2542.874    B/op
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.count                                      thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMutableIterablesPlay:·gc.time                                       thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    332987.574 ±   4970.380   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       861.375 ±     12.794  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4072.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5         0.237 ±      0.636    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5       919.625 ±    566.601  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5      4349.189 ±   2720.460    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    751343.124 ±  22362.622   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1118.802 ±     33.347  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2344.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.113 ±      0.255    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5      1132.012 ±    691.727  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5      2370.756 ±   1416.718    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2116514.374 ±  38626.554   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       398.037 ±      7.287  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       296.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.016 ±      0.084    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5       392.668 ±    562.907  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5       292.075 ±    419.835    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    252017.823 ±   5597.328   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       967.132 ±     21.374  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6040.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.364 ±      0.650    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5       930.564 ±    566.326  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      5808.598 ±   3461.146    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        19.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce                                                 thrpt    5   1247794.031 ±  38758.612   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate                                  thrpt    5       862.423 ±     26.611  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.alloc.rate.norm                             thrpt    5      1088.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space                         thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5         0.068 ±      0.093    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space                     thrpt    5       856.605 ±    702.001  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5      1081.103 ±    894.301    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringCirce:·gc.time                                        thrpt    5        16.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson                                               thrpt    5    769571.145 ±  36607.454   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate                                thrpt    5       316.843 ±     15.119  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.alloc.rate.norm                           thrpt    5       648.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space                       thrpt    5         0.021 ±      0.139  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5         0.043 ±      0.286    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space                   thrpt    5       260.519 ±    560.808  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5       531.628 ±   1144.990    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJackson:·gc.time                                      thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter                                              thrpt    5   2284240.350 ±  28817.229   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate                               thrpt    5       452.784 ±      5.663  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.alloc.rate.norm                          thrpt    5       312.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5         0.042 ±      0.150  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5         0.029 ±      0.103    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5       458.182 ±    691.029  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5       315.708 ±    475.984    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.count                                    thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniter:·gc.time                                     thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc                                      thrpt    5   2412040.804 ±  17208.809   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate                       thrpt    5        ≈ 10⁻⁴               MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.alloc.rate.norm                  thrpt    5        ≈ 10⁻⁴                 B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringJsoniterPrealloc:·gc.count                            thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay                                                  thrpt    5   1924479.874 ±  34361.996   ops/s
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate                                   thrpt    5       811.786 ±     14.529  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.alloc.rate.norm                              thrpt    5       664.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space                          thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.034 ±      0.047    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space                      thrpt    5       865.749 ±    701.269  MB/sec
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       707.611 ±    562.174    B/op
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.count                                        thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.writeNonAsciiStringPlay:·gc.time                                         thrpt    5        17.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    646328.289 ±  11670.966   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1024.894 ±     18.337  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      2496.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         0.142 ±      0.253    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5      1058.215 ±    556.217  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5      2576.694 ±   1334.136    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1776119.406 ±  38363.174   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       731.184 ±     15.723  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       648.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         0.041 ±      0.060    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       726.719 ±    578.554  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5       643.502 ±    496.161    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4361331.313 ±  48633.945   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       487.716 ±      5.547  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       176.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5         0.008 ±      0.041    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       523.847 ±    691.111  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5       189.174 ±    251.049    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc                                          thrpt    5   4335681.233 ±  77351.837   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate                           thrpt    5       264.426 ±      4.716  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5        96.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space                  thrpt    5         0.659 ±      5.411  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Eden_Space.norm             thrpt    5         0.240 ±      1.967    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space              thrpt    5       247.895 ±    547.000  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.churn.PS_Survivor_Space.norm         thrpt    5        90.148 ±    198.887    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.count                                thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniterPrealloc:·gc.time                                 thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    207929.487 ±   5284.040   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1071.625 ±     27.020  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8112.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.075 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5         0.567 ±      0.538    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5      1066.624 ±    547.415  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5      8074.004 ±   4130.393    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        21.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7557.494 ±    160.032   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       754.281 ±     16.338  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    157101.358 ±     40.460    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5         0.039 ±      0.121  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5         8.181 ±     25.227    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5       719.205 ±    563.183  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5    149837.203 ± 118503.305    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     33533.613 ±   2007.707   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       428.207 ±     25.676  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     20100.026 ±      0.309    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5         1.367 ±      5.672    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5       454.961 ±    683.453  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5     21356.148 ±  32043.251    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5         9.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     57628.944 ±   2306.277   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       376.631 ±     15.033  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10288.007 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5         0.658 ±      5.483  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5        17.905 ±    149.254    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5       392.917 ±    567.508  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5     10727.375 ±  15383.410    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5        15.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc                                          thrpt    5     69435.769 ±    580.743   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate                           thrpt    5        15.529 ±      0.128  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.alloc.rate.norm                      thrpt    5       352.006 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniterPrealloc:·gc.count                                thrpt    5           ≈ 0               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay                                                      thrpt    5      5232.043 ±    127.727   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate                                       thrpt    5      1047.058 ±     25.459  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.alloc.rate.norm                                  thrpt    5    314990.164 ±      2.010    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space                              thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5        16.307 ±     43.808    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space                          thrpt    5       999.140 ±     27.258  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5    300593.717 ±  14919.859    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIPlay:·gc.time                                             thrpt    5        21.000                   ms
[success] Total time: 1959 s, completed Dec 20, 2017, 5:46:38 PM
