[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 8, 2017 5:25:18 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:25:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs](classOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs]) {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -166967934 => {
[info]                     req0.&=(-2L);
[info]                     _s = in.readString()
[info]                   }
[info]                   case 959160851 => {
[info]                     req0.&=(-3L);
[info]                     _bd = BigDecimal(in.readBigDecimal())
[info]                   }
[info]                   case 1580477207 => _os = Option(in.readString())
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]         var first = true;
[info]         if (x.s.ne(null))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           }
[info]         else
[info]           ();
[info]         if (x.bd.ne(null))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             out.writeRaw(x.bd.toString)
[info]           }
[info]         else
[info]           ();
[info]         if (x.os.ne(null).&&(x.os.isDefined))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("os");
[info]             out.writeVal(x.os.get)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:26:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables](classOf[com.github.plokhotnyuk.jsoniter_scala.Iterables]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -385076981 => _l = d0(in)
[info]                   case -166967934 => _s = d1(in)
[info]                   case 1446109160 => _ls = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]         var first = true;
[info]         if (x.l.ne(null).&&(x.l.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             e0(out, x.l)
[info]           }
[info]         else
[info]           ();
[info]         if (x.s.ne(null).&&(x.s.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             e1(out, x.s)
[info]           }
[info]         else
[info]           ();
[info]         if (x.ls.ne(null).&&(x.ls.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ls");
[info]             e2(out, x.ls)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[String]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[String]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           Set.empty[Int]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Set.empty[Int]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:27:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps](classOf[com.github.plokhotnyuk.jsoniter_scala.Maps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in).toLong, in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in).toInt, d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:28:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps](classOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           OpenHashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in).toLong, in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           OpenHashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in).toInt, d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:29:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps](classOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps]) {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -401854600 => _m = d0(in)
[info]                   case 1613635087 => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]         var first = true;
[info]         if (x.m.ne(null).&&(x.m.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("m");
[info]             e0(out, x.m)
[info]           }
[info]         else
[info]           ();
[info]         if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("mm");
[info]             e2(out, x.mm)
[info]           }
[info]         else
[info]           ();
[info]         out.writeObjectEnd()
[info]       };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           IntMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in).toInt, in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           IntMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in).toLong, in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in).toLong, d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField(kv._1.toString);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:30:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives](classOf[com.github.plokhotnyuk.jsoniter_scala.Primitives]) {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -418632219 => {
[info]                     req0.&=(-2L);
[info]                     _b = in.readInt().toByte
[info]                   }
[info]                   case -166967934 => {
[info]                     req0.&=(-3L);
[info]                     _s = in.readInt().toShort
[info]                   }
[info]                   case -334744124 => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case -385076981 => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case 1093381803 => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case 1596563278 => {
[info]                     req0.&=(-33L);
[info]                     _ch = in.readInt().toChar
[info]                   }
[info]                   case -783497859 => {
[info]                     req0.&=(-65L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -485742695 => {
[info]                     req0.&=(-129L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = {
[info]         out.writeObjectStart();
[info]         val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]         var first = true;
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("b");
[info]           out.writeVal(x.b)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("s");
[info]           out.writeVal(x.s)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("i");
[info]           out.writeVal(x.i)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("l");
[info]           out.writeVal(x.l)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("bl");
[info]           out.writeVal(x.bl)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("ch");
[info]           out.writeVal(x.ch)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("dbl");
[info]           out.writeVal(x.dbl)
[info]         };
[info]         {
[info]           first = writeSep(out, first);
[info]           out.writeObjectField("f");
[info]           out.writeVal(x.f)
[info]         };
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 20 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 27 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 0.00% complete, ETA 00:03:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 949556.835 ops/s
[info] # Warmup Iteration   2: 1263501.778 ops/s
[info] # Warmup Iteration   3: 1264758.171 ops/s
[info] # Warmup Iteration   4: 1335754.568 ops/s
[info] # Warmup Iteration   5: 1838442.112 ops/s
[info] Iteration   1: 1839074.254 ops/s
[info]                  ·gc.alloc.rate:                   1309.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1710.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1463.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1862257.944 ops/s
[info]                  ·gc.alloc.rate:                   1325.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1551.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1310.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1861880.541 ops/s
[info]                  ·gc.alloc.rate:               1325.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      721.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 609.567 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1830953.796 ops/s
[info]                  ·gc.alloc.rate:                   1303.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1153.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1856764.139 ops/s
[info]                  ·gc.alloc.rate:                   1321.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1787.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1514.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1850186.135 ±(99.9%) 55103.057 ops/s [Average]
[info]   (min, avg, max) = (1830953.796, 1850186.135, 1862257.944), stdev = 14310.089
[info]   CI (99.9%): [1795083.078, 1905289.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1317.178 ±(99.9%) 39.194 MB/sec [Average]
[info]   (min, avg, max) = (1303.458, 1317.178, 1325.691), stdev = 10.178
[info]   CI (99.9%): [1277.985, 1356.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1422.767 ±(99.9%) 1646.174 MB/sec [Average]
[info]   (min, avg, max) = (721.402, 1422.767, 1787.852), stdev = 427.506
[info]   CI (99.9%): [≈ 0, 3068.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1210.373 ±(99.9%) 1402.776 B/op [Average]
[info]   (min, avg, max) = (609.567, 1210.373, 1514.727), stdev = 364.297
[info]   CI (99.9%): [≈ 0, 2613.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.053 ±(99.9%) 0.153 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.053, 0.107), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 8.000), stdev = 2.828
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 4.35% complete, ETA 00:05:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4569804.636 ops/s
[info] # Warmup Iteration   2: 4198113.700 ops/s
[info] # Warmup Iteration   3: 4202241.747 ops/s
[info] # Warmup Iteration   4: 4261902.220 ops/s
[info] # Warmup Iteration   5: 4157594.243 ops/s
[info] Iteration   1: 4302946.089 ops/s
[info]                  ·gc.alloc.rate:               743.918 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      818.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 299.445 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 6155826.211 ops/s
[info]                  ·gc.alloc.rate:                   1064.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     199.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 6040530.605 ops/s
[info]                  ·gc.alloc.rate:                   1044.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     378.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6044314.988 ops/s
[info]                  ·gc.alloc.rate:                   1045.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.516 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6137548.915 ops/s
[info]                  ·gc.alloc.rate:               1061.132 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      613.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.243 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   5736233.362 ±(99.9%) 3091887.149 ops/s [Average]
[info]   (min, avg, max) = (4302946.089, 5736233.362, 6155826.211), stdev = 802953.274
[info]   CI (99.9%): [2644346.213, 8828120.510] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   991.734 ±(99.9%) 534.589 MB/sec [Average]
[info]   (min, avg, max) = (743.918, 991.734, 1064.282), stdev = 138.831
[info]   CI (99.9%): [457.145, 1526.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   996.609 ±(99.9%) 1409.483 MB/sec [Average]
[info]   (min, avg, max) = (613.441, 996.609, 1451.769), stdev = 366.038
[info]   CI (99.9%): [≈ 0, 2406.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   275.486 ±(99.9%) 362.538 B/op [Average]
[info]   (min, avg, max) = (157.243, 275.486, 378.117), stdev = 94.150
[info]   CI (99.9%): [≈ 0, 638.024] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.027), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 2.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 8.70% complete, ETA 00:05:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1862763.493 ops/s
[info] # Warmup Iteration   2: 2313000.035 ops/s
[info] # Warmup Iteration   3: 2314230.857 ops/s
[info] # Warmup Iteration   4: 2346307.507 ops/s
[info] # Warmup Iteration   5: 2387428.523 ops/s
[info] Iteration   1: 2362514.847 ops/s
[info]                  ·gc.alloc.rate:                   1477.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1553.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1034.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2390586.593 ops/s
[info]                  ·gc.alloc.rate:                   1495.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1410.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     928.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2335018.554 ops/s
[info]                  ·gc.alloc.rate:                   1460.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     863.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   4: 2353293.414 ops/s
[info]                  ·gc.alloc.rate:                   1471.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1707.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1141.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 2396281.425 ops/s
[info]                  ·gc.alloc.rate:                   1498.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1482.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     973.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   2367538.967 ±(99.9%) 98982.463 ops/s [Average]
[info]   (min, avg, max) = (2335018.554, 2367538.967, 2396281.425), stdev = 25705.431
[info]   CI (99.9%): [2268556.504, 2466521.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1480.823 ±(99.9%) 61.781 MB/sec [Average]
[info]   (min, avg, max) = (1460.522, 1480.823, 1498.718), stdev = 16.044
[info]   CI (99.9%): [1419.042, 1542.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1487.275 ±(99.9%) 612.512 MB/sec [Average]
[info]   (min, avg, max) = (1281.590, 1487.275, 1707.763), stdev = 159.067
[info]   CI (99.9%): [874.763, 2099.787] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   988.302 ±(99.9%) 408.716 B/op [Average]
[info]   (min, avg, max) = (863.448, 988.302, 1141.657), stdev = 106.142
[info]   CI (99.9%): [579.586, 1397.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.039, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.000, 21.000), stdev = 8.396
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 13.04% complete, ETA 00:05:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 266934.307 ops/s
[info] # Warmup Iteration   2: 512422.926 ops/s
[info] # Warmup Iteration   3: 520724.825 ops/s
[info] # Warmup Iteration   4: 520489.147 ops/s
[info] # Warmup Iteration   5: 526572.192 ops/s
[info] Iteration   1: 529685.655 ops/s
[info]                  ·gc.alloc.rate:               538.683 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1452.831 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 517073.544 ops/s
[info]                  ·gc.alloc.rate:               525.883 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1420.379 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 528810.604 ops/s
[info]                  ·gc.alloc.rate:                   537.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          445.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1325.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 529639.363 ops/s
[info]                  ·gc.alloc.rate:                   538.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          425.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1262.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 521057.706 ops/s
[info]                  ·gc.alloc.rate:                   529.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2395.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.189 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   525253.374 ±(99.9%) 22456.977 ops/s [Average]
[info]   (min, avg, max) = (517073.544, 525253.374, 529685.655), stdev = 5832.006
[info]   CI (99.9%): [502796.397, 547710.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   534.194 ±(99.9%) 22.832 MB/sec [Average]
[info]   (min, avg, max) = (525.883, 534.194, 538.683), stdev = 5.929
[info]   CI (99.9%): [511.362, 557.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   524.016 ±(99.9%) 587.058 MB/sec [Average]
[info]   (min, avg, max) = (425.191, 524.016, 793.385), stdev = 152.457
[info]   CI (99.9%): [≈ 0, 1111.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1571.412 ±(99.9%) 1797.511 B/op [Average]
[info]   (min, avg, max) = (1262.953, 1571.412, 2395.488), stdev = 466.808
[info]   CI (99.9%): [≈ 0, 3368.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.297 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.189), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 8.000), stdev = 3.082
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 17.39% complete, ETA 00:05:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2643465.316 ops/s
[info] # Warmup Iteration   2: 3031168.628 ops/s
[info] # Warmup Iteration   3: 3049614.942 ops/s
[info] # Warmup Iteration   4: 3093611.931 ops/s
[info] # Warmup Iteration   5: 3023744.746 ops/s
[info] Iteration   1: 3121305.116 ops/s
[info]                  ·gc.alloc.rate:               777.719 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 412.818 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3114758.196 ops/s
[info]                  ·gc.alloc.rate:               776.097 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 394.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 3123144.459 ops/s
[info]                  ·gc.alloc.rate:                   778.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     374.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3112108.674 ops/s
[info]                  ·gc.alloc.rate:                   775.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3076421.610 ops/s
[info]                  ·gc.alloc.rate:               766.526 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      675.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 345.231 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3109547.611 ±(99.9%) 73419.028 ops/s [Average]
[info]   (min, avg, max) = (3076421.610, 3109547.611, 3123144.459), stdev = 19066.688
[info]   CI (99.9%): [3036128.583, 3182966.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   774.787 ±(99.9%) 18.305 MB/sec [Average]
[info]   (min, avg, max) = (766.526, 774.787, 778.167), stdev = 4.754
[info]   CI (99.9%): [756.482, 793.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   745.252 ±(99.9%) 219.221 MB/sec [Average]
[info]   (min, avg, max) = (675.073, 745.252, 819.021), stdev = 56.931
[info]   CI (99.9%): [526.031, 964.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   376.962 ±(99.9%) 104.575 B/op [Average]
[info]   (min, avg, max) = (345.231, 376.962, 412.818), stdev = 27.158
[info]   CI (99.9%): [272.387, 481.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 8.000), stdev = 2.864
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 21.74% complete, ETA 00:04:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 398996.256 ops/s
[info] # Warmup Iteration   2: 841034.431 ops/s
[info] # Warmup Iteration   3: 861035.432 ops/s
[info] # Warmup Iteration   4: 856884.570 ops/s
[info] # Warmup Iteration   5: 881656.730 ops/s
[info] Iteration   1: 872180.044 ops/s
[info]                  ·gc.alloc.rate:               1028.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1477.365 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 876820.761 ops/s
[info]                  ·gc.alloc.rate:               1035.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1519.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2723.548 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 879216.276 ops/s
[info]                  ·gc.alloc.rate:                   1037.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1267.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 870704.464 ops/s
[info]                  ·gc.alloc.rate:                   1027.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2382.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 879060.178 ops/s
[info]                  ·gc.alloc.rate:                   1037.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2144.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   875596.344 ±(99.9%) 15184.780 ops/s [Average]
[info]   (min, avg, max) = (870704.464, 875596.344, 879216.276), stdev = 3943.439
[info]   CI (99.9%): [860411.564, 890781.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1033.246 ±(99.9%) 18.428 MB/sec [Average]
[info]   (min, avg, max) = (1027.180, 1033.246, 1037.252), stdev = 4.786
[info]   CI (99.9%): [1014.818, 1051.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1112.826 ±(99.9%) 1313.092 MB/sec [Average]
[info]   (min, avg, max) = (708.422, 1112.826, 1519.904), stdev = 341.006
[info]   CI (99.9%): [≈ 0, 2425.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1999.078 ±(99.9%) 2358.145 B/op [Average]
[info]   (min, avg, max) = (1267.612, 1999.078, 2723.548), stdev = 612.403
[info]   CI (99.9%): [≈ 0, 4357.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.238 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.151), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 10.000), stdev = 3.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 26.09% complete, ETA 00:04:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2306262.248 ops/s
[info] # Warmup Iteration   2: 2828498.537 ops/s
[info] # Warmup Iteration   3: 2868675.750 ops/s
[info] # Warmup Iteration   4: 2798047.108 ops/s
[info] # Warmup Iteration   5: 2956284.970 ops/s
[info] Iteration   1: 2942360.067 ops/s
[info]                  ·gc.alloc.rate:                   1002.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     855.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2936488.045 ops/s
[info]                  ·gc.alloc.rate:               1000.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 398.283 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 2911745.226 ops/s
[info]                  ·gc.alloc.rate:               992.003 MB/sec
[info]                  ·gc.alloc.rate.norm:          536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 382.762 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2903080.072 ops/s
[info]                  ·gc.alloc.rate:                   989.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     714.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2970905.304 ops/s
[info]                  ·gc.alloc.rate:                   1012.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              536.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   2932915.743 ±(99.9%) 103386.768 ops/s [Average]
[info]   (min, avg, max) = (2903080.072, 2932915.743, 2970905.304), stdev = 26849.215
[info]   CI (99.9%): [2829528.975, 3036302.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   999.224 ±(99.9%) 35.240 MB/sec [Average]
[info]   (min, avg, max) = (989.058, 999.224, 1012.173), stdev = 9.152
[info]   CI (99.9%): [963.984, 1034.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   536.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (536.000, 536.000, 536.000), stdev = 0.001
[info]   CI (99.9%): [536.000, 536.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1113.567 ±(99.9%) 1474.294 MB/sec [Average]
[info]   (min, avg, max) = (708.398, 1113.567, 1599.381), stdev = 382.870
[info]   CI (99.9%): [≈ 0, 2587.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   597.049 ±(99.9%) 787.401 B/op [Average]
[info]   (min, avg, max) = (382.762, 597.049, 855.174), stdev = 204.485
[info]   CI (99.9%): [≈ 0, 1384.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.209 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.068), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 30.43% complete, ETA 00:04:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107575.009 ops/s
[info] # Warmup Iteration   2: 730447.675 ops/s
[info] # Warmup Iteration   3: 800962.740 ops/s
[info] # Warmup Iteration   4: 826376.890 ops/s
[info] # Warmup Iteration   5: 814434.583 ops/s
[info] Iteration   1: 830340.157 ops/s
[info]                  ·gc.alloc.rate:                   1076.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2418.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 828583.225 ops/s
[info]                  ·gc.alloc.rate:                   1074.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1111.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2110.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 820354.715 ops/s
[info]                  ·gc.alloc.rate:                   1063.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1861.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 811438.825 ops/s
[info]                  ·gc.alloc.rate:                   1052.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1109.223 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2150.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 806656.212 ops/s
[info]                  ·gc.alloc.rate:                   1045.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1175.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2292.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   819474.627 ±(99.9%) 39956.194 ops/s [Average]
[info]   (min, avg, max) = (806656.212, 819474.627, 830340.157), stdev = 10376.497
[info]   CI (99.9%): [779518.432, 859430.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   1062.577 ±(99.9%) 51.801 MB/sec [Average]
[info]   (min, avg, max) = (1045.957, 1062.577, 1076.674), stdev = 13.453
[info]   CI (99.9%): [1010.777, 1114.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.000, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1128.688 ±(99.9%) 429.263 MB/sec [Average]
[info]   (min, avg, max) = (970.591, 1128.688, 1276.494), stdev = 111.478
[info]   CI (99.9%): [699.425, 1557.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2166.808 ±(99.9%) 807.603 B/op [Average]
[info]   (min, avg, max) = (1861.416, 2166.808, 2418.605), stdev = 209.732
[info]   CI (99.9%): [1359.205, 2974.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.083, 0.167), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 0.366 B/op [Average]
[info]   (min, avg, max) = (0.081, 0.160, 0.323), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 14.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 34.78% complete, ETA 00:03:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1430902.438 ops/s
[info] # Warmup Iteration   2: 2151541.457 ops/s
[info] # Warmup Iteration   3: 2150238.787 ops/s
[info] # Warmup Iteration   4: 2236541.941 ops/s
[info] # Warmup Iteration   5: 2188458.235 ops/s
[info] Iteration   1: 2204616.029 ops/s
[info]                  ·gc.alloc.rate:                   1580.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2168.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1547.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2213230.850 ops/s
[info]                  ·gc.alloc.rate:                   1586.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1281.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     910.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2225559.520 ops/s
[info]                  ·gc.alloc.rate:                   1595.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1707.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1207.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2228454.878 ops/s
[info]                  ·gc.alloc.rate:                   1597.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1482.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1046.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2257256.185 ops/s
[info]                  ·gc.alloc.rate:                   1618.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              1128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1171.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2225823.493 ±(99.9%) 77093.200 ops/s [Average]
[info]   (min, avg, max) = (2204616.029, 2225823.493, 2257256.185), stdev = 20020.859
[info]   CI (99.9%): [2148730.293, 2302916.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1595.899 ±(99.9%) 55.252 MB/sec [Average]
[info]   (min, avg, max) = (1580.721, 1595.899, 1618.431), stdev = 14.349
[info]   CI (99.9%): [1540.647, 1651.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1128.000, 1128.000, 1128.000), stdev = 0.001
[info]   CI (99.9%): [1128.000, 1128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1664.371 ±(99.9%) 1271.850 MB/sec [Average]
[info]   (min, avg, max) = (1281.521, 1664.371, 2168.877), stdev = 330.295
[info]   CI (99.9%): [392.521, 2936.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1176.846 ±(99.9%) 915.599 B/op [Average]
[info]   (min, avg, max) = (910.962, 1176.846, 1547.707), stdev = 237.778
[info]   CI (99.9%): [261.246, 2092.445] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.035, 0.045), stdev = 0.008
[info]   CI (99.9%): [0.003, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 9.000), stdev = 2.280
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 39.13% complete, ETA 00:03:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 563655.439 ops/s
[info] # Warmup Iteration   2: 796317.294 ops/s
[info] # Warmup Iteration   3: 679196.718 ops/s
[info] # Warmup Iteration   4: 654943.599 ops/s
[info] # Warmup Iteration   5: 757938.537 ops/s
[info] Iteration   1: 959686.652 ops/s
[info]                  ·gc.alloc.rate:               697.822 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1101.066 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 941188.223 ops/s
[info]                  ·gc.alloc.rate:               684.372 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      874.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1461.522 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 968806.568 ops/s
[info]                  ·gc.alloc.rate:                   704.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          832.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1352.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 966128.487 ops/s
[info]                  ·gc.alloc.rate:                   702.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 970668.110 ops/s
[info]                  ·gc.alloc.rate:               705.799 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      755.697 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1224.879 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   961295.608 ±(99.9%) 46147.951 ops/s [Average]
[info]   (min, avg, max) = (941188.223, 961295.608, 970668.110), stdev = 11984.476
[info]   CI (99.9%): [915147.657, 1007443.559] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   698.991 ±(99.9%) 33.549 MB/sec [Average]
[info]   (min, avg, max) = (684.372, 698.991, 705.799), stdev = 8.713
[info]   CI (99.9%): [665.442, 732.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1144.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1144.000, 1144.000, 1144.000), stdev = 0.001
[info]   CI (99.9%): [1144.000, 1144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   785.534 ±(99.9%) 298.453 MB/sec [Average]
[info]   (min, avg, max) = (671.633, 785.534, 874.321), stdev = 77.507
[info]   CI (99.9%): [487.082, 1083.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1286.323 ±(99.9%) 520.778 B/op [Average]
[info]   (min, avg, max) = (1101.066, 1286.323, 1461.522), stdev = 135.244
[info]   CI (99.9%): [765.545, 1807.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.102), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 43.48% complete, ETA 00:03:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4527651.880 ops/s
[info] # Warmup Iteration   2: 4834769.744 ops/s
[info] # Warmup Iteration   3: 4875461.169 ops/s
[info] # Warmup Iteration   4: 4899527.523 ops/s
[info] # Warmup Iteration   5: 4932529.169 ops/s
[info] Iteration   1: 4913138.857 ops/s
[info]                  ·gc.alloc.rate:                   149.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          154.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     49.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4933475.648 ops/s
[info]                  ·gc.alloc.rate:               150.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      148.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 47.498 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 4935356.202 ops/s
[info]                  ·gc.alloc.rate:               150.583 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      143.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.674 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 4927860.915 ops/s
[info]                  ·gc.alloc.rate:                   150.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          137.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     44.042 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4876141.145 ops/s
[info]                  ·gc.alloc.rate:                   148.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          260.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   4917194.554 ±(99.9%) 94527.659 ops/s [Average]
[info]   (min, avg, max) = (4876141.145, 4917194.554, 4935356.202), stdev = 24548.533
[info]   CI (99.9%): [4822666.894, 5011722.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   150.027 ±(99.9%) 2.885 MB/sec [Average]
[info]   (min, avg, max) = (148.772, 150.027, 150.583), stdev = 0.749
[info]   CI (99.9%): [147.141, 152.912] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   169.206 ±(99.9%) 198.871 MB/sec [Average]
[info]   (min, avg, max) = (137.946, 169.206, 260.894), stdev = 51.646
[info]   CI (99.9%): [≈ 0, 368.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   54.201 ±(99.9%) 65.017 B/op [Average]
[info]   (min, avg, max) = (44.042, 54.201, 84.176), stdev = 16.885
[info]   CI (99.9%): [≈ 0, 119.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.013), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 6.000), stdev = 2.387
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 47.83% complete, ETA 00:03:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2367312.048 ops/s
[info] # Warmup Iteration   2: 3654516.900 ops/s
[info] # Warmup Iteration   3: 3669487.939 ops/s
[info] # Warmup Iteration   4: 3690476.241 ops/s
[info] # Warmup Iteration   5: 3772671.572 ops/s
[info] Iteration   1: 3801787.570 ops/s
[info]                  ·gc.alloc.rate:                   1043.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          832.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 3768412.421 ops/s
[info]                  ·gc.alloc.rate:                   1034.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1548.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3800696.581 ops/s
[info]                  ·gc.alloc.rate:               1043.658 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      719.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 297.917 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3800590.085 ops/s
[info]                  ·gc.alloc.rate:                   1043.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     554.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3847145.902 ops/s
[info]                  ·gc.alloc.rate:               1056.370 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      623.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254.806 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3803726.512 ±(99.9%) 108145.963 ops/s [Average]
[info]   (min, avg, max) = (3768412.421, 3803726.512, 3847145.902), stdev = 28085.163
[info]   CI (99.9%): [3695580.548, 3911872.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1044.467 ±(99.9%) 29.661 MB/sec [Average]
[info]   (min, avg, max) = (1034.773, 1044.467, 1056.370), stdev = 7.703
[info]   CI (99.9%): [1014.806, 1074.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1012.469 ±(99.9%) 1568.504 MB/sec [Average]
[info]   (min, avg, max) = (623.077, 1012.469, 1548.099), stdev = 407.336
[info]   CI (99.9%): [≈ 0, 2580.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   419.558 ±(99.9%) 659.171 B/op [Average]
[info]   (min, avg, max) = (254.806, 419.558, 646.305), stdev = 171.185
[info]   CI (99.9%): [≈ 0, 1078.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.085 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.052), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.600, 9.000), stdev = 4.099
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 52.17% complete, ETA 00:02:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 8574818.855 ops/s
[info] # Warmup Iteration   2: 9681529.085 ops/s
[info] # Warmup Iteration   3: 9939637.491 ops/s
[info] # Warmup Iteration   4: 9855525.116 ops/s
[info] # Warmup Iteration   5: 9966224.669 ops/s
[info] Iteration   1: 9968844.683 ops/s
[info]                  ·gc.alloc.rate:               304.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      307.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 48.485 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 9944915.303 ops/s
[info]                  ·gc.alloc.rate:               303.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 46.492 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 10062125.590 ops/s
[info]                  ·gc.alloc.rate:                   306.993 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          281.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 10008405.763 ops/s
[info]                  ·gc.alloc.rate:                   305.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          269.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     42.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 9942438.208 ops/s
[info]                  ·gc.alloc.rate:                   303.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          504.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   9985345.909 ±(99.9%) 194208.320 ops/s [Average]
[info]   (min, avg, max) = (9942438.208, 9985345.909, 10062125.590), stdev = 50435.284
[info]   CI (99.9%): [9791137.589, 10179554.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   304.658 ±(99.9%) 5.910 MB/sec [Average]
[info]   (min, avg, max) = (303.345, 304.658, 306.993), stdev = 1.535
[info]   CI (99.9%): [298.748, 310.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   331.281 ±(99.9%) 377.514 MB/sec [Average]
[info]   (min, avg, max) = (269.236, 331.281, 504.819), stdev = 98.039
[info]   CI (99.9%): [≈ 0, 708.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   52.230 ±(99.9%) 60.207 B/op [Average]
[info]   (min, avg, max) = (42.322, 52.230, 79.880), stdev = 15.636
[info]   CI (99.9%): [≈ 0, 112.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.007), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 56.52% complete, ETA 00:02:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152794.604 ops/s
[info] # Warmup Iteration   2: 936066.702 ops/s
[info] # Warmup Iteration   3: 972633.673 ops/s
[info] # Warmup Iteration   4: 966900.747 ops/s
[info] # Warmup Iteration   5: 988813.241 ops/s
[info] Iteration   1: 995956.964 ops/s
[info]                  ·gc.alloc.rate:               1230.699 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1174.299 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 997874.747 ops/s
[info]                  ·gc.alloc.rate:                   1233.032 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2181.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 766554.347 ops/s
[info]                  ·gc.alloc.rate:                   947.233 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1256.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2579.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 692664.464 ops/s
[info]                  ·gc.alloc.rate:               855.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      584.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1328.208 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 691046.617 ops/s
[info]                  ·gc.alloc.rate:                   853.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1089.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2481.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   828819.428 ±(99.9%) 602447.730 ops/s [Average]
[info]   (min, avg, max) = (691046.617, 828819.428, 997874.747), stdev = 156453.762
[info]   CI (99.9%): [226371.698, 1431267.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1024.152 ±(99.9%) 744.441 MB/sec [Average]
[info]   (min, avg, max) = (853.893, 1024.152, 1233.032), stdev = 193.329
[info]   CI (99.9%): [279.712, 1768.593] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.001, 1944.001), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1011.703 ±(99.9%) 1303.976 MB/sec [Average]
[info]   (min, avg, max) = (584.783, 1011.703, 1383.490), stdev = 338.638
[info]   CI (99.9%): [≈ 0, 2315.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1948.919 ±(99.9%) 2525.351 B/op [Average]
[info]   (min, avg, max) = (1174.299, 1948.919, 2579.543), stdev = 655.826
[info]   CI (99.9%): [≈ 0, 4474.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.310 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.087, 0.164), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 6.000), stdev = 1.817
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 60.87% complete, ETA 00:02:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2211821.095 ops/s
[info] # Warmup Iteration   2: 2696670.516 ops/s
[info] # Warmup Iteration   3: 2771637.972 ops/s
[info] # Warmup Iteration   4: 2698197.593 ops/s
[info] # Warmup Iteration   5: 2756052.221 ops/s
[info] Iteration   1: 2761798.842 ops/s
[info]                  ·gc.alloc.rate:                   575.786 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     544.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2750776.277 ops/s
[info]                  ·gc.alloc.rate:               573.541 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 254.793 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 2285409.729 ops/s
[info]                  ·gc.alloc.rate:               476.478 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 292.675 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1935663.701 ops/s
[info]                  ·gc.alloc.rate:                   403.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          405.840 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     329.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 1931492.375 ops/s
[info]                  ·gc.alloc.rate:                   402.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          387.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     315.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2333028.185 ±(99.9%) 1587374.894 ops/s [Average]
[info]   (min, avg, max) = (1931492.375, 2333028.185, 2761798.842), stdev = 412236.219
[info]   CI (99.9%): [745653.291, 3920403.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   486.404 ±(99.9%) 331.008 MB/sec [Average]
[info]   (min, avg, max) = (402.662, 486.404, 575.786), stdev = 85.962
[info]   CI (99.9%): [155.396, 817.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.995 ±(99.9%) 933.532 MB/sec [Average]
[info]   (min, avg, max) = (387.495, 523.995, 955.947), stdev = 242.435
[info]   CI (99.9%): [≈ 0, 1457.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   347.507 ±(99.9%) 438.023 B/op [Average]
[info]   (min, avg, max) = (254.793, 347.507, 544.561), stdev = 113.753
[info]   CI (99.9%): [≈ 0, 785.530] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.036), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 6.000), stdev = 2.280
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 65.22% complete, ETA 00:02:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1003275.551 ops/s
[info] # Warmup Iteration   2: 1518344.026 ops/s
[info] # Warmup Iteration   3: 1526922.372 ops/s
[info] # Warmup Iteration   4: 1542403.973 ops/s
[info] # Warmup Iteration   5: 1526074.003 ops/s
[info] Iteration   1: 1559035.985 ops/s
[info]                  ·gc.alloc.rate:               840.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      818.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 826.481 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1539837.225 ops/s
[info]                  ·gc.alloc.rate:               830.005 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 797.296 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 1533112.723 ops/s
[info]                  ·gc.alloc.rate:                   826.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1489.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1524347.693 ops/s
[info]                  ·gc.alloc.rate:                   821.629 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     696.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1532386.201 ops/s
[info]                  ·gc.alloc.rate:               825.960 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 660.591 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1537743.965 ±(99.9%) 50476.713 ops/s [Average]
[info]   (min, avg, max) = (1524347.693, 1537743.965, 1559035.985), stdev = 13108.642
[info]   CI (99.9%): [1487267.252, 1588220.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   828.852 ±(99.9%) 27.202 MB/sec [Average]
[info]   (min, avg, max) = (821.629, 828.852, 840.318), stdev = 7.064
[info]   CI (99.9%): [801.649, 856.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   873.928 ±(99.9%) 1274.722 MB/sec [Average]
[info]   (min, avg, max) = (643.422, 873.928, 1451.775), stdev = 331.041
[info]   CI (99.9%): [≈ 0, 2148.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   894.185 ±(99.9%) 1309.080 B/op [Average]
[info]   (min, avg, max) = (660.591, 894.185, 1489.819), stdev = 339.964
[info]   CI (99.9%): [≈ 0, 2203.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.064), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 69.57% complete, ETA 00:01:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3143194.909 ops/s
[info] # Warmup Iteration   2: 3750912.582 ops/s
[info] # Warmup Iteration   3: 3919549.196 ops/s
[info] # Warmup Iteration   4: 3782678.538 ops/s
[info] # Warmup Iteration   5: 3914224.128 ops/s
[info] Iteration   1: 3891504.156 ops/s
[info]                  ·gc.alloc.rate:               534.290 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 207.314 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3878576.000 ops/s
[info]                  ·gc.alloc.rate:               532.509 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 198.415 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3880191.902 ops/s
[info]                  ·gc.alloc.rate:                   532.640 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          466.741 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     189.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3898129.698 ops/s
[info]                  ·gc.alloc.rate:               535.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      870.688 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 351.401 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 3900241.401 ops/s
[info]                  ·gc.alloc.rate:               535.473 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      405.817 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 163.699 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   3889728.631 ±(99.9%) 38486.176 ops/s [Average]
[info]   (min, avg, max) = (3878576.000, 3889728.631, 3900241.401), stdev = 9994.738
[info]   CI (99.9%): [3851242.456, 3928214.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   534.022 ±(99.9%) 5.361 MB/sec [Average]
[info]   (min, avg, max) = (532.509, 534.022, 535.473), stdev = 1.392
[info]   CI (99.9%): [528.661, 539.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   549.041 ±(99.9%) 709.090 MB/sec [Average]
[info]   (min, avg, max) = (405.817, 549.041, 870.688), stdev = 184.148
[info]   CI (99.9%): [≈ 0, 1258.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   222.021 ±(99.9%) 285.483 B/op [Average]
[info]   (min, avg, max) = (163.699, 222.021, 351.401), stdev = 74.139
[info]   CI (99.9%): [≈ 0, 507.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.025), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 73.91% complete, ETA 00:01:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118220.443 ops/s
[info] # Warmup Iteration   2: 927846.103 ops/s
[info] # Warmup Iteration   3: 976796.865 ops/s
[info] # Warmup Iteration   4: 995028.848 ops/s
[info] # Warmup Iteration   5: 991329.454 ops/s
[info] Iteration   1: 993859.390 ops/s
[info]                  ·gc.alloc.rate:                   1030.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2020.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 991415.598 ops/s
[info]                  ·gc.alloc.rate:                   1028.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1202.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 974215.974 ops/s
[info]                  ·gc.alloc.rate:                   1010.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2138.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 980807.212 ops/s
[info]                  ·gc.alloc.rate:                   1017.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          849.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1363.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1001670.524 ops/s
[info]                  ·gc.alloc.rate:                   1039.035 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1191.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1872.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   988393.740 ±(99.9%) 41910.256 ops/s [Average]
[info]   (min, avg, max) = (974215.974, 988393.740, 1001670.524), stdev = 10883.960
[info]   CI (99.9%): [946483.483, 1030303.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1025.294 ±(99.9%) 43.445 MB/sec [Average]
[info]   (min, avg, max) = (1010.582, 1025.294, 1039.035), stdev = 11.283
[info]   CI (99.9%): [981.849, 1068.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1080.110 ±(99.9%) 996.097 MB/sec [Average]
[info]   (min, avg, max) = (757.715, 1080.110, 1324.502), stdev = 258.683
[info]   CI (99.9%): [84.013, 2076.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1719.487 ±(99.9%) 1592.442 B/op [Average]
[info]   (min, avg, max) = (1202.381, 1719.487, 2138.954), stdev = 413.552
[info]   CI (99.9%): [127.045, 3311.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.104 ±(99.9%) 0.241 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.104, 0.167), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.383 B/op [Average]
[info]   (min, avg, max) = (0.066, 0.166, 0.269), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 2.702
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 78.26% complete, ETA 00:01:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2859329.583 ops/s
[info] # Warmup Iteration   2: 3463788.491 ops/s
[info] # Warmup Iteration   3: 3180822.593 ops/s
[info] # Warmup Iteration   4: 2496757.175 ops/s
[info] # Warmup Iteration   5: 2485525.699 ops/s
[info] Iteration   1: 2479438.616 ops/s
[info]                  ·gc.alloc.rate:               479.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 325.385 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3504907.455 ops/s
[info]                  ·gc.alloc.rate:                   677.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3545543.355 ops/s
[info]                  ·gc.alloc.rate:               685.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 197.683 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 3512749.936 ops/s
[info]                  ·gc.alloc.rate:                   678.768 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          830.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3527159.854 ops/s
[info]                  ·gc.alloc.rate:                   681.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          757.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3313959.843 ±(99.9%) 1797357.235 ops/s [Average]
[info]   (min, avg, max) = (2479438.616, 3313959.843, 3545543.355), stdev = 466767.966
[info]   CI (99.9%): [1516602.609, 5111317.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   640.358 ±(99.9%) 347.287 MB/sec [Average]
[info]   (min, avg, max) = (479.111, 640.358, 685.095), stdev = 90.189
[info]   CI (99.9%): [293.071, 987.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   700.598 ±(99.9%) 829.918 MB/sec [Average]
[info]   (min, avg, max) = (445.498, 700.598, 955.939), stdev = 215.527
[info]   CI (99.9%): [≈ 0, 1530.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   332.464 ±(99.9%) 328.788 B/op [Average]
[info]   (min, avg, max) = (197.683, 332.464, 429.101), stdev = 85.385
[info]   CI (99.9%): [3.676, 661.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.047), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.345
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 82.61% complete, ETA 00:01:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99471.546 ops/s
[info] # Warmup Iteration   2: 850989.610 ops/s
[info] # Warmup Iteration   3: 909668.776 ops/s
[info] # Warmup Iteration   4: 950583.043 ops/s
[info] # Warmup Iteration   5: 939095.266 ops/s
[info] Iteration   1: 932280.166 ops/s
[info]                  ·gc.alloc.rate:               924.431 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      912.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1539.594 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 927954.649 ops/s
[info]                  ·gc.alloc.rate:                   920.196 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1218.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2065.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 937884.070 ops/s
[info]                  ·gc.alloc.rate:                   930.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1214.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 933406.218 ops/s
[info]                  ·gc.alloc.rate:                   925.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          970.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1636.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 928793.244 ops/s
[info]                  ·gc.alloc.rate:                   921.008 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1109.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1878.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   932063.669 ±(99.9%) 15318.849 ops/s [Average]
[info]   (min, avg, max) = (927954.649, 932063.669, 937884.070), stdev = 3978.256
[info]   CI (99.9%): [916744.820, 947382.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   924.248 ±(99.9%) 15.176 MB/sec [Average]
[info]   (min, avg, max) = (920.196, 924.248, 930.030), stdev = 3.941
[info]   CI (99.9%): [909.071, 939.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   987.009 ±(99.9%) 729.499 MB/sec [Average]
[info]   (min, avg, max) = (724.105, 987.009, 1218.636), stdev = 189.449
[info]   CI (99.9%): [257.510, 1716.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1667.010 ±(99.9%) 1256.521 B/op [Average]
[info]   (min, avg, max) = (1214.590, 1667.010, 2065.943), stdev = 326.315
[info]   CI (99.9%): [410.489, 2923.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.134 ±(99.9%) 0.294 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.134, 0.177), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 13.000), stdev = 3.847
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 86.96% complete, ETA 00:00:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1384829.488 ops/s
[info] # Warmup Iteration   2: 1768351.360 ops/s
[info] # Warmup Iteration   3: 1796297.626 ops/s
[info] # Warmup Iteration   4: 1781942.909 ops/s
[info] # Warmup Iteration   5: 1822629.819 ops/s
[info] Iteration   1: 1810290.011 ops/s
[info]                  ·gc.alloc.rate:               524.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.158 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 425.108 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1817372.808 ops/s
[info]                  ·gc.alloc.rate:               526.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      466.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 404.113 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1820159.376 ops/s
[info]                  ·gc.alloc.rate:               527.553 MB/sec
[info]                  ·gc.alloc.rate.norm:          456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 385.061 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1803741.321 ops/s
[info]                  ·gc.alloc.rate:                   522.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          831.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     724.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1812913.117 ops/s
[info]                  ·gc.alloc.rate:                   525.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          387.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   1812895.326 ±(99.9%) 24610.861 ops/s [Average]
[info]   (min, avg, max) = (1803741.321, 1812895.326, 1820159.376), stdev = 6391.362
[info]   CI (99.9%): [1788284.466, 1837506.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   525.452 ±(99.9%) 7.134 MB/sec [Average]
[info]   (min, avg, max) = (522.798, 525.452, 527.553), stdev = 1.853
[info]   CI (99.9%): [518.318, 532.586] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (456.000, 456.000, 456.000), stdev = 0.001
[info]   CI (99.9%): [456.000, 456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.999 ±(99.9%) 676.711 MB/sec [Average]
[info]   (min, avg, max) = (387.513, 523.999, 831.019), stdev = 175.740
[info]   CI (99.9%): [≈ 0, 1200.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   455.084 ±(99.9%) 594.294 B/op [Average]
[info]   (min, avg, max) = (336.297, 455.084, 724.841), stdev = 154.336
[info]   CI (99.9%): [≈ 0, 1049.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.038 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.018), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 6.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 91.30% complete, ETA 00:00:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1019745.574 ops/s
[info] # Warmup Iteration   2: 1393161.974 ops/s
[info] # Warmup Iteration   3: 1457028.751 ops/s
[info] # Warmup Iteration   4: 1455306.076 ops/s
[info] # Warmup Iteration   5: 1476774.653 ops/s
[info] Iteration   1: 1468449.241 ops/s
[info]                  ·gc.alloc.rate:                   657.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          489.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     524.068 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1460729.599 ops/s
[info]                  ·gc.alloc.rate:                   653.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     982.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1488577.497 ops/s
[info]                  ·gc.alloc.rate:               666.107 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 449.350 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1481786.547 ops/s
[info]                  ·gc.alloc.rate:                   663.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1473194.158 ops/s
[info]                  ·gc.alloc.rate:                   659.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     773.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1474547.408 ±(99.9%) 42146.495 ops/s [Average]
[info]   (min, avg, max) = (1460729.599, 1474547.408, 1488577.497), stdev = 10945.311
[info]   CI (99.9%): [1432400.914, 1516693.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   659.825 ±(99.9%) 18.868 MB/sec [Average]
[info]   (min, avg, max) = (653.637, 659.825, 666.107), stdev = 4.900
[info]   CI (99.9%): [640.957, 678.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   668.806 ±(99.9%) 792.649 MB/sec [Average]
[info]   (min, avg, max) = (425.164, 668.806, 912.316), stdev = 205.848
[info]   CI (99.9%): [≈ 0, 1461.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   714.318 ±(99.9%) 857.232 B/op [Average]
[info]   (min, avg, max) = (449.350, 714.318, 982.610), stdev = 222.620
[info]   CI (99.9%): [≈ 0, 1571.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.128 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.090), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 10.000), stdev = 3.647
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 95.65% complete, ETA 00:00:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4303605.772 ops/s
[info] # Warmup Iteration   2: 4773623.829 ops/s
[info] # Warmup Iteration   3: 4858796.434 ops/s
[info] # Warmup Iteration   4: 4915269.934 ops/s
[info] # Warmup Iteration   5: 4888471.271 ops/s
[info] Iteration   1: 4882839.592 ops/s
[info]                  ·gc.alloc.rate:               347.612 MB/sec
[info]                  ·gc.alloc.rate.norm:          112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94.690 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4867732.542 ops/s
[info]                  ·gc.alloc.rate:               346.539 MB/sec
[info]                  ·gc.alloc.rate.norm:          112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      281.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90.890 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 4879435.138 ops/s
[info]                  ·gc.alloc.rate:                   347.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          269.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4891881.920 ops/s
[info]                  ·gc.alloc.rate:                   348.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          504.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     162.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4897814.282 ops/s
[info]                  ·gc.alloc.rate:               348.668 MB/sec
[info]                  ·gc.alloc.rate.norm:          112.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      236.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 75.991 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   4883940.695 ±(99.9%) 44730.337 ops/s [Average]
[info]   (min, avg, max) = (4867732.542, 4883940.695, 4897814.282), stdev = 11616.326
[info]   CI (99.9%): [4839210.358, 4928671.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   347.690 ±(99.9%) 3.172 MB/sec [Average]
[info]   (min, avg, max) = (346.539, 347.690, 348.668), stdev = 0.824
[info]   CI (99.9%): [344.518, 350.862] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   112.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (112.000, 112.000, 112.000), stdev = 0.001
[info]   CI (99.9%): [112.000, 112.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   317.139 ±(99.9%) 412.171 MB/sec [Average]
[info]   (min, avg, max) = (236.569, 317.139, 504.788), stdev = 107.039
[info]   CI (99.9%): [≈ 0, 729.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   102.143 ±(99.9%) 132.343 B/op [Average]
[info]   (min, avg, max) = (75.991, 102.143, 162.339), stdev = 34.369
[info]   CI (99.9%): [≈ 0, 234.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.013), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:06:04
[info] Benchmark                                                                     Mode  Cnt        Score         Error   Units
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5  1850186.135 ±   55103.057   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5     1317.178 ±      39.194  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5     1120.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5     1422.767 ±    1646.174  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5     1210.373 ±    1402.776    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5        0.062 ±       0.179  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5        0.053 ±       0.153    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5       10.000                counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5       25.000                    ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5  5736233.362 ± 3091887.149   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      991.734 ±     534.589  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5      272.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      996.609 ±    1409.483  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5      275.486 ±     362.538    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5        0.029 ±       0.166  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.008 ±       0.043    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        7.000                counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        7.000                    ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5  2367538.967 ±   98982.463   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5     1480.823 ±      61.781  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5      984.000 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5     1487.275 ±     612.512  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5      988.302 ±     408.716    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5        0.058 ±       0.154  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5        0.039 ±       0.103    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5       12.000                counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5       40.000                    ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5   525253.374 ±   22456.977   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5      534.194 ±      22.832  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5     1600.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5      524.016 ±     587.058  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5     1571.412 ±    1797.511    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5        0.021 ±       0.098  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5        0.062 ±       0.297    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5        6.000                counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5       15.000                    ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5  3109547.611 ±   73419.028   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5      774.787 ±      18.305  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5      392.000 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5      745.252 ±     219.221  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5      376.962 ±     104.575    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5        0.012 ±       0.072  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.006 ±       0.036    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        5.000                counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5       19.000                    ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5   875596.344 ±   15184.780   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5     1033.246 ±      18.428  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5     1856.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5     1112.826 ±    1313.092  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5     1999.078 ±    2358.145    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5        0.025 ±       0.132  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5        0.045 ±       0.238    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        8.000                counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5       25.000                    ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5  2932915.743 ±  103386.768   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5      999.224 ±      35.240  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5      536.000 ±       0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5     1113.567 ±    1474.294  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5      597.049 ±     787.401    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5        0.054 ±       0.209  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5        0.029 ±       0.113    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        8.000                counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5       14.000                    ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5   819474.627 ±   39956.194   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5     1062.577 ±      51.801  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5     2040.001 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5     1128.688 ±     429.263  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5     2166.808 ±     807.603    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5        0.083 ±       0.188  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.160 ±       0.366    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5       17.000                counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5       44.000                    ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5  2225823.493 ±   77093.200   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5     1595.899 ±      55.252  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5     1128.000 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5     1664.371 ±    1271.850  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5     1176.846 ±     915.599    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5        0.050 ±       0.044  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.035 ±       0.032    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5       15.000                counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5       29.000                    ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5   961295.608 ±   46147.951   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5      698.991 ±      33.549  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5     1144.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5      785.534 ±     298.453  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5     1286.323 ±     520.778    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5        0.025 ±       0.132  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.041 ±       0.214    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        5.000                counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        7.000                    ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5  4917194.554 ±   94527.659   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5      150.027 ±       2.885  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5       48.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5      169.206 ±     198.871  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       54.201 ±      65.017    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5        0.021 ±       0.080  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.007 ±       0.026    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5        6.000                counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5       11.000                    ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5  3803726.512 ±  108145.963   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5     1044.467 ±      29.661  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5      432.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5     1012.469 ±    1568.504  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5      419.558 ±     659.171    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5        0.042 ±       0.204  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5        0.017 ±       0.085    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        7.000                counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5       18.000                    ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  9985345.909 ±  194208.320   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5      304.658 ±       5.910  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5       48.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5      331.281 ±     377.514  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       52.230 ±      60.207    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5        0.025 ±       0.088  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5        0.004 ±       0.014    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5        6.000                counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        6.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   828819.428 ±  602447.730   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5     1024.152 ±     744.441  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5     1944.001 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5     1011.703 ±    1303.976  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5     1948.919 ±    2525.351    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5        0.046 ±       0.174  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5        0.087 ±       0.310    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        8.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5       18.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5  2333028.185 ± 1587374.894   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5      486.404 ±     331.008  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5      328.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5      523.995 ±     933.532  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5      347.507 ±     438.023    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5        0.025 ±       0.105  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5        0.017 ±       0.067    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5        6.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5       16.000                    ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5  1537743.965 ±   50476.713   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5      828.852 ±      27.202  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5      848.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5      873.928 ±    1274.722  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      894.185 ±    1309.080    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5        0.017 ±       0.105  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5        0.017 ±       0.107    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        6.000                counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5       13.000                    ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5  3889728.631 ±   38486.176   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5      534.022 ±       5.361  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5      216.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5      549.041 ±     709.090  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5      222.021 ±     285.483    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5        0.012 ±       0.108  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.005 ±       0.044    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        6.000                counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5       13.000                    ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   988393.740 ±   41910.256   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5     1025.294 ±      43.445  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5     1632.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5     1080.110 ±     996.097  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5     1719.487 ±    1592.442    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5        0.104 ±       0.241  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5        0.166 ±       0.383    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5       17.000                counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5       32.000                    ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5  3313959.843 ± 1797357.235   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5      640.358 ±     347.287  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5      304.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5      700.598 ±     829.918  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5      332.464 ±     328.788    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5        0.037 ±       0.174  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5        0.017 ±       0.078    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5        8.000                counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5       20.000                    ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   932063.669 ±   15318.849   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      924.248 ±      15.176  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5     1560.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      987.009 ±     729.499  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5     1667.010 ±    1256.521    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5        0.079 ±       0.174  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.134 ±       0.294    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5       14.000                counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5       38.000                    ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5  1812895.326 ±   24610.861   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5      525.452 ±       7.134  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5      456.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5      523.999 ±     676.711  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5      455.084 ±     594.294    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5        0.008 ±       0.044  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5        0.007 ±       0.038    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5        6.000                counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5       18.000                    ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5  1474547.408 ±   42146.495   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5      659.825 ±      18.868  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5      704.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5      668.806 ±     792.649  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      714.318 ±     857.232    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5        0.046 ±       0.119  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5        0.049 ±       0.128    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        8.000                counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5       27.000                    ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5  4883940.695 ±   44730.337   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5      347.690 ±       3.172  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5      112.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      317.139 ±     412.171  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      102.143 ±     132.343    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5        0.012 ±       0.072  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5        0.004 ±       0.023    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5        6.000                counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5       16.000                    ms
[success] Total time: 385 s, completed Oct 8, 2017 5:31:43 PM
