[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 30, 2017 12:50:20 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val fields: Array[Array[Char]] = Array("s".toCharArray, "bd".toCharArray, "os".toCharArray);
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = nextToken(in) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1511558359 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = readString(in, _s)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case 1390842851 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = readBigDecimal(in, _bd)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -1646506989 => if (isReusableCharsEqualsTo(in, l, fields(2)))
[info]                       _os = Option(readString(in, null))
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             e0(out, x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(out: JsonStream, x: scala.math.BigDecimal): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:53:47: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val fields: Array[Array[Char]] = Array("aa".toCharArray, "a".toCharArray);
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.Arrays = nextToken(in) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1239361126 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d1(in, _aa)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case 273079706 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d2(in, _a)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("a");
[info]             e3(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: Array[Int]): Array[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: Array[Array[Int]]): Array[Array[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: Array[BigInt]): Array[BigInt] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(readBigInt(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.math.BigInt): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull();
[info]       private def e3(out: JsonStream, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e2(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: Codec[Arrays] = materialize[Arrays]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:55:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       private val fields: Array[Array[Char]] = Array("bs".toCharArray, "mbs".toCharArray);
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.BitSets = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 716648771 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       skip(in)
[info]                     case -280994862 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:57:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       private val fields: Array[Array[Char]] = Array("l".toCharArray, "s".toCharArray, "ls".toCharArray);
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.Iterables = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case -1694772158 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       skip(in)
[info]                     case 1511558359 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       skip(in)
[info]                     case -713424955 => if (isReusableCharsEqualsTo(in, l, fields(2)))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: List[String]): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(readString(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: List[Set[Int]]): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:59:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.Maps = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1097946203 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       skip(in)
[info]                     case 208180265 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in, HashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:61:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1097946203 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       skip(in)
[info]                     case 208180265 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:63:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       private val fields: Array[Array[Char]] = Array("m".toCharArray, "mm".toCharArray);
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1097946203 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       skip(in)
[info]                     case 208180265 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in, LongMap.empty[Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:65:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val fields: Array[Array[Char]] = Array("b".toCharArray, "s".toCharArray, "i".toCharArray, "l".toCharArray, "bl".toCharArray, "ch".toCharArray, "dbl".toCharArray, "f".toCharArray);
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.Primitives = nextToken(in) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 479358114 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = readByte(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case 1511558359 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = readShort(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -609864624 => if (isReusableCharsEqualsTo(in, l, fields(2)))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = readInt(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -1694772158 => if (isReusableCharsEqualsTo(in, l, fields(3)))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = readLong(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case 510063061 => if (isReusableCharsEqualsTo(in, l, fields(4)))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = readBoolean(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -1197647055 => if (isReusableCharsEqualsTo(in, l, fields(5)))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = readChar(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -273495709 => if (isReusableCharsEqualsTo(in, l, fields(6)))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = readDouble(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -2107736097 => if (isReusableCharsEqualsTo(in, l, fields(7)))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = readFloat(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:67:61: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.JsonIteratorUtil._;
[info]   import com.jsoniter.output.JsonStream;
[info]   import com.jsoniter.output.JsonStreamUtil._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val fields: Array[Array[Char]] = Array("s".toCharArray, "l".toCharArray);
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def read(in: JsonIterator): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = nextToken(in) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 {
[info]                   val l = readObjectFieldAsReusableChars(in);
[info]                   ((reusableCharsToHashCode(in, l): @switch) match {
[info]                     case 1511558359 => if (isReusableCharsEqualsTo(in, l, fields(0)))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = readString(in, _s)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case -1694772158 => if (isReusableCharsEqualsTo(in, l, fields(1)))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = readLong(in)
[info]                       }
[info]                     else
[info]                       skip(in)
[info]                     case _ => skip(in)
[info]                   })
[info]                 }
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: Codec[ExtractFields] = materialize[ExtractFields]
[info]                                                             ^
[info] Done compiling.
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 741681.035 ops/s
[info] # Warmup Iteration   2: 1130782.675 ops/s
[info] # Warmup Iteration   3: 1198617.135 ops/s
[info] # Warmup Iteration   4: 1191488.426 ops/s
[info] # Warmup Iteration   5: 1188170.655 ops/s
[info] Iteration   1: 1195598.687 ops/s
[info]                  ·gc.alloc.rate:                   1890.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2219.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1184582.238 ops/s
[info]                  ·gc.alloc.rate:                   1873.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2697.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   3: 1187251.238 ops/s
[info]                  ·gc.alloc.rate:                   1878.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2694.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1204495.916 ops/s
[info]                  ·gc.alloc.rate:                   1904.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2219.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1189666.248 ops/s
[info]                  ·gc.alloc.rate:                   1881.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2697.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1192318.865 ±(99.9%) 30539.905 ops/s [Average]
[info]   (min, avg, max) = (1184582.238, 1192318.865, 1204495.916), stdev = 7931.116
[info]   CI (99.9%): [1161778.960, 1222858.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1885.749 ±(99.9%) 47.792 MB/sec [Average]
[info]   (min, avg, max) = (1873.380, 1885.749, 1904.842), stdev = 12.411
[info]   CI (99.9%): [1837.958, 1933.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2488.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2488.000, 2488.000, 2488.000), stdev = 0.001
[info]   CI (99.9%): [2488.000, 2488.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1898.233 ±(99.9%) 721.778 MB/sec [Average]
[info]   (min, avg, max) = (1686.645, 1898.233, 2039.850), stdev = 187.443
[info]   CI (99.9%): [1176.455, 2620.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2505.691 ±(99.9%) 1006.073 B/op [Average]
[info]   (min, avg, max) = (2219.399, 2505.691, 2697.580), stdev = 261.274
[info]   CI (99.9%): [1499.618, 3511.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.055, 0.110), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   59.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.800, 20.000), stdev = 5.541
[info]   CI (99.9%): [59.000, 59.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1143856.779 ops/s
[info] # Warmup Iteration   2: 1717593.509 ops/s
[info] # Warmup Iteration   3: 1730462.832 ops/s
[info] # Warmup Iteration   4: 1741755.384 ops/s
[info] # Warmup Iteration   5: 1752730.144 ops/s
[info] Iteration   1: 1743718.642 ops/s
[info]                  ·gc.alloc.rate:               1223.562 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1191.715 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 1740811.086 ops/s
[info]                  ·gc.alloc.rate:                   1221.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1203.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1742359.110 ops/s
[info]                  ·gc.alloc.rate:                   1222.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     906.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1747598.641 ops/s
[info]                  ·gc.alloc.rate:                   1226.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1210.036 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1746178.766 ops/s
[info]                  ·gc.alloc.rate:                   1225.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1215.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1744133.249 ±(99.9%) 10641.531 ops/s [Average]
[info]   (min, avg, max) = (1740811.086, 1744133.249, 1747598.641), stdev = 2763.572
[info]   CI (99.9%): [1733491.718, 1754774.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1223.914 ±(99.9%) 7.418 MB/sec [Average]
[info]   (min, avg, max) = (1221.622, 1223.914, 1226.325), stdev = 1.926
[info]   CI (99.9%): [1216.496, 1231.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1269.836 ±(99.9%) 574.692 MB/sec [Average]
[info]   (min, avg, max) = (1003.610, 1269.836, 1349.497), stdev = 149.246
[info]   CI (99.9%): [695.143, 1844.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1145.357 ±(99.9%) 515.981 B/op [Average]
[info]   (min, avg, max) = (906.192, 1145.357, 1215.826), stdev = 133.999
[info]   CI (99.9%): [629.375, 1661.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.030, 0.056), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.140
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:15:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5723871.561 ops/s
[info] # Warmup Iteration   2: 6091104.465 ops/s
[info] # Warmup Iteration   3: 6117814.238 ops/s
[info] # Warmup Iteration   4: 6170968.450 ops/s
[info] # Warmup Iteration   5: 6067359.125 ops/s
[info] Iteration   1: 6174852.042 ops/s
[info]                  ·gc.alloc.rate:                   784.962 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 6077110.366 ops/s
[info]                  ·gc.alloc.rate:                   772.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6105639.627 ops/s
[info]                  ·gc.alloc.rate:                   775.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6168102.113 ops/s
[info]                  ·gc.alloc.rate:                   784.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     169.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6136844.776 ops/s
[info]                  ·gc.alloc.rate:                   780.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6132509.785 ±(99.9%) 159576.252 ops/s [Average]
[info]   (min, avg, max) = (6077110.366, 6132509.785, 6174852.042), stdev = 41441.446
[info]   CI (99.9%): [5972933.533, 6292086.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   779.360 ±(99.9%) 21.131 MB/sec [Average]
[info]   (min, avg, max) = (772.531, 779.360, 784.962), stdev = 5.488
[info]   CI (99.9%): [758.229, 800.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.167 ±(99.9%) 701.939 MB/sec [Average]
[info]   (min, avg, max) = (654.747, 792.167, 997.903), stdev = 182.291
[info]   CI (99.9%): [90.228, 1494.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   203.425 ±(99.9%) 183.125 B/op [Average]
[info]   (min, avg, max) = (166.823, 203.425, 255.834), stdev = 47.557
[info]   CI (99.9%): [20.300, 386.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.022), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 8.000), stdev = 2.608
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 244660.462 ops/s
[info] # Warmup Iteration   2: 407715.861 ops/s
[info] # Warmup Iteration   3: 423491.714 ops/s
[info] # Warmup Iteration   4: 426936.037 ops/s
[info] # Warmup Iteration   5: 424172.548 ops/s
[info] Iteration   1: 425070.172 ops/s
[info]                  ·gc.alloc.rate:                   1123.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3655.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 421295.370 ops/s
[info]                  ·gc.alloc.rate:                   1113.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3711.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 427484.439 ops/s
[info]                  ·gc.alloc.rate:                   1130.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4905.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.230 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 423925.046 ops/s
[info]                  ·gc.alloc.rate:               1120.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3725.704 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 425507.153 ops/s
[info]                  ·gc.alloc.rate:                   1125.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4972.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   424656.436 ±(99.9%) 8764.804 ops/s [Average]
[info]   (min, avg, max) = (421295.370, 424656.436, 427484.439), stdev = 2276.192
[info]   CI (99.9%): [415891.632, 433421.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1122.864 ±(99.9%) 23.166 MB/sec [Average]
[info]   (min, avg, max) = (1113.978, 1122.864, 1130.335), stdev = 6.016
[info]   CI (99.9%): [1099.698, 1146.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.623 ±(99.9%) 725.347 MB/sec [Average]
[info]   (min, avg, max) = (987.592, 1132.623, 1344.836), stdev = 188.370
[info]   CI (99.9%): [407.276, 1857.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4194.071 ±(99.9%) 2621.135 B/op [Average]
[info]   (min, avg, max) = (3655.380, 4194.071, 4972.299), stdev = 680.700
[info]   CI (99.9%): [1572.936, 6815.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 0.472 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.154, 0.311), stdev = 0.123
[info]   CI (99.9%): [≈ 0, 0.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 8.000), stdev = 2.449
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 377916.752 ops/s
[info] # Warmup Iteration   2: 634206.902 ops/s
[info] # Warmup Iteration   3: 647814.626 ops/s
[info] # Warmup Iteration   4: 644800.431 ops/s
[info] # Warmup Iteration   5: 642480.508 ops/s
[info] Iteration   1: 648082.221 ops/s
[info]                  ·gc.alloc.rate:                   2119.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2028.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4925.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 654035.567 ops/s
[info]                  ·gc.alloc.rate:                   2138.429 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4894.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 650327.800 ops/s
[info]                  ·gc.alloc.rate:                   2126.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.437 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5753.753 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 642045.669 ops/s
[info]                  ·gc.alloc.rate:                   2099.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4998.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 657587.827 ops/s
[info]                  ·gc.alloc.rate:                   2150.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4888.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   650415.817 ±(99.9%) 22785.038 ops/s [Average]
[info]   (min, avg, max) = (642045.669, 650415.817, 657587.827), stdev = 5917.202
[info]   CI (99.9%): [627630.779, 673200.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2126.639 ±(99.9%) 74.523 MB/sec [Average]
[info]   (min, avg, max) = (2099.248, 2126.639, 2150.110), stdev = 19.353
[info]   CI (99.9%): [2052.116, 2201.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2104.972 ±(99.9%) 589.022 MB/sec [Average]
[info]   (min, avg, max) = (2028.884, 2104.972, 2378.437), stdev = 152.967
[info]   CI (99.9%): [1515.950, 2693.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5091.918 ±(99.9%) 1434.608 B/op [Average]
[info]   (min, avg, max) = (4888.184, 5091.918, 5753.753), stdev = 372.563
[info]   CI (99.9%): [3657.310, 6526.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.071, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.171 ±(99.9%) 0.327 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.171, 0.255), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.400, 21.000), stdev = 6.107
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 782998.471 ops/s
[info] # Warmup Iteration   2: 1219701.169 ops/s
[info] # Warmup Iteration   3: 1221763.592 ops/s
[info] # Warmup Iteration   4: 1217363.993 ops/s
[info] # Warmup Iteration   5: 1224071.872 ops/s
[info] Iteration   1: 1225737.923 ops/s
[info]                  ·gc.alloc.rate:                   1165.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1713.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1214484.211 ops/s
[info]                  ·gc.alloc.rate:               1154.896 MB/sec
[info]                  ·gc.alloc.rate.norm:          1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1302.706 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 1215208.713 ops/s
[info]                  ·gc.alloc.rate:                   1155.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1306.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1216789.768 ops/s
[info]                  ·gc.alloc.rate:                   1156.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1744.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1219934.744 ops/s
[info]                  ·gc.alloc.rate:                   1160.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1308.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1218431.072 ±(99.9%) 17678.009 ops/s [Average]
[info]   (min, avg, max) = (1214484.211, 1218431.072, 1225737.923), stdev = 4590.923
[info]   CI (99.9%): [1200753.063, 1236109.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1158.617 ±(99.9%) 16.805 MB/sec [Average]
[info]   (min, avg, max) = (1154.896, 1158.617, 1165.582), stdev = 4.364
[info]   CI (99.9%): [1141.812, 1175.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1496.000, 1496.000, 1496.000), stdev = 0.001
[info]   CI (99.9%): [1496.000, 1496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1142.659 ±(99.9%) 701.678 MB/sec [Average]
[info]   (min, avg, max) = (1005.675, 1142.659, 1349.445), stdev = 182.224
[info]   CI (99.9%): [440.981, 1844.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1475.027 ±(99.9%) 894.074 B/op [Average]
[info]   (min, avg, max) = (1302.706, 1475.027, 1744.845), stdev = 232.188
[info]   CI (99.9%): [580.953, 2369.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.081), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2008670.086 ops/s
[info] # Warmup Iteration   2: 2528904.256 ops/s
[info] # Warmup Iteration   3: 2550899.191 ops/s
[info] # Warmup Iteration   4: 2540628.809 ops/s
[info] # Warmup Iteration   5: 2512792.476 ops/s
[info] Iteration   1: 2513691.755 ops/s
[info]                  ·gc.alloc.rate:                   1150.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620.629 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 2574371.629 ops/s
[info]                  ·gc.alloc.rate:                   1178.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     812.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2576465.482 ops/s
[info]                  ·gc.alloc.rate:                   1179.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     816.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2533318.937 ops/s
[info]                  ·gc.alloc.rate:                   1159.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     625.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2570249.035 ops/s
[info]                  ·gc.alloc.rate:                   1176.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     824.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2553619.368 ±(99.9%) 109514.588 ops/s [Average]
[info]   (min, avg, max) = (2513691.755, 2553619.368, 2576465.482), stdev = 28440.591
[info]   CI (99.9%): [2444104.779, 2663133.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1168.647 ±(99.9%) 50.107 MB/sec [Average]
[info]   (min, avg, max) = (1150.374, 1168.647, 1179.095), stdev = 13.013
[info]   CI (99.9%): [1118.540, 1218.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1202.457 ±(99.9%) 714.944 MB/sec [Average]
[info]   (min, avg, max) = (991.605, 1202.457, 1347.473), stdev = 185.669
[info]   CI (99.9%): [487.512, 1917.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   739.910 ±(99.9%) 411.416 B/op [Average]
[info]   (min, avg, max) = (620.629, 739.910, 824.811), stdev = 106.843
[info]   CI (99.9%): [328.494, 1151.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.026, 0.051), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 16.000), stdev = 5.762
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112246.905 ops/s
[info] # Warmup Iteration   2: 199578.101 ops/s
[info] # Warmup Iteration   3: 211009.165 ops/s
[info] # Warmup Iteration   4: 207323.416 ops/s
[info] # Warmup Iteration   5: 207300.564 ops/s
[info] Iteration   1: 211186.507 ops/s
[info]                  ·gc.alloc.rate:                   1285.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7384.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 210429.057 ops/s
[info]                  ·gc.alloc.rate:                   1280.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9944.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.934 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 211023.983 ops/s
[info]                  ·gc.alloc.rate:                   1284.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9976.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.311 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 210252.724 ops/s
[info]                  ·gc.alloc.rate:                   1279.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10057.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.467 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 209161.290 ops/s
[info]                  ·gc.alloc.rate:                   1273.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10145.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.313 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay":
[info]   210410.712 ±(99.9%) 3083.107 ops/s [Average]
[info]   (min, avg, max) = (209161.290, 210410.712, 211186.507), stdev = 800.673
[info]   CI (99.9%): [207327.605, 213493.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1280.696 ±(99.9%) 18.765 MB/sec [Average]
[info]   (min, avg, max) = (1273.091, 1280.696, 1285.433), stdev = 4.873
[info]   CI (99.9%): [1261.932, 1299.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9576.002, 9576.002, 9576.002), stdev = 0.001
[info]   CI (99.9%): [9576.002, 9576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1270.499 ±(99.9%) 601.653 MB/sec [Average]
[info]   (min, avg, max) = (991.273, 1270.499, 1348.804), stdev = 156.247
[info]   CI (99.9%): [668.846, 1872.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9501.881 ±(99.9%) 4567.411 B/op [Average]
[info]   (min, avg, max) = (7384.618, 9501.881, 10145.505), stdev = 1186.142
[info]   CI (99.9%): [4934.470, 14069.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.467 ±(99.9%) 1.039 B/op [Average]
[info]   (min, avg, max) = (0.310, 0.467, 0.934), stdev = 0.270
[info]   CI (99.9%): [≈ 0, 1.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 2.828
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 993047.161 ops/s
[info] # Warmup Iteration   2: 1582861.508 ops/s
[info] # Warmup Iteration   3: 1585716.359 ops/s
[info] # Warmup Iteration   4: 1589546.862 ops/s
[info] # Warmup Iteration   5: 1576785.854 ops/s
[info] Iteration   1: 1570205.133 ops/s
[info]                  ·gc.alloc.rate:                   1014.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1557079.605 ops/s
[info]                  ·gc.alloc.rate:                   1005.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1011.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1567570.962 ops/s
[info]                  ·gc.alloc.rate:                   1012.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1557751.085 ops/s
[info]                  ·gc.alloc.rate:                   1005.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1017.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1572108.576 ops/s
[info]                  ·gc.alloc.rate:                   1015.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1012.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1564943.072 ±(99.9%) 27193.993 ops/s [Average]
[info]   (min, avg, max) = (1557079.605, 1564943.072, 1572108.576), stdev = 7062.194
[info]   CI (99.9%): [1537749.079, 1592137.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1010.649 ±(99.9%) 17.517 MB/sec [Average]
[info]   (min, avg, max) = (1005.614, 1010.649, 1015.230), stdev = 4.549
[info]   CI (99.9%): [993.132, 1028.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.648 ±(99.9%) 21.027 MB/sec [Average]
[info]   (min, avg, max) = (997.345, 1004.648, 1011.268), stdev = 5.461
[info]   CI (99.9%): [983.621, 1025.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1009.982 ±(99.9%) 26.380 B/op [Average]
[info]   (min, avg, max) = (999.240, 1009.982, 1017.987), stdev = 6.851
[info]   CI (99.9%): [983.603, 1036.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.000, 15.000), stdev = 5.099
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6574980.437 ops/s
[info] # Warmup Iteration   2: 6758125.190 ops/s
[info] # Warmup Iteration   3: 6928035.217 ops/s
[info] # Warmup Iteration   4: 6952742.993 ops/s
[info] # Warmup Iteration   5: 6945609.136 ops/s
[info] Iteration   1: 6854674.669 ops/s
[info]                  ·gc.alloc.rate:                   731.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6808674.697 ops/s
[info]                  ·gc.alloc.rate:                   727.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6888858.781 ops/s
[info]                  ·gc.alloc.rate:                   735.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6911778.200 ops/s
[info]                  ·gc.alloc.rate:                   738.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     150.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 6895837.843 ops/s
[info]                  ·gc.alloc.rate:                   736.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.387 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   6871964.838 ±(99.9%) 158122.996 ops/s [Average]
[info]   (min, avg, max) = (6808674.697, 6871964.838, 6911778.200), stdev = 41064.040
[info]   CI (99.9%): [6713841.842, 7030087.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   733.823 ±(99.9%) 16.826 MB/sec [Average]
[info]   (min, avg, max) = (727.102, 733.823, 738.090), stdev = 4.370
[info]   CI (99.9%): [716.998, 750.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.451 ±(99.9%) 560.293 MB/sec [Average]
[info]   (min, avg, max) = (653.736, 724.451, 984.661), stdev = 145.506
[info]   CI (99.9%): [164.158, 1284.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   165.995 ±(99.9%) 132.429 B/op [Average]
[info]   (min, avg, max) = (150.044, 165.995, 227.510), stdev = 34.391
[info]   CI (99.9%): [33.565, 298.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.011, 0.014), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.200, 8.000), stdev = 2.950
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131631.698 ops/s
[info] # Warmup Iteration   2: 258948.070 ops/s
[info] # Warmup Iteration   3: 266695.984 ops/s
[info] # Warmup Iteration   4: 266439.775 ops/s
[info] # Warmup Iteration   5: 262277.091 ops/s
[info] Iteration   1: 266711.101 ops/s
[info]                  ·gc.alloc.rate:                   1259.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              7432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7791.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 265258.696 ops/s
[info]                  ·gc.alloc.rate:                   1253.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              7432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7889.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 267233.274 ops/s
[info]                  ·gc.alloc.rate:                   1262.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              7432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7878.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 267434.540 ops/s
[info]                  ·gc.alloc.rate:               1263.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          7432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5927.325 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 268579.578 ops/s
[info]                  ·gc.alloc.rate:                   1268.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              7432.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7898.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   267043.438 ±(99.9%) 4654.534 ops/s [Average]
[info]   (min, avg, max) = (265258.696, 267043.438, 268579.578), stdev = 1208.768
[info]   CI (99.9%): [262388.904, 271697.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1261.483 ±(99.9%) 21.915 MB/sec [Average]
[info]   (min, avg, max) = (1253.089, 1261.483, 1268.738), stdev = 5.691
[info]   CI (99.9%): [1239.568, 1283.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7432.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7432.002, 7432.002, 7432.002), stdev = 0.001
[info]   CI (99.9%): [7432.002, 7432.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1269.022 ±(99.9%) 564.256 MB/sec [Average]
[info]   (min, avg, max) = (1007.523, 1269.022, 1348.443), stdev = 146.536
[info]   CI (99.9%): [704.766, 1833.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7476.950 ±(99.9%) 3339.773 B/op [Average]
[info]   (min, avg, max) = (5927.325, 7476.950, 7898.896), stdev = 867.328
[info]   CI (99.9%): [4137.176, 10816.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.197 ±(99.9%) 0.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.197, 0.494), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 0.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 9.000), stdev = 3.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 367814.313 ops/s
[info] # Warmup Iteration   2: 530888.804 ops/s
[info] # Warmup Iteration   3: 550262.702 ops/s
[info] # Warmup Iteration   4: 556911.807 ops/s
[info] # Warmup Iteration   5: 557955.129 ops/s
[info] Iteration   1: 548822.917 ops/s
[info]                  ·gc.alloc.rate:                   1822.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5798.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 556173.321 ops/s
[info]                  ·gc.alloc.rate:                   1846.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4786.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 552440.966 ops/s
[info]                  ·gc.alloc.rate:                   1834.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5795.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 547018.050 ops/s
[info]                  ·gc.alloc.rate:                   1816.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4887.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 551164.198 ops/s
[info]                  ·gc.alloc.rate:                   1830.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4850.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   551123.890 ±(99.9%) 13530.161 ops/s [Average]
[info]   (min, avg, max) = (547018.050, 551123.890, 556173.321), stdev = 3513.740
[info]   CI (99.9%): [537593.730, 564654.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1829.979 ±(99.9%) 45.020 MB/sec [Average]
[info]   (min, avg, max) = (1816.301, 1829.979, 1846.780), stdev = 11.692
[info]   CI (99.9%): [1784.958, 1874.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.725 ±(99.9%) 700.807 MB/sec [Average]
[info]   (min, avg, max) = (1692.019, 1829.725, 2035.109), stdev = 181.997
[info]   CI (99.9%): [1128.918, 2530.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5223.790 ±(99.9%) 2020.935 B/op [Average]
[info]   (min, avg, max) = (4786.228, 5223.790, 5798.953), stdev = 524.831
[info]   CI (99.9%): [3202.855, 7244.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.192 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.107, 0.178), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (9.000, 11.000, 16.000), stdev = 2.915
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 418688.820 ops/s
[info] # Warmup Iteration   2: 676415.131 ops/s
[info] # Warmup Iteration   3: 677304.007 ops/s
[info] # Warmup Iteration   4: 687892.677 ops/s
[info] # Warmup Iteration   5: 686680.140 ops/s
[info] Iteration   1: 686064.447 ops/s
[info]                  ·gc.alloc.rate:               858.205 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1517.481 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 681732.973 ops/s
[info]                  ·gc.alloc.rate:                   852.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2302.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 675224.946 ops/s
[info]                  ·gc.alloc.rate:               844.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1555.055 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 680561.277 ops/s
[info]                  ·gc.alloc.rate:                   851.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2320.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 686522.883 ops/s
[info]                  ·gc.alloc.rate:                   858.763 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2310.591 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   682021.305 ±(99.9%) 17752.316 ops/s [Average]
[info]   (min, avg, max) = (675224.946, 682021.305, 686522.883), stdev = 4610.220
[info]   CI (99.9%): [664268.989, 699773.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   853.154 ±(99.9%) 22.164 MB/sec [Average]
[info]   (min, avg, max) = (844.665, 853.154, 858.763), stdev = 5.756
[info]   CI (99.9%): [830.990, 875.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   867.796 ±(99.9%) 714.504 MB/sec [Average]
[info]   (min, avg, max) = (661.742, 867.796, 1008.257), stdev = 185.555
[info]   CI (99.9%): [153.292, 1582.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2001.216 ±(99.9%) 1635.357 B/op [Average]
[info]   (min, avg, max) = (1517.481, 2001.216, 2320.792), stdev = 424.697
[info]   CI (99.9%): [365.859, 3636.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.241 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.144), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 11.000), stdev = 3.162
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3915741.404 ops/s
[info] # Warmup Iteration   2: 4344919.080 ops/s
[info] # Warmup Iteration   3: 4365408.883 ops/s
[info] # Warmup Iteration   4: 4366397.811 ops/s
[info] # Warmup Iteration   5: 4369091.581 ops/s
[info] Iteration   1: 4347062.198 ops/s
[info]                  ·gc.alloc.rate:      198.950 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4363535.496 ops/s
[info]                  ·gc.alloc.rate:               199.698 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 92.267 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4340183.300 ops/s
[info]                  ·gc.alloc.rate:                   198.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4350717.862 ops/s
[info]                  ·gc.alloc.rate:      199.118 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4308979.746 ops/s
[info]                  ·gc.alloc.rate:                   197.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.814 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   4342095.720 ±(99.9%) 78419.862 ops/s [Average]
[info]   (min, avg, max) = (4308979.746, 4342095.720, 4363535.496), stdev = 20365.389
[info]   CI (99.9%): [4263675.858, 4420515.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   198.721 ±(99.9%) 3.586 MB/sec [Average]
[info]   (min, avg, max) = (197.205, 198.721, 199.698), stdev = 0.931
[info]   CI (99.9%): [195.135, 202.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.476 ±(99.9%) 598.796 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.476, 325.559), stdev = 155.506
[info]   CI (99.9%): [≈ 0, 766.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   60.778 ±(99.9%) 217.623 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.778, 118.862), stdev = 56.516
[info]   CI (99.9%): [≈ 0, 278.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.454 ±(99.9%) 3.820 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 2.228), stdev = 0.992
[info]   CI (99.9%): [≈ 0, 4.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 1.395 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.166, 0.814), stdev = 0.362
[info]   CI (99.9%): [≈ 0, 1.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108868.328 ops/s
[info] # Warmup Iteration   2: 200882.644 ops/s
[info] # Warmup Iteration   3: 209012.328 ops/s
[info] # Warmup Iteration   4: 209377.457 ops/s
[info] # Warmup Iteration   5: 209235.317 ops/s
[info] Iteration   1: 208030.923 ops/s
[info]                  ·gc.alloc.rate:                   1142.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.582 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7468.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.315 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 208822.755 ops/s
[info]                  ·gc.alloc.rate:                   1146.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9991.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 205942.567 ops/s
[info]                  ·gc.alloc.rate:                   1130.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7639.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 203703.174 ops/s
[info]                  ·gc.alloc.rate:                   1120.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10311.685 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 208143.092 ops/s
[info]                  ·gc.alloc.rate:                   1143.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7626.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   206928.502 ±(99.9%) 8089.460 ops/s [Average]
[info]   (min, avg, max) = (203703.174, 206928.502, 208822.755), stdev = 2100.807
[info]   CI (99.9%): [198839.043, 215017.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1136.656 ±(99.9%) 42.484 MB/sec [Average]
[info]   (min, avg, max) = (1120.018, 1136.656, 1146.810), stdev = 11.033
[info]   CI (99.9%): [1094.172, 1179.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1131.858 ±(99.9%) 702.291 MB/sec [Average]
[info]   (min, avg, max) = (987.582, 1131.858, 1336.721), stdev = 182.383
[info]   CI (99.9%): [429.568, 1834.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8607.345 ±(99.9%) 5451.209 B/op [Average]
[info]   (min, avg, max) = (7468.842, 8607.345, 10311.685), stdev = 1415.662
[info]   CI (99.9%): [3156.136, 14058.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.347 ±(99.9%) 0.990 B/op [Average]
[info]   (min, avg, max) = (0.157, 0.347, 0.784), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 15.000), stdev = 5.128
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2713936.643 ops/s
[info] # Warmup Iteration   2: 3039611.876 ops/s
[info] # Warmup Iteration   3: 3055182.705 ops/s
[info] # Warmup Iteration   4: 3010396.390 ops/s
[info] # Warmup Iteration   5: 3005896.712 ops/s
[info] Iteration   1: 2968810.813 ops/s
[info]                  ·gc.alloc.rate:                   1403.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     882.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2967997.014 ops/s
[info]                  ·gc.alloc.rate:                   1403.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     710.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3010793.662 ops/s
[info]                  ·gc.alloc.rate:                   1423.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     703.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3003271.242 ops/s
[info]                  ·gc.alloc.rate:                   1420.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     707.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2963593.997 ops/s
[info]                  ·gc.alloc.rate:                   1401.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     718.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   2982893.345 ±(99.9%) 85809.110 ops/s [Average]
[info]   (min, avg, max) = (2963593.997, 2982893.345, 3010793.662), stdev = 22284.353
[info]   CI (99.9%): [2897084.236, 3068702.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1410.681 ±(99.9%) 40.648 MB/sec [Average]
[info]   (min, avg, max) = (1401.527, 1410.681, 1423.845), stdev = 10.556
[info]   CI (99.9%): [1370.033, 1451.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1411.606 ±(99.9%) 547.429 MB/sec [Average]
[info]   (min, avg, max) = (1340.564, 1411.606, 1665.750), stdev = 142.166
[info]   CI (99.9%): [864.177, 1959.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   744.680 ±(99.9%) 297.917 B/op [Average]
[info]   (min, avg, max) = (703.431, 744.680, 882.712), stdev = 77.368
[info]   CI (99.9%): [446.763, 1042.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.026, 0.044), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 15.000), stdev = 4.690
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131733.580 ops/s
[info] # Warmup Iteration   2: 237391.668 ops/s
[info] # Warmup Iteration   3: 247510.341 ops/s
[info] # Warmup Iteration   4: 247956.078 ops/s
[info] # Warmup Iteration   5: 248588.594 ops/s
[info] Iteration   1: 248491.491 ops/s
[info]                  ·gc.alloc.rate:                   1335.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8379.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 246592.923 ops/s
[info]                  ·gc.alloc.rate:                   1325.421 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8499.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.930 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 246365.162 ops/s
[info]                  ·gc.alloc.rate:                   1324.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8555.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 247029.549 ops/s
[info]                  ·gc.alloc.rate:               1327.800 MB/sec
[info]                  ·gc.alloc.rate.norm:          8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8570.951 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 240494.814 ops/s
[info]                  ·gc.alloc.rate:                   1292.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8830.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.272 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   245794.788 ±(99.9%) 11844.864 ops/s [Average]
[info]   (min, avg, max) = (240494.814, 245794.788, 248491.491), stdev = 3076.074
[info]   CI (99.9%): [233949.924, 257639.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1321.117 ±(99.9%) 63.654 MB/sec [Average]
[info]   (min, avg, max) = (1292.634, 1321.117, 1335.589), stdev = 16.531
[info]   CI (99.9%): [1257.463, 1384.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.221 ±(99.9%) 40.796 MB/sec [Average]
[info]   (min, avg, max) = (1323.483, 1338.221, 1349.818), stdev = 10.594
[info]   CI (99.9%): [1297.426, 1379.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8567.073 ±(99.9%) 636.162 B/op [Average]
[info]   (min, avg, max) = (8379.359, 8567.073, 8830.082), stdev = 165.209
[info]   CI (99.9%): [7930.910, 9203.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.347 ±(99.9%) 1.382 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.347, 0.930), stdev = 0.359
[info]   CI (99.9%): [≈ 0, 1.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.200, 12.000), stdev = 1.483
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 328167.901 ops/s
[info] # Warmup Iteration   2: 498407.055 ops/s
[info] # Warmup Iteration   3: 525286.473 ops/s
[info] # Warmup Iteration   4: 520121.030 ops/s
[info] # Warmup Iteration   5: 521869.248 ops/s
[info] Iteration   1: 535925.179 ops/s
[info]                  ·gc.alloc.rate:                   1896.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5938.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 535327.689 ops/s
[info]                  ·gc.alloc.rate:                   1894.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5969.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 535115.917 ops/s
[info]                  ·gc.alloc.rate:               1893.835 MB/sec
[info]                  ·gc.alloc.rate.norm:          5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4988.181 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 527346.992 ops/s
[info]                  ·gc.alloc.rate:                   1866.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6083.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 535248.777 ops/s
[info]                  ·gc.alloc.rate:                   1894.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4996.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   533792.911 ±(99.9%) 13926.596 ops/s [Average]
[info]   (min, avg, max) = (527346.992, 533792.911, 535925.179), stdev = 3616.693
[info]   CI (99.9%): [519866.314, 547719.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1889.145 ±(99.9%) 49.343 MB/sec [Average]
[info]   (min, avg, max) = (1866.307, 1889.145, 1896.707), stdev = 12.814
[info]   CI (99.9%): [1839.802, 1938.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5568.001, 5568.001, 5568.001), stdev = 0.001
[info]   CI (99.9%): [5568.001, 5568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1897.937 ±(99.9%) 702.226 MB/sec [Average]
[info]   (min, avg, max) = (1696.622, 1897.937, 2039.101), stdev = 182.366
[info]   CI (99.9%): [1195.711, 2600.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5595.231 ±(99.9%) 2129.201 B/op [Average]
[info]   (min, avg, max) = (4988.181, 5595.231, 6083.519), stdev = 552.947
[info]   CI (99.9%): [3466.029, 7724.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 0.309 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.135, 0.186), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   57.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 11.400, 19.000), stdev = 5.320
[info]   CI (99.9%): [57.000, 57.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 295201.715 ops/s
[info] # Warmup Iteration   2: 522585.862 ops/s
[info] # Warmup Iteration   3: 532047.950 ops/s
[info] # Warmup Iteration   4: 534002.776 ops/s
[info] # Warmup Iteration   5: 534418.945 ops/s
[info] Iteration   1: 535904.534 ops/s
[info]                  ·gc.alloc.rate:                   545.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1917.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 532225.336 ops/s
[info]                  ·gc.alloc.rate:                   541.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1940.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 531818.097 ops/s
[info]                  ·gc.alloc.rate:               540.859 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 972.888 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 523327.130 ops/s
[info]                  ·gc.alloc.rate:               532.224 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1985.355 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 531936.916 ops/s
[info]                  ·gc.alloc.rate:                   540.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     980.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.616 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   531042.402 ±(99.9%) 17851.270 ops/s [Average]
[info]   (min, avg, max) = (523327.130, 531042.402, 535904.534), stdev = 4635.918
[info]   CI (99.9%): [513191.133, 548893.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   540.069 ±(99.9%) 18.145 MB/sec [Average]
[info]   (min, avg, max) = (532.224, 540.069, 545.006), stdev = 4.712
[info]   CI (99.9%): [521.924, 558.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.060 ±(99.9%) 688.545 MB/sec [Average]
[info]   (min, avg, max) = (328.872, 526.060, 660.409), stdev = 178.813
[info]   CI (99.9%): [≈ 0, 1214.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1559.278 ±(99.9%) 2049.960 B/op [Average]
[info]   (min, avg, max) = (972.888, 1559.278, 1985.355), stdev = 532.368
[info]   CI (99.9%): [≈ 0, 3609.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.338 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.208), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.160 ±(99.9%) 1.001 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.160, 0.616), stdev = 0.260
[info]   CI (99.9%): [≈ 0, 1.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.000, 11.000), stdev = 3.808
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2497350.188 ops/s
[info] # Warmup Iteration   2: 2857222.969 ops/s
[info] # Warmup Iteration   3: 2876246.467 ops/s
[info] # Warmup Iteration   4: 2892482.266 ops/s
[info] # Warmup Iteration   5: 2924929.588 ops/s
[info] Iteration   1: 2929180.102 ops/s
[info]                  ·gc.alloc.rate:                   729.856 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2908657.694 ops/s
[info]                  ·gc.alloc.rate:                   724.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.075 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.323 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2924912.625 ops/s
[info]                  ·gc.alloc.rate:                   728.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     353.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2912843.188 ops/s
[info]                  ·gc.alloc.rate:                   725.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2927854.832 ops/s
[info]                  ·gc.alloc.rate:                   729.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     356.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   2920689.688 ±(99.9%) 35895.564 ops/s [Average]
[info]   (min, avg, max) = (2908657.694, 2920689.688, 2929180.102), stdev = 9321.964
[info]   CI (99.9%): [2884794.124, 2956585.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   727.729 ±(99.9%) 8.916 MB/sec [Average]
[info]   (min, avg, max) = (724.733, 727.729, 729.856), stdev = 2.315
[info]   CI (99.9%): [718.813, 736.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.317 ±(99.9%) 575.580 MB/sec [Average]
[info]   (min, avg, max) = (653.738, 724.317, 991.627), stdev = 149.476
[info]   CI (99.9%): [148.737, 1299.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   390.260 ±(99.9%) 312.890 B/op [Average]
[info]   (min, avg, max) = (351.118, 390.260, 535.576), stdev = 81.257
[info]   CI (99.9%): [77.370, 703.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.022, 0.045), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79732.242 ops/s
[info] # Warmup Iteration   2: 174734.059 ops/s
[info] # Warmup Iteration   3: 182152.624 ops/s
[info] # Warmup Iteration   4: 180019.710 ops/s
[info] # Warmup Iteration   5: 180839.334 ops/s
[info] Iteration   1: 181646.565 ops/s
[info]                  ·gc.alloc.rate:                   1236.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8574.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 181941.025 ops/s
[info]                  ·gc.alloc.rate:                   1238.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11484.881 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 182107.453 ops/s
[info]                  ·gc.alloc.rate:                   1239.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11543.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.540 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 179583.851 ops/s
[info]                  ·gc.alloc.rate:                   1222.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11760.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.365 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 181611.331 ops/s
[info]                  ·gc.alloc.rate:                   1236.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8751.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   181378.045 ±(99.9%) 3943.218 ops/s [Average]
[info]   (min, avg, max) = (179583.851, 181378.045, 182107.453), stdev = 1024.041
[info]   CI (99.9%): [177434.827, 185321.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1234.976 ±(99.9%) 26.877 MB/sec [Average]
[info]   (min, avg, max) = (1222.750, 1234.976, 1239.960), stdev = 6.980
[info]   CI (99.9%): [1208.099, 1261.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10712.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10712.002, 10712.002, 10712.003), stdev = 0.001
[info]   CI (99.9%): [10712.002, 10712.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1201.417 ±(99.9%) 708.403 MB/sec [Average]
[info]   (min, avg, max) = (989.951, 1201.417, 1342.482), stdev = 183.970
[info]   CI (99.9%): [493.014, 1909.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10422.968 ±(99.9%) 6204.089 B/op [Average]
[info]   (min, avg, max) = (8574.022, 10422.968, 11760.926), stdev = 1611.182
[info]   CI (99.9%): [4218.880, 16627.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.125), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.541 ±(99.9%) 1.198 B/op [Average]
[info]   (min, avg, max) = (0.361, 0.541, 1.080), stdev = 0.311
[info]   CI (99.9%): [≈ 0, 1.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 7.000), stdev = 1.673
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 218248.616 ops/s
[info] # Warmup Iteration   2: 430432.957 ops/s
[info] # Warmup Iteration   3: 452927.498 ops/s
[info] # Warmup Iteration   4: 445038.799 ops/s
[info] # Warmup Iteration   5: 450478.576 ops/s
[info] Iteration   1: 454102.230 ops/s
[info]                  ·gc.alloc.rate:                   1614.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.176 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5813.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 449585.855 ops/s
[info]                  ·gc.alloc.rate:                   1597.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5902.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.219 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 450729.239 ops/s
[info]                  ·gc.alloc.rate:                   1602.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.997 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5905.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 455806.953 ops/s
[info]                  ·gc.alloc.rate:                   1620.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4683.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 439044.765 ops/s
[info]                  ·gc.alloc.rate:                   1560.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6084.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   449853.808 ±(99.9%) 25188.820 ops/s [Average]
[info]   (min, avg, max) = (439044.765, 449853.808, 455806.953), stdev = 6541.457
[info]   CI (99.9%): [424664.988, 475042.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1598.956 ±(99.9%) 89.537 MB/sec [Average]
[info]   (min, avg, max) = (1560.541, 1598.956, 1620.089), stdev = 23.252
[info]   CI (99.9%): [1509.420, 1688.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1622.342 ±(99.9%) 572.284 MB/sec [Average]
[info]   (min, avg, max) = (1356.803, 1622.342, 1698.047), stdev = 148.620
[info]   CI (99.9%): [1050.058, 2194.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5678.054 ±(99.9%) 2174.690 B/op [Average]
[info]   (min, avg, max) = (4683.227, 5678.054, 6084.737), stdev = 564.760
[info]   CI (99.9%): [3503.364, 7852.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.287 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.146, 0.224), stdev = 0.075
[info]   CI (99.9%): [≈ 0, 0.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.600, 15.000), stdev = 4.037
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 419939.594 ops/s
[info] # Warmup Iteration   2: 880925.441 ops/s
[info] # Warmup Iteration   3: 892369.646 ops/s
[info] # Warmup Iteration   4: 877871.757 ops/s
[info] # Warmup Iteration   5: 877095.648 ops/s
[info] Iteration   1: 886551.297 ops/s
[info]                  ·gc.alloc.rate:                   1018.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1767.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 884914.922 ops/s
[info]                  ·gc.alloc.rate:                   1016.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1777.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 886023.983 ops/s
[info]                  ·gc.alloc.rate:               1018.216 MB/sec
[info]                  ·gc.alloc.rate.norm:          1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1783.860 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 879848.963 ops/s
[info]                  ·gc.alloc.rate:                   1011.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1802.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 890370.854 ops/s
[info]                  ·gc.alloc.rate:                   1023.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              1808.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1786.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   885542.004 ±(99.9%) 14583.309 ops/s [Average]
[info]   (min, avg, max) = (879848.963, 885542.004, 890370.854), stdev = 3787.239
[info]   CI (99.9%): [870958.695, 900125.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1017.682 ±(99.9%) 16.802 MB/sec [Average]
[info]   (min, avg, max) = (1011.114, 1017.682, 1023.234), stdev = 4.363
[info]   CI (99.9%): [1000.880, 1034.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1808.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1808.000, 1808.000, 1808.001), stdev = 0.001
[info]   CI (99.9%): [1808.000, 1808.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.879 ±(99.9%) 23.157 MB/sec [Average]
[info]   (min, avg, max) = (995.972, 1003.879, 1010.945), stdev = 6.014
[info]   CI (99.9%): [980.722, 1027.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1783.504 ±(99.9%) 49.223 B/op [Average]
[info]   (min, avg, max) = (1767.368, 1783.504, 1802.269), stdev = 12.783
[info]   CI (99.9%): [1734.280, 1832.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.286 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.187), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.103 ±(99.9%) 0.507 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.103, 0.333), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 13.000), stdev = 3.975
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2575426.116 ops/s
[info] # Warmup Iteration   2: 3145006.698 ops/s
[info] # Warmup Iteration   3: 3182707.418 ops/s
[info] # Warmup Iteration   4: 3189341.224 ops/s
[info] # Warmup Iteration   5: 3183724.928 ops/s
[info] Iteration   1: 3214538.736 ops/s
[info]                  ·gc.alloc.rate:                   800.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3232091.251 ops/s
[info]                  ·gc.alloc.rate:                   805.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     479.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3239318.566 ops/s
[info]                  ·gc.alloc.rate:                   807.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.748 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3200243.522 ops/s
[info]                  ·gc.alloc.rate:                   797.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3217451.148 ops/s
[info]                  ·gc.alloc.rate:                   801.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3220728.645 ±(99.9%) 59135.637 ops/s [Average]
[info]   (min, avg, max) = (3200243.522, 3220728.645, 3239318.566), stdev = 15357.337
[info]   CI (99.9%): [3161593.008, 3279864.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   802.488 ±(99.9%) 14.718 MB/sec [Average]
[info]   (min, avg, max) = (797.402, 802.488, 807.120), stdev = 3.822
[info]   CI (99.9%): [787.770, 817.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.101 ±(99.9%) 701.642 MB/sec [Average]
[info]   (min, avg, max) = (654.414, 792.101, 997.931), stdev = 182.214
[info]   CI (99.9%): [90.459, 1493.743] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   386.855 ±(99.9%) 341.042 B/op [Average]
[info]   (min, avg, max) = (320.286, 386.855, 487.977), stdev = 88.568
[info]   CI (99.9%): [45.813, 727.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.028, 0.051), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 8.000), stdev = 2.828
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145527.520 ops/s
[info] # Warmup Iteration   2: 253149.826 ops/s
[info] # Warmup Iteration   3: 258740.949 ops/s
[info] # Warmup Iteration   4: 257413.817 ops/s
[info] # Warmup Iteration   5: 256728.843 ops/s
[info] Iteration   1: 262547.191 ops/s
[info]                  ·gc.alloc.rate:               1365.866 MB/sec
[info]                  ·gc.alloc.rate.norm:          8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1326.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7946.601 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 248512.804 ops/s
[info]                  ·gc.alloc.rate:                   1292.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8446.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 259973.163 ops/s
[info]                  ·gc.alloc.rate:                   1352.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8118.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.504 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 259210.000 ops/s
[info]                  ·gc.alloc.rate:               1348.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8178.475 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 259342.667 ops/s
[info]                  ·gc.alloc.rate:                   1349.075 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8194.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   257917.165 ±(99.9%) 20897.483 ops/s [Average]
[info]   (min, avg, max) = (248512.804, 257917.165, 262547.191), stdev = 5427.010
[info]   CI (99.9%): [237019.682, 278814.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1341.709 ±(99.9%) 108.738 MB/sec [Average]
[info]   (min, avg, max) = (1292.795, 1341.709, 1365.866), stdev = 28.239
[info]   CI (99.9%): [1232.971, 1450.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.001, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1340.047 ±(99.9%) 38.334 MB/sec [Average]
[info]   (min, avg, max) = (1326.245, 1340.047, 1350.753), stdev = 9.955
[info]   CI (99.9%): [1301.714, 1378.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8176.732 ±(99.9%) 692.486 B/op [Average]
[info]   (min, avg, max) = (7946.601, 8176.732, 8446.289), stdev = 179.836
[info]   CI (99.9%): [7484.247, 8869.218] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 1.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 0.527), stdev = 0.265
[info]   CI (99.9%): [≈ 0, 1.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 12.000), stdev = 3.715
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 73080.601 ops/s
[info] # Warmup Iteration   2: 611370.562 ops/s
[info] # Warmup Iteration   3: 707299.746 ops/s
[info] # Warmup Iteration   4: 706044.498 ops/s
[info] # Warmup Iteration   5: 705376.101 ops/s
[info] Iteration   1: 705986.519 ops/s
[info]                  ·gc.alloc.rate:                   915.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2204.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 696695.431 ops/s
[info]                  ·gc.alloc.rate:                   903.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1497.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 696633.292 ops/s
[info]                  ·gc.alloc.rate:                   903.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2256.800 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 699054.646 ops/s
[info]                  ·gc.alloc.rate:                   906.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2256.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 706075.457 ops/s
[info]                  ·gc.alloc.rate:               915.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2244.307 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   700889.069 ±(99.9%) 18461.616 ops/s [Average]
[info]   (min, avg, max) = (696633.292, 700889.069, 706075.457), stdev = 4794.423
[info]   CI (99.9%): [682427.453, 719350.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   908.842 ±(99.9%) 23.890 MB/sec [Average]
[info]   (min, avg, max) = (903.329, 908.842, 915.555), stdev = 6.204
[info]   CI (99.9%): [884.953, 932.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.328 ±(99.9%) 580.046 MB/sec [Average]
[info]   (min, avg, max) = (663.120, 932.328, 1007.248), stdev = 150.636
[info]   CI (99.9%): [352.282, 1512.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2091.905 ±(99.9%) 1282.417 B/op [Average]
[info]   (min, avg, max) = (1497.372, 2091.905, 2256.800), stdev = 333.040
[info]   CI (99.9%): [809.488, 3374.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.274 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.187), stdev = 0.071
[info]   CI (99.9%): [≈ 0, 0.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.150 ±(99.9%) 0.620 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.423), stdev = 0.161
[info]   CI (99.9%): [≈ 0, 0.770] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 10.000), stdev = 2.966
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1898316.644 ops/s
[info] # Warmup Iteration   2: 2431358.260 ops/s
[info] # Warmup Iteration   3: 2441009.687 ops/s
[info] # Warmup Iteration   4: 2466515.499 ops/s
[info] # Warmup Iteration   5: 2406603.149 ops/s
[info] Iteration   1: 2441627.309 ops/s
[info]                  ·gc.alloc.rate:                   1663.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1672.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1077.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2445583.988 ops/s
[info]                  ·gc.alloc.rate:                   1666.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1082.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2429473.943 ops/s
[info]                  ·gc.alloc.rate:                   1655.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1093.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2457937.939 ops/s
[info]                  ·gc.alloc.rate:                   1674.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1084.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2428097.384 ops/s
[info]                  ·gc.alloc.rate:                   1654.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1099.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2440544.113 ±(99.9%) 47418.791 ops/s [Average]
[info]   (min, avg, max) = (2428097.384, 2440544.113, 2457937.939), stdev = 12314.509
[info]   CI (99.9%): [2393125.322, 2487962.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1662.941 ±(99.9%) 32.397 MB/sec [Average]
[info]   (min, avg, max) = (1654.385, 1662.941, 1674.784), stdev = 8.413
[info]   CI (99.9%): [1630.544, 1695.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1687.000 ±(99.9%) 38.464 MB/sec [Average]
[info]   (min, avg, max) = (1672.370, 1687.000, 1697.277), stdev = 9.989
[info]   CI (99.9%): [1648.536, 1725.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1087.536 ±(99.9%) 35.044 B/op [Average]
[info]   (min, avg, max) = (1077.597, 1087.536, 1099.793), stdev = 9.101
[info]   CI (99.9%): [1052.492, 1122.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.083 ±(99.9%) 0.204 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.083, 0.167), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.131 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.054, 0.107), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126857.074 ops/s
[info] # Warmup Iteration   2: 213153.498 ops/s
[info] # Warmup Iteration   3: 221184.940 ops/s
[info] # Warmup Iteration   4: 221210.578 ops/s
[info] # Warmup Iteration   5: 221046.153 ops/s
[info] Iteration   1: 218646.422 ops/s
[info]                  ·gc.alloc.rate:                   1156.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9484.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 221054.495 ops/s
[info]                  ·gc.alloc.rate:                   1169.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7083.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 217066.193 ops/s
[info]                  ·gc.alloc.rate:                   1147.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9669.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.453 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 215902.793 ops/s
[info]                  ·gc.alloc.rate:                   1141.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7325.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 218957.784 ops/s
[info]                  ·gc.alloc.rate:                   1157.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              8320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9669.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   218325.537 ±(99.9%) 7556.871 ops/s [Average]
[info]   (min, avg, max) = (215902.793, 218325.537, 221054.495), stdev = 1962.495
[info]   CI (99.9%): [210768.666, 225882.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1154.596 ±(99.9%) 39.997 MB/sec [Average]
[info]   (min, avg, max) = (1141.780, 1154.596, 1169.051), stdev = 10.387
[info]   CI (99.9%): [1114.599, 1194.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8320.002, 8320.002, 8320.002), stdev = 0.001
[info]   CI (99.9%): [8320.002, 8320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1199.731 ±(99.9%) 702.261 MB/sec [Average]
[info]   (min, avg, max) = (995.286, 1199.731, 1345.819), stdev = 182.375
[info]   CI (99.9%): [497.471, 1901.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8646.567 ±(99.9%) 5088.776 B/op [Average]
[info]   (min, avg, max) = (7083.339, 8646.567, 9669.889), stdev = 1321.539
[info]   CI (99.9%): [3557.791, 13735.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.360 ±(99.9%) 0.512 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.360, 0.453), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.510
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 626922.256 ops/s
[info] # Warmup Iteration   2: 993956.052 ops/s
[info] # Warmup Iteration   3: 1001643.226 ops/s
[info] # Warmup Iteration   4: 1010050.164 ops/s
[info] # Warmup Iteration   5: 992950.298 ops/s
[info] Iteration   1: 1009496.057 ops/s
[info]                  ·gc.alloc.rate:               744.325 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.057 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1027.115 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 998603.843 ops/s
[info]                  ·gc.alloc.rate:                   734.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1565.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 987552.254 ops/s
[info]                  ·gc.alloc.rate:                   728.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1060.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 988947.472 ops/s
[info]                  ·gc.alloc.rate:               729.165 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1061.754 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 996786.504 ops/s
[info]                  ·gc.alloc.rate:                   734.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1056.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   996277.226 ±(99.9%) 33913.027 ops/s [Average]
[info]   (min, avg, max) = (987552.254, 996277.226, 1009496.057), stdev = 8807.106
[info]   CI (99.9%): [962364.199, 1030190.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   734.266 ±(99.9%) 24.751 MB/sec [Average]
[info]   (min, avg, max) = (728.152, 734.266, 744.325), stdev = 6.428
[info]   CI (99.9%): [709.515, 759.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.552 ±(99.9%) 562.616 MB/sec [Average]
[info]   (min, avg, max) = (659.057, 730.552, 991.832), stdev = 146.110
[info]   CI (99.9%): [167.936, 1293.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1154.158 ±(99.9%) 887.892 B/op [Average]
[info]   (min, avg, max) = (1027.115, 1154.158, 1565.868), stdev = 230.583
[info]   CI (99.9%): [266.267, 2042.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.107 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.098), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 10.000), stdev = 3.564
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2929498.161 ops/s
[info] # Warmup Iteration   2: 3159576.209 ops/s
[info] # Warmup Iteration   3: 3179066.021 ops/s
[info] # Warmup Iteration   4: 3219292.231 ops/s
[info] # Warmup Iteration   5: 3213956.934 ops/s
[info] Iteration   1: 3222869.770 ops/s
[info]                  ·gc.alloc.rate:      98.332 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3225537.531 ops/s
[info]                  ·gc.alloc.rate:      98.414 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3214483.818 ops/s
[info]                  ·gc.alloc.rate:               98.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 125.249 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3217374.318 ops/s
[info]                  ·gc.alloc.rate:      98.166 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3208920.318 ops/s
[info]                  ·gc.alloc.rate:               97.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 125.466 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   3217837.151 ±(99.9%) 25512.664 ops/s [Average]
[info]   (min, avg, max) = (3208920.318, 3217837.151, 3225537.531), stdev = 6625.558
[info]   CI (99.9%): [3192324.487, 3243349.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   98.179 ±(99.9%) 0.777 MB/sec [Average]
[info]   (min, avg, max) = (97.907, 98.179, 98.414), stdev = 0.202
[info]   CI (99.9%): [97.402, 98.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.367 ±(99.9%) 539.752 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.367, 255.918), stdev = 140.172
[info]   CI (99.9%): [≈ 0, 642.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   50.143 ±(99.9%) 264.390 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 50.143, 125.466), stdev = 68.661
[info]   CI (99.9%): [≈ 0, 314.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96198.532 ops/s
[info] # Warmup Iteration   2: 164211.840 ops/s
[info] # Warmup Iteration   3: 166767.486 ops/s
[info] # Warmup Iteration   4: 165199.502 ops/s
[info] # Warmup Iteration   5: 165021.356 ops/s
[info] Iteration   1: 168454.816 ops/s
[info]                  ·gc.alloc.rate:                   1148.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9223.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 167059.233 ops/s
[info]                  ·gc.alloc.rate:                   1139.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12489.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 164276.942 ops/s
[info]                  ·gc.alloc.rate:                   1120.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9582.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.598 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 167252.259 ops/s
[info]                  ·gc.alloc.rate:               1140.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.849 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12603.197 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 167824.506 ops/s
[info]                  ·gc.alloc.rate:                   1144.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9458.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   166973.551 ±(99.9%) 6171.546 ops/s [Average]
[info]   (min, avg, max) = (164276.942, 166973.551, 168454.816), stdev = 1602.731
[info]   CI (99.9%): [160802.005, 173145.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1138.597 ±(99.9%) 42.092 MB/sec [Average]
[info]   (min, avg, max) = (1120.200, 1138.597, 1148.686), stdev = 10.931
[info]   CI (99.9%): [1096.505, 1180.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10728.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10728.003, 10728.003, 10728.003), stdev = 0.001
[info]   CI (99.9%): [10728.002, 10728.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.646 ±(99.9%) 705.220 MB/sec [Average]
[info]   (min, avg, max) = (987.597, 1132.646, 1339.849), stdev = 183.143
[info]   CI (99.9%): [427.426, 1837.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10671.383 ±(99.9%) 6610.576 B/op [Average]
[info]   (min, avg, max) = (9223.530, 10671.383, 12603.197), stdev = 1716.746
[info]   CI (99.9%): [4060.807, 17281.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.393 ±(99.9%) 1.201 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.393, 0.784), stdev = 0.312
[info]   CI (99.9%): [≈ 0, 1.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 10.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 860490.328 ops/s
[info] # Warmup Iteration   2: 1289328.705 ops/s
[info] # Warmup Iteration   3: 1315679.620 ops/s
[info] # Warmup Iteration   4: 1318155.971 ops/s
[info] # Warmup Iteration   5: 1319537.957 ops/s
[info] Iteration   1: 1321355.386 ops/s
[info]                  ·gc.alloc.rate:                   1478.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1595.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1308478.111 ops/s
[info]                  ·gc.alloc.rate:                   1463.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1618.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1327398.313 ops/s
[info]                  ·gc.alloc.rate:                   1484.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2002.156 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1337370.210 ops/s
[info]                  ·gc.alloc.rate:                   1496.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1593.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1308658.388 ops/s
[info]                  ·gc.alloc.rate:                   1463.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2039.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1320652.082 ±(99.9%) 47845.562 ops/s [Average]
[info]   (min, avg, max) = (1308478.111, 1320652.082, 1337370.210), stdev = 12425.340
[info]   CI (99.9%): [1272806.520, 1368497.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1477.403 ±(99.9%) 53.542 MB/sec [Average]
[info]   (min, avg, max) = (1463.798, 1477.403, 1496.100), stdev = 13.905
[info]   CI (99.9%): [1423.860, 1530.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1485.273 ±(99.9%) 729.903 MB/sec [Average]
[info]   (min, avg, max) = (1339.794, 1485.273, 1696.329), stdev = 189.553
[info]   CI (99.9%): [755.371, 2215.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1769.813 ±(99.9%) 884.353 B/op [Average]
[info]   (min, avg, max) = (1593.720, 1769.813, 2039.348), stdev = 229.664
[info]   CI (99.9%): [885.460, 2654.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.097 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.050, 0.075), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2270273.823 ops/s
[info] # Warmup Iteration   2: 3301790.289 ops/s
[info] # Warmup Iteration   3: 3310507.305 ops/s
[info] # Warmup Iteration   4: 3326646.959 ops/s
[info] # Warmup Iteration   5: 3336870.128 ops/s
[info] Iteration   1: 3283223.143 ops/s
[info]                  ·gc.alloc.rate:                   901.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     473.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 3302217.991 ops/s
[info]                  ·gc.alloc.rate:               906.742 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 315.904 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3355092.819 ops/s
[info]                  ·gc.alloc.rate:                   921.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3357412.451 ops/s
[info]                  ·gc.alloc.rate:                   921.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3348453.366 ops/s
[info]                  ·gc.alloc.rate:               919.459 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 473.270 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3329279.954 ±(99.9%) 131697.381 ops/s [Average]
[info]   (min, avg, max) = (3283223.143, 3329279.954, 3357412.451), stdev = 34201.392
[info]   CI (99.9%): [3197582.573, 3460977.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   914.182 ±(99.9%) 36.196 MB/sec [Average]
[info]   (min, avg, max) = (901.524, 914.182, 921.902), stdev = 9.400
[info]   CI (99.9%): [877.986, 950.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   932.368 ±(99.9%) 580.297 MB/sec [Average]
[info]   (min, avg, max) = (663.062, 932.368, 1007.297), stdev = 150.701
[info]   CI (99.9%): [352.071, 1512.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   440.352 ±(99.9%) 268.018 B/op [Average]
[info]   (min, avg, max) = (315.904, 440.352, 473.882), stdev = 69.603
[info]   CI (99.9%): [172.334, 708.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.029), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.000, 17.000), stdev = 6.557
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13487479.191 ops/s
[info] # Warmup Iteration   2: 14457559.573 ops/s
[info] # Warmup Iteration   3: 14117127.136 ops/s
[info] # Warmup Iteration   4: 14211899.139 ops/s
[info] # Warmup Iteration   5: 14430334.593 ops/s
[info] Iteration   1: 14330579.758 ops/s
[info]                  ·gc.alloc.rate:                   437.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     35.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 14398987.351 ops/s
[info]                  ·gc.alloc.rate:               439.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.607 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 14334228.734 ops/s
[info]                  ·gc.alloc.rate:                   437.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     71.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14439271.687 ops/s
[info]                  ·gc.alloc.rate:               440.539 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.615 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 14284745.456 ops/s
[info]                  ·gc.alloc.rate:                   435.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   14357562.597 ±(99.9%) 235545.374 ops/s [Average]
[info]   (min, avg, max) = (14284745.456, 14357562.597, 14439271.687), stdev = 61170.386
[info]   CI (99.9%): [14122017.223, 14593107.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   438.040 ±(99.9%) 7.211 MB/sec [Average]
[info]   (min, avg, max) = (435.795, 438.040, 440.539), stdev = 1.873
[info]   CI (99.9%): [430.830, 445.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.579 ±(99.9%) 561.494 MB/sec [Average]
[info]   (min, avg, max) = (325.866, 391.579, 652.425), stdev = 145.818
[info]   CI (99.9%): [≈ 0, 953.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   42.921 ±(99.9%) 61.749 B/op [Average]
[info]   (min, avg, max) = (35.607, 42.921, 71.605), stdev = 16.036
[info]   CI (99.9%): [≈ 0, 104.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 7.000), stdev = 2.490
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 601680.491 ops/s
[info] # Warmup Iteration   2: 862508.682 ops/s
[info] # Warmup Iteration   3: 875551.536 ops/s
[info] # Warmup Iteration   4: 883643.798 ops/s
[info] # Warmup Iteration   5: 872209.546 ops/s
[info] Iteration   1: 874677.919 ops/s
[info]                  ·gc.alloc.rate:                   1312.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2385.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 884058.451 ops/s
[info]                  ·gc.alloc.rate:                   1326.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2375.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 862191.803 ops/s
[info]                  ·gc.alloc.rate:                   1293.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2447.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 874428.425 ops/s
[info]                  ·gc.alloc.rate:                   1312.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2418.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 870213.026 ops/s
[info]                  ·gc.alloc.rate:                   1305.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1831.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   873113.925 ±(99.9%) 30543.193 ops/s [Average]
[info]   (min, avg, max) = (862191.803, 873113.925, 884058.451), stdev = 7931.970
[info]   CI (99.9%): [842570.732, 903657.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1309.966 ±(99.9%) 46.034 MB/sec [Average]
[info]   (min, avg, max) = (1293.381, 1309.966, 1326.172), stdev = 11.955
[info]   CI (99.9%): [1263.932, 1355.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.138 ±(99.9%) 558.641 MB/sec [Average]
[info]   (min, avg, max) = (1012.940, 1272.138, 1345.207), stdev = 145.077
[info]   CI (99.9%): [713.497, 1830.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2291.631 ±(99.9%) 996.914 B/op [Average]
[info]   (min, avg, max) = (1831.330, 2291.631, 2447.867), stdev = 258.895
[info]   CI (99.9%): [1294.717, 3288.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.163 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.090, 0.148), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 13.000), stdev = 4.494
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 402420.624 ops/s
[info] # Warmup Iteration   2: 738869.015 ops/s
[info] # Warmup Iteration   3: 751977.190 ops/s
[info] # Warmup Iteration   4: 748389.351 ops/s
[info] # Warmup Iteration   5: 745755.158 ops/s
[info] Iteration   1: 746174.159 ops/s
[info]                  ·gc.alloc.rate:                   1794.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3528.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 757802.094 ops/s
[info]                  ·gc.alloc.rate:               1822.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2021.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4196.180 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   3: 743205.352 ops/s
[info]                  ·gc.alloc.rate:                   1787.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3581.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 757670.119 ops/s
[info]                  ·gc.alloc.rate:                   1822.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3520.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 760090.974 ops/s
[info]                  ·gc.alloc.rate:                   1828.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4219.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   752988.540 ±(99.9%) 29682.358 ops/s [Average]
[info]   (min, avg, max) = (743205.352, 752988.540, 760090.974), stdev = 7708.414
[info]   CI (99.9%): [723306.181, 782670.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1811.105 ±(99.9%) 71.578 MB/sec [Average]
[info]   (min, avg, max) = (1787.552, 1811.105, 1828.270), stdev = 18.588
[info]   CI (99.9%): [1739.528, 1882.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3784.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3784.001, 3784.001, 3784.001), stdev = 0.001
[info]   CI (99.9%): [3784.001, 3784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1824.095 ±(99.9%) 724.555 MB/sec [Average]
[info]   (min, avg, max) = (1673.653, 1824.095, 2038.659), stdev = 188.165
[info]   CI (99.9%): [1099.540, 2548.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3809.128 ±(99.9%) 1404.655 B/op [Average]
[info]   (min, avg, max) = (3520.095, 3809.128, 4219.447), stdev = 364.785
[info]   CI (99.9%): [2404.473, 5213.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.078, 0.173), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.800, 12.000), stdev = 3.347
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1510026.203 ops/s
[info] # Warmup Iteration   2: 2600339.326 ops/s
[info] # Warmup Iteration   3: 2606588.778 ops/s
[info] # Warmup Iteration   4: 2618170.016 ops/s
[info] # Warmup Iteration   5: 2602729.067 ops/s
[info] Iteration   1: 2576405.002 ops/s
[info]                  ·gc.alloc.rate:               1493.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 818.142 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   2: 2590616.482 ops/s
[info]                  ·gc.alloc.rate:                   1501.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.272 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 2596754.356 ops/s
[info]                  ·gc.alloc.rate:                   1505.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     818.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2563461.996 ops/s
[info]                  ·gc.alloc.rate:                   1486.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1039.654 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2594746.380 ops/s
[info]                  ·gc.alloc.rate:                   1504.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     822.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2584396.843 ±(99.9%) 54478.186 ops/s [Average]
[info]   (min, avg, max) = (2563461.996, 2584396.843, 2596754.356), stdev = 14147.812
[info]   CI (99.9%): [2529918.658, 2638875.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1498.149 ±(99.9%) 31.610 MB/sec [Average]
[info]   (min, avg, max) = (1486.010, 1498.149, 1505.322), stdev = 8.209
[info]   CI (99.9%): [1466.538, 1529.759] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.019 ±(99.9%) 716.418 MB/sec [Average]
[info]   (min, avg, max) = (1339.796, 1485.019, 1694.009), stdev = 186.051
[info]   CI (99.9%): [768.601, 2201.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   904.264 ±(99.9%) 446.053 B/op [Average]
[info]   (min, avg, max) = (818.142, 904.264, 1039.654), stdev = 115.839
[info]   CI (99.9%): [458.211, 1350.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.095 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.063), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.000, 16.000), stdev = 5.788
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5239407.312 ops/s
[info] # Warmup Iteration   2: 4324880.048 ops/s
[info] # Warmup Iteration   3: 4340435.889 ops/s
[info] # Warmup Iteration   4: 4371132.223 ops/s
[info] # Warmup Iteration   5: 4407783.835 ops/s
[info] Iteration   1: 4435714.472 ops/s
[info]                  ·gc.alloc.rate:                   1217.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4423345.000 ops/s
[info]                  ·gc.alloc.rate:                   1214.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4408317.226 ops/s
[info]                  ·gc.alloc.rate:                   1210.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4427095.756 ops/s
[info]                  ·gc.alloc.rate:                   1215.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4397289.192 ops/s
[info]                  ·gc.alloc.rate:                   1207.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     482.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   4418352.329 ±(99.9%) 59254.183 ops/s [Average]
[info]   (min, avg, max) = (4397289.192, 4418352.329, 4435714.472), stdev = 15388.123
[info]   CI (99.9%): [4359098.147, 4477606.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1213.256 ±(99.9%) 16.230 MB/sec [Average]
[info]   (min, avg, max) = (1207.485, 1213.256, 1217.998), stdev = 4.215
[info]   CI (99.9%): [1197.026, 1229.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.173 ±(99.9%) 705.142 MB/sec [Average]
[info]   (min, avg, max) = (999.294, 1204.173, 1348.881), stdev = 183.123
[info]   CI (99.9%): [499.032, 1909.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   428.852 ±(99.9%) 253.649 B/op [Average]
[info]   (min, avg, max) = (355.415, 428.852, 482.587), stdev = 65.872
[info]   CI (99.9%): [175.203, 682.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.021, 0.030), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 13.000), stdev = 4.796
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 177715.495 ops/s
[info] # Warmup Iteration   2: 325974.482 ops/s
[info] # Warmup Iteration   3: 334849.004 ops/s
[info] # Warmup Iteration   4: 336216.990 ops/s
[info] # Warmup Iteration   5: 331490.858 ops/s
[info] Iteration   1: 334647.539 ops/s
[info]                  ·gc.alloc.rate:                   1194.573 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4654.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 330932.267 ops/s
[info]                  ·gc.alloc.rate:                   1181.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6314.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 334794.598 ops/s
[info]                  ·gc.alloc.rate:                   1195.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4705.119 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 331649.874 ops/s
[info]                  ·gc.alloc.rate:                   1183.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6360.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 334712.204 ops/s
[info]                  ·gc.alloc.rate:                   1194.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4743.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.294 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay":
[info]   333347.296 ±(99.9%) 7296.410 ops/s [Average]
[info]   (min, avg, max) = (330932.267, 333347.296, 334794.598), stdev = 1894.855
[info]   CI (99.9%): [326050.886, 340643.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1189.940 ±(99.9%) 26.056 MB/sec [Average]
[info]   (min, avg, max) = (1181.300, 1189.940, 1195.108), stdev = 6.767
[info]   CI (99.9%): [1163.884, 1215.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1133.903 ±(99.9%) 705.810 MB/sec [Average]
[info]   (min, avg, max) = (989.963, 1133.903, 1340.826), stdev = 183.297
[info]   CI (99.9%): [428.093, 1839.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5355.553 ±(99.9%) 3453.725 B/op [Average]
[info]   (min, avg, max) = (4654.079, 5355.553, 6360.409), stdev = 896.921
[info]   CI (99.9%): [1901.828, 8809.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.216 ±(99.9%) 0.318 B/op [Average]
[info]   (min, avg, max) = (0.098, 0.216, 0.297), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 7.000), stdev = 2.588
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1918552.491 ops/s
[info] # Warmup Iteration   2: 2640825.868 ops/s
[info] # Warmup Iteration   3: 2736715.978 ops/s
[info] # Warmup Iteration   4: 2725406.345 ops/s
[info] # Warmup Iteration   5: 2724479.278 ops/s
[info] Iteration   1: 2718734.243 ops/s
[info]                  ·gc.alloc.rate:                   1161.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     768.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2743910.925 ops/s
[info]                  ·gc.alloc.rate:                   1172.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     575.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2726417.515 ops/s
[info]                  ·gc.alloc.rate:                   1164.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2697731.128 ops/s
[info]                  ·gc.alloc.rate:                   1152.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     589.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2693325.625 ops/s
[info]                  ·gc.alloc.rate:                   1150.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.845 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     789.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2716023.887 ±(99.9%) 80378.366 ops/s [Average]
[info]   (min, avg, max) = (2693325.625, 2716023.887, 2743910.925), stdev = 20874.006
[info]   CI (99.9%): [2635645.521, 2796402.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1160.151 ±(99.9%) 34.366 MB/sec [Average]
[info]   (min, avg, max) = (1150.428, 1160.151, 1172.039), stdev = 8.925
[info]   CI (99.9%): [1125.785, 1194.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1207.438 ±(99.9%) 704.844 MB/sec [Average]
[info]   (min, avg, max) = (1003.277, 1207.438, 1350.845), stdev = 183.046
[info]   CI (99.9%): [502.595, 1912.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   699.575 ±(99.9%) 413.292 B/op [Average]
[info]   (min, avg, max) = (575.239, 699.575, 789.070), stdev = 107.331
[info]   CI (99.9%): [286.282, 1112.867] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.014, 0.024), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.966
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4114973.503 ops/s
[info] # Warmup Iteration   2: 4387052.895 ops/s
[info] # Warmup Iteration   3: 4392547.534 ops/s
[info] # Warmup Iteration   4: 4502343.644 ops/s
[info] # Warmup Iteration   5: 4475204.224 ops/s
[info] Iteration   1: 4419707.836 ops/s
[info]                  ·gc.alloc.rate:                   809.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4462359.014 ops/s
[info]                  ·gc.alloc.rate:                   816.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.895 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4430441.844 ops/s
[info]                  ·gc.alloc.rate:                   811.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4433441.699 ops/s
[info]                  ·gc.alloc.rate:               811.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 235.422 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 4439753.262 ops/s
[info]                  ·gc.alloc.rate:                   812.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   4437140.731 ±(99.9%) 61043.663 ops/s [Average]
[info]   (min, avg, max) = (4419707.836, 4437140.731, 4462359.014), stdev = 15852.845
[info]   CI (99.9%): [4376097.068, 4498184.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   812.281 ±(99.9%) 11.193 MB/sec [Average]
[info]   (min, avg, max) = (809.093, 812.281, 816.912), stdev = 2.907
[info]   CI (99.9%): [801.089, 823.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   858.829 ±(99.9%) 697.221 MB/sec [Average]
[info]   (min, avg, max) = (657.770, 858.829, 999.310), stdev = 181.066
[info]   CI (99.9%): [161.608, 1556.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   304.620 ±(99.9%) 249.562 B/op [Average]
[info]   (min, avg, max) = (231.895, 304.620, 354.112), stdev = 64.811
[info]   CI (99.9%): [55.057, 554.182] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.044), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 254562.046 ops/s
[info] # Warmup Iteration   2: 479368.745 ops/s
[info] # Warmup Iteration   3: 489113.035 ops/s
[info] # Warmup Iteration   4: 486039.419 ops/s
[info] # Warmup Iteration   5: 487676.902 ops/s
[info] Iteration   1: 493599.486 ops/s
[info]                  ·gc.alloc.rate:                   1460.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4234.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 486693.706 ops/s
[info]                  ·gc.alloc.rate:                   1440.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5402.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 492586.424 ops/s
[info]                  ·gc.alloc.rate:                   1457.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4295.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 490122.578 ops/s
[info]                  ·gc.alloc.rate:                   1450.548 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4331.774 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 489255.236 ops/s
[info]                  ·gc.alloc.rate:                   1447.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.358 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5438.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   490451.486 ±(99.9%) 10567.891 ops/s [Average]
[info]   (min, avg, max) = (486693.706, 490451.486, 493599.486), stdev = 2744.448
[info]   CI (99.9%): [479883.595, 501019.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1451.475 ±(99.9%) 31.268 MB/sec [Average]
[info]   (min, avg, max) = (1440.344, 1451.475, 1460.760), stdev = 8.120
[info]   CI (99.9%): [1420.207, 1482.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.106 ±(99.9%) 719.097 MB/sec [Average]
[info]   (min, avg, max) = (1328.445, 1477.106, 1691.358), stdev = 186.747
[info]   CI (99.9%): [758.009, 2196.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4740.563 ±(99.9%) 2395.311 B/op [Average]
[info]   (min, avg, max) = (4234.261, 4740.563, 5438.832), stdev = 622.055
[info]   CI (99.9%): [2345.253, 7135.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.174 ±(99.9%) 0.296 B/op [Average]
[info]   (min, avg, max) = (0.067, 0.174, 0.269), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.600, 17.000), stdev = 4.669
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 191343.605 ops/s
[info] # Warmup Iteration   2: 1040274.074 ops/s
[info] # Warmup Iteration   3: 1040439.521 ops/s
[info] # Warmup Iteration   4: 1030589.566 ops/s
[info] # Warmup Iteration   5: 1027969.030 ops/s
[info] Iteration   1: 1040345.290 ops/s
[info]                  ·gc.alloc.rate:                   1285.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2015.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1017863.607 ops/s
[info]                  ·gc.alloc.rate:                   1257.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2071.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1024624.409 ops/s
[info]                  ·gc.alloc.rate:               1266.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1549.674 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 1033572.215 ops/s
[info]                  ·gc.alloc.rate:               1277.119 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2053.593 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   5: 1034135.832 ops/s
[info]                  ·gc.alloc.rate:                   1277.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2058.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   1030108.271 ±(99.9%) 34063.579 ops/s [Average]
[info]   (min, avg, max) = (1017863.607, 1030108.271, 1040345.290), stdev = 8846.203
[info]   CI (99.9%): [996044.692, 1064171.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1272.850 ±(99.9%) 42.104 MB/sec [Average]
[info]   (min, avg, max) = (1257.707, 1272.850, 1285.515), stdev = 10.934
[info]   CI (99.9%): [1230.746, 1314.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1276.840 ±(99.9%) 576.729 MB/sec [Average]
[info]   (min, avg, max) = (1009.277, 1276.840, 1352.814), stdev = 149.775
[info]   CI (99.9%): [700.111, 1853.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1949.673 ±(99.9%) 864.723 B/op [Average]
[info]   (min, avg, max) = (1549.674, 1949.673, 2071.401), stdev = 224.566
[info]   CI (99.9%): [1084.950, 2814.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.064), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 11.000), stdev = 2.490
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3118295.891 ops/s
[info] # Warmup Iteration   2: 3424571.796 ops/s
[info] # Warmup Iteration   3: 3330552.768 ops/s
[info] # Warmup Iteration   4: 3346918.915 ops/s
[info] # Warmup Iteration   5: 3388971.923 ops/s
[info] Iteration   1: 3381411.928 ops/s
[info]                  ·gc.alloc.rate:                   395.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     151.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3314927.419 ops/s
[info]                  ·gc.alloc.rate:               387.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 154.504 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3354030.971 ops/s
[info]                  ·gc.alloc.rate:                   392.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3387757.262 ops/s
[info]                  ·gc.alloc.rate:               396.228 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 151.334 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3341630.900 ops/s
[info]                  ·gc.alloc.rate:               390.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 153.895 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3355951.696 ±(99.9%) 114739.871 ops/s [Average]
[info]   (min, avg, max) = (3314927.419, 3355951.696, 3387757.262), stdev = 29797.580
[info]   CI (99.9%): [3241211.825, 3470691.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   392.501 ±(99.9%) 13.444 MB/sec [Average]
[info]   (min, avg, max) = (387.693, 392.501, 396.228), stdev = 3.491
[info]   CI (99.9%): [379.058, 405.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   390.990 ±(99.9%) 560.590 MB/sec [Average]
[info]   (min, avg, max) = (325.225, 390.990, 651.416), stdev = 145.584
[info]   CI (99.9%): [≈ 0, 951.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   183.320 ±(99.9%) 263.176 B/op [Average]
[info]   (min, avg, max) = (151.312, 183.320, 305.553), stdev = 68.346
[info]   CI (99.9%): [≈ 0, 446.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.083), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.039), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 8.000), stdev = 3.082
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109605.867 ops/s
[info] # Warmup Iteration   2: 245378.449 ops/s
[info] # Warmup Iteration   3: 247269.805 ops/s
[info] # Warmup Iteration   4: 251486.249 ops/s
[info] # Warmup Iteration   5: 249200.041 ops/s
[info] Iteration   1: 248561.494 ops/s
[info]                  ·gc.alloc.rate:                   974.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6223.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 247833.029 ops/s
[info]                  ·gc.alloc.rate:                   971.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6267.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 250318.460 ops/s
[info]                  ·gc.alloc.rate:                   981.368 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6247.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 248121.882 ops/s
[info]                  ·gc.alloc.rate:                   972.759 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6327.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 248011.705 ops/s
[info]                  ·gc.alloc.rate:                   972.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6364.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   248569.314 ±(99.9%) 3904.567 ops/s [Average]
[info]   (min, avg, max) = (247833.029, 248569.314, 250318.460), stdev = 1014.004
[info]   CI (99.9%): [244664.747, 252473.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   974.508 ±(99.9%) 15.313 MB/sec [Average]
[info]   (min, avg, max) = (971.617, 974.508, 981.368), stdev = 3.977
[info]   CI (99.9%): [959.195, 989.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.135 ±(99.9%) 30.902 MB/sec [Average]
[info]   (min, avg, max) = (983.284, 993.135, 1003.256), stdev = 8.025
[info]   CI (99.9%): [962.233, 1024.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6285.995 ±(99.9%) 224.369 B/op [Average]
[info]   (min, avg, max) = (6223.773, 6285.995, 6364.242), stdev = 58.268
[info]   CI (99.9%): [6061.625, 6510.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.263 ±(99.9%) 0.355 B/op [Average]
[info]   (min, avg, max) = (0.132, 0.263, 0.393), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.000, 11.000), stdev = 2.236
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 414293.808 ops/s
[info] # Warmup Iteration   2: 612594.818 ops/s
[info] # Warmup Iteration   3: 636522.771 ops/s
[info] # Warmup Iteration   4: 633234.475 ops/s
[info] # Warmup Iteration   5: 628776.596 ops/s
[info] Iteration   1: 621901.631 ops/s
[info]                  ·gc.alloc.rate:                   1571.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1670.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4226.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 620818.411 ops/s
[info]                  ·gc.alloc.rate:                   1568.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4259.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 629921.607 ops/s
[info]                  ·gc.alloc.rate:                   1591.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4216.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 623068.535 ops/s
[info]                  ·gc.alloc.rate:                   1574.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3419.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 633934.364 ops/s
[info]                  ·gc.alloc.rate:                   1602.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              3976.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4208.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   625928.910 ±(99.9%) 21998.170 ops/s [Average]
[info]   (min, avg, max) = (620818.411, 625928.910, 633934.364), stdev = 5712.855
[info]   CI (99.9%): [603930.739, 647927.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1581.864 ±(99.9%) 55.570 MB/sec [Average]
[info]   (min, avg, max) = (1568.926, 1581.864, 1602.098), stdev = 14.431
[info]   CI (99.9%): [1526.294, 1637.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   3976.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3976.001, 3976.001, 3976.001), stdev = 0.001
[info]   CI (99.9%): [3976.001, 3976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1617.888 ±(99.9%) 568.846 MB/sec [Average]
[info]   (min, avg, max) = (1354.147, 1617.888, 1695.708), stdev = 147.727
[info]   CI (99.9%): [1049.042, 2186.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4065.926 ±(99.9%) 1394.202 B/op [Average]
[info]   (min, avg, max) = (3419.153, 4065.926, 4259.085), stdev = 362.070
[info]   CI (99.9%): [2671.724, 5460.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.115 ±(99.9%) 0.258 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.115, 0.207), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   65.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 13.000, 17.000), stdev = 5.050
[info]   CI (99.9%): [65.000, 65.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1055401.797 ops/s
[info] # Warmup Iteration   2: 1564160.252 ops/s
[info] # Warmup Iteration   3: 1567671.836 ops/s
[info] # Warmup Iteration   4: 1577020.446 ops/s
[info] # Warmup Iteration   5: 1560243.261 ops/s
[info] Iteration   1: 1571774.783 ops/s
[info]                  ·gc.alloc.rate:               847.231 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      979.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 980.223 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1574237.022 ops/s
[info]                  ·gc.alloc.rate:                   848.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     656.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1574879.909 ops/s
[info]                  ·gc.alloc.rate:                   848.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     989.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1566336.932 ops/s
[info]                  ·gc.alloc.rate:                   844.262 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     667.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1577811.025 ops/s
[info]                  ·gc.alloc.rate:                   850.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.593 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     997.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1573007.934 ±(99.9%) 16574.278 ops/s [Average]
[info]   (min, avg, max) = (1566336.932, 1573007.934, 1577811.025), stdev = 4304.287
[info]   CI (99.9%): [1556433.657, 1589582.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   847.877 ±(99.9%) 8.935 MB/sec [Average]
[info]   (min, avg, max) = (844.262, 847.877, 850.437), stdev = 2.320
[info]   CI (99.9%): [838.942, 856.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   858.419 ±(99.9%) 696.088 MB/sec [Average]
[info]   (min, avg, max) = (656.779, 858.419, 1000.593), stdev = 180.772
[info]   CI (99.9%): [162.332, 1554.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   858.318 ±(99.9%) 691.229 B/op [Average]
[info]   (min, avg, max) = (656.338, 858.318, 997.726), stdev = 179.510
[info]   CI (99.9%): [167.089, 1549.546] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 5.000), stdev = 1.225
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4469710.517 ops/s
[info] # Warmup Iteration   2: 4708775.804 ops/s
[info] # Warmup Iteration   3: 4723081.466 ops/s
[info] # Warmup Iteration   4: 4730393.370 ops/s
[info] # Warmup Iteration   5: 4728654.220 ops/s
[info] Iteration   1: 4745721.259 ops/s
[info]                  ·gc.alloc.rate:               651.568 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.067 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 216.497 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4784484.511 ops/s
[info]                  ·gc.alloc.rate:                   656.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     215.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4667430.000 ops/s
[info]                  ·gc.alloc.rate:                   640.812 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 4707397.431 ops/s
[info]                  ·gc.alloc.rate:                   646.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     220.274 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4708454.092 ops/s
[info]                  ·gc.alloc.rate:                   646.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     221.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4722697.459 ±(99.9%) 170466.484 ops/s [Average]
[info]   (min, avg, max) = (4667430.000, 4722697.459, 4784484.511), stdev = 44269.604
[info]   CI (99.9%): [4552230.975, 4893163.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   648.402 ±(99.9%) 23.449 MB/sec [Average]
[info]   (min, avg, max) = (640.812, 648.402, 656.909), stdev = 6.090
[info]   CI (99.9%): [624.953, 671.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.083 ±(99.9%) 13.234 MB/sec [Average]
[info]   (min, avg, max) = (653.067, 657.083, 661.737), stdev = 3.437
[info]   CI (99.9%): [643.849, 670.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   218.912 ±(99.9%) 10.838 B/op [Average]
[info]   (min, avg, max) = (215.297, 218.912, 221.376), stdev = 2.814
[info]   CI (99.9%): [208.074, 229.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.030 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 8.000), stdev = 3.493
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 207806.200 ops/s
[info] # Warmup Iteration   2: 354170.024 ops/s
[info] # Warmup Iteration   3: 360295.680 ops/s
[info] # Warmup Iteration   4: 359637.522 ops/s
[info] # Warmup Iteration   5: 364254.242 ops/s
[info] Iteration   1: 359439.455 ops/s
[info]                  ·gc.alloc.rate:                   1237.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5781.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 354673.047 ops/s
[info]                  ·gc.alloc.rate:                   1220.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5903.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.554 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 358861.086 ops/s
[info]                  ·gc.alloc.rate:                   1235.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5866.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 357757.436 ops/s
[info]                  ·gc.alloc.rate:                   1231.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4434.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 360516.173 ops/s
[info]                  ·gc.alloc.rate:                   1241.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.513 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5884.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   358249.439 ±(99.9%) 8601.898 ops/s [Average]
[info]   (min, avg, max) = (354673.047, 358249.439, 360516.173), stdev = 2233.886
[info]   CI (99.9%): [349647.541, 366851.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1233.314 ±(99.9%) 29.603 MB/sec [Average]
[info]   (min, avg, max) = (1220.997, 1233.314, 1241.091), stdev = 7.688
[info]   CI (99.9%): [1203.711, 1262.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.352 ±(99.9%) 563.250 MB/sec [Average]
[info]   (min, avg, max) = (1008.315, 1269.352, 1348.513), stdev = 146.274
[info]   CI (99.9%): [706.101, 1832.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5573.974 ±(99.9%) 2460.472 B/op [Average]
[info]   (min, avg, max) = (4434.004, 5573.974, 5903.332), stdev = 638.977
[info]   CI (99.9%): [3113.502, 8034.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.239 ±(99.9%) 0.696 B/op [Average]
[info]   (min, avg, max) = (0.091, 0.239, 0.554), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 0.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 9.000), stdev = 1.871
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112849.474 ops/s
[info] # Warmup Iteration   2: 339588.088 ops/s
[info] # Warmup Iteration   3: 348912.253 ops/s
[info] # Warmup Iteration   4: 353309.501 ops/s
[info] # Warmup Iteration   5: 349906.807 ops/s
[info] Iteration   1: 353670.431 ops/s
[info]                  ·gc.alloc.rate:                   1052.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5908.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.463 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 354991.622 ops/s
[info]                  ·gc.alloc.rate:                   1056.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4437.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 351716.131 ops/s
[info]                  ·gc.alloc.rate:                   1046.242 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4496.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 354805.157 ops/s
[info]                  ·gc.alloc.rate:               1055.453 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4469.451 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 350720.688 ops/s
[info]                  ·gc.alloc.rate:                   1043.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4536.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   353180.806 ±(99.9%) 7294.597 ops/s [Average]
[info]   (min, avg, max) = (350720.688, 353180.806, 354991.622), stdev = 1894.384
[info]   CI (99.9%): [345886.209, 360475.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1050.615 ±(99.9%) 21.727 MB/sec [Average]
[info]   (min, avg, max) = (1043.299, 1050.615, 1056.017), stdev = 5.642
[info]   CI (99.9%): [1028.889, 1072.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1070.789 ±(99.9%) 554.133 MB/sec [Average]
[info]   (min, avg, max) = (1001.289, 1070.789, 1328.134), stdev = 143.907
[info]   CI (99.9%): [516.656, 1624.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4769.620 ±(99.9%) 2454.573 B/op [Average]
[info]   (min, avg, max) = (4437.462, 4769.620, 5908.063), stdev = 637.445
[info]   CI (99.9%): [2315.047, 7224.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.150 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.186 ±(99.9%) 0.667 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.186, 0.463), stdev = 0.173
[info]   CI (99.9%): [≈ 0, 0.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.588
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127364.387 ops/s
[info] # Warmup Iteration   2: 1053055.954 ops/s
[info] # Warmup Iteration   3: 1072922.592 ops/s
[info] # Warmup Iteration   4: 1058557.741 ops/s
[info] # Warmup Iteration   5: 1047810.517 ops/s
[info] Iteration   1: 1058703.885 ops/s
[info]                  ·gc.alloc.rate:                   1098.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.002 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1480.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1058662.470 ops/s
[info]                  ·gc.alloc.rate:                   1098.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1488.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1062116.829 ops/s
[info]                  ·gc.alloc.rate:                   1101.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1489.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1061738.460 ops/s
[info]                  ·gc.alloc.rate:               1101.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1993.738 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1064655.148 ops/s
[info]                  ·gc.alloc.rate:                   1104.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1495.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1061175.358 ±(99.9%) 9767.129 ops/s [Average]
[info]   (min, avg, max) = (1058662.470, 1061175.358, 1064655.148), stdev = 2536.492
[info]   CI (99.9%): [1051408.229, 1070942.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1100.830 ±(99.9%) 10.157 MB/sec [Average]
[info]   (min, avg, max) = (1098.201, 1100.830, 1104.440), stdev = 2.638
[info]   CI (99.9%): [1090.674, 1110.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1072.042 ±(99.9%) 589.193 MB/sec [Average]
[info]   (min, avg, max) = (996.002, 1072.042, 1345.558), stdev = 153.012
[info]   CI (99.9%): [482.849, 1661.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1589.258 ±(99.9%) 870.928 B/op [Average]
[info]   (min, avg, max) = (1480.034, 1589.258, 1993.738), stdev = 226.177
[info]   CI (99.9%): [718.330, 2460.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.188 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.124), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.400, 6.000), stdev = 1.342
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3626000.495 ops/s
[info] # Warmup Iteration   2: 3985032.536 ops/s
[info] # Warmup Iteration   3: 3968678.541 ops/s
[info] # Warmup Iteration   4: 4054046.104 ops/s
[info] # Warmup Iteration   5: 4038892.163 ops/s
[info] Iteration   1: 4048817.602 ops/s
[info]                  ·gc.alloc.rate:                   597.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     253.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4024705.244 ops/s
[info]                  ·gc.alloc.rate:                   593.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4026776.024 ops/s
[info]                  ·gc.alloc.rate:               593.828 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.103 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4037801.383 ops/s
[info]                  ·gc.alloc.rate:                   595.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4027081.512 ops/s
[info]                  ·gc.alloc.rate:                   593.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   4033036.353 ±(99.9%) 39260.169 ops/s [Average]
[info]   (min, avg, max) = (4024705.244, 4033036.353, 4048817.602), stdev = 10195.741
[info]   CI (99.9%): [3993776.184, 4072296.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   594.745 ±(99.9%) 5.805 MB/sec [Average]
[info]   (min, avg, max) = (593.524, 594.745, 597.080), stdev = 1.508
[info]   CI (99.9%): [588.940, 600.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.867 ±(99.9%) 564.020 MB/sec [Average]
[info]   (min, avg, max) = (327.893, 589.867, 659.084), stdev = 146.474
[info]   CI (99.9%): [25.847, 1153.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   230.060 ±(99.9%) 219.548 B/op [Average]
[info]   (min, avg, max) = (128.103, 230.060, 257.488), stdev = 57.016
[info]   CI (99.9%): [10.513, 449.608] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 5.000), stdev = 1.789
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103537.752 ops/s
[info] # Warmup Iteration   2: 259704.431 ops/s
[info] # Warmup Iteration   3: 264371.304 ops/s
[info] # Warmup Iteration   4: 264547.359 ops/s
[info] # Warmup Iteration   5: 263389.298 ops/s
[info] Iteration   1: 264622.556 ops/s
[info]                  ·gc.alloc.rate:               975.571 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5847.851 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 265305.203 ops/s
[info]                  ·gc.alloc.rate:                   978.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5856.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 259126.254 ops/s
[info]                  ·gc.alloc.rate:                   955.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6034.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 266664.428 ops/s
[info]                  ·gc.alloc.rate:                   983.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5887.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 266886.736 ops/s
[info]                  ·gc.alloc.rate:                   983.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5914.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.246 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   264521.036 ±(99.9%) 12164.556 ops/s [Average]
[info]   (min, avg, max) = (259126.254, 264521.036, 266886.736), stdev = 3159.096
[info]   CI (99.9%): [252356.480, 276685.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   975.194 ±(99.9%) 44.802 MB/sec [Average]
[info]   (min, avg, max) = (955.326, 975.194, 983.898), stdev = 11.635
[info]   CI (99.9%): [930.392, 1019.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.270 ±(99.9%) 30.264 MB/sec [Average]
[info]   (min, avg, max) = (983.619, 993.270, 1003.256), stdev = 7.859
[info]   CI (99.9%): [963.007, 1023.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5908.082 ±(99.9%) 290.198 B/op [Average]
[info]   (min, avg, max) = (5847.851, 5908.082, 6034.460), stdev = 75.364
[info]   CI (99.9%): [5617.884, 6198.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.199 ±(99.9%) 0.553 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.199, 0.379), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 2.915
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 152034.216 ops/s
[info] # Warmup Iteration   2: 336347.913 ops/s
[info] # Warmup Iteration   3: 340837.119 ops/s
[info] # Warmup Iteration   4: 343989.519 ops/s
[info] # Warmup Iteration   5: 340954.026 ops/s
[info] Iteration   1: 342409.390 ops/s
[info]                  ·gc.alloc.rate:                   995.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4572.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 337433.164 ops/s
[info]                  ·gc.alloc.rate:                   981.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.001 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4662.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 342124.190 ops/s
[info]                  ·gc.alloc.rate:                   995.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4616.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 338872.944 ops/s
[info]                  ·gc.alloc.rate:                   985.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4681.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 341408.809 ops/s
[info]                  ·gc.alloc.rate:                   993.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4658.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   340449.699 ±(99.9%) 8425.310 ops/s [Average]
[info]   (min, avg, max) = (337433.164, 340449.699, 342409.390), stdev = 2188.026
[info]   CI (99.9%): [332024.389, 348875.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   990.244 ±(99.9%) 24.421 MB/sec [Average]
[info]   (min, avg, max) = (981.510, 990.244, 995.929), stdev = 6.342
[info]   CI (99.9%): [965.823, 1014.665] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4576.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4576.001, 4576.001, 4576.001), stdev = 0.001
[info]   CI (99.9%): [4576.001, 4576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1003.691 ±(99.9%) 24.255 MB/sec [Average]
[info]   (min, avg, max) = (995.262, 1003.691, 1010.947), stdev = 6.299
[info]   CI (99.9%): [979.436, 1027.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4638.309 ±(99.9%) 167.383 B/op [Average]
[info]   (min, avg, max) = (4572.938, 4638.309, 4681.170), stdev = 43.469
[info]   CI (99.9%): [4470.926, 4805.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.154 ±(99.9%) 0.328 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.154, 0.287), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.482] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.387
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71575.910 ops/s
[info] # Warmup Iteration   2: 1027176.159 ops/s
[info] # Warmup Iteration   3: 1042760.110 ops/s
[info] # Warmup Iteration   4: 1049492.310 ops/s
[info] # Warmup Iteration   5: 1050712.695 ops/s
[info] Iteration   1: 1048775.369 ops/s
[info]                  ·gc.alloc.rate:                   1039.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1492.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1037445.226 ops/s
[info]                  ·gc.alloc.rate:                   1028.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1516.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1049353.683 ops/s
[info]                  ·gc.alloc.rate:                   1040.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1505.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1048593.688 ops/s
[info]                  ·gc.alloc.rate:               1039.759 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1511.784 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 1052502.437 ops/s
[info]                  ·gc.alloc.rate:                   1043.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1510.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   1047334.081 ±(99.9%) 22140.706 ops/s [Average]
[info]   (min, avg, max) = (1037445.226, 1047334.081, 1052502.437), stdev = 5749.871
[info]   CI (99.9%): [1025193.375, 1069474.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1038.502 ±(99.9%) 21.921 MB/sec [Average]
[info]   (min, avg, max) = (1028.709, 1038.502, 1043.613), stdev = 5.693
[info]   CI (99.9%): [1016.581, 1060.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.274 ±(99.9%) 23.865 MB/sec [Average]
[info]   (min, avg, max) = (994.637, 1003.274, 1010.255), stdev = 6.198
[info]   CI (99.9%): [979.409, 1027.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1507.101 ±(99.9%) 35.910 B/op [Average]
[info]   (min, avg, max) = (1492.053, 1507.101, 1516.398), stdev = 9.326
[info]   CI (99.9%): [1471.191, 1543.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.093), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 9.000), stdev = 3.286
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1957492.467 ops/s
[info] # Warmup Iteration   2: 2138406.861 ops/s
[info] # Warmup Iteration   3: 2155399.180 ops/s
[info] # Warmup Iteration   4: 2183664.446 ops/s
[info] # Warmup Iteration   5: 2204744.592 ops/s
[info] Iteration   1: 2196356.647 ops/s
[info]                  ·gc.alloc.rate:                   435.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2205084.761 ops/s
[info]                  ·gc.alloc.rate:               437.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 232.505 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 2196652.330 ops/s
[info]                  ·gc.alloc.rate:                   435.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     466.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2185160.673 ops/s
[info]                  ·gc.alloc.rate:               433.357 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 235.337 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 2206127.389 ops/s
[info]                  ·gc.alloc.rate:                   437.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2197876.360 ±(99.9%) 32533.782 ops/s [Average]
[info]   (min, avg, max) = (2185160.673, 2197876.360, 2206127.389), stdev = 8448.920
[info]   CI (99.9%): [2165342.578, 2230410.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   435.901 ±(99.9%) 6.431 MB/sec [Average]
[info]   (min, avg, max) = (433.357, 435.901, 437.508), stdev = 1.670
[info]   CI (99.9%): [429.469, 442.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.472 ±(99.9%) 685.060 MB/sec [Average]
[info]   (min, avg, max) = (325.883, 456.472, 651.404), stdev = 177.908
[info]   CI (99.9%): [≈ 0, 1141.532] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   326.777 ±(99.9%) 491.048 B/op [Average]
[info]   (min, avg, max) = (232.505, 326.777, 466.613), stdev = 127.524
[info]   CI (99.9%): [≈ 0, 817.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.124 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.075), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 7.000), stdev = 2.702
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 105801.494 ops/s
[info] # Warmup Iteration   2: 256560.004 ops/s
[info] # Warmup Iteration   3: 256269.063 ops/s
[info] # Warmup Iteration   4: 257726.679 ops/s
[info] # Warmup Iteration   5: 257807.476 ops/s
[info] Iteration   1: 258412.581 ops/s
[info]                  ·gc.alloc.rate:               986.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5982.415 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   2: 259312.337 ops/s
[info]                  ·gc.alloc.rate:                   990.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5989.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.632 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 262468.217 ops/s
[info]                  ·gc.alloc.rate:                   1002.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5957.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 262512.308 ops/s
[info]                  ·gc.alloc.rate:                   1002.534 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5980.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 258869.879 ops/s
[info]                  ·gc.alloc.rate:                   988.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6097.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   260315.064 ±(99.9%) 7743.868 ops/s [Average]
[info]   (min, avg, max) = (258412.581, 260315.064, 262512.308), stdev = 2011.058
[info]   CI (99.9%): [252571.197, 268058.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   994.113 ±(99.9%) 29.641 MB/sec [Average]
[info]   (min, avg, max) = (986.844, 994.113, 1002.534), stdev = 7.698
[info]   CI (99.9%): [964.472, 1023.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6008.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6008.002, 6008.002, 6008.002), stdev = 0.001
[info]   CI (99.9%): [6008.001, 6008.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.045 ±(99.9%) 31.764 MB/sec [Average]
[info]   (min, avg, max) = (982.641, 993.045, 1003.298), stdev = 8.249
[info]   CI (99.9%): [961.281, 1024.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6001.722 ±(99.9%) 211.202 B/op [Average]
[info]   (min, avg, max) = (5957.932, 6001.722, 6097.479), stdev = 54.849
[info]   CI (99.9%): [5790.520, 6212.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.202 ±(99.9%) 0.949 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.202, 0.632), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 16.000), stdev = 4.561
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 367690.777 ops/s
[info] # Warmup Iteration   2: 597537.975 ops/s
[info] # Warmup Iteration   3: 627258.297 ops/s
[info] # Warmup Iteration   4: 622889.466 ops/s
[info] # Warmup Iteration   5: 642865.500 ops/s
[info] Iteration   1: 636519.068 ops/s
[info]                  ·gc.alloc.rate:                   1255.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.491 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3263.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 638553.720 ops/s
[info]                  ·gc.alloc.rate:                   1259.873 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3278.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 624907.894 ops/s
[info]                  ·gc.alloc.rate:                   1232.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3370.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 628322.439 ops/s
[info]                  ·gc.alloc.rate:                   1239.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2523.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 626034.142 ops/s
[info]                  ·gc.alloc.rate:                   1235.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3389.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   630867.453 ±(99.9%) 24076.056 ops/s [Average]
[info]   (min, avg, max) = (624907.894, 630867.453, 638553.720), stdev = 6252.475
[info]   CI (99.9%): [606791.396, 654943.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1244.663 ±(99.9%) 47.600 MB/sec [Average]
[info]   (min, avg, max) = (1232.869, 1244.663, 1259.873), stdev = 12.362
[info]   CI (99.9%): [1197.063, 1292.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3104.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3104.001, 3104.001, 3104.001), stdev = 0.001
[info]   CI (99.9%): [3104.001, 3104.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1269.364 ±(99.9%) 564.150 MB/sec [Average]
[info]   (min, avg, max) = (1007.943, 1269.364, 1348.781), stdev = 146.508
[info]   CI (99.9%): [705.214, 1833.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3165.365 ±(99.9%) 1397.126 B/op [Average]
[info]   (min, avg, max) = (2523.836, 3165.365, 3389.661), stdev = 362.829
[info]   CI (99.9%): [1768.238, 4562.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.062, 0.105), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.400, 12.000), stdev = 2.302
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1144427.468 ops/s
[info] # Warmup Iteration   2: 1572410.723 ops/s
[info] # Warmup Iteration   3: 1576664.066 ops/s
[info] # Warmup Iteration   4: 1573681.555 ops/s
[info] # Warmup Iteration   5: 1581559.196 ops/s
[info] Iteration   1: 1592052.549 ops/s
[info]                  ·gc.alloc.rate:                   663.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1571815.216 ops/s
[info]                  ·gc.alloc.rate:                   655.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1572241.903 ops/s
[info]                  ·gc.alloc.rate:               655.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 658.183 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1566235.156 ops/s
[info]                  ·gc.alloc.rate:                   653.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     663.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1558619.074 ops/s
[info]                  ·gc.alloc.rate:               649.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 669.313 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1572192.780 ±(99.9%) 47719.024 ops/s [Average]
[info]   (min, avg, max) = (1558619.074, 1572192.780, 1592052.549), stdev = 12392.479
[info]   CI (99.9%): [1524473.755, 1619911.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   655.572 ±(99.9%) 19.922 MB/sec [Average]
[info]   (min, avg, max) = (649.899, 655.572, 663.863), stdev = 5.174
[info]   CI (99.9%): [635.650, 675.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   657.773 ±(99.9%) 16.202 MB/sec [Average]
[info]   (min, avg, max) = (652.455, 657.773, 663.087), stdev = 4.208
[info]   CI (99.9%): [641.571, 673.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   658.260 ±(99.9%) 35.403 B/op [Average]
[info]   (min, avg, max) = (644.728, 658.260, 669.313), stdev = 9.194
[info]   CI (99.9%): [622.856, 693.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 17.000), stdev = 6.340
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5918728.818 ops/s
[info] # Warmup Iteration   2: 6335288.143 ops/s
[info] # Warmup Iteration   3: 6549266.202 ops/s
[info] # Warmup Iteration   4: 6417306.238 ops/s
[info] # Warmup Iteration   5: 6349360.815 ops/s
[info] Iteration   1: 6498210.603 ops/s
[info]                  ·gc.alloc.rate:                   330.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.531 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.527 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6551247.320 ops/s
[info]                  ·gc.alloc.rate:                   333.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 6487530.064 ops/s
[info]                  ·gc.alloc.rate:               329.892 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79.027 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 6531160.158 ops/s
[info]                  ·gc.alloc.rate:               332.106 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 78.497 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 6531075.357 ops/s
[info]                  ·gc.alloc.rate:                   332.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     78.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6519844.700 ±(99.9%) 101011.749 ops/s [Average]
[info]   (min, avg, max) = (6487530.064, 6519844.700, 6551247.320), stdev = 26232.430
[info]   CI (99.9%): [6418832.951, 6620856.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   331.533 ±(99.9%) 5.141 MB/sec [Average]
[info]   (min, avg, max) = (329.892, 331.533, 333.134), stdev = 1.335
[info]   CI (99.9%): [326.392, 336.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.808 ±(99.9%) 1.077 MB/sec [Average]
[info]   (min, avg, max) = (325.531, 325.808, 326.209), stdev = 0.280
[info]   CI (99.9%): [324.731, 326.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   78.620 ±(99.9%) 1.239 B/op [Average]
[info]   (min, avg, max) = (78.179, 78.620, 79.027), stdev = 0.322
[info]   CI (99.9%): [77.380, 79.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.460 ±(99.9%) 3.696 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.460, 2.176), stdev = 0.960
[info]   CI (99.9%): [≈ 0, 4.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.111 ±(99.9%) 0.895 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.111, 0.527), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 5.000), stdev = 2.000
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104831.763 ops/s
[info] # Warmup Iteration   2: 191599.839 ops/s
[info] # Warmup Iteration   3: 194907.590 ops/s
[info] # Warmup Iteration   4: 196161.999 ops/s
[info] # Warmup Iteration   5: 196428.848 ops/s
[info] Iteration   1: 196608.865 ops/s
[info]                  ·gc.alloc.rate:                   1088.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              8712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7900.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 195556.923 ops/s
[info]                  ·gc.alloc.rate:                   1082.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              8712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.518 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10647.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 199075.125 ops/s
[info]                  ·gc.alloc.rate:                   1102.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              8712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7891.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 196832.197 ops/s
[info]                  ·gc.alloc.rate:                   1089.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              8712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8018.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.333 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 196273.531 ops/s
[info]                  ·gc.alloc.rate:                   1086.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              8712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8068.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.501 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   196869.328 ±(99.9%) 5098.339 ops/s [Average]
[info]   (min, avg, max) = (195556.923, 196869.328, 199075.125), stdev = 1324.022
[info]   CI (99.9%): [191770.990, 201967.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1090.178 ±(99.9%) 28.188 MB/sec [Average]
[info]   (min, avg, max) = (1082.923, 1090.178, 1102.376), stdev = 7.320
[info]   CI (99.9%): [1061.991, 1118.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8712.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8712.002, 8712.002, 8712.002), stdev = 0.001
[info]   CI (99.9%): [8712.002, 8712.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1063.854 ±(99.9%) 559.653 MB/sec [Average]
[info]   (min, avg, max) = (987.304, 1063.854, 1323.518), stdev = 145.340
[info]   CI (99.9%): [504.201, 1623.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8505.414 ±(99.9%) 4620.396 B/op [Average]
[info]   (min, avg, max) = (7891.890, 8505.414, 10647.564), stdev = 1199.902
[info]   CI (99.9%): [3885.018, 13125.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.146), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.567 ±(99.9%) 1.342 B/op [Average]
[info]   (min, avg, max) = (0.333, 0.567, 1.173), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 13.000), stdev = 4.930
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                     Mode  Cnt         Score        Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1192318.865 ±  30539.905   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1885.749 ±     47.792  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2488.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1898.233 ±    721.778  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2505.691 ±   1006.073    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.055 ±      0.130    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        28.000               counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        59.000                   ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1744133.249 ±  10641.531   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1223.914 ±      7.418  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1269.836 ±    574.692  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1145.357 ±    515.981    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.030 ±      0.083    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        28.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6132509.785 ± 159576.252   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       779.360 ±     21.131  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       792.167 ±    701.939  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       203.425 ±    183.125    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.023    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        12.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        22.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    424656.436 ±   8764.804   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1122.864 ±     23.166  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.623 ±    725.347  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4194.071 ±   2621.135    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.127  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.154 ±      0.472    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        25.000                   ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    650415.817 ±  22785.038   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2126.639 ±     74.523  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5144.001 ±      0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2104.972 ±    589.022  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5091.918 ±   1434.608    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.071 ±      0.134  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.171 ±      0.327    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        31.000               counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        57.000                   ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1218431.072 ±  17678.009   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1158.617 ±     16.805  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1496.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1142.659 ±    701.678  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1475.027 ±    894.074    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.032 ±      0.114    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000               counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        15.000                   ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2553619.368 ± 109514.588   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1168.647 ±     50.107  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1202.457 ±    714.944  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       739.910 ±    411.416    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.113  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.026 ±      0.069    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        34.000                   ms
[info] CodecBenchmark.readArraysPlay                                                thrpt    5    210410.712 ±   3083.107   ops/s
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1280.696 ±     18.765  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9576.002 ±      0.001    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1270.499 ±    601.653  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9501.881 ±   4567.411    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.062 ±      0.139  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.467 ±      1.039    B/op
[info] CodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        19.000               counts
[info] CodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        30.000                   ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1564943.072 ±  27193.993   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1010.649 ±     17.517  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1016.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1004.648 ±     21.027  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1009.982 ±     26.380    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.072  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.050 ±      0.072    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        15.000               counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        45.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   6871964.838 ± 158122.996   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       733.823 ±     16.826  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       724.451 ±    560.293  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       165.995 ±    132.429    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.067  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.011 ±      0.015    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        11.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        26.000                   ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    267043.438 ±   4654.534   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1261.483 ±     21.915  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7432.002 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1269.022 ±    564.256  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7476.950 ±   3339.773    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±      0.122  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.197 ±      0.722    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        19.000               counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        30.000                   ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    551123.890 ±  13530.161   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1829.979 ±     45.020  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1829.725 ±    700.807  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5223.790 ±   2020.935    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.037 ±      0.067  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.107 ±      0.192    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000               counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        55.000                   ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    682021.305 ±  17752.316   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       853.154 ±     22.164  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1968.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       867.796 ±    714.504  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      2001.216 ±   1635.357    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.058 ±      0.241    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        30.000                   ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4342095.720 ±  78419.862   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       198.721 ±      3.586  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       167.476 ±    598.796  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        60.778 ±    217.623    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.454 ±      3.820  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.166 ±      1.395    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         3.000               counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5         8.000                   ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    206928.502 ±   8089.460   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1136.656 ±     42.484  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8640.002 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1131.858 ±    702.291  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8607.345 ±   5451.209    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±      0.132  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.347 ±      0.990    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        17.000               counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        33.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   2982893.345 ±  85809.110   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1410.681 ±     40.648  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1411.606 ±    547.429  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       744.680 ±    297.917    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.026 ±      0.049    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        21.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        40.000                   ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    245794.788 ±  11844.864   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1321.117 ±     63.654  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1338.221 ±     40.796  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8567.073 ±    636.162    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.054 ±      0.217  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.347 ±      1.382    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        20.000               counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        51.000                   ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    533792.911 ±  13926.596   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1889.145 ±     49.343  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5568.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1897.937 ±    702.226  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5595.231 ±   2129.201    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.135 ±      0.309    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        28.000               counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        57.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    531042.402 ±  17851.270   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       540.069 ±     18.145  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.060 ±    688.545  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1559.278 ±   2049.960    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.054 ±      0.338  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.160 ±      1.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        25.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   2920689.688 ±  35895.564   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       727.729 ±      8.916  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       724.317 ±    575.580  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       390.260 ±    312.890    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.022 ±      0.053    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        16.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    181378.045 ±   3943.218   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1234.976 ±     26.877  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10712.002 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1201.417 ±    708.403  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10422.968 ±   6204.089    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.062 ±      0.139  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.541 ±      1.198    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        18.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        28.000                   ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    449853.808 ±  25188.820   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1598.956 ±     89.537  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1622.342 ±    572.284  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5678.054 ±   2174.690    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.146 ±      0.287    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000               counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        43.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    885542.004 ±  14583.309   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1017.682 ±     16.802  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1808.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1003.879 ±     23.157  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1783.504 ±     49.223    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±      0.286  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.103 ±      0.507    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        32.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3220728.645 ±  59135.637   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       802.488 ±     14.718  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       792.101 ±    701.642  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       386.855 ±    341.042    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.105  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.028 ±      0.051    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        12.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        20.000                   ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    257917.165 ±  20897.483   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1341.709 ±    108.738  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8184.002 ±      0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1340.047 ±     38.334  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8176.732 ±    692.486    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.037 ±      0.164  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.232 ±      1.019    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        27.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    700889.069 ±  18461.616   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       908.842 ±     23.890  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       932.328 ±    580.046  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2091.905 ±   1282.417    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±      0.274  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.150 ±      0.620    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        14.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        33.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2440544.113 ±  47418.791   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1662.941 ±     32.397  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1687.000 ±     38.464  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1087.536 ±     35.044    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.083 ±      0.204  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.054 ±      0.131    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        25.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        36.000                   ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    218325.537 ±   7556.871   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1154.596 ±     39.997  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8320.002 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1199.731 ±    702.261  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8646.567 ±   5088.776    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.072  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.360 ±      0.512    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        38.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5    996277.226 ±  33913.027   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       734.266 ±     24.751  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       730.552 ±    562.616  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1154.158 ±    887.892    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.029 ±      0.107  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.046 ±      0.170    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        24.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   3217837.151 ±  25512.664   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5        98.179 ±      0.777  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       102.367 ±    539.752  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        50.143 ±    264.390    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         2.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         6.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    166973.551 ±   6171.546   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1138.597 ±     42.092  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10728.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1132.646 ±    705.220  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10671.383 ±   6610.576    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.127  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.393 ±      1.201    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        17.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        33.000                   ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1320652.082 ±  47845.562   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1477.403 ±     53.542  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1485.273 ±    729.903  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1769.813 ±    884.353    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.050 ±      0.097    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000               counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        42.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3329279.954 ± 131697.381   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5       914.182 ±     36.196  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5       932.368 ±    580.297  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       440.352 ±    268.018    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.049    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        14.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        30.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  14357562.597 ± 235545.374   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       438.040 ±      7.211  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       391.579 ±    561.494  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        42.921 ±     61.749    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±      0.132  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±      0.014    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         6.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        14.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    873113.925 ±  30543.193   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1309.966 ±     46.034  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2360.001 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1272.138 ±    558.641  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2291.631 ±    996.914    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.090 ±      0.163    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        19.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        34.000                   ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    752988.540 ±  29682.358   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1811.105 ±     71.578  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3784.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1824.095 ±    724.555  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3809.128 ±   1404.655    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±      0.119  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.078 ±      0.247    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        27.000               counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        49.000                   ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2584396.843 ±  54478.186   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1498.149 ±     31.610  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1485.019 ±    716.418  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       904.264 ±    446.053    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.156  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.020 ±      0.095    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        22.000               counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        50.000                   ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   4418352.329 ±  59254.183   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1213.256 ±     16.230  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1204.173 ±    705.142  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       428.852 ±    253.649    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.105  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.021 ±      0.037    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        30.000                   ms
[info] CodecBenchmark.writeArraysPlay                                               thrpt    5    333347.296 ±   7296.410   ops/s
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1189.940 ±     26.056  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1133.903 ±    705.810  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5355.553 ±   3453.725    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.067  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.216 ±      0.318    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        21.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2716023.887 ±  80378.366   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1160.151 ±     34.366  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1207.438 ±    704.844  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       699.575 ±    413.292    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.014 ±      0.021    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        33.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   4437140.731 ±  61043.663   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       812.281 ±     11.193  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       858.829 ±    697.221  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       304.620 ±    249.562    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.054 ±      0.185  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.019 ±      0.065    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        13.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        35.000                   ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    490451.486 ±  10567.891   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1451.475 ±     31.268  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1477.106 ±    719.097  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4740.563 ±   2395.311    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.174 ±      0.296    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000               counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        53.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   1030108.271 ±  34063.579   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1272.850 ±     42.104  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1276.840 ±    576.729  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1949.673 ±    864.723    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.038 ±      0.134    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        19.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        44.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3355951.696 ± 114739.871   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       392.501 ±     13.444  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       390.990 ±    560.590  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       183.320 ±    263.176    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.021 ±      0.139  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.010 ±      0.065    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         6.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        15.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    248569.314 ±   3904.567   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       974.508 ±     15.313  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.135 ±     30.902  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6285.995 ±    224.369    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±      0.057  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.263 ±      0.355    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        40.000                   ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    625928.910 ±  21998.170   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1581.864 ±     55.570  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      3976.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1617.888 ±    568.846  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4065.926 ±   1394.202    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.115 ±      0.258    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        24.000               counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        65.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1573007.934 ±  16574.278   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       847.877 ±      8.935  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       858.419 ±    696.088  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       858.318 ±    691.229    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.033 ±      0.091    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        13.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        20.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4722697.459 ± 170466.484   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       648.402 ±     23.449  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       216.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       657.083 ±     13.234  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       218.912 ±     10.838    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.011 ±      0.030    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        10.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        21.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    358249.439 ±   8601.898   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1233.314 ±     29.603  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1269.352 ±    563.250  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5573.974 ±   2460.472    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±      0.156  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.239 ±      0.696    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        35.000                   ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    353180.806 ±   7294.597   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1050.615 ±     21.727  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±      0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1070.789 ±    554.133  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4769.620 ±   2454.573    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.042 ±      0.150  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.186 ±      0.667    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        16.000               counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        26.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1061175.358 ±   9767.129   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1100.830 ±     10.157  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1072.042 ±    589.193  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1589.258 ±    870.928    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.042 ±      0.127  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.062 ±      0.188    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        22.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   4033036.353 ±  39260.169   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       594.745 ±      5.805  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.867 ±    564.020  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       230.060 ±    219.548    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.143  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.018 ±      0.056    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        21.000                   ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    264521.036 ±  12164.556   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       975.194 ±     44.802  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±      0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       993.270 ±     30.264  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5908.082 ±    290.198    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.199 ±      0.553    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        30.000                   ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    340449.699 ±   8425.310   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       990.244 ±     24.421  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4576.001 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5      1003.691 ±     24.255  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4638.309 ±    167.383    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.033 ±      0.072  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.154 ±      0.328    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        31.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1047334.081 ±  22140.706   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1038.502 ±     21.921  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1003.274 ±     23.865  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1507.101 ±     35.910    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.037 ±      0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.056 ±      0.132    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        28.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2197876.360 ±  32533.782   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       435.901 ±      6.431  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       312.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       456.472 ±    685.060  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       326.777 ±    491.048    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.037 ±      0.174  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.027 ±      0.124    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         7.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        13.000                   ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    260315.064 ±   7743.868   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       994.113 ±     29.641  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6008.002 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.045 ±     31.764  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6001.722 ±    211.202    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.033 ±      0.156  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.202 ±      0.949    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        43.000                   ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    630867.453 ±  24076.056   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1244.663 ±     47.600  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3104.001 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1269.364 ±    564.150  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3165.365 ±   1397.126    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±      0.036  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.062 ±      0.091    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000               counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        47.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1572192.780 ±  47719.024   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       655.572 ±     19.922  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       657.773 ±     16.202  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       658.260 ±     35.403    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.021 ±      0.080  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.021 ±      0.080    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        29.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6519844.700 ± 101011.749   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       331.533 ±      5.141  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.808 ±      1.077  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        78.620 ±      1.239    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.460 ±      3.696  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.111 ±      0.895    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        15.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    196869.328 ±   5098.339   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1090.178 ±     28.188  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8712.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1063.854 ±    559.653  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8505.414 ±   4620.396    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.071 ±      0.166  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.567 ±      1.342    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        32.000                   ms
[success] Total time: 1016 s, completed Oct 30, 2017 1:07:16 PM
