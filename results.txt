[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 21, 2017 8:48:26 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:49:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460327L => {
[info]                     req0.&=(-2L);
[info]                     _s = CodecBase.readString(in, _s)
[info]                   }
[info]                   case -6783600876201295968L => {
[info]                     req0.&=(-3L);
[info]                     _bd = d0(in, _bd)
[info]                   }
[info]                   case 1264338770762899922L => _os = Option(CodecBase.readString(in, null))
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             e0(out, x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.math.BigDecimal): scala.math.BigDecimal = {
[info]         val x = in.readBigDecimal();
[info]         if (x.ne(null))
[info]           BigDecimal(x)
[info]         else
[info]           default
[info]       };
[info]       private def e0(out: JsonStream, x: scala.math.BigDecimal): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:47: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case -1954837088022778418L => {
[info]                     req0.&=(-2L);
[info]                     _aa = d1(in, _aa)
[info]                   }
[info]                   case 2830859626721460341L => {
[info]                     req0.&=(-3L);
[info]                     _a = d3(in, _a)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("a");
[info]             e3(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: Array[Int]): Array[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: Array[Array[Int]]): Array[Array[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.math.BigInt): scala.math.BigInt = {
[info]         val x = in.readBigInteger();
[info]         if (x.ne(null))
[info]           BigInt(x)
[info]         else
[info]           default
[info]       };
[info]       private def d3(in: JsonIterator, default: Array[BigInt]): Array[BigInt] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(d2(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.math.BigInt): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull();
[info]       private def e3(out: JsonStream, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e2(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: Codec[Arrays] = materialize[Arrays]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:54:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case -6783600876201295945L => _bs = d0(in, _bs)
[info]                   case -8348953845359796749L => _mbs = d1(in, _mbs)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:56:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460344L => _l = d0(in, _l)
[info]                   case 2830859626721460327L => _s = d1(in, _s)
[info]                   case 2873926700155739113L => _ls = d2(in, _ls)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: List[String]): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(CodecBase.readString(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: List[Set[Int]]): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:58:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in, _m)
[info]                   case 4483514629548578302L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in, HashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:60:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in, _m)
[info]                   case 4483514629548578302L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:62:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in, _m)
[info]                   case 4483514629548578302L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in, LongMap.empty[Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:64:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460342L => {
[info]                     req0.&=(-2L);
[info]                     _b = toByte(in, in.readInt())
[info]                   }
[info]                   case 2830859626721460327L => {
[info]                     req0.&=(-3L);
[info]                     _s = toShort(in, in.readInt())
[info]                   }
[info]                   case 2830859626721460349L => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case 2830859626721460344L => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case -6783600876201295960L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -5174012946808456747L => {
[info]                     req0.&=(-33L);
[info]                     _ch = toChar(in, in.readInt())
[info]                   }
[info]                   case 4538095422755341545L => {
[info]                     req0.&=(-65L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case 2830859626721460338L => {
[info]                     req0.&=(-129L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:66:61: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _l: Long = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460327L => {
[info]                     req0.&=(-2L);
[info]                     _s = CodecBase.readString(in, _s)
[info]                   }
[info]                   case 2830859626721460344L => {
[info]                     req0.&=(-3L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: Codec[ExtractFields] = materialize[ExtractFields]
[info]                                                             ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 63 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:09:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 672793.322 ops/s
[info] # Warmup Iteration   2: 1157157.797 ops/s
[info] # Warmup Iteration   3: 1189534.393 ops/s
[info] # Warmup Iteration   4: 1186198.555 ops/s
[info] # Warmup Iteration   5: 1185674.831 ops/s
[info] Iteration   1: 1191398.433 ops/s
[info]                  ·gc.alloc.rate:                   1878.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2671.217 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1190090.470 ops/s
[info]                  ·gc.alloc.rate:                   1875.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2685.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1189193.262 ops/s
[info]                  ·gc.alloc.rate:               1874.508 MB/sec
[info]                  ·gc.alloc.rate.norm:          2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2244.635 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1184886.684 ops/s
[info]                  ·gc.alloc.rate:                   1867.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2707.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1197492.641 ops/s
[info]                  ·gc.alloc.rate:                   1887.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2233.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1190612.298 ±(99.9%) 17543.238 ops/s [Average]
[info]   (min, avg, max) = (1184886.684, 1190612.298, 1197492.641), stdev = 4555.923
[info]   CI (99.9%): [1173069.060, 1208155.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1876.793 ±(99.9%) 27.650 MB/sec [Average]
[info]   (min, avg, max) = (1867.770, 1876.793, 1887.622), stdev = 7.181
[info]   CI (99.9%): [1849.143, 1904.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2480.000, 2480.000, 2480.000), stdev = 0.001
[info]   CI (99.9%): [2480.000, 2480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1897.983 ±(99.9%) 702.287 MB/sec [Average]
[info]   (min, avg, max) = (1696.607, 1897.983, 2039.216), stdev = 182.382
[info]   CI (99.9%): [1195.695, 2600.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2508.437 ±(99.9%) 948.345 B/op [Average]
[info]   (min, avg, max) = (2233.483, 2508.437, 2707.644), stdev = 246.282
[info]   CI (99.9%): [1560.092, 3456.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.055), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 9.000, 10.000), stdev = 0.707
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.69% complete, ETA 00:15:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1172569.609 ops/s
[info] # Warmup Iteration   2: 1780103.568 ops/s
[info] # Warmup Iteration   3: 1808611.294 ops/s
[info] # Warmup Iteration   4: 1836840.596 ops/s
[info] # Warmup Iteration   5: 1827295.046 ops/s
[info] Iteration   1: 1810886.728 ops/s
[info]                  ·gc.alloc.rate:                   1270.777 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1149.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1709404.078 ops/s
[info]                  ·gc.alloc.rate:                   1199.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     919.706 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1799214.999 ops/s
[info]                  ·gc.alloc.rate:                   1262.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.848 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1170.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1781209.562 ops/s
[info]                  ·gc.alloc.rate:               1249.893 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1187.795 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   5: 1809512.929 ops/s
[info]                  ·gc.alloc.rate:                   1269.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1173.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1782045.659 ±(99.9%) 162897.971 ops/s [Average]
[info]   (min, avg, max) = (1709404.078, 1782045.659, 1810886.728), stdev = 42304.086
[info]   CI (99.9%): [1619147.688, 1944943.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1250.505 ±(99.9%) 114.349 MB/sec [Average]
[info]   (min, avg, max) = (1199.520, 1250.505, 1270.777), stdev = 29.696
[info]   CI (99.9%): [1136.156, 1364.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1271.240 ±(99.9%) 586.640 MB/sec [Average]
[info]   (min, avg, max) = (999.280, 1271.240, 1349.769), stdev = 152.349
[info]   CI (99.9%): [684.600, 1857.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1120.319 ±(99.9%) 434.980 B/op [Average]
[info]   (min, avg, max) = (919.706, 1120.319, 1187.795), stdev = 112.963
[info]   CI (99.9%): [685.340, 1555.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.055), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 15.000), stdev = 5.148
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.39% complete, ETA 00:15:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6236900.067 ops/s
[info] # Warmup Iteration   2: 6480466.831 ops/s
[info] # Warmup Iteration   3: 6678635.861 ops/s
[info] # Warmup Iteration   4: 6696398.496 ops/s
[info] # Warmup Iteration   5: 6795360.680 ops/s
[info] Iteration   1: 6758276.693 ops/s
[info]                  ·gc.alloc.rate:                   1168.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     307.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 6643616.342 ops/s
[info]                  ·gc.alloc.rate:                   1148.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 6720577.632 ops/s
[info]                  ·gc.alloc.rate:                   1161.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6728141.636 ops/s
[info]                  ·gc.alloc.rate:                   1163.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 6661887.552 ops/s
[info]                  ·gc.alloc.rate:                   1151.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6702499.971 ±(99.9%) 184790.691 ops/s [Average]
[info]   (min, avg, max) = (6643616.342, 6702499.971, 6758276.693), stdev = 47989.556
[info]   CI (99.9%): [6517709.280, 6887290.662] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1158.798 ±(99.9%) 31.967 MB/sec [Average]
[info]   (min, avg, max) = (1148.610, 1158.798, 1168.434), stdev = 8.302
[info]   CI (99.9%): [1126.831, 1190.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1202.473 ±(99.9%) 704.054 MB/sec [Average]
[info]   (min, avg, max) = (997.937, 1202.473, 1347.490), stdev = 182.841
[info]   CI (99.9%): [498.419, 1906.527] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   282.191 ±(99.9%) 163.379 B/op [Average]
[info]   (min, avg, max) = (235.450, 282.191, 318.221), stdev = 42.429
[info]   CI (99.9%): [118.812, 445.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.012, 0.020), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 11.000), stdev = 2.280
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 5.08% complete, ETA 00:15:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 267285.648 ops/s
[info] # Warmup Iteration   2: 412424.672 ops/s
[info] # Warmup Iteration   3: 441303.953 ops/s
[info] # Warmup Iteration   4: 439177.223 ops/s
[info] # Warmup Iteration   5: 440171.013 ops/s
[info] Iteration   1: 444602.044 ops/s
[info]                  ·gc.alloc.rate:                   1168.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4664.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 437869.931 ops/s
[info]                  ·gc.alloc.rate:                   1151.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3576.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 440422.350 ops/s
[info]                  ·gc.alloc.rate:                   1157.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4765.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 418936.994 ops/s
[info]                  ·gc.alloc.rate:                   1101.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3775.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 432793.670 ops/s
[info]                  ·gc.alloc.rate:               1137.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3666.468 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   434924.998 ±(99.9%) 38153.332 ops/s [Average]
[info]   (min, avg, max) = (418936.994, 434924.998, 444602.044), stdev = 9908.299
[info]   CI (99.9%): [396771.666, 473078.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1143.362 ±(99.9%) 100.261 MB/sec [Average]
[info]   (min, avg, max) = (1101.352, 1143.362, 1168.792), stdev = 26.037
[info]   CI (99.9%): [1043.102, 1243.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4136.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4136.001, 4136.001, 4136.001), stdev = 0.001
[info]   CI (99.9%): [4136.001, 4136.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.282 ±(99.9%) 681.970 MB/sec [Average]
[info]   (min, avg, max) = (995.304, 1132.282, 1334.131), stdev = 177.106
[info]   CI (99.9%): [450.312, 1814.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4089.623 ±(99.9%) 2219.689 B/op [Average]
[info]   (min, avg, max) = (3576.196, 4089.623, 4765.865), stdev = 576.446
[info]   CI (99.9%): [1869.934, 6309.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.150 ±(99.9%) 0.451 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.150, 0.298), stdev = 0.117
[info]   CI (99.9%): [≈ 0, 0.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 13.000), stdev = 3.899
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.78% complete, ETA 00:14:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 363487.643 ops/s
[info] # Warmup Iteration   2: 612916.808 ops/s
[info] # Warmup Iteration   3: 629694.341 ops/s
[info] # Warmup Iteration   4: 625970.903 ops/s
[info] # Warmup Iteration   5: 633733.965 ops/s
[info] Iteration   1: 635598.302 ops/s
[info]                  ·gc.alloc.rate:                   2078.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5019.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 625591.958 ops/s
[info]                  ·gc.alloc.rate:                   2045.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5114.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 631128.652 ops/s
[info]                  ·gc.alloc.rate:               2063.483 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2038.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5081.852 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 631046.448 ops/s
[info]                  ·gc.alloc.rate:                   2063.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5084.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 635695.673 ops/s
[info]                  ·gc.alloc.rate:                   2078.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5056.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   631812.207 ±(99.9%) 16011.568 ops/s [Average]
[info]   (min, avg, max) = (625591.958, 631812.207, 635695.673), stdev = 4158.153
[info]   CI (99.9%): [615800.639, 647823.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2065.807 ±(99.9%) 52.365 MB/sec [Average]
[info]   (min, avg, max) = (2045.506, 2065.807, 2078.566), stdev = 13.599
[info]   CI (99.9%): [2013.442, 2118.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2036.586 ±(99.9%) 22.662 MB/sec [Average]
[info]   (min, avg, max) = (2027.896, 2036.586, 2043.306), stdev = 5.885
[info]   CI (99.9%): [2013.924, 2059.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5071.409 ±(99.9%) 137.047 B/op [Average]
[info]   (min, avg, max) = (5019.533, 5071.409, 5114.915), stdev = 35.591
[info]   CI (99.9%): [4934.362, 5208.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.356 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.208), stdev = 0.092
[info]   CI (99.9%): [≈ 0, 0.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 16.000), stdev = 4.472
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.47% complete, ETA 00:14:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 803017.985 ops/s
[info] # Warmup Iteration   2: 1243357.537 ops/s
[info] # Warmup Iteration   3: 1255781.229 ops/s
[info] # Warmup Iteration   4: 1250235.414 ops/s
[info] # Warmup Iteration   5: 1248689.843 ops/s
[info] Iteration   1: 1251957.808 ops/s
[info]                  ·gc.alloc.rate:                   1177.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1242.324 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1246969.957 ops/s
[info]                  ·gc.alloc.rate:                   1173.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1676.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1255380.502 ops/s
[info]                  ·gc.alloc.rate:               1180.940 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1255.672 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1202961.968 ops/s
[info]                  ·gc.alloc.rate:               1131.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1755.308 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 1223399.653 ops/s
[info]                  ·gc.alloc.rate:                   1150.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1298.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1236133.977 ±(99.9%) 86119.934 ops/s [Average]
[info]   (min, avg, max) = (1202961.968, 1236133.977, 1255380.502), stdev = 22365.073
[info]   CI (99.9%): [1150014.044, 1322253.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1162.842 ±(99.9%) 81.038 MB/sec [Average]
[info]   (min, avg, max) = (1131.605, 1162.842, 1180.940), stdev = 21.045
[info]   CI (99.9%): [1081.803, 1243.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1134.287 ±(99.9%) 707.983 MB/sec [Average]
[info]   (min, avg, max) = (988.600, 1134.287, 1342.104), stdev = 183.861
[info]   CI (99.9%): [426.304, 1842.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1445.727 ±(99.9%) 959.189 B/op [Average]
[info]   (min, avg, max) = (1242.324, 1445.727, 1755.308), stdev = 249.098
[info]   CI (99.9%): [486.538, 2404.916] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.053), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.050
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 10.17% complete, ETA 00:14:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1935285.655 ops/s
[info] # Warmup Iteration   2: 2310324.286 ops/s
[info] # Warmup Iteration   3: 2345420.287 ops/s
[info] # Warmup Iteration   4: 2312472.017 ops/s
[info] # Warmup Iteration   5: 2314008.654 ops/s
[info] Iteration   1: 2339849.623 ops/s
[info]                  ·gc.alloc.rate:                   1177.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     889.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2331532.264 ops/s
[info]                  ·gc.alloc.rate:                   1173.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     673.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2327126.400 ops/s
[info]                  ·gc.alloc.rate:                   1171.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2349405.417 ops/s
[info]                  ·gc.alloc.rate:                   1182.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     674.298 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2253899.250 ops/s
[info]                  ·gc.alloc.rate:                   1134.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     940.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2320362.591 ±(99.9%) 146768.603 ops/s [Average]
[info]   (min, avg, max) = (2253899.250, 2320362.591, 2349405.417), stdev = 38115.340
[info]   CI (99.9%): [2173593.987, 2467131.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1168.087 ±(99.9%) 73.913 MB/sec [Average]
[info]   (min, avg, max) = (1134.617, 1168.087, 1182.700), stdev = 19.195
[info]   CI (99.9%): [1094.174, 1242.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   792.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (792.000, 792.000, 792.000), stdev = 0.001
[info]   CI (99.9%): [792.000, 792.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1202.470 ±(99.9%) 704.016 MB/sec [Average]
[info]   (min, avg, max) = (997.961, 1202.470, 1347.468), stdev = 182.831
[info]   CI (99.9%): [498.454, 1906.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   816.344 ±(99.9%) 505.994 B/op [Average]
[info]   (min, avg, max) = (673.404, 816.344, 940.577), stdev = 131.405
[info]   CI (99.9%): [310.351, 1322.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.034, 0.056), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 8.000), stdev = 2.280
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 11.86% complete, ETA 00:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 996112.068 ops/s
[info] # Warmup Iteration   2: 1517822.059 ops/s
[info] # Warmup Iteration   3: 1529115.557 ops/s
[info] # Warmup Iteration   4: 1551608.519 ops/s
[info] # Warmup Iteration   5: 1552135.599 ops/s
[info] Iteration   1: 1549096.497 ops/s
[info]                  ·gc.alloc.rate:                   1000.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1012.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1543636.639 ops/s
[info]                  ·gc.alloc.rate:                   996.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1020.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1547281.599 ops/s
[info]                  ·gc.alloc.rate:                   999.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1520688.277 ops/s
[info]                  ·gc.alloc.rate:                   982.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1043.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1550599.683 ops/s
[info]                  ·gc.alloc.rate:                   1001.377 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.302 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1026.071 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1542260.539 ±(99.9%) 47502.762 ops/s [Average]
[info]   (min, avg, max) = (1520688.277, 1542260.539, 1550599.683), stdev = 12336.317
[info]   CI (99.9%): [1494757.777, 1589763.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   995.998 ±(99.9%) 30.621 MB/sec [Average]
[info]   (min, avg, max) = (982.095, 995.998, 1001.377), stdev = 7.952
[info]   CI (99.9%): [965.377, 1026.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.640 ±(99.9%) 22.410 MB/sec [Average]
[info]   (min, avg, max) = (996.669, 1004.640, 1011.302), stdev = 5.820
[info]   CI (99.9%): [982.230, 1027.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1024.880 ±(99.9%) 44.489 B/op [Average]
[info]   (min, avg, max) = (1012.194, 1024.880, 1043.458), stdev = 11.554
[info]   CI (99.9%): [980.391, 1069.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.038, 0.063), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.578
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 13.56% complete, ETA 00:13:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5954819.463 ops/s
[info] # Warmup Iteration   2: 5319120.280 ops/s
[info] # Warmup Iteration   3: 5378040.519 ops/s
[info] # Warmup Iteration   4: 5312520.437 ops/s
[info] # Warmup Iteration   5: 5401706.044 ops/s
[info] Iteration   1: 5381632.633 ops/s
[info]                  ·gc.alloc.rate:                   574.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     190.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 5453740.196 ops/s
[info]                  ·gc.alloc.rate:                   582.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     188.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 5369395.322 ops/s
[info]                  ·gc.alloc.rate:               573.378 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.544 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 95.971 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 5435632.400 ops/s
[info]                  ·gc.alloc.rate:               580.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 189.988 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 5397105.611 ops/s
[info]                  ·gc.alloc.rate:                   576.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     192.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5407501.232 ±(99.9%) 138284.743 ops/s [Average]
[info]   (min, avg, max) = (5369395.322, 5407501.232, 5453740.196), stdev = 35912.109
[info]   CI (99.9%): [5269216.489, 5545785.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   577.446 ±(99.9%) 14.762 MB/sec [Average]
[info]   (min, avg, max) = (573.378, 577.446, 582.382), stdev = 3.834
[info]   CI (99.9%): [562.685, 592.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.718 ±(99.9%) 564.450 MB/sec [Average]
[info]   (min, avg, max) = (327.544, 589.718, 659.100), stdev = 146.586
[info]   CI (99.9%): [25.268, 1154.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   171.442 ±(99.9%) 162.530 B/op [Average]
[info]   (min, avg, max) = (95.971, 171.442, 192.125), stdev = 42.209
[info]   CI (99.9%): [8.912, 333.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.018), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 5.000), stdev = 1.581
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 15.25% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 137907.758 ops/s
[info] # Warmup Iteration   2: 260037.164 ops/s
[info] # Warmup Iteration   3: 268930.251 ops/s
[info] # Warmup Iteration   4: 268620.827 ops/s
[info] # Warmup Iteration   5: 268092.024 ops/s
[info] Iteration   1: 273783.438 ops/s
[info]                  ·gc.alloc.rate:                   1243.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7590.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 272236.252 ops/s
[info]                  ·gc.alloc.rate:                   1236.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5763.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 273657.756 ops/s
[info]                  ·gc.alloc.rate:                   1242.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7681.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 271070.955 ops/s
[info]                  ·gc.alloc.rate:                   1230.895 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7791.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.242 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 269549.479 ops/s
[info]                  ·gc.alloc.rate:                   1223.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5896.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   272059.576 ±(99.9%) 6897.666 ops/s [Average]
[info]   (min, avg, max) = (269549.479, 272059.576, 273783.438), stdev = 1791.302
[info]   CI (99.9%): [265161.910, 278957.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1235.406 ±(99.9%) 31.371 MB/sec [Average]
[info]   (min, avg, max) = (1223.986, 1235.406, 1243.235), stdev = 8.147
[info]   CI (99.9%): [1204.035, 1266.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1201.418 ±(99.9%) 695.527 MB/sec [Average]
[info]   (min, avg, max) = (997.340, 1201.418, 1342.454), stdev = 180.626
[info]   CI (99.9%): [505.891, 1896.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6944.616 ±(99.9%) 3931.831 B/op [Average]
[info]   (min, avg, max) = (5763.417, 6944.616, 7791.482), stdev = 1021.084
[info]   CI (99.9%): [3012.785, 10876.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.337 ±(99.9%) 0.603 B/op [Average]
[info]   (min, avg, max) = (0.239, 0.337, 0.602), stdev = 0.157
[info]   CI (99.9%): [≈ 0, 0.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 13.000), stdev = 4.382
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 16.95% complete, ETA 00:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 340483.225 ops/s
[info] # Warmup Iteration   2: 544991.282 ops/s
[info] # Warmup Iteration   3: 552743.784 ops/s
[info] # Warmup Iteration   4: 545920.898 ops/s
[info] # Warmup Iteration   5: 559609.105 ops/s
[info] Iteration   1: 556055.616 ops/s
[info]                  ·gc.alloc.rate:                   1846.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5723.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 558396.222 ops/s
[info]                  ·gc.alloc.rate:                   1854.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4767.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 549273.065 ops/s
[info]                  ·gc.alloc.rate:                   1823.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5829.314 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 549562.551 ops/s
[info]                  ·gc.alloc.rate:                   1824.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4864.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 558533.946 ops/s
[info]                  ·gc.alloc.rate:                   1854.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4786.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   554364.280 ±(99.9%) 17800.678 ops/s [Average]
[info]   (min, avg, max) = (549273.065, 554364.280, 558533.946), stdev = 4622.780
[info]   CI (99.9%): [536563.602, 572164.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1840.761 ±(99.9%) 59.065 MB/sec [Average]
[info]   (min, avg, max) = (1823.847, 1840.761, 1854.599), stdev = 15.339
[info]   CI (99.9%): [1781.696, 1899.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.769 ±(99.9%) 700.843 MB/sec [Average]
[info]   (min, avg, max) = (1692.017, 1829.769, 2035.179), stdev = 182.007
[info]   CI (99.9%): [1128.926, 2530.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5194.312 ±(99.9%) 2056.068 B/op [Average]
[info]   (min, avg, max) = (4767.270, 5194.312, 5829.314), stdev = 533.954
[info]   CI (99.9%): [3138.244, 7250.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 0.249 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.130, 0.179), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.400, 14.000), stdev = 4.336
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 18.64% complete, ETA 00:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 396577.439 ops/s
[info] # Warmup Iteration   2: 624994.788 ops/s
[info] # Warmup Iteration   3: 637529.026 ops/s
[info] # Warmup Iteration   4: 639868.636 ops/s
[info] # Warmup Iteration   5: 643202.418 ops/s
[info] Iteration   1: 636333.645 ops/s
[info]                  ·gc.alloc.rate:                   789.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          973.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2407.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 625022.463 ops/s
[info]                  ·gc.alloc.rate:                   775.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1645.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 630930.056 ops/s
[info]                  ·gc.alloc.rate:                   782.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1638.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 631778.436 ops/s
[info]                  ·gc.alloc.rate:                   783.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2470.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 633956.875 ops/s
[info]                  ·gc.alloc.rate:               788.720 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1635.360 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   631604.295 ±(99.9%) 16303.603 ops/s [Average]
[info]   (min, avg, max) = (625022.463, 631604.295, 636333.645), stdev = 4233.994
[info]   CI (99.9%): [615300.692, 647907.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   784.077 ±(99.9%) 21.661 MB/sec [Average]
[info]   (min, avg, max) = (775.482, 784.077, 789.512), stdev = 5.625
[info]   CI (99.9%): [762.415, 805.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   787.438 ±(99.9%) 687.151 MB/sec [Average]
[info]   (min, avg, max) = (653.758, 787.438, 991.914), stdev = 178.451
[info]   CI (99.9%): [100.287, 1474.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1959.372 ±(99.9%) 1687.130 B/op [Average]
[info]   (min, avg, max) = (1635.360, 1959.372, 2470.164), stdev = 438.142
[info]   CI (99.9%): [272.242, 3646.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.230 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.157), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 11.000), stdev = 3.464
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 20.34% complete, ETA 00:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4590779.460 ops/s
[info] # Warmup Iteration   2: 4786700.693 ops/s
[info] # Warmup Iteration   3: 4826104.503 ops/s
[info] # Warmup Iteration   4: 4857287.465 ops/s
[info] # Warmup Iteration   5: 4797407.880 ops/s
[info] Iteration   1: 4784489.568 ops/s
[info]                  ·gc.alloc.rate:                   218.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4862329.099 ops/s
[info]                  ·gc.alloc.rate:               222.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82.802 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 4889287.365 ops/s
[info]                  ·gc.alloc.rate:      223.765 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4817290.778 ops/s
[info]                  ·gc.alloc.rate:                   220.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.228 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.728 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4843377.208 ops/s
[info]                  ·gc.alloc.rate:                   221.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105.639 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   4839354.803 ±(99.9%) 155633.124 ops/s [Average]
[info]   (min, avg, max) = (4784489.568, 4839354.803, 4889287.365), stdev = 40417.428
[info]   CI (99.9%): [4683721.680, 4994987.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   221.480 ±(99.9%) 7.135 MB/sec [Average]
[info]   (min, avg, max) = (218.965, 221.480, 223.765), stdev = 1.853
[info]   CI (99.9%): [214.345, 228.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   232.457 ±(99.9%) 517.871 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 232.457, 325.245), stdev = 134.489
[info]   CI (99.9%): [≈ 0, 750.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   75.760 ±(99.9%) 168.721 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 75.760, 106.210), stdev = 43.816
[info]   CI (99.9%): [≈ 0, 244.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.454 ±(99.9%) 3.820 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.454, 2.228), stdev = 0.992
[info]   CI (99.9%): [≈ 0, 4.274] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 1.247 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.728), stdev = 0.324
[info]   CI (99.9%): [≈ 0, 1.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.03% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84007.555 ops/s
[info] # Warmup Iteration   2: 199850.465 ops/s
[info] # Warmup Iteration   3: 202940.003 ops/s
[info] # Warmup Iteration   4: 203130.918 ops/s
[info] # Warmup Iteration   5: 205540.601 ops/s
[info] Iteration   1: 202792.575 ops/s
[info]                  ·gc.alloc.rate:                   1119.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10205.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.485 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 203634.505 ops/s
[info]                  ·gc.alloc.rate:                   1124.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7679.113 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.644 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 203967.699 ops/s
[info]                  ·gc.alloc.rate:                   1126.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7697.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.643 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 203918.250 ops/s
[info]                  ·gc.alloc.rate:               1126.102 MB/sec
[info]                  ·gc.alloc.rate.norm:          8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1338.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 10324.061 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 203253.716 ops/s
[info]                  ·gc.alloc.rate:                   1122.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7804.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   203513.349 ±(99.9%) 1898.159 ops/s [Average]
[info]   (min, avg, max) = (202792.575, 203513.349, 203967.699), stdev = 492.946
[info]   CI (99.9%): [201615.190, 205411.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1123.855 ±(99.9%) 10.476 MB/sec [Average]
[info]   (min, avg, max) = (1119.884, 1123.855, 1126.346), stdev = 2.721
[info]   CI (99.9%): [1113.379, 1134.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8688.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8688.002, 8688.002, 8688.002), stdev = 0.001
[info]   CI (99.9%): [8688.002, 8688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.759 ±(99.9%) 690.174 MB/sec [Average]
[info]   (min, avg, max) = (993.953, 1130.759, 1338.161), stdev = 179.236
[info]   CI (99.9%): [440.585, 1820.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8742.128 ±(99.9%) 5357.863 B/op [Average]
[info]   (min, avg, max) = (7679.113, 8742.128, 10324.061), stdev = 1391.420
[info]   CI (99.9%): [3384.264, 14099.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.386 ±(99.9%) 1.125 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.386, 0.644), stdev = 0.292
[info]   CI (99.9%): [≈ 0, 1.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 23.73% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3093908.278 ops/s
[info] # Warmup Iteration   2: 3445988.358 ops/s
[info] # Warmup Iteration   3: 3476261.856 ops/s
[info] # Warmup Iteration   4: 3534862.597 ops/s
[info] # Warmup Iteration   5: 3469358.837 ops/s
[info] Iteration   1: 3455208.629 ops/s
[info]                  ·gc.alloc.rate:                   1633.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     609.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3490030.453 ops/s
[info]                  ·gc.alloc.rate:                   1650.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     758.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3510706.586 ops/s
[info]                  ·gc.alloc.rate:                   1660.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     757.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3472488.620 ops/s
[info]                  ·gc.alloc.rate:                   1642.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     767.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3484360.150 ops/s
[info]                  ·gc.alloc.rate:                   1647.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.295 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     766.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3482558.888 ±(99.9%) 79401.937 ops/s [Average]
[info]   (min, avg, max) = (3455208.629, 3482558.888, 3510706.586), stdev = 20620.431
[info]   CI (99.9%): [3403156.951, 3561960.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1646.914 ±(99.9%) 37.551 MB/sec [Average]
[info]   (min, avg, max) = (1633.952, 1646.914, 1660.202), stdev = 9.752
[info]   CI (99.9%): [1609.363, 1684.465] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1620.300 ±(99.9%) 606.374 MB/sec [Average]
[info]   (min, avg, max) = (1338.789, 1620.300, 1697.295), stdev = 157.473
[info]   CI (99.9%): [1013.926, 2226.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   731.750 ±(99.9%) 263.547 B/op [Average]
[info]   (min, avg, max) = (609.601, 731.750, 767.475), stdev = 68.442
[info]   CI (99.9%): [468.203, 995.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.023, 0.038), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 13.000), stdev = 3.536
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 25.42% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143432.639 ops/s
[info] # Warmup Iteration   2: 237591.090 ops/s
[info] # Warmup Iteration   3: 239326.020 ops/s
[info] # Warmup Iteration   4: 239526.282 ops/s
[info] # Warmup Iteration   5: 237574.048 ops/s
[info] Iteration   1: 236073.491 ops/s
[info]                  ·gc.alloc.rate:                   1268.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8820.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.694 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 237178.134 ops/s
[info]                  ·gc.alloc.rate:                   1274.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8836.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.553 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 239747.957 ops/s
[info]                  ·gc.alloc.rate:                   1288.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8789.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 238027.468 ops/s
[info]                  ·gc.alloc.rate:                   1279.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6666.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 239689.727 ops/s
[info]                  ·gc.alloc.rate:                   1288.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8853.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.273 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   238143.356 ±(99.9%) 6147.609 ops/s [Average]
[info]   (min, avg, max) = (236073.491, 238143.356, 239747.957), stdev = 1596.514
[info]   CI (99.9%): [231995.747, 244290.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1279.974 ±(99.9%) 33.096 MB/sec [Average]
[info]   (min, avg, max) = (1268.821, 1279.974, 1288.581), stdev = 8.595
[info]   CI (99.9%): [1246.878, 1313.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.502 ±(99.9%) 564.949 MB/sec [Average]
[info]   (min, avg, max) = (1008.581, 1270.502, 1348.837), stdev = 146.716
[info]   CI (99.9%): [705.553, 1835.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8393.222 ±(99.9%) 3718.228 B/op [Average]
[info]   (min, avg, max) = (6666.386, 8393.222, 8853.135), stdev = 965.612
[info]   CI (99.9%): [4674.994, 12111.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.413 ±(99.9%) 0.847 B/op [Average]
[info]   (min, avg, max) = (0.138, 0.413, 0.694), stdev = 0.220
[info]   CI (99.9%): [≈ 0, 1.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.12% complete, ETA 00:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 251678.465 ops/s
[info] # Warmup Iteration   2: 444277.409 ops/s
[info] # Warmup Iteration   3: 456414.439 ops/s
[info] # Warmup Iteration   4: 460252.417 ops/s
[info] # Warmup Iteration   5: 460914.962 ops/s
[info] Iteration   1: 460755.777 ops/s
[info]                  ·gc.alloc.rate:                   1614.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5737.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 461327.804 ops/s
[info]                  ·gc.alloc.rate:                   1616.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4603.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 450007.125 ops/s
[info]                  ·gc.alloc.rate:                   1576.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5915.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 457016.177 ops/s
[info]                  ·gc.alloc.rate:                   1601.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.127 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5838.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 458305.270 ops/s
[info]                  ·gc.alloc.rate:                   1605.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1358.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4664.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   457482.431 ±(99.9%) 17463.885 ops/s [Average]
[info]   (min, avg, max) = (450007.125, 457482.431, 461327.804), stdev = 4535.316
[info]   CI (99.9%): [440018.545, 474946.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1602.857 ±(99.9%) 61.233 MB/sec [Average]
[info]   (min, avg, max) = (1576.634, 1602.857, 1616.324), stdev = 15.902
[info]   CI (99.9%): [1541.625, 1664.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1555.435 ±(99.9%) 707.326 MB/sec [Average]
[info]   (min, avg, max) = (1349.871, 1555.435, 1696.127), stdev = 183.690
[info]   CI (99.9%): [848.110, 2262.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5351.810 ±(99.9%) 2536.509 B/op [Average]
[info]   (min, avg, max) = (4603.344, 5351.810, 5915.287), stdev = 658.723
[info]   CI (99.9%): [2815.301, 7888.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.172 ±(99.9%) 0.242 B/op [Average]
[info]   (min, avg, max) = (0.142, 0.172, 0.284), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.600, 16.000), stdev = 4.615
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 28.81% complete, ETA 00:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296516.719 ops/s
[info] # Warmup Iteration   2: 523483.751 ops/s
[info] # Warmup Iteration   3: 512196.177 ops/s
[info] # Warmup Iteration   4: 535716.771 ops/s
[info] # Warmup Iteration   5: 536150.136 ops/s
[info] Iteration   1: 536595.160 ops/s
[info]                  ·gc.alloc.rate:                   545.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1914.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 533047.617 ops/s
[info]                  ·gc.alloc.rate:                   542.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1937.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 537233.074 ops/s
[info]                  ·gc.alloc.rate:               546.409 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 963.094 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 534142.851 ops/s
[info]                  ·gc.alloc.rate:                   543.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1945.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 536163.016 ops/s
[info]                  ·gc.alloc.rate:                   545.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     972.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.367 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   535436.344 ±(99.9%) 6801.125 ops/s [Average]
[info]   (min, avg, max) = (533047.617, 535436.344, 537233.074), stdev = 1766.231
[info]   CI (99.9%): [528635.219, 542237.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   544.547 ±(99.9%) 6.945 MB/sec [Average]
[info]   (min, avg, max) = (542.122, 544.547, 546.409), stdev = 1.804
[info]   CI (99.9%): [537.602, 551.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.068 ±(99.9%) 688.522 MB/sec [Average]
[info]   (min, avg, max) = (328.902, 526.068, 660.395), stdev = 178.807
[info]   CI (99.9%): [≈ 0, 1214.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1546.641 ±(99.9%) 2034.652 B/op [Average]
[info]   (min, avg, max) = (963.094, 1546.641, 1945.141), stdev = 528.393
[info]   CI (99.9%): [≈ 0, 3581.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.552 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.367), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 9.000), stdev = 3.130
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 30.51% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3059889.679 ops/s
[info] # Warmup Iteration   2: 3153290.786 ops/s
[info] # Warmup Iteration   3: 3244333.011 ops/s
[info] # Warmup Iteration   4: 3259312.241 ops/s
[info] # Warmup Iteration   5: 3263730.801 ops/s
[info] Iteration   1: 3264115.364 ops/s
[info]                  ·gc.alloc.rate:                   879.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     474.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3246315.903 ops/s
[info]                  ·gc.alloc.rate:                   874.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3193239.935 ops/s
[info]                  ·gc.alloc.rate:                   860.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3241989.370 ops/s
[info]                  ·gc.alloc.rate:                   873.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     484.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3178164.866 ops/s
[info]                  ·gc.alloc.rate:               856.525 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 330.555 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3224765.088 ±(99.9%) 142460.474 ops/s [Average]
[info]   (min, avg, max) = (3178164.866, 3224765.088, 3264115.364), stdev = 36996.533
[info]   CI (99.9%): [3082304.614, 3367225.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   869.092 ±(99.9%) 38.422 MB/sec [Average]
[info]   (min, avg, max) = (856.525, 869.092, 879.698), stdev = 9.978
[info]   CI (99.9%): [830.670, 907.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.414 ±(99.9%) 692.861 MB/sec [Average]
[info]   (min, avg, max) = (659.070, 860.414, 998.005), stdev = 179.934
[info]   CI (99.9%): [167.553, 1553.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   419.576 ±(99.9%) 333.517 B/op [Average]
[info]   (min, avg, max) = (319.409, 419.576, 489.381), stdev = 86.613
[info]   CI (99.9%): [86.059, 753.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 10.000), stdev = 3.847
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.20% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80690.005 ops/s
[info] # Warmup Iteration   2: 162450.698 ops/s
[info] # Warmup Iteration   3: 168742.710 ops/s
[info] # Warmup Iteration   4: 167936.046 ops/s
[info] # Warmup Iteration   5: 170138.490 ops/s
[info] Iteration   1: 167124.165 ops/s
[info]                  ·gc.alloc.rate:                   1156.607 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9293.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 168703.045 ops/s
[info]                  ·gc.alloc.rate:                   1167.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12367.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.583 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 167383.317 ops/s
[info]                  ·gc.alloc.rate:                   1158.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9398.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 170640.849 ops/s
[info]                  ·gc.alloc.rate:                   1180.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12349.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 169853.749 ops/s
[info]                  ·gc.alloc.rate:                   1175.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              10888.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9342.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   168741.025 ±(99.9%) 5873.506 ops/s [Average]
[info]   (min, avg, max) = (167124.165, 168741.025, 170640.849), stdev = 1525.331
[info]   CI (99.9%): [162867.519, 174614.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1167.820 ±(99.9%) 40.692 MB/sec [Average]
[info]   (min, avg, max) = (1156.607, 1167.820, 1180.974), stdev = 10.568
[info]   CI (99.9%): [1127.128, 1208.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10888.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10888.003, 10888.003, 10888.003), stdev = 0.001
[info]   CI (99.9%): [10888.002, 10888.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.307 ±(99.9%) 705.732 MB/sec [Average]
[info]   (min, avg, max) = (987.275, 1132.307, 1339.487), stdev = 183.276
[info]   CI (99.9%): [426.575, 1838.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10550.261 ±(99.9%) 6357.161 B/op [Average]
[info]   (min, avg, max) = (9293.951, 10550.261, 12367.188), stdev = 1650.934
[info]   CI (99.9%): [4193.100, 16907.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.350 ±(99.9%) 0.631 B/op [Average]
[info]   (min, avg, max) = (0.192, 0.350, 0.583), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 13.000), stdev = 4.550
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 33.90% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 250919.543 ops/s
[info] # Warmup Iteration   2: 459254.005 ops/s
[info] # Warmup Iteration   3: 469522.438 ops/s
[info] # Warmup Iteration   4: 466286.351 ops/s
[info] # Warmup Iteration   5: 471501.320 ops/s
[info] Iteration   1: 468778.183 ops/s
[info]                  ·gc.alloc.rate:                   1666.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5643.987 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 469489.025 ops/s
[info]                  ·gc.alloc.rate:                   1668.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4526.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 471150.694 ops/s
[info]                  ·gc.alloc.rate:               1674.718 MB/sec
[info]                  ·gc.alloc.rate.norm:          5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1693.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5654.506 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 475841.708 ops/s
[info]                  ·gc.alloc.rate:                   1691.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5607.594 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 471492.439 ops/s
[info]                  ·gc.alloc.rate:                   1675.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5670.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   471350.410 ±(99.9%) 10600.278 ops/s [Average]
[info]   (min, avg, max) = (468778.183, 471350.410, 475841.708), stdev = 2752.859
[info]   CI (99.9%): [460750.132, 481950.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1675.401 ±(99.9%) 37.625 MB/sec [Average]
[info]   (min, avg, max) = (1666.249, 1675.401, 1691.345), stdev = 9.771
[info]   CI (99.9%): [1637.776, 1713.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1624.295 ±(99.9%) 589.060 MB/sec [Average]
[info]   (min, avg, max) = (1350.899, 1624.295, 1699.336), stdev = 152.977
[info]   CI (99.9%): [1035.235, 2213.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5420.614 ±(99.9%) 1926.322 B/op [Average]
[info]   (min, avg, max) = (4526.674, 5420.614, 5670.310), stdev = 500.260
[info]   CI (99.9%): [3494.292, 7346.936] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.167 ±(99.9%) 0.406 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.167, 0.279), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.000, 17.000), stdev = 4.796
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 35.59% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 436843.619 ops/s
[info] # Warmup Iteration   2: 817903.527 ops/s
[info] # Warmup Iteration   3: 800510.302 ops/s
[info] # Warmup Iteration   4: 810793.642 ops/s
[info] # Warmup Iteration   5: 794218.662 ops/s
[info] Iteration   1: 802977.697 ops/s
[info]                  ·gc.alloc.rate:                   947.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1946.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.245 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 800676.101 ops/s
[info]                  ·gc.alloc.rate:                   944.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1963.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 801773.499 ops/s
[info]                  ·gc.alloc.rate:                   945.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1310.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 808400.661 ops/s
[info]                  ·gc.alloc.rate:                   953.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1957.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 804455.334 ops/s
[info]                  ·gc.alloc.rate:                   949.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1973.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   803656.658 ±(99.9%) 11557.456 ops/s [Average]
[info]   (min, avg, max) = (800676.101, 803656.658, 808400.661), stdev = 3001.435
[info]   CI (99.9%): [792099.202, 815214.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   948.115 ±(99.9%) 13.564 MB/sec [Average]
[info]   (min, avg, max) = (944.668, 948.115, 953.706), stdev = 3.522
[info]   CI (99.9%): [934.552, 961.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.001, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   935.133 ±(99.9%) 575.292 MB/sec [Average]
[info]   (min, avg, max) = (668.098, 935.133, 1009.268), stdev = 149.401
[info]   CI (99.9%): [359.842, 1510.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1830.281 ±(99.9%) 1118.584 B/op [Average]
[info]   (min, avg, max) = (1310.944, 1830.281, 1973.822), stdev = 290.493
[info]   CI (99.9%): [711.697, 2948.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.106 ±(99.9%) 0.306 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.106, 0.245), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 8.000), stdev = 2.550
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.29% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3532659.373 ops/s
[info] # Warmup Iteration   2: 3427853.795 ops/s
[info] # Warmup Iteration   3: 3472132.079 ops/s
[info] # Warmup Iteration   4: 3485516.545 ops/s
[info] # Warmup Iteration   5: 3491075.277 ops/s
[info] Iteration   1: 3492558.523 ops/s
[info]                  ·gc.alloc.rate:                   870.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     443.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3462271.688 ops/s
[info]                  ·gc.alloc.rate:                   862.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.528 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3478963.005 ops/s
[info]                  ·gc.alloc.rate:                   866.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3494073.811 ops/s
[info]                  ·gc.alloc.rate:                   870.601 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3443634.412 ops/s
[info]                  ·gc.alloc.rate:                   858.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     305.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3474300.288 ±(99.9%) 82388.922 ops/s [Average]
[info]   (min, avg, max) = (3443634.412, 3474300.288, 3494073.811), stdev = 21396.141
[info]   CI (99.9%): [3391911.366, 3556689.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   865.667 ±(99.9%) 20.557 MB/sec [Average]
[info]   (min, avg, max) = (858.005, 865.667, 870.601), stdev = 5.339
[info]   CI (99.9%): [845.109, 886.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.261 ±(99.9%) 686.435 MB/sec [Average]
[info]   (min, avg, max) = (662.413, 860.261, 997.948), stdev = 178.265
[info]   CI (99.9%): [173.827, 1546.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   389.344 ±(99.9%) 306.181 B/op [Average]
[info]   (min, avg, max) = (299.556, 389.344, 449.528), stdev = 79.514
[info]   CI (99.9%): [83.163, 695.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.021, 0.038), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.050
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 38.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135900.087 ops/s
[info] # Warmup Iteration   2: 240336.759 ops/s
[info] # Warmup Iteration   3: 252437.469 ops/s
[info] # Warmup Iteration   4: 251282.398 ops/s
[info] # Warmup Iteration   5: 253582.682 ops/s
[info] Iteration   1: 253594.910 ops/s
[info]                  ·gc.alloc.rate:                   1324.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.524 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8210.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 255221.754 ops/s
[info]                  ·gc.alloc.rate:                   1332.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8211.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 253158.506 ops/s
[info]                  ·gc.alloc.rate:                   1322.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8324.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 249248.782 ops/s
[info]                  ·gc.alloc.rate:                   1301.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8492.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 247834.438 ops/s
[info]                  ·gc.alloc.rate:                   1294.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8568.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   251811.678 ±(99.9%) 12025.074 ops/s [Average]
[info]   (min, avg, max) = (247834.438, 251811.678, 255221.754), stdev = 3122.874
[info]   CI (99.9%): [239786.604, 263836.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1315.041 ±(99.9%) 63.007 MB/sec [Average]
[info]   (min, avg, max) = (1294.210, 1315.041, 1332.883), stdev = 16.363
[info]   CI (99.9%): [1252.034, 1378.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.002, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.107 ±(99.9%) 40.356 MB/sec [Average]
[info]   (min, avg, max) = (1323.524, 1338.107, 1349.785), stdev = 10.480
[info]   CI (99.9%): [1297.751, 1378.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8361.700 ±(99.9%) 628.919 B/op [Average]
[info]   (min, avg, max) = (8210.604, 8361.700, 8568.809), stdev = 163.328
[info]   CI (99.9%): [7732.781, 8990.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.286 ±(99.9%) 0.410 B/op [Average]
[info]   (min, avg, max) = (0.131, 0.286, 0.388), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.800, 15.000), stdev = 4.324
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.68% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77754.071 ops/s
[info] # Warmup Iteration   2: 824828.760 ops/s
[info] # Warmup Iteration   3: 858556.667 ops/s
[info] # Warmup Iteration   4: 857498.084 ops/s
[info] # Warmup Iteration   5: 853842.822 ops/s
[info] Iteration   1: 853125.900 ops/s
[info]                  ·gc.alloc.rate:                   1106.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2445.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 839493.288 ops/s
[info]                  ·gc.alloc.rate:                   1088.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1874.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 849249.401 ops/s
[info]                  ·gc.alloc.rate:                   1101.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1861.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 847959.873 ops/s
[info]                  ·gc.alloc.rate:                   1099.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2495.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 849863.490 ops/s
[info]                  ·gc.alloc.rate:                   1102.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1872.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   847938.390 ±(99.9%) 19601.936 ops/s [Average]
[info]   (min, avg, max) = (839493.288, 847938.390, 853125.900), stdev = 5090.561
[info]   CI (99.9%): [828336.454, 867540.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   1099.544 ±(99.9%) 25.404 MB/sec [Average]
[info]   (min, avg, max) = (1088.594, 1099.544, 1106.257), stdev = 6.597
[info]   CI (99.9%): [1074.141, 1124.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.000, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1137.431 ±(99.9%) 697.081 MB/sec [Average]
[info]   (min, avg, max) = (1000.015, 1137.431, 1344.893), stdev = 181.030
[info]   CI (99.9%): [440.350, 1834.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2109.595 ±(99.9%) 1270.109 B/op [Average]
[info]   (min, avg, max) = (1861.117, 2109.595, 2495.111), stdev = 329.843
[info]   CI (99.9%): [839.485, 3379.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.237 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.436 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.124, 0.307), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.37% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1772024.691 ops/s
[info] # Warmup Iteration   2: 2630044.020 ops/s
[info] # Warmup Iteration   3: 2640669.554 ops/s
[info] # Warmup Iteration   4: 2638790.027 ops/s
[info] # Warmup Iteration   5: 2636055.261 ops/s
[info] Iteration   1: 2685302.662 ops/s
[info]                  ·gc.alloc.rate:                   1829.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     982.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2690839.947 ops/s
[info]                  ·gc.alloc.rate:                   1833.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     985.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2656946.081 ops/s
[info]                  ·gc.alloc.rate:                   1810.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1202.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2666325.284 ops/s
[info]                  ·gc.alloc.rate:                   1816.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1000.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2651290.402 ops/s
[info]                  ·gc.alloc.rate:                   1806.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.440 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1008.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2670140.875 ±(99.9%) 66759.912 ops/s [Average]
[info]   (min, avg, max) = (2651290.402, 2670140.875, 2690839.947), stdev = 17337.337
[info]   CI (99.9%): [2603380.963, 2736900.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1819.420 ±(99.9%) 45.454 MB/sec [Average]
[info]   (min, avg, max) = (1806.683, 1819.420, 1833.542), stdev = 11.804
[info]   CI (99.9%): [1773.966, 1864.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1757.399 ±(99.9%) 588.189 MB/sec [Average]
[info]   (min, avg, max) = (1676.388, 1757.399, 2030.172), stdev = 152.751
[info]   CI (99.9%): [1169.211, 2345.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1035.714 ±(99.9%) 360.710 B/op [Average]
[info]   (min, avg, max) = (982.159, 1035.714, 1202.176), stdev = 93.675
[info]   CI (99.9%): [675.004, 1396.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.034, 0.062), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 10.000), stdev = 2.302
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.07% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123408.435 ops/s
[info] # Warmup Iteration   2: 209688.135 ops/s
[info] # Warmup Iteration   3: 215594.650 ops/s
[info] # Warmup Iteration   4: 217868.249 ops/s
[info] # Warmup Iteration   5: 216306.050 ops/s
[info] Iteration   1: 216132.585 ops/s
[info]                  ·gc.alloc.rate:                   1147.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              8352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9595.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 218653.198 ops/s
[info]                  ·gc.alloc.rate:                   1160.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              8352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7161.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.599 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 217950.387 ops/s
[info]                  ·gc.alloc.rate:                   1157.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              8352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7218.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 218390.355 ops/s
[info]                  ·gc.alloc.rate:                   1159.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              8352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9649.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 214447.594 ops/s
[info]                  ·gc.alloc.rate:                   1138.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              8352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7399.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   217114.824 ±(99.9%) 6880.339 ops/s [Average]
[info]   (min, avg, max) = (214447.594, 217114.824, 218653.198), stdev = 1786.802
[info]   CI (99.9%): [210234.485, 223995.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1152.620 ±(99.9%) 36.472 MB/sec [Average]
[info]   (min, avg, max) = (1138.496, 1152.620, 1160.811), stdev = 9.472
[info]   CI (99.9%): [1116.148, 1189.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8352.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8352.002, 8352.002, 8352.002), stdev = 0.001
[info]   CI (99.9%): [8352.002, 8352.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.317 ±(99.9%) 691.683 MB/sec [Average]
[info]   (min, avg, max) = (995.312, 1132.317, 1339.489), stdev = 179.628
[info]   CI (99.9%): [440.634, 1824.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8204.712 ±(99.9%) 4995.288 B/op [Average]
[info]   (min, avg, max) = (7161.238, 8204.712, 9649.428), stdev = 1297.260
[info]   CI (99.9%): [3209.424, 13200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.331 ±(99.9%) 0.749 B/op [Average]
[info]   (min, avg, max) = (0.150, 0.331, 0.599), stdev = 0.195
[info]   CI (99.9%): [≈ 0, 1.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 11.000), stdev = 2.490
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.76% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 628169.581 ops/s
[info] # Warmup Iteration   2: 921680.215 ops/s
[info] # Warmup Iteration   3: 976843.769 ops/s
[info] # Warmup Iteration   4: 968960.616 ops/s
[info] # Warmup Iteration   5: 971879.011 ops/s
[info] Iteration   1: 980676.619 ops/s
[info]                  ·gc.alloc.rate:                   723.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1057.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 979263.479 ops/s
[info]                  ·gc.alloc.rate:                   722.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1063.180 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 979181.440 ops/s
[info]                  ·gc.alloc.rate:                   721.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1067.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 979376.116 ops/s
[info]                  ·gc.alloc.rate:                   722.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1607.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 965268.665 ops/s
[info]                  ·gc.alloc.rate:               711.751 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1090.525 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   976753.264 ±(99.9%) 24833.317 ops/s [Average]
[info]   (min, avg, max) = (965268.665, 976753.264, 980676.619), stdev = 6449.134
[info]   CI (99.9%): [951919.946, 1001586.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   720.194 ±(99.9%) 18.256 MB/sec [Average]
[info]   (min, avg, max) = (711.751, 720.194, 723.071), stdev = 4.741
[info]   CI (99.9%): [701.939, 738.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   731.010 ±(99.9%) 580.540 MB/sec [Average]
[info]   (min, avg, max) = (659.092, 731.010, 1000.624), stdev = 150.764
[info]   CI (99.9%): [150.470, 1311.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1177.198 ±(99.9%) 927.323 B/op [Average]
[info]   (min, avg, max) = (1057.361, 1177.198, 1607.406), stdev = 240.823
[info]   CI (99.9%): [249.874, 2104.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.047 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.100), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.581
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.46% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4861493.563 ops/s
[info] # Warmup Iteration   2: 4853593.385 ops/s
[info] # Warmup Iteration   3: 4635676.781 ops/s
[info] # Warmup Iteration   4: 5070549.797 ops/s
[info] # Warmup Iteration   5: 5073098.033 ops/s
[info] Iteration   1: 5104052.307 ops/s
[info]                  ·gc.alloc.rate:      155.722 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 5072800.918 ops/s
[info]                  ·gc.alloc.rate:               154.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 79.364 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 5096063.443 ops/s
[info]                  ·gc.alloc.rate:      155.479 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 5087404.262 ops/s
[info]                  ·gc.alloc.rate:                   155.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4897836.431 ops/s
[info]                  ·gc.alloc.rate:               149.432 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82.199 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   5051631.472 ±(99.9%) 334046.947 ops/s [Average]
[info]   (min, avg, max) = (4897836.431, 5051631.472, 5104052.307), stdev = 86750.931
[info]   CI (99.9%): [4717584.525, 5385678.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   154.124 ±(99.9%) 10.191 MB/sec [Average]
[info]   (min, avg, max) = (149.432, 154.124, 155.722), stdev = 2.647
[info]   CI (99.9%): [143.933, 164.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   153.540 ±(99.9%) 539.713 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.540, 255.899), stdev = 140.162
[info]   CI (99.9%): [≈ 0, 693.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   48.140 ±(99.9%) 169.282 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.140, 82.199), stdev = 43.962
[info]   CI (99.9%): [≈ 0, 217.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 7.000), stdev = 2.881
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.15% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97423.291 ops/s
[info] # Warmup Iteration   2: 165842.322 ops/s
[info] # Warmup Iteration   3: 171136.772 ops/s
[info] # Warmup Iteration   4: 169140.991 ops/s
[info] # Warmup Iteration   5: 167427.517 ops/s
[info] Iteration   1: 166908.135 ops/s
[info]                  ·gc.alloc.rate:                   1150.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12425.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.589 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 168117.699 ops/s
[info]                  ·gc.alloc.rate:                   1159.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9313.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.974 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 170249.571 ops/s
[info]                  ·gc.alloc.rate:                   1173.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12328.871 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.577 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 171269.614 ops/s
[info]                  ·gc.alloc.rate:                   1180.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9234.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 168945.175 ops/s
[info]                  ·gc.alloc.rate:                   1164.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              10848.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12529.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   169098.039 ±(99.9%) 6619.826 ops/s [Average]
[info]   (min, avg, max) = (166908.135, 169098.039, 171269.614), stdev = 1719.148
[info]   CI (99.9%): [162478.213, 175717.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1165.979 ±(99.9%) 45.724 MB/sec [Average]
[info]   (min, avg, max) = (1150.833, 1165.979, 1180.970), stdev = 11.875
[info]   CI (99.9%): [1120.254, 1211.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10848.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10848.003, 10848.003, 10848.003), stdev = 0.001
[info]   CI (99.9%): [10848.002, 10848.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1199.687 ±(99.9%) 702.047 MB/sec [Average]
[info]   (min, avg, max) = (995.274, 1199.687, 1345.535), stdev = 182.319
[info]   CI (99.9%): [497.640, 1901.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11166.361 ±(99.9%) 6658.101 B/op [Average]
[info]   (min, avg, max) = (9234.389, 11166.361, 12529.666), stdev = 1729.088
[info]   CI (99.9%): [4508.260, 17824.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.505 ±(99.9%) 1.259 B/op [Average]
[info]   (min, avg, max) = (0.191, 0.505, 0.974), stdev = 0.327
[info]   CI (99.9%): [≈ 0, 1.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 10.000), stdev = 3.578
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.85% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 934357.482 ops/s
[info] # Warmup Iteration   2: 1305110.439 ops/s
[info] # Warmup Iteration   3: 1318862.149 ops/s
[info] # Warmup Iteration   4: 1309174.422 ops/s
[info] # Warmup Iteration   5: 1316732.967 ops/s
[info] Iteration   1: 1301781.152 ops/s
[info]                  ·gc.alloc.rate:               1456.304 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1619.218 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1297888.827 ops/s
[info]                  ·gc.alloc.rate:                   1451.934 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2040.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1298710.801 ops/s
[info]                  ·gc.alloc.rate:                   1452.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1637.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 1313555.221 ops/s
[info]                  ·gc.alloc.rate:               1469.462 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1622.655 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1294703.015 ops/s
[info]                  ·gc.alloc.rate:               1452.213 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1687.506 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2045.163 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1301327.803 ±(99.9%) 28051.509 ops/s [Average]
[info]   (min, avg, max) = (1294703.015, 1301327.803, 1313555.221), stdev = 7284.888
[info]   CI (99.9%): [1273276.295, 1329379.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1456.553 ±(99.9%) 28.596 MB/sec [Average]
[info]   (min, avg, max) = (1451.934, 1456.553, 1469.462), stdev = 7.426
[info]   CI (99.9%): [1427.957, 1485.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1483.385 ±(99.9%) 710.538 MB/sec [Average]
[info]   (min, avg, max) = (1339.815, 1483.385, 1687.506), stdev = 184.525
[info]   CI (99.9%): [772.846, 2193.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1792.946 ±(99.9%) 878.796 B/op [Average]
[info]   (min, avg, max) = (1619.218, 1792.946, 2045.163), stdev = 228.220
[info]   CI (99.9%): [914.151, 2671.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.087 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.050), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.800, 15.000), stdev = 5.357
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.54% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2535281.596 ops/s
[info] # Warmup Iteration   2: 3727660.553 ops/s
[info] # Warmup Iteration   3: 3822542.275 ops/s
[info] # Warmup Iteration   4: 3783383.484 ops/s
[info] # Warmup Iteration   5: 3796445.785 ops/s
[info] Iteration   1: 3799362.904 ops/s
[info]                  ·gc.alloc.rate:                   1043.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3771007.981 ops/s
[info]                  ·gc.alloc.rate:                   1035.604 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3822166.458 ops/s
[info]                  ·gc.alloc.rate:                   1049.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     412.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3489496.935 ops/s
[info]                  ·gc.alloc.rate:                   958.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     454.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3734235.682 ops/s
[info]                  ·gc.alloc.rate:                   1025.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3723253.992 ±(99.9%) 518836.386 ops/s [Average]
[info]   (min, avg, max) = (3489496.935, 3723253.992, 3822166.458), stdev = 134740.162
[info]   CI (99.9%): [3204417.606, 4242090.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1022.415 ±(99.9%) 142.469 MB/sec [Average]
[info]   (min, avg, max) = (958.227, 1022.415, 1049.559), stdev = 36.999
[info]   CI (99.9%): [879.946, 1164.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1002.682 ±(99.9%) 25.339 MB/sec [Average]
[info]   (min, avg, max) = (993.336, 1002.682, 1009.967), stdev = 6.580
[info]   CI (99.9%): [977.343, 1028.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   424.169 ±(99.9%) 67.896 B/op [Average]
[info]   (min, avg, max) = (411.313, 424.169, 454.145), stdev = 17.632
[info]   CI (99.9%): [356.273, 492.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.016, 0.026), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.581
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.24% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10749327.495 ops/s
[info] # Warmup Iteration   2: 12680185.072 ops/s
[info] # Warmup Iteration   3: 11415687.434 ops/s
[info] # Warmup Iteration   4: 12397081.923 ops/s
[info] # Warmup Iteration   5: 12637631.813 ops/s
[info] Iteration   1: 12692216.209 ops/s
[info]                  ·gc.alloc.rate:                   387.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 11367489.293 ops/s
[info]                  ·gc.alloc.rate:               346.833 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 45.102 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 8934866.182 ops/s
[info]                  ·gc.alloc.rate:                   272.613 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 12688725.299 ops/s
[info]                  ·gc.alloc.rate:               387.139 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40.406 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 12606491.557 ops/s
[info]                  ·gc.alloc.rate:                   384.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.669 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   11657957.708 ±(99.9%) 6248103.860 ops/s [Average]
[info]   (min, avg, max) = (8934866.182, 11657957.708, 12692216.209), stdev = 1622612.731
[info]   CI (99.9%): [5409853.848, 17906061.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   355.694 ±(99.9%) 190.628 MB/sec [Average]
[info]   (min, avg, max) = (272.613, 355.694, 387.249), stdev = 49.506
[info]   CI (99.9%): [165.066, 546.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.826 ±(99.9%) 0.576 MB/sec [Average]
[info]   (min, avg, max) = (325.559, 325.826, 325.896), stdev = 0.150
[info]   CI (99.9%): [325.250, 326.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   44.782 ±(99.9%) 28.200 B/op [Average]
[info]   (min, avg, max) = (40.353, 44.782, 57.382), stdev = 7.323
[info]   CI (99.9%): [16.583, 72.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 8.000), stdev = 2.966
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.93% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 647522.221 ops/s
[info] # Warmup Iteration   2: 949059.548 ops/s
[info] # Warmup Iteration   3: 956412.504 ops/s
[info] # Warmup Iteration   4: 956663.323 ops/s
[info] # Warmup Iteration   5: 961438.820 ops/s
[info] Iteration   1: 958997.709 ops/s
[info]                  ·gc.alloc.rate:                   1419.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2725.983 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 956406.393 ops/s
[info]                  ·gc.alloc.rate:                   1415.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2201.267 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 960949.936 ops/s
[info]                  ·gc.alloc.rate:                   1421.921 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2201.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 962791.569 ops/s
[info]                  ·gc.alloc.rate:                   1424.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2205.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 960257.351 ops/s
[info]                  ·gc.alloc.rate:                   1420.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2216.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   959880.592 ±(99.9%) 9154.652 ops/s [Average]
[info]   (min, avg, max) = (956406.393, 959880.592, 962791.569), stdev = 2377.434
[info]   CI (99.9%): [950725.939, 969035.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1420.391 ±(99.9%) 13.364 MB/sec [Average]
[info]   (min, avg, max) = (1415.350, 1420.391, 1424.684), stdev = 3.471
[info]   CI (99.9%): [1407.027, 1433.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.000), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1409.407 ±(99.9%) 543.440 MB/sec [Average]
[info]   (min, avg, max) = (1338.300, 1409.407, 1661.679), stdev = 141.130
[info]   CI (99.9%): [865.967, 1952.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2310.092 ±(99.9%) 895.548 B/op [Average]
[info]   (min, avg, max) = (2201.267, 2310.092, 2725.983), stdev = 232.571
[info]   CI (99.9%): [1414.544, 3205.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.162 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.068, 0.137), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.63% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 324933.291 ops/s
[info] # Warmup Iteration   2: 714017.365 ops/s
[info] # Warmup Iteration   3: 724003.151 ops/s
[info] # Warmup Iteration   4: 725152.916 ops/s
[info] # Warmup Iteration   5: 729459.253 ops/s
[info] Iteration   1: 736850.045 ops/s
[info]                  ·gc.alloc.rate:                   1772.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3569.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 737972.632 ops/s
[info]                  ·gc.alloc.rate:                   1774.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3585.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 723981.474 ops/s
[info]                  ·gc.alloc.rate:                   1741.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3671.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 729556.332 ops/s
[info]                  ·gc.alloc.rate:                   1754.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4384.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 734756.562 ops/s
[info]                  ·gc.alloc.rate:                   1767.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              3784.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3635.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   732623.409 ±(99.9%) 22380.075 ops/s [Average]
[info]   (min, avg, max) = (723981.474, 732623.409, 737972.632), stdev = 5812.034
[info]   CI (99.9%): [710243.334, 755003.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1762.080 ±(99.9%) 53.982 MB/sec [Average]
[info]   (min, avg, max) = (1741.243, 1762.080, 1774.990), stdev = 14.019
[info]   CI (99.9%): [1708.097, 1816.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3784.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3784.001, 3784.001, 3784.001), stdev = 0.001
[info]   CI (99.9%): [3784.001, 3784.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1754.749 ±(99.9%) 600.418 MB/sec [Average]
[info]   (min, avg, max) = (1671.695, 1754.749, 2033.142), stdev = 155.927
[info]   CI (99.9%): [1154.331, 2355.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3769.122 ±(99.9%) 1333.828 B/op [Average]
[info]   (min, avg, max) = (3569.208, 3769.122, 4384.515), stdev = 346.391
[info]   CI (99.9%): [2435.294, 5102.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.280 B/op [Average]
[info]   (min, avg, max) = (0.044, 0.098, 0.222), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 12.000), stdev = 2.408
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.32% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1609990.627 ops/s
[info] # Warmup Iteration   2: 2477159.869 ops/s
[info] # Warmup Iteration   3: 2550353.432 ops/s
[info] # Warmup Iteration   4: 2556188.085 ops/s
[info] # Warmup Iteration   5: 2543009.594 ops/s
[info] Iteration   1: 2541414.144 ops/s
[info]                  ·gc.alloc.rate:                   1473.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     829.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 2555788.470 ops/s
[info]                  ·gc.alloc.rate:                   1481.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     828.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2539144.725 ops/s
[info]                  ·gc.alloc.rate:                   1471.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1045.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2558561.340 ops/s
[info]                  ·gc.alloc.rate:                   1483.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2548598.510 ops/s
[info]                  ·gc.alloc.rate:                   1477.443 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2548701.438 ±(99.9%) 32893.702 ops/s [Average]
[info]   (min, avg, max) = (2539144.725, 2548701.438, 2558561.340), stdev = 8542.390
[info]   CI (99.9%): [2515807.735, 2581595.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1477.523 ±(99.9%) 19.033 MB/sec [Average]
[info]   (min, avg, max) = (1471.948, 1477.523, 1483.228), stdev = 4.943
[info]   CI (99.9%): [1458.490, 1496.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1417.216 ±(99.9%) 583.663 MB/sec [Average]
[info]   (min, avg, max) = (1339.975, 1417.216, 1688.089), stdev = 151.575
[info]   CI (99.9%): [833.553, 2000.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   874.937 ±(99.9%) 368.302 B/op [Average]
[info]   (min, avg, max) = (828.665, 874.937, 1045.918), stdev = 95.647
[info]   CI (99.9%): [506.635, 1243.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.026, 0.051), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 3.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 61.02% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4547128.214 ops/s
[info] # Warmup Iteration   2: 5113814.948 ops/s
[info] # Warmup Iteration   3: 5210249.987 ops/s
[info] # Warmup Iteration   4: 5249126.063 ops/s
[info] # Warmup Iteration   5: 5187610.762 ops/s
[info] Iteration   1: 5222339.265 ops/s
[info]                  ·gc.alloc.rate:                   1035.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 5246078.380 ops/s
[info]                  ·gc.alloc.rate:                   1040.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5241799.761 ops/s
[info]                  ·gc.alloc.rate:                   1039.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5228129.478 ops/s
[info]                  ·gc.alloc.rate:                   1036.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     302.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5182510.262 ops/s
[info]                  ·gc.alloc.rate:               1027.782 MB/sec
[info]                  ·gc.alloc.rate.norm:          312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 305.686 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   5224171.429 ±(99.9%) 97135.277 ops/s [Average]
[info]   (min, avg, max) = (5182510.262, 5224171.429, 5246078.380), stdev = 25225.723
[info]   CI (99.9%): [5127036.152, 5321306.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1036.036 ±(99.9%) 19.207 MB/sec [Average]
[info]   (min, avg, max) = (1027.782, 1036.036, 1040.354), stdev = 4.988
[info]   CI (99.9%): [1016.829, 1055.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1064.662 ±(99.9%) 546.052 MB/sec [Average]
[info]   (min, avg, max) = (995.263, 1064.662, 1318.213), stdev = 141.808
[info]   CI (99.9%): [518.610, 1610.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   320.637 ±(99.9%) 164.921 B/op [Average]
[info]   (min, avg, max) = (298.477, 320.637, 397.099), stdev = 42.830
[info]   CI (99.9%): [155.716, 485.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.031), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 10.000), stdev = 3.808
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 62.71% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1714045.490 ops/s
[info] # Warmup Iteration   2: 2665575.767 ops/s
[info] # Warmup Iteration   3: 2733145.460 ops/s
[info] # Warmup Iteration   4: 2702504.049 ops/s
[info] # Warmup Iteration   5: 2713723.554 ops/s
[info] Iteration   1: 2681115.541 ops/s
[info]                  ·gc.alloc.rate:                   1145.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     779.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2686179.670 ops/s
[info]                  ·gc.alloc.rate:                   1147.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2704394.241 ops/s
[info]                  ·gc.alloc.rate:               1155.186 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1343.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 781.379 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 2709777.224 ops/s
[info]                  ·gc.alloc.rate:                   1157.482 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2689746.930 ops/s
[info]                  ·gc.alloc.rate:                   1148.912 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2694242.721 ±(99.9%) 47236.037 ops/s [Average]
[info]   (min, avg, max) = (2681115.541, 2694242.721, 2709777.224), stdev = 12267.049
[info]   CI (99.9%): [2647006.685, 2741478.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1150.844 ±(99.9%) 20.190 MB/sec [Average]
[info]   (min, avg, max) = (1145.221, 1150.844, 1157.482), stdev = 5.243
[info]   CI (99.9%): [1130.654, 1171.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.856 ±(99.9%) 689.946 MB/sec [Average]
[info]   (min, avg, max) = (1003.333, 1139.856, 1343.210), stdev = 179.177
[info]   CI (99.9%): [449.910, 1829.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   665.628 ±(99.9%) 404.081 B/op [Average]
[info]   (min, avg, max) = (586.931, 665.628, 781.379), stdev = 104.939
[info]   CI (99.9%): [261.547, 1069.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.024), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 13.000), stdev = 4.336
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 64.41% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3564629.391 ops/s
[info] # Warmup Iteration   2: 3776499.741 ops/s
[info] # Warmup Iteration   3: 3846214.066 ops/s
[info] # Warmup Iteration   4: 3872112.058 ops/s
[info] # Warmup Iteration   5: 3834856.650 ops/s
[info] Iteration   1: 3856535.933 ops/s
[info]                  ·gc.alloc.rate:               705.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 266.428 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3754618.097 ops/s
[info]                  ·gc.alloc.rate:                   687.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     274.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3791063.580 ops/s
[info]                  ·gc.alloc.rate:                   693.977 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3697946.823 ops/s
[info]                  ·gc.alloc.rate:                   676.953 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280.957 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3761913.231 ops/s
[info]                  ·gc.alloc.rate:                   688.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     276.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3772415.533 ±(99.9%) 222844.081 ops/s [Average]
[info]   (min, avg, max) = (3697946.823, 3772415.533, 3856535.933), stdev = 57871.900
[info]   CI (99.9%): [3549571.452, 3995259.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   690.575 ±(99.9%) 40.774 MB/sec [Average]
[info]   (min, avg, max) = (676.953, 690.575, 705.973), stdev = 10.589
[info]   CI (99.9%): [649.801, 731.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.613 ±(99.9%) 13.847 MB/sec [Average]
[info]   (min, avg, max) = (653.094, 657.613, 661.748), stdev = 3.596
[info]   CI (99.9%): [643.766, 671.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   274.317 ±(99.9%) 20.563 B/op [Average]
[info]   (min, avg, max) = (266.428, 274.317, 280.957), stdev = 5.340
[info]   CI (99.9%): [253.754, 294.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.035), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 11.000), stdev = 4.336
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 66.10% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 284902.099 ops/s
[info] # Warmup Iteration   2: 472848.847 ops/s
[info] # Warmup Iteration   3: 483726.707 ops/s
[info] # Warmup Iteration   4: 483307.971 ops/s
[info] # Warmup Iteration   5: 481565.941 ops/s
[info] Iteration   1: 458350.106 ops/s
[info]                  ·gc.alloc.rate:                   1356.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.380 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4560.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 493909.804 ops/s
[info]                  ·gc.alloc.rate:                   1461.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4257.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 494164.023 ops/s
[info]                  ·gc.alloc.rate:                   1462.440 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1679.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5347.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 501659.421 ops/s
[info]                  ·gc.alloc.rate:               1484.760 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.573 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4232.073 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 491030.217 ops/s
[info]                  ·gc.alloc.rate:                   1453.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5419.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   487822.714 ±(99.9%) 65223.873 ops/s [Average]
[info]   (min, avg, max) = (458350.106, 487822.714, 501659.421), stdev = 16938.433
[info]   CI (99.9%): [422598.841, 553046.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1443.673 ±(99.9%) 193.327 MB/sec [Average]
[info]   (min, avg, max) = (1356.337, 1443.673, 1484.760), stdev = 50.206
[info]   CI (99.9%): [1250.346, 1636.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.081 ±(99.9%) 733.237 MB/sec [Average]
[info]   (min, avg, max) = (1328.380, 1477.081, 1691.284), stdev = 190.419
[info]   CI (99.9%): [743.844, 2210.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4763.202 ±(99.9%) 2237.955 B/op [Average]
[info]   (min, avg, max) = (4232.073, 4763.202, 5419.185), stdev = 581.190
[info]   CI (99.9%): [2525.247, 7001.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 0.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.161, 0.332), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 12.000), stdev = 3.808
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 67.80% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99111.740 ops/s
[info] # Warmup Iteration   2: 1004981.449 ops/s
[info] # Warmup Iteration   3: 1025856.054 ops/s
[info] # Warmup Iteration   4: 1009362.797 ops/s
[info] # Warmup Iteration   5: 1038083.736 ops/s
[info] Iteration   1: 1030000.317 ops/s
[info]                  ·gc.alloc.rate:                   1272.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1036324.089 ops/s
[info]                  ·gc.alloc.rate:                   1280.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2031.520 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1025550.707 ops/s
[info]                  ·gc.alloc.rate:                   1267.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2063.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1024311.586 ops/s
[info]                  ·gc.alloc.rate:                   1265.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2072.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1024466.736 ops/s
[info]                  ·gc.alloc.rate:                   1265.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1557.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   1028130.687 ±(99.9%) 19756.255 ops/s [Average]
[info]   (min, avg, max) = (1024311.586, 1028130.687, 1036324.089), stdev = 5130.637
[info]   CI (99.9%): [1008374.433, 1047886.942] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1270.409 ±(99.9%) 24.451 MB/sec [Average]
[info]   (min, avg, max) = (1265.680, 1270.409, 1280.550), stdev = 6.350
[info]   CI (99.9%): [1245.958, 1294.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1275.310 ±(99.9%) 562.579 MB/sec [Average]
[info]   (min, avg, max) = (1014.273, 1275.310, 1349.119), stdev = 146.100
[info]   CI (99.9%): [712.731, 1837.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1951.208 ±(99.9%) 850.138 B/op [Average]
[info]   (min, avg, max) = (1557.623, 1951.208, 2072.157), stdev = 220.778
[info]   CI (99.9%): [1101.070, 2801.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.103 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.057, 0.096), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.600, 14.000), stdev = 5.225
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 69.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2786441.212 ops/s
[info] # Warmup Iteration   2: 2912265.442 ops/s
[info] # Warmup Iteration   3: 3100581.167 ops/s
[info] # Warmup Iteration   4: 3242382.520 ops/s
[info] # Warmup Iteration   5: 3248587.793 ops/s
[info] Iteration   1: 3256024.345 ops/s
[info]                  ·gc.alloc.rate:                   380.801 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.260 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.092 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3262784.336 ops/s
[info]                  ·gc.alloc.rate:               381.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 156.811 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3266058.940 ops/s
[info]                  ·gc.alloc.rate:                   381.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3242648.941 ops/s
[info]                  ·gc.alloc.rate:                   379.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3246055.290 ops/s
[info]                  ·gc.alloc.rate:               379.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.941 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3254714.370 ±(99.9%) 39273.449 ops/s [Average]
[info]   (min, avg, max) = (3242648.941, 3254714.370, 3266058.940), stdev = 10199.190
[info]   CI (99.9%): [3215440.921, 3293987.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   380.663 ±(99.9%) 4.557 MB/sec [Average]
[info]   (min, avg, max) = (379.277, 380.663, 381.987), stdev = 1.183
[info]   CI (99.9%): [376.106, 385.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   390.526 ±(99.9%) 559.451 MB/sec [Average]
[info]   (min, avg, max) = (325.212, 390.526, 650.423), stdev = 145.288
[info]   CI (99.9%): [≈ 0, 949.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   188.758 ±(99.9%) 270.206 B/op [Average]
[info]   (min, avg, max) = (156.653, 188.758, 314.279), stdev = 70.172
[info]   CI (99.9%): [≈ 0, 458.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.464 ±(99.9%) 3.865 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.464, 2.260), stdev = 1.004
[info]   CI (99.9%): [≈ 0, 4.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.867 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 1.092), stdev = 0.485
[info]   CI (99.9%): [≈ 0, 2.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 10.000), stdev = 3.782
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 71.19% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103504.609 ops/s
[info] # Warmup Iteration   2: 245799.540 ops/s
[info] # Warmup Iteration   3: 252103.777 ops/s
[info] # Warmup Iteration   4: 249994.639 ops/s
[info] # Warmup Iteration   5: 252756.742 ops/s
[info] Iteration   1: 249558.888 ops/s
[info]                  ·gc.alloc.rate:                   978.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6198.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 250549.427 ops/s
[info]                  ·gc.alloc.rate:                   982.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6199.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 248775.909 ops/s
[info]                  ·gc.alloc.rate:                   975.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6285.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 246664.751 ops/s
[info]                  ·gc.alloc.rate:                   967.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6365.040 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 247010.070 ops/s
[info]                  ·gc.alloc.rate:                   968.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6390.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   248511.809 ±(99.9%) 6381.173 ops/s [Average]
[info]   (min, avg, max) = (246664.751, 248511.809, 250549.427), stdev = 1657.170
[info]   CI (99.9%): [242130.636, 254892.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   974.303 ±(99.9%) 25.050 MB/sec [Average]
[info]   (min, avg, max) = (967.052, 974.303, 982.302), stdev = 6.505
[info]   CI (99.9%): [949.253, 999.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.160 ±(99.9%) 30.918 MB/sec [Average]
[info]   (min, avg, max) = (983.280, 993.160, 1003.278), stdev = 8.029
[info]   CI (99.9%): [962.242, 1024.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6287.838 ±(99.9%) 345.397 B/op [Average]
[info]   (min, avg, max) = (6198.762, 6287.838, 6390.133), stdev = 89.698
[info]   CI (99.9%): [5942.441, 6633.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.290 ±(99.9%) 0.655 B/op [Average]
[info]   (min, avg, max) = (0.131, 0.290, 0.523), stdev = 0.170
[info]   CI (99.9%): [≈ 0, 0.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 13.000), stdev = 3.033
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 72.88% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 404425.033 ops/s
[info] # Warmup Iteration   2: 598398.475 ops/s
[info] # Warmup Iteration   3: 601181.382 ops/s
[info] # Warmup Iteration   4: 605484.021 ops/s
[info] # Warmup Iteration   5: 605739.669 ops/s
[info] Iteration   1: 601511.475 ops/s
[info]                  ·gc.alloc.rate:                   1541.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3506.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 607062.542 ops/s
[info]                  ·gc.alloc.rate:                   1555.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4366.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 602104.783 ops/s
[info]                  ·gc.alloc.rate:                   1543.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4418.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 587348.428 ops/s
[info]                  ·gc.alloc.rate:               1505.291 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3632.503 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   5: 603783.240 ops/s
[info]                  ·gc.alloc.rate:                   1547.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4424.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   600362.094 ±(99.9%) 29218.865 ops/s [Average]
[info]   (min, avg, max) = (587348.428, 600362.094, 607062.542), stdev = 7588.046
[info]   CI (99.9%): [571143.229, 629580.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1538.629 ±(99.9%) 74.843 MB/sec [Average]
[info]   (min, avg, max) = (1505.291, 1538.629, 1555.787), stdev = 19.437
[info]   CI (99.9%): [1463.786, 1613.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1554.181 ±(99.9%) 723.570 MB/sec [Average]
[info]   (min, avg, max) = (1340.824, 1554.181, 1697.979), stdev = 187.909
[info]   CI (99.9%): [830.611, 2277.750] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4069.807 ±(99.9%) 1768.380 B/op [Average]
[info]   (min, avg, max) = (3506.879, 4069.807, 4424.408), stdev = 459.243
[info]   CI (99.9%): [2301.427, 5838.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.229 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.065, 0.163), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.200, 16.000), stdev = 4.817
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 74.58% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1069379.917 ops/s
[info] # Warmup Iteration   2: 1566169.420 ops/s
[info] # Warmup Iteration   3: 1588671.645 ops/s
[info] # Warmup Iteration   4: 1603999.763 ops/s
[info] # Warmup Iteration   5: 1609597.015 ops/s
[info] Iteration   1: 1604926.546 ops/s
[info]                  ·gc.alloc.rate:                   865.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     957.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1454887.536 ops/s
[info]                  ·gc.alloc.rate:                   784.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     708.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1567872.428 ops/s
[info]                  ·gc.alloc.rate:                   845.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     992.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   4: 1557727.604 ops/s
[info]                  ·gc.alloc.rate:               839.620 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 669.700 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1607452.035 ops/s
[info]                  ·gc.alloc.rate:                   866.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     978.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1558573.230 ±(99.9%) 238737.446 ops/s [Average]
[info]   (min, avg, max) = (1454887.536, 1558573.230, 1607452.035), stdev = 61999.357
[info]   CI (99.9%): [1319835.784, 1797310.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   840.079 ±(99.9%) 128.639 MB/sec [Average]
[info]   (min, avg, max) = (784.210, 840.079, 866.405), stdev = 33.407
[info]   CI (99.9%): [711.440, 968.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   856.799 ±(99.9%) 695.135 MB/sec [Average]
[info]   (min, avg, max) = (655.419, 856.799, 999.271), stdev = 180.524
[info]   CI (99.9%): [161.664, 1551.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   861.364 ±(99.9%) 609.266 B/op [Average]
[info]   (min, avg, max) = (669.700, 861.364, 992.349), stdev = 158.224
[info]   CI (99.9%): [252.098, 1470.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.023), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 22.000), stdev = 8.526
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 76.27% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3800111.339 ops/s
[info] # Warmup Iteration   2: 4431424.505 ops/s
[info] # Warmup Iteration   3: 4423279.537 ops/s
[info] # Warmup Iteration   4: 4432111.028 ops/s
[info] # Warmup Iteration   5: 4455033.931 ops/s
[info] Iteration   1: 4452599.339 ops/s
[info]                  ·gc.alloc.rate:                   747.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     230.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4449769.450 ops/s
[info]                  ·gc.alloc.rate:                   746.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.124 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4476206.354 ops/s
[info]                  ·gc.alloc.rate:                   751.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4430678.759 ops/s
[info]                  ·gc.alloc.rate:                   743.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4376395.530 ops/s
[info]                  ·gc.alloc.rate:                   734.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4437129.886 ±(99.9%) 144800.493 ops/s [Average]
[info]   (min, avg, max) = (4376395.530, 4437129.886, 4476206.354), stdev = 37604.228
[info]   CI (99.9%): [4292329.394, 4581930.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   744.572 ±(99.9%) 24.271 MB/sec [Average]
[info]   (min, avg, max) = (734.393, 744.572, 751.125), stdev = 6.303
[info]   CI (99.9%): [720.301, 768.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.463 ±(99.9%) 560.221 MB/sec [Average]
[info]   (min, avg, max) = (653.735, 724.463, 984.638), stdev = 145.488
[info]   CI (99.9%): [164.242, 1284.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   256.824 ±(99.9%) 196.864 B/op [Average]
[info]   (min, avg, max) = (230.993, 256.824, 348.124), stdev = 51.125
[info]   CI (99.9%): [59.959, 453.688] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.029), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 7.000), stdev = 2.236
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 77.97% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 198331.446 ops/s
[info] # Warmup Iteration   2: 357670.974 ops/s
[info] # Warmup Iteration   3: 371028.885 ops/s
[info] # Warmup Iteration   4: 370372.027 ops/s
[info] # Warmup Iteration   5: 363952.703 ops/s
[info] Iteration   1: 363784.086 ops/s
[info]                  ·gc.alloc.rate:                   1252.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4287.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.180 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 366536.618 ops/s
[info]                  ·gc.alloc.rate:                   1261.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5712.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.447 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 364525.117 ops/s
[info]                  ·gc.alloc.rate:                   1254.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5775.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.360 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 365108.113 ops/s
[info]                  ·gc.alloc.rate:                   1256.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5794.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 368065.242 ops/s
[info]                  ·gc.alloc.rate:                   1267.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4325.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.267 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   365603.835 ±(99.9%) 6571.378 ops/s [Average]
[info]   (min, avg, max) = (363784.086, 365603.835, 368065.242), stdev = 1706.566
[info]   CI (99.9%): [359032.458, 372175.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1258.598 ±(99.9%) 22.735 MB/sec [Average]
[info]   (min, avg, max) = (1252.276, 1258.598, 1267.077), stdev = 5.904
[info]   CI (99.9%): [1235.863, 1281.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1203.391 ±(99.9%) 710.158 MB/sec [Average]
[info]   (min, avg, max) = (991.250, 1203.391, 1344.773), stdev = 184.426
[info]   CI (99.9%): [493.233, 1913.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5178.928 ±(99.9%) 3070.267 B/op [Average]
[info]   (min, avg, max) = (4287.084, 5178.928, 5794.729), stdev = 797.339
[info]   CI (99.9%): [2108.661, 8249.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.287 ±(99.9%) 0.448 B/op [Average]
[info]   (min, avg, max) = (0.179, 0.287, 0.447), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 9.000), stdev = 2.702
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 79.66% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 151221.868 ops/s
[info] # Warmup Iteration   2: 330279.966 ops/s
[info] # Warmup Iteration   3: 337556.798 ops/s
[info] # Warmup Iteration   4: 339030.348 ops/s
[info] # Warmup Iteration   5: 348011.472 ops/s
[info] Iteration   1: 347112.200 ops/s
[info]                  ·gc.alloc.rate:                   1032.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4447.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 341185.723 ops/s
[info]                  ·gc.alloc.rate:                   1014.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4552.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 345011.069 ops/s
[info]                  ·gc.alloc.rate:                   1026.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4540.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 343680.516 ops/s
[info]                  ·gc.alloc.rate:               1022.365 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4575.884 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 343445.225 ops/s
[info]                  ·gc.alloc.rate:                   1021.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4604.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   344086.947 ±(99.9%) 8392.341 ops/s [Average]
[info]   (min, avg, max) = (341185.723, 344086.947, 347112.200), stdev = 2179.464
[info]   CI (99.9%): [335694.606, 352479.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1023.566 ±(99.9%) 24.862 MB/sec [Average]
[info]   (min, avg, max) = (1014.982, 1023.566, 1032.547), stdev = 6.456
[info]   CI (99.9%): [998.705, 1048.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   993.823 ±(99.9%) 36.867 MB/sec [Average]
[info]   (min, avg, max) = (981.294, 993.823, 1005.250), stdev = 9.574
[info]   CI (99.9%): [956.956, 1030.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4544.223 ±(99.9%) 228.423 B/op [Average]
[info]   (min, avg, max) = (4447.701, 4544.223, 4604.828), stdev = 59.321
[info]   CI (99.9%): [4315.800, 4772.646] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.095 ±(99.9%) 0.260 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.095, 0.191), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 12.000), stdev = 3.715
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.36% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116464.110 ops/s
[info] # Warmup Iteration   2: 1081561.401 ops/s
[info] # Warmup Iteration   3: 1103901.957 ops/s
[info] # Warmup Iteration   4: 1095237.079 ops/s
[info] # Warmup Iteration   5: 1092039.058 ops/s
[info] Iteration   1: 1097270.956 ops/s
[info]                  ·gc.alloc.rate:                   1138.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1428.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1091363.374 ops/s
[info]                  ·gc.alloc.rate:                   1132.164 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1925.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1101669.511 ops/s
[info]                  ·gc.alloc.rate:                   1142.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1436.588 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1089177.481 ops/s
[info]                  ·gc.alloc.rate:                   1129.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1944.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1101586.050 ops/s
[info]                  ·gc.alloc.rate:               1142.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1446.691 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1096213.474 ±(99.9%) 22185.512 ops/s [Average]
[info]   (min, avg, max) = (1089177.481, 1096213.474, 1101669.511), stdev = 5761.507
[info]   CI (99.9%): [1074027.962, 1118398.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1137.151 ±(99.9%) 22.967 MB/sec [Average]
[info]   (min, avg, max) = (1129.828, 1137.151, 1142.798), stdev = 5.965
[info]   CI (99.9%): [1114.184, 1160.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.322 ±(99.9%) 708.938 MB/sec [Average]
[info]   (min, avg, max) = (996.004, 1139.322, 1346.136), stdev = 184.109
[info]   CI (99.9%): [430.385, 1848.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1636.191 ±(99.9%) 1050.396 B/op [Average]
[info]   (min, avg, max) = (1428.015, 1636.191, 1944.451), stdev = 272.784
[info]   CI (99.9%): [585.796, 2686.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.119), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 12.000), stdev = 3.782
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.05% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3155833.729 ops/s
[info] # Warmup Iteration   2: 3869755.652 ops/s
[info] # Warmup Iteration   3: 3869238.650 ops/s
[info] # Warmup Iteration   4: 3883763.402 ops/s
[info] # Warmup Iteration   5: 3940679.850 ops/s
[info] Iteration   1: 3936539.299 ops/s
[info]                  ·gc.alloc.rate:               520.445 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 130.238 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3943130.659 ops/s
[info]                  ·gc.alloc.rate:                   521.319 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.041 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3923189.695 ops/s
[info]                  ·gc.alloc.rate:                   518.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3983993.251 ops/s
[info]                  ·gc.alloc.rate:               526.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 129.346 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3913811.096 ops/s
[info]                  ·gc.alloc.rate:                   517.477 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     263.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3940132.800 ±(99.9%) 104137.327 ops/s [Average]
[info]   (min, avg, max) = (3913811.096, 3940132.800, 3983993.251), stdev = 27044.133
[info]   CI (99.9%): [3835995.473, 4044270.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   520.928 ±(99.9%) 13.719 MB/sec [Average]
[info]   (min, avg, max) = (517.477, 520.928, 526.712), stdev = 3.563
[info]   CI (99.9%): [507.208, 534.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.073 ±(99.9%) 690.293 MB/sec [Average]
[info]   (min, avg, max) = (325.873, 523.073, 656.453), stdev = 179.267
[info]   CI (99.9%): [≈ 0, 1213.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   209.130 ±(99.9%) 278.935 B/op [Average]
[info]   (min, avg, max) = (129.346, 209.130, 263.862), stdev = 72.439
[info]   CI (99.9%): [≈ 0, 488.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.025), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 4.000), stdev = 1.095
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 84.75% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108643.293 ops/s
[info] # Warmup Iteration   2: 250791.812 ops/s
[info] # Warmup Iteration   3: 251935.470 ops/s
[info] # Warmup Iteration   4: 254541.165 ops/s
[info] # Warmup Iteration   5: 255402.580 ops/s
[info] Iteration   1: 253125.733 ops/s
[info]                  ·gc.alloc.rate:               933.197 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6111.568 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 253903.438 ops/s
[info]                  ·gc.alloc.rate:                   936.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4075.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 255040.443 ops/s
[info]                  ·gc.alloc.rate:                   940.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6115.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 254443.734 ops/s
[info]                  ·gc.alloc.rate:                   938.050 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6166.325 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 254931.055 ops/s
[info]                  ·gc.alloc.rate:                   939.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6179.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   254288.880 ±(99.9%) 3045.840 ops/s [Average]
[info]   (min, avg, max) = (253125.733, 254288.880, 255040.443), stdev = 790.995
[info]   CI (99.9%): [251243.041, 257334.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   937.493 ±(99.9%) 11.245 MB/sec [Average]
[info]   (min, avg, max) = (933.197, 937.493, 940.260), stdev = 2.920
[info]   CI (99.9%): [926.248, 948.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.218 ±(99.9%) 578.409 MB/sec [Average]
[info]   (min, avg, max) = (657.787, 926.218, 1001.350), stdev = 150.211
[info]   CI (99.9%): [347.809, 1504.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5729.593 ±(99.9%) 3562.039 B/op [Average]
[info]   (min, avg, max) = (4075.692, 5729.593, 6179.344), stdev = 925.050
[info]   CI (99.9%): [2167.554, 9291.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 0.646 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.232, 0.387), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 0.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 8.000), stdev = 2.302
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.44% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93774.574 ops/s
[info] # Warmup Iteration   2: 324464.085 ops/s
[info] # Warmup Iteration   3: 332008.872 ops/s
[info] # Warmup Iteration   4: 333316.872 ops/s
[info] # Warmup Iteration   5: 311066.865 ops/s
[info] Iteration   1: 332447.501 ops/s
[info]                  ·gc.alloc.rate:                   975.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.340 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4643.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 330848.047 ops/s
[info]                  ·gc.alloc.rate:                   970.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.352 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4694.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 328442.495 ops/s
[info]                  ·gc.alloc.rate:                   963.662 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4761.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 333011.689 ops/s
[info]                  ·gc.alloc.rate:                   977.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4720.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 326421.191 ops/s
[info]                  ·gc.alloc.rate:                   957.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4841.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   330234.184 ±(99.9%) 10674.552 ops/s [Average]
[info]   (min, avg, max) = (326421.191, 330234.184, 333011.689), stdev = 2772.147
[info]   CI (99.9%): [319559.632, 340908.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   968.935 ±(99.9%) 31.347 MB/sec [Average]
[info]   (min, avg, max) = (957.729, 968.935, 977.057), stdev = 8.141
[info]   CI (99.9%): [937.588, 1000.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4616.001, 4616.001, 4616.001), stdev = 0.001
[info]   CI (99.9%): [4616.001, 4616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   993.308 ±(99.9%) 35.620 MB/sec [Average]
[info]   (min, avg, max) = (981.340, 993.308, 1004.601), stdev = 9.250
[info]   CI (99.9%): [957.689, 1028.928] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4732.555 ±(99.9%) 286.840 B/op [Average]
[info]   (min, avg, max) = (4643.917, 4732.555, 4841.909), stdev = 74.491
[info]   CI (99.9%): [4445.714, 5019.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.139 ±(99.9%) 0.205 B/op [Average]
[info]   (min, avg, max) = (0.099, 0.139, 0.197), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 9.000), stdev = 2.702
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.14% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 84703.995 ops/s
[info] # Warmup Iteration   2: 789016.872 ops/s
[info] # Warmup Iteration   3: 1030329.641 ops/s
[info] # Warmup Iteration   4: 1020489.726 ops/s
[info] # Warmup Iteration   5: 1019148.983 ops/s
[info] Iteration   1: 1022406.615 ops/s
[info]                  ·gc.alloc.rate:                   1013.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1526.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1015855.828 ops/s
[info]                  ·gc.alloc.rate:                   1007.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1544.482 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1024581.744 ops/s
[info]                  ·gc.alloc.rate:                   1015.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1539.596 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1029223.143 ops/s
[info]                  ·gc.alloc.rate:                   1020.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1019267.150 ops/s
[info]                  ·gc.alloc.rate:               1010.700 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1557.835 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   1022266.896 ±(99.9%) 19622.015 ops/s [Average]
[info]   (min, avg, max) = (1015855.828, 1022266.896, 1029223.143), stdev = 5095.775
[info]   CI (99.9%): [1002644.881, 1041888.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1013.676 ±(99.9%) 19.368 MB/sec [Average]
[info]   (min, avg, max) = (1007.396, 1013.676, 1020.598), stdev = 5.030
[info]   CI (99.9%): [994.307, 1033.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1001.447 ±(99.9%) 26.548 MB/sec [Average]
[info]   (min, avg, max) = (991.960, 1001.447, 1009.298), stdev = 6.895
[info]   CI (99.9%): [974.898, 1027.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1541.200 ±(99.9%) 43.937 B/op [Average]
[info]   (min, avg, max) = (1526.430, 1541.200, 1557.835), stdev = 11.410
[info]   CI (99.9%): [1497.263, 1585.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.104 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.065), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 1.949
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 89.83% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2513332.280 ops/s
[info] # Warmup Iteration   2: 2986351.819 ops/s
[info] # Warmup Iteration   3: 3004112.875 ops/s
[info] # Warmup Iteration   4: 3007118.095 ops/s
[info] # Warmup Iteration   5: 2971250.470 ops/s
[info] Iteration   1: 2971913.615 ops/s
[info]                  ·gc.alloc.rate:                   498.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.420 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     344.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2959843.979 ops/s
[info]                  ·gc.alloc.rate:                   496.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     346.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2838592.542 ops/s
[info]                  ·gc.alloc.rate:               476.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 181.171 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2826669.812 ops/s
[info]                  ·gc.alloc.rate:                   474.349 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 2846254.812 ops/s
[info]                  ·gc.alloc.rate:                   477.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     362.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2888654.952 ±(99.9%) 273274.050 ops/s [Average]
[info]   (min, avg, max) = (2826669.812, 2888654.952, 2971913.615), stdev = 70968.403
[info]   CI (99.9%): [2615380.902, 3161929.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   484.736 ±(99.9%) 45.831 MB/sec [Average]
[info]   (min, avg, max) = (474.349, 484.736, 498.704), stdev = 11.902
[info]   CI (99.9%): [438.904, 530.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.206 ±(99.9%) 686.585 MB/sec [Average]
[info]   (min, avg, max) = (326.892, 522.206, 655.089), stdev = 178.304
[info]   CI (99.9%): [≈ 0, 1208.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   283.189 ±(99.9%) 358.249 B/op [Average]
[info]   (min, avg, max) = (181.171, 283.189, 362.104), stdev = 93.036
[info]   CI (99.9%): [≈ 0, 641.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.044), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.400, 7.000), stdev = 3.050
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.53% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 116158.737 ops/s
[info] # Warmup Iteration   2: 246501.028 ops/s
[info] # Warmup Iteration   3: 253767.421 ops/s
[info] # Warmup Iteration   4: 254598.336 ops/s
[info] # Warmup Iteration   5: 251302.562 ops/s
[info] Iteration   1: 257616.912 ops/s
[info]                  ·gc.alloc.rate:                   983.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6000.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 254525.473 ops/s
[info]                  ·gc.alloc.rate:                   971.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6102.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.644 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 256433.098 ops/s
[info]                  ·gc.alloc.rate:                   979.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6098.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 256151.979 ops/s
[info]                  ·gc.alloc.rate:               978.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6129.211 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 255266.989 ops/s
[info]                  ·gc.alloc.rate:                   974.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              6008.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6183.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   255998.890 ±(99.9%) 4530.282 ops/s [Average]
[info]   (min, avg, max) = (254525.473, 255998.890, 257616.912), stdev = 1176.500
[info]   CI (99.9%): [251468.608, 260529.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   977.612 ±(99.9%) 17.302 MB/sec [Average]
[info]   (min, avg, max) = (971.994, 977.612, 983.794), stdev = 4.493
[info]   CI (99.9%): [960.310, 994.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6008.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6008.002, 6008.002, 6008.002), stdev = 0.001
[info]   CI (99.9%): [6008.001, 6008.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.012 ±(99.9%) 31.721 MB/sec [Average]
[info]   (min, avg, max) = (982.612, 993.012, 1003.262), stdev = 8.238
[info]   CI (99.9%): [961.291, 1024.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6102.817 ±(99.9%) 255.633 B/op [Average]
[info]   (min, avg, max) = (6000.781, 6102.817, 6183.436), stdev = 66.387
[info]   CI (99.9%): [5847.184, 6358.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.282 ±(99.9%) 0.887 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.282, 0.644), stdev = 0.230
[info]   CI (99.9%): [≈ 0, 1.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 11.000), stdev = 3.834
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.22% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386852.224 ops/s
[info] # Warmup Iteration   2: 638048.616 ops/s
[info] # Warmup Iteration   3: 645208.122 ops/s
[info] # Warmup Iteration   4: 645631.219 ops/s
[info] # Warmup Iteration   5: 653258.144 ops/s
[info] Iteration   1: 653982.087 ops/s
[info]                  ·gc.alloc.rate:               1280.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2405.594 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 653651.296 ops/s
[info]                  ·gc.alloc.rate:                   1279.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3224.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 643948.306 ops/s
[info]                  ·gc.alloc.rate:                   1260.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3288.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 654710.807 ops/s
[info]                  ·gc.alloc.rate:                   1281.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3246.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 656222.835 ops/s
[info]                  ·gc.alloc.rate:                   1284.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3246.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   652503.066 ±(99.9%) 18805.246 ops/s [Average]
[info]   (min, avg, max) = (643948.306, 652503.066, 656222.835), stdev = 4883.663
[info]   CI (99.9%): [633697.820, 671308.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1277.426 ±(99.9%) 36.731 MB/sec [Average]
[info]   (min, avg, max) = (1260.709, 1277.426, 1284.669), stdev = 9.539
[info]   CI (99.9%): [1240.695, 1314.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1278.263 ±(99.9%) 599.398 MB/sec [Average]
[info]   (min, avg, max) = (999.975, 1278.263, 1354.115), stdev = 155.662
[info]   CI (99.9%): [678.865, 1877.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3082.518 ±(99.9%) 1459.875 B/op [Average]
[info]   (min, avg, max) = (2405.594, 3082.518, 3288.884), stdev = 379.125
[info]   CI (99.9%): [1622.644, 4542.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.080 ±(99.9%) 0.221 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.080, 0.150), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 13.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 94.92% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1121455.848 ops/s
[info] # Warmup Iteration   2: 1602919.194 ops/s
[info] # Warmup Iteration   3: 1636418.138 ops/s
[info] # Warmup Iteration   4: 1641050.135 ops/s
[info] # Warmup Iteration   5: 1651745.551 ops/s
[info] Iteration   1: 1627784.202 ops/s
[info]                  ·gc.alloc.rate:                   678.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     631.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1652807.997 ops/s
[info]                  ·gc.alloc.rate:                   689.191 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1650398.376 ops/s
[info]                  ·gc.alloc.rate:               688.172 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 628.290 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1652017.967 ops/s
[info]                  ·gc.alloc.rate:                   688.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     630.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1649670.397 ops/s
[info]                  ·gc.alloc.rate:               687.823 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 633.646 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1646535.788 ±(99.9%) 40649.479 ops/s [Average]
[info]   (min, avg, max) = (1627784.202, 1646535.788, 1652807.997), stdev = 10556.541
[info]   CI (99.9%): [1605886.308, 1687185.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   686.552 ±(99.9%) 16.955 MB/sec [Average]
[info]   (min, avg, max) = (678.735, 686.552, 689.191), stdev = 4.403
[info]   CI (99.9%): [669.597, 703.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   659.081 ±(99.9%) 16.178 MB/sec [Average]
[info]   (min, avg, max) = (653.751, 659.081, 664.385), stdev = 4.201
[info]   CI (99.9%): [642.902, 675.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   629.759 ±(99.9%) 13.096 B/op [Average]
[info]   (min, avg, max) = (624.816, 629.759, 633.646), stdev = 3.401
[info]   CI (99.9%): [616.662, 642.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 7.000), stdev = 1.924
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.61% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5353300.026 ops/s
[info] # Warmup Iteration   2: 6102459.641 ops/s
[info] # Warmup Iteration   3: 6206726.781 ops/s
[info] # Warmup Iteration   4: 5921587.004 ops/s
[info] # Warmup Iteration   5: 5184394.119 ops/s
[info] Iteration   1: 6163004.979 ops/s
[info]                  ·gc.alloc.rate:               313.389 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65.325 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 6104373.847 ops/s
[info]                  ·gc.alloc.rate:                   310.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.561 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6104153.647 ops/s
[info]                  ·gc.alloc.rate:                   310.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 6082648.676 ops/s
[info]                  ·gc.alloc.rate:               309.302 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 84.199 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 6133329.053 ops/s
[info]                  ·gc.alloc.rate:                   311.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6117502.040 ±(99.9%) 120024.914 ops/s [Average]
[info]   (min, avg, max) = (6082648.676, 6117502.040, 6163004.979), stdev = 31170.089
[info]   CI (99.9%): [5997477.126, 6237526.955] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   311.073 ±(99.9%) 6.105 MB/sec [Average]
[info]   (min, avg, max) = (309.302, 311.073, 313.389), stdev = 1.586
[info]   CI (99.9%): [304.967, 317.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   311.478 ±(99.9%) 119.635 MB/sec [Average]
[info]   (min, avg, max) = (255.901, 311.478, 325.535), stdev = 31.069
[info]   CI (99.9%): [191.843, 431.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   80.132 ±(99.9%) 31.889 B/op [Average]
[info]   (min, avg, max) = (65.325, 80.132, 84.199), stdev = 8.281
[info]   CI (99.9%): [48.244, 112.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.452 ±(99.9%) 3.713 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.452, 2.176), stdev = 0.964
[info]   CI (99.9%): [≈ 0, 4.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.957 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.561), stdev = 0.248
[info]   CI (99.9%): [≈ 0, 1.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 6.000), stdev = 2.074
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.31% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114032.884 ops/s
[info] # Warmup Iteration   2: 199771.338 ops/s
[info] # Warmup Iteration   3: 199797.572 ops/s
[info] # Warmup Iteration   4: 198500.001 ops/s
[info] # Warmup Iteration   5: 200726.560 ops/s
[info] Iteration   1: 198052.950 ops/s
[info]                  ·gc.alloc.rate:                   1074.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              8536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10460.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.662 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 200495.941 ops/s
[info]                  ·gc.alloc.rate:                   1087.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              8536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7799.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.490 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 204854.503 ops/s
[info]                  ·gc.alloc.rate:                   1111.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              8536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.581 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7669.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.480 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 204794.568 ops/s
[info]                  ·gc.alloc.rate:                   1111.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              8536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7707.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.320 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 206427.208 ops/s
[info]                  ·gc.alloc.rate:                   1120.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              8536.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10236.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.317 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   202925.034 ±(99.9%) 13493.874 ops/s [Average]
[info]   (min, avg, max) = (198052.950, 202925.034, 206427.208), stdev = 3504.316
[info]   CI (99.9%): [189431.160, 216418.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1101.016 ±(99.9%) 73.219 MB/sec [Average]
[info]   (min, avg, max) = (1074.569, 1101.016, 1120.043), stdev = 19.015
[info]   CI (99.9%): [1027.797, 1174.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8536.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8536.002, 8536.002, 8536.002), stdev = 0.001
[info]   CI (99.9%): [8536.002, 8536.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.169 ±(99.9%) 700.008 MB/sec [Average]
[info]   (min, avg, max) = (993.957, 1131.169, 1343.217), stdev = 181.790
[info]   CI (99.9%): [431.161, 1831.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8774.546 ±(99.9%) 5544.248 B/op [Average]
[info]   (min, avg, max) = (7669.174, 8774.546, 10460.297), stdev = 1439.824
[info]   CI (99.9%): [3230.298, 14318.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.454 ±(99.9%) 0.550 B/op [Average]
[info]   (min, avg, max) = (0.317, 0.454, 0.662), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 1.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 11.000), stdev = 4.087
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:15:51
[info] Benchmark                                                                     Mode  Cnt         Score         Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1190612.298 ±   17543.238   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1876.793 ±      27.650  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2480.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1897.983 ±     702.287  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2508.437 ±     948.345    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.025 ±       0.067  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.033 ±       0.088    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        28.000                counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        45.000                    ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1782045.659 ±  162897.971   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1250.505 ±     114.349  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1271.240 ±     586.640  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1120.319 ±     434.980    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±       0.091  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.026 ±       0.080    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000                counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        40.000                    ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6702499.971 ±  184790.691   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1158.798 ±      31.967  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1202.473 ±     704.054  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       282.191 ±     163.379    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±       0.122  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±       0.029    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        18.000                counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        44.000                    ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    434924.998 ±   38153.332   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1143.362 ±     100.261  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4136.001 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.282 ±     681.970  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4089.623 ±    2219.689    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±       0.127  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.150 ±       0.451    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000                counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        36.000                    ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    631812.207 ±   16011.568   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2065.807 ±      52.365  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5144.001 ±       0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2036.586 ±      22.662  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5071.409 ±     137.047    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±       0.143  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.114 ±       0.356    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        30.000                counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        45.000                    ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1236133.977 ±   86119.934   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1162.842 ±      81.038  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1480.000 ±       0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1134.287 ±     707.983  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1445.727 ±     959.189    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.021 ±       0.080  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.026 ±       0.101    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000                counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        28.000                    ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2320362.591 ±  146768.603   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1168.087 ±      73.913  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       792.000 ±       0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1202.470 ±     704.016  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       816.344 ±     505.994    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±       0.091  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.034 ±       0.061    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        18.000                counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        24.000                    ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1542260.539 ±   47502.762   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5       995.998 ±      30.621  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1016.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1004.640 ±      22.410  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1024.880 ±      44.489    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±       0.067  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.038 ±       0.068    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        15.000                counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        28.000                    ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5407501.232 ±  138284.743   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       577.446 ±      14.762  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       589.718 ±     564.450  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       171.442 ±     162.530    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±       0.108  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±       0.031    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         9.000                counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        15.000                    ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    272059.576 ±    6897.666   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1235.406 ±      31.371  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1201.418 ±     695.527  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      6944.616 ±    3931.831    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±       0.105  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.337 ±       0.603    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        18.000                counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        29.000                    ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    554364.280 ±   17800.678   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1840.761 ±      59.065  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±       0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1829.769 ±     700.843  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5194.312 ±    2056.068    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±       0.088  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.130 ±       0.249    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000                counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        52.000                    ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    631604.295 ±   16303.603   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       784.077 ±      21.661  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1952.001 ±       0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       787.438 ±     687.151  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1959.372 ±    1687.130    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.029 ±       0.091  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.073 ±       0.230    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        12.000                counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        40.000                    ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4839354.803 ±  155633.124   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       221.480 ±       7.135  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±       0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       232.457 ±     517.871  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        75.760 ±     168.721    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.454 ±       3.820  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.148 ±       1.247    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         4.000                counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5        10.000                    ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    203513.349 ±    1898.159   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1123.855 ±      10.476  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8688.002 ±       0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1130.759 ±     690.174  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8742.128 ±    5357.863    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±       0.146  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.386 ±       1.125    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        17.000                counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        20.000                    ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3482558.888 ±   79401.937   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1646.914 ±      37.551  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1620.300 ±     606.374  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       731.750 ±     263.547    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±       0.091  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.023 ±       0.041    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        24.000                counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        45.000                    ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    238143.356 ±    6147.609   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1279.974 ±      33.096  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1270.502 ±     564.949  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8393.222 ±    3718.228    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.062 ±       0.127  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.413 ±       0.847    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        19.000                counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        34.000                    ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    457482.431 ±   17463.885   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1602.857 ±      61.233  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1555.435 ±     707.326  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5351.810 ±    2536.509    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±       0.072  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.172 ±       0.242    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        23.000                counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        48.000                    ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    535436.344 ±    6801.125   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       544.547 ±       6.945  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.068 ±     688.522  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1546.641 ±    2034.652    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±       0.188  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.122 ±       0.552    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000                counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        18.000                    ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3224765.088 ±  142460.474   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       869.092 ±      38.422  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       424.000 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       860.414 ±     692.861  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       419.576 ±     333.517    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±       0.143  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.022 ±       0.070    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        13.000                counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        27.000                    ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    168741.025 ±    5873.506   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1167.820 ±      40.692  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10888.003 ±       0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1132.307 ±     705.732  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10550.261 ±    6357.161    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.037 ±       0.067  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.350 ±       0.631    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        17.000                counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        34.000                    ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    471350.410 ±   10600.278   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1675.401 ±      37.625  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1624.295 ±     589.060  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5420.614 ±    1926.322    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.050 ±       0.122  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.167 ±       0.406    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000                counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        50.000                    ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    803656.658 ±   11557.456   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5       948.115 ±      13.564  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5       935.133 ±     575.292  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1830.281 ±    1118.584    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±       0.156  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.106 ±       0.306    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        14.000                counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        25.000                    ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3474300.288 ±   82388.922   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       865.667 ±      20.557  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±       0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       860.261 ±     686.435  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       389.344 ±     306.181    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±       0.105  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.021 ±       0.047    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        13.000                counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        28.000                    ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    251811.678 ±   12025.074   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1315.041 ±      63.007  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8216.002 ±       0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1338.107 ±      40.356  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8361.700 ±     628.919    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±       0.067  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.286 ±       0.410    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000                counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        49.000                    ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    847938.390 ±   19601.936   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5      1099.544 ±      25.404  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5      1137.431 ±     697.081  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2109.595 ±    1270.109    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±       0.237  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.124 ±       0.436    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        17.000                counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        34.000                    ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2670140.875 ±   66759.912   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1819.420 ±      45.454  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1757.399 ±     588.189  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1035.714 ±     360.710    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.058 ±       0.132  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.034 ±       0.078    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        26.000                counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        38.000                    ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    217114.824 ±    6880.339   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1152.620 ±      36.472  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8352.002 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1132.317 ±     691.683  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8204.712 ±    4995.288    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.105  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.331 ±       0.749    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        17.000                counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        34.000                    ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5    976753.264 ±   24833.317   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       720.194 ±      18.256  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       731.010 ±     580.540  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1177.198 ±     927.323    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.029 ±       0.091  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.047 ±       0.147    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000                counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        20.000                    ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   5051631.472 ±  334046.947   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       154.124 ±      10.191  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       153.540 ±     539.713  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        48.140 ±     169.282    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.004 ±       0.036  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.001 ±       0.011    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         3.000                counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5        12.000                    ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    169098.039 ±    6619.826   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1165.979 ±      45.724  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10848.003 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1199.687 ±     702.047  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     11166.361 ±    6658.101    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±       0.134  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.505 ±       1.259    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        18.000                counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        28.000                    ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1301327.803 ±   28051.509   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1456.553 ±      28.596  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1483.385 ±     710.538  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1792.946 ±     878.796    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.012 ±       0.072  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.015 ±       0.087    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000                counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        49.000                    ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3723253.992 ±  518836.386   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1022.415 ±     142.469  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1002.682 ±      25.339  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       424.169 ±      67.896    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.037 ±       0.067  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.016 ±       0.027    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        15.000                counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        20.000                    ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  11657957.708 ± 6248103.860   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       355.694 ±     190.628  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       325.826 ±       0.576  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        44.782 ±      28.200    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±       0.105  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±       0.013    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         5.000                counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        18.000                    ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    959880.592 ±    9154.652   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1420.391 ±      13.364  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2328.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1409.407 ±     543.440  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2310.092 ±     895.548    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.042 ±       0.098  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.068 ±       0.162    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        21.000                counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        32.000                    ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    732623.409 ±   22380.075   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1762.080 ±      53.982  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3784.001 ±       0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1754.749 ±     600.418  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3769.122 ±    1333.828    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±       0.132  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.098 ±       0.280    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        26.000                counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        43.000                    ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2548701.438 ±   32893.702   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1477.523 ±      19.033  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±       0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1417.216 ±     583.663  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       874.937 ±     368.302    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±       0.098  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.026 ±       0.060    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        21.000                counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        30.000                    ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   5224171.429 ±   97135.277   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1036.036 ±      19.207  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       312.000 ±       0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1064.662 ±     546.052  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       320.637 ±     164.921    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.154  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.014 ±       0.046    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        16.000                counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        30.000                    ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2694242.721 ±   47236.037   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1150.844 ±      20.190  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1139.856 ±     689.946  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       665.628 ±     404.081    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.021 ±       0.057  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±       0.033    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000                counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        33.000                    ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3772415.533 ±  222844.081   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       690.575 ±      40.774  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       657.613 ±      13.847  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       274.317 ±      20.563    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.054 ±       0.134  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.023 ±       0.056    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        10.000                counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        18.000                    ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    487822.714 ±   65223.873   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1443.673 ±     193.327  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1477.081 ±     733.237  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4763.202 ±    2237.955    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±       0.166  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.161 ±       0.528    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000                counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        35.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   1028130.687 ±   19756.255   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1270.409 ±      24.451  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1275.310 ±     562.579  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1951.208 ±     850.138    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.037 ±       0.067  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.057 ±       0.103    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        19.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        43.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3254714.370 ±   39273.449   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       380.663 ±       4.557  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       390.526 ±     559.451  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       188.758 ±     270.206    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.464 ±       3.865  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.224 ±       1.867    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         6.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        17.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    248511.809 ±    6381.173   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       974.303 ±      25.050  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.160 ±      30.918  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6287.838 ±     345.397    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.046 ±       0.105  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.290 ±       0.655    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000                counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        46.000                    ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    600362.094 ±   29218.865   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1538.629 ±      74.843  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1554.181 ±     723.570  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4069.807 ±    1768.380    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.088  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.065 ±       0.229    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        23.000                counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        51.000                    ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1558573.230 ±  238737.446   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       840.079 ±     128.639  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       856.799 ±     695.135  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       861.364 ±     609.266    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±       0.036  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.017 ±       0.036    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        13.000                counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        34.000                    ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4437129.886 ±  144800.493   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       744.572 ±      24.271  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       724.463 ±     560.221  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       256.824 ±     196.864    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.050 ±       0.122  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.018 ±       0.043    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        11.000                counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        20.000                    ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    365603.835 ±    6571.378   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1258.598 ±      22.735  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1203.391 ±     710.158  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5178.928 ±    3070.267    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.067 ±       0.105  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.287 ±       0.448    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        18.000                counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        27.000                    ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    344086.947 ±    8392.341   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1023.566 ±      24.862  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±       0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5       993.823 ±      36.867  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4544.223 ±     228.423    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.021 ±       0.057  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.095 ±       0.260    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        15.000                counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        33.000                    ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1096213.474 ±   22185.512   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1137.151 ±      22.967  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1139.322 ±     708.938  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1636.191 ±    1050.396    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±       0.132  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.066 ±       0.190    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        17.000                counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        28.000                    ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3940132.800 ±  104137.327   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       520.928 ±      13.719  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       208.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       523.073 ±     690.293  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       209.130 ±     278.935    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.029 ±       0.122  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.012 ±       0.049    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         8.000                counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        11.000                    ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    254288.880 ±    3045.840   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       937.493 ±      11.245  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±       0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.218 ±     578.409  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5729.593 ±    3562.039    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.037 ±       0.105  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.232 ±       0.646    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000                counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        28.000                    ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    330234.184 ±   10674.552   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       968.935 ±      31.347  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4616.001 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5       993.308 ±      35.620  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4732.555 ±     286.840    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.029 ±       0.044  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.139 ±       0.205    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000                counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        28.000                    ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1022266.896 ±   19622.015   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1013.676 ±      19.368  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1001.447 ±      26.548  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1541.200 ±      43.937    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.025 ±       0.067  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.038 ±       0.104    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000                counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        32.000                    ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2888654.952 ±  273274.050   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       484.736 ±      45.831  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.206 ±     686.585  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       283.189 ±     358.249    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.042 ±       0.127  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.022 ±       0.067    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000                counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        17.000                    ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    255998.890 ±    4530.282   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       977.612 ±      17.302  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6008.002 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.012 ±      31.721  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6102.817 ±     255.633    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±       0.143  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.282 ±       0.887    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000                counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        21.000                    ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    652503.066 ±   18805.246   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1277.426 ±      36.731  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1278.263 ±     599.398  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3082.518 ±    1459.875    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.033 ±       0.091  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.080 ±       0.221    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000                counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        36.000                    ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1646535.788 ±   40649.479   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       686.552 ±      16.955  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       659.081 ±      16.178  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       629.759 ±      13.096    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.017 ±       0.067  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.016 ±       0.064    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000                counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        24.000                    ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6117502.040 ±  120024.914   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       311.073 ±       6.105  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       311.478 ±     119.635  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        80.132 ±      31.889    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.452 ±       3.713  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.116 ±       0.957    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000                counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        17.000                    ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    202925.034 ±   13493.874   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1101.016 ±      73.219  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8536.002 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1131.169 ±     700.008  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8774.546 ±    5544.248    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±       0.067  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.454 ±       0.550    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        17.000                counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        34.000                    ms
[success] Total time: 983 s, completed Oct 21, 2017 9:04:50 PM
