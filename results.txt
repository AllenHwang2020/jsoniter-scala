[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 10, 2017 1:33:28 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:192:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:55:88: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "i");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = materialize[MissingReqFields](CodecConfig())
[info]                                                                                        ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:57:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "bd");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs](CodecConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:59:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d1(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d0(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d2(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays](CodecConfig())
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:61:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d0(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets](CodecConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:63:68: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d0(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d0(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d1(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d2(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: List[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: List[Set[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables](CodecConfig())
[info]                                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:65:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d0(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps](CodecConfig())
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:67:74: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d0(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps](CodecConfig())
[info]                                                                          ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:69:83: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d0(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps](CodecConfig())
[info]                                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:71:71: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives](CodecConfig())
[info]                                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:73:80: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       final override def default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       final def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d(in, default);
[info]       final def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "l");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields](CodecConfig())
[info]                                                                                ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 92 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 72 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 718021.772 ops/s
[info] # Warmup Iteration   2: 1410407.982 ops/s
[info] # Warmup Iteration   3: 1502732.183 ops/s
[info] # Warmup Iteration   4: 1488471.057 ops/s
[info] # Warmup Iteration   5: 1498903.092 ops/s
[info] Iteration   1: 1480440.769 ops/s
[info]                  ·gc.alloc.rate:                   2378.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2370.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2518.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1490693.659 ops/s
[info]                  ·gc.alloc.rate:                   2395.448 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2377.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2508.760 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 1478878.182 ops/s
[info]                  ·gc.alloc.rate:                   2376.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2379.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2531.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1204254.661 ops/s
[info]                  ·gc.alloc.rate:                   1935.155 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2668.864 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1059098.217 ops/s
[info]                  ·gc.alloc.rate:                   1701.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1702.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2529.280 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce":
[info]   1342673.098 ±(99.9%) 767757.517 ops/s [Average]
[info]   (min, avg, max) = (1059098.217, 1342673.098, 1490693.659), stdev = 199384.189
[info]   CI (99.9%): [574915.581, 2110430.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2157.566 ±(99.9%) 1233.732 MB/sec [Average]
[info]   (min, avg, max) = (1701.870, 2157.566, 2395.448), stdev = 320.396
[info]   CI (99.9%): [923.834, 3391.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2528.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2528.000, 2528.000, 2528.000), stdev = 0.001
[info]   CI (99.9%): [2528.000, 2528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2174.590 ±(99.9%) 1157.446 MB/sec [Average]
[info]   (min, avg, max) = (1702.732, 2174.590, 2379.587), stdev = 300.585
[info]   CI (99.9%): [1017.144, 3332.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2551.447 ±(99.9%) 255.123 B/op [Average]
[info]   (min, avg, max) = (2508.760, 2551.447, 2668.864), stdev = 66.255
[info]   CI (99.9%): [2296.324, 2806.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.095 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.051, 0.093), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.count":
[info]   32.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 10.200, 16.000), stdev = 4.025
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson
[info] # Run progress: 1.47% complete, ETA 00:18:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44438.152 ops/s
[info] # Warmup Iteration   2: 137356.638 ops/s
[info] # Warmup Iteration   3: 145273.191 ops/s
[info] # Warmup Iteration   4: 203266.102 ops/s
[info] # Warmup Iteration   5: 211940.051 ops/s
[info] Iteration   1: 167111.285 ops/s
[info]                  ·gc.alloc.rate:               395.998 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3049.153 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 147210.415 ops/s
[info]                  ·gc.alloc.rate:                   348.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3489.817 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.445 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 148082.363 ops/s
[info]                  ·gc.alloc.rate:               350.895 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3469.269 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 148374.729 ops/s
[info]                  ·gc.alloc.rate:                   351.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3480.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.221 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 206188.626 ops/s
[info]                  ·gc.alloc.rate:               488.584 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5018.813 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson":
[info]   163393.483 ±(99.9%) 97550.031 ops/s [Average]
[info]   (min, avg, max) = (147210.415, 163393.483, 206188.626), stdev = 25333.433
[info]   CI (99.9%): [65843.452, 260943.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   387.184 ±(99.9%) 231.140 MB/sec [Average]
[info]   (min, avg, max) = (348.830, 387.184, 488.584), stdev = 60.026
[info]   CI (99.9%): [156.045, 618.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3728.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3728.002, 3728.003, 3728.003), stdev = 0.001
[info]   CI (99.9%): [3728.001, 3728.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   392.592 ±(99.9%) 570.813 MB/sec [Average]
[info]   (min, avg, max) = (323.889, 392.592, 657.754), stdev = 148.238
[info]   CI (99.9%): [≈ 0, 963.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3701.427 ±(99.9%) 2925.372 B/op [Average]
[info]   (min, avg, max) = (3049.153, 3701.427, 5018.813), stdev = 759.710
[info]   CI (99.9%): [776.055, 6626.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.133 ±(99.9%) 0.766 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.133, 0.445), stdev = 0.199
[info]   CI (99.9%): [≈ 0, 0.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 9.000), stdev = 3.391
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.94% complete, ETA 00:18:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 389400.046 ops/s
[info] # Warmup Iteration   2: 395908.926 ops/s
[info] # Warmup Iteration   3: 365928.967 ops/s
[info] # Warmup Iteration   4: 280497.706 ops/s
[info] # Warmup Iteration   5: 273100.347 ops/s
[info] Iteration   1: 289926.417 ops/s
[info]                  ·gc.alloc.rate:                   271.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              1472.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1766.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.166 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 11.753 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 386200.134 ops/s
[info]                  ·gc.alloc.rate:                   361.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              1472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1326.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 401926.307 ops/s
[info]                  ·gc.alloc.rate:                   376.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1275.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 401370.832 ops/s
[info]                  ·gc.alloc.rate:               375.540 MB/sec
[info]                  ·gc.alloc.rate.norm:          1472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1277.295 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 403146.814 ops/s
[info]                  ·gc.alloc.rate:                   377.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              1472.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1273.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter":
[info]   376514.101 ±(99.9%) 188290.041 ops/s [Average]
[info]   (min, avg, max) = (289926.417, 376514.101, 403146.814), stdev = 48898.326
[info]   CI (99.9%): [188224.060, 564804.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   352.288 ±(99.9%) 176.164 MB/sec [Average]
[info]   (min, avg, max) = (271.277, 352.288, 377.216), stdev = 45.749
[info]   CI (99.9%): [176.124, 528.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1472.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1472.001, 1472.001, 1472.002), stdev = 0.001
[info]   CI (99.9%): [1472.000, 1472.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.818 ±(99.9%) 1.063 MB/sec [Average]
[info]   (min, avg, max) = (325.558, 325.818, 326.230), stdev = 0.276
[info]   CI (99.9%): [324.755, 326.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1383.737 ±(99.9%) 828.514 B/op [Average]
[info]   (min, avg, max) = (1273.039, 1383.737, 1766.595), stdev = 215.163
[info]   CI (99.9%): [555.222, 2212.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 3.703 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 2.166), stdev = 0.962
[info]   CI (99.9%): [≈ 0, 4.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   2.400 ±(99.9%) 20.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 2.400, 11.753), stdev = 5.229
[info]   CI (99.9%): [≈ 0, 22.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 4.41% complete, ETA 00:17:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1153227.431 ops/s
[info] # Warmup Iteration   2: 1211685.300 ops/s
[info] # Warmup Iteration   3: 1217793.142 ops/s
[info] # Warmup Iteration   4: 1221669.553 ops/s
[info] # Warmup Iteration   5: 1213594.829 ops/s
[info] Iteration   1: 1221965.967 ops/s
[info]                  ·gc.alloc.rate:                   764.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1206415.903 ops/s
[info]                  ·gc.alloc.rate:               754.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 856.468 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 1211711.393 ops/s
[info]                  ·gc.alloc.rate:                   759.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1275.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1212999.287 ops/s
[info]                  ·gc.alloc.rate:                   758.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     860.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1200842.877 ops/s
[info]                  ·gc.alloc.rate:                   751.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless":
[info]   1210787.085 ±(99.9%) 30363.376 ops/s [Average]
[info]   (min, avg, max) = (1200842.877, 1210787.085, 1221965.967), stdev = 7885.272
[info]   CI (99.9%): [1180423.710, 1241150.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   757.665 ±(99.9%) 19.491 MB/sec [Average]
[info]   (min, avg, max) = (751.068, 757.665, 764.344), stdev = 5.062
[info]   CI (99.9%): [738.175, 777.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   724.822 ±(99.9%) 560.209 MB/sec [Average]
[info]   (min, avg, max) = (654.816, 724.822, 984.971), stdev = 145.485
[info]   CI (99.9%): [164.613, 1285.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   941.177 ±(99.9%) 721.565 B/op [Average]
[info]   (min, avg, max) = (842.996, 941.177, 1275.926), stdev = 187.388
[info]   CI (99.9%): [219.612, 1662.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.118 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.154 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.107), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 12.000), stdev = 2.775
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 5.88% complete, ETA 00:17:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1812889.742 ops/s
[info] # Warmup Iteration   2: 1883620.879 ops/s
[info] # Warmup Iteration   3: 1850173.553 ops/s
[info] # Warmup Iteration   4: 1835857.549 ops/s
[info] # Warmup Iteration   5: 1871492.327 ops/s
[info] Iteration   1: 1892556.342 ops/s
[info]                  ·gc.alloc.rate:                   279.095 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1879314.645 ops/s
[info]                  ·gc.alloc.rate:                   277.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.787 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1891865.133 ops/s
[info]                  ·gc.alloc.rate:                   278.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1830068.914 ops/s
[info]                  ·gc.alloc.rate:               269.873 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 280.142 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1901187.455 ops/s
[info]                  ·gc.alloc.rate:      280.349 MB/sec
[info]                  ·gc.alloc.rate.norm: 232.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   1878998.498 ±(99.9%) 109522.214 ops/s [Average]
[info]   (min, avg, max) = (1830068.914, 1878998.498, 1901187.455), stdev = 28442.571
[info]   CI (99.9%): [1769476.284, 1988520.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   277.072 ±(99.9%) 16.115 MB/sec [Average]
[info]   (min, avg, max) = (269.873, 277.072, 280.349), stdev = 4.185
[info]   CI (99.9%): [260.957, 293.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   246.559 ±(99.9%) 543.319 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.559, 325.874), stdev = 141.098
[info]   CI (99.9%): [≈ 0, 789.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   207.225 ±(99.9%) 457.994 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 207.225, 280.142), stdev = 118.940
[info]   CI (99.9%): [≈ 0, 665.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.446 ±(99.9%) 3.637 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.446, 2.135), stdev = 0.944
[info]   CI (99.9%): [≈ 0, 4.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.373 ±(99.9%) 3.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.373, 1.787), stdev = 0.791
[info]   CI (99.9%): [≈ 0, 3.418] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 4.000), stdev = 1.517
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay
[info] # Run progress: 7.35% complete, ETA 00:17:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 44450.149 ops/s
[info] # Warmup Iteration   2: 121443.887 ops/s
[info] # Warmup Iteration   3: 124871.820 ops/s
[info] # Warmup Iteration   4: 129713.605 ops/s
[info] # Warmup Iteration   5: 130088.638 ops/s
[info] Iteration   1: 128019.273 ops/s
[info]                  ·gc.alloc.rate:                   1068.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.021 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12092.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.512 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 129574.719 ops/s
[info]                  ·gc.alloc.rate:                   1081.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16037.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 129693.058 ops/s
[info]                  ·gc.alloc.rate:                   1082.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.367 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12098.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 129313.682 ops/s
[info]                  ·gc.alloc.rate:                   1079.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12182.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.507 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 129352.780 ops/s
[info]                  ·gc.alloc.rate:               1079.434 MB/sec
[info]                  ·gc.alloc.rate.norm:          13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.695 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 12231.198 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay":
[info]   129190.702 ±(99.9%) 2592.737 ops/s [Average]
[info]   (min, avg, max) = (128019.273, 129190.702, 129693.058), stdev = 673.326
[info]   CI (99.9%): [126597.965, 131783.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1078.072 ±(99.9%) 21.612 MB/sec [Average]
[info]   (min, avg, max) = (1068.304, 1078.072, 1082.274), stdev = 5.613
[info]   CI (99.9%): [1056.460, 1099.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.003, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1061.866 ±(99.9%) 558.400 MB/sec [Average]
[info]   (min, avg, max) = (984.021, 1061.866, 1320.870), stdev = 145.015
[info]   CI (99.9%): [503.465, 1620.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   12928.283 ±(99.9%) 6696.773 B/op [Average]
[info]   (min, avg, max) = (12092.276, 12928.283, 16037.578), stdev = 1739.131
[info]   CI (99.9%): [6231.510, 19625.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.507 ±(99.9%) 1.377 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.507, 1.011), stdev = 0.358
[info]   CI (99.9%): [≈ 0, 1.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 8.82% complete, ETA 00:16:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 734914.753 ops/s
[info] # Warmup Iteration   2: 1082604.429 ops/s
[info] # Warmup Iteration   3: 1154723.526 ops/s
[info] # Warmup Iteration   4: 1146943.425 ops/s
[info] # Warmup Iteration   5: 1154492.513 ops/s
[info] Iteration   1: 1154394.487 ops/s
[info]                  ·gc.alloc.rate:                   1825.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.016 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2297.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1157962.759 ops/s
[info]                  ·gc.alloc.rate:                   1831.220 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2030.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2758.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1135290.006 ops/s
[info]                  ·gc.alloc.rate:               1795.363 MB/sec
[info]                  ·gc.alloc.rate.norm:          2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2350.719 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 1120049.511 ops/s
[info]                  ·gc.alloc.rate:                   1771.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2386.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1157987.862 ops/s
[info]                  ·gc.alloc.rate:                   1831.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2770.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1145136.925 ±(99.9%) 65054.552 ops/s [Average]
[info]   (min, avg, max) = (1120049.511, 1145136.925, 1157987.862), stdev = 16894.460
[info]   CI (99.9%): [1080082.373, 1210191.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1810.972 ±(99.9%) 102.976 MB/sec [Average]
[info]   (min, avg, max) = (1771.273, 1810.972, 1831.372), stdev = 26.743
[info]   CI (99.9%): [1707.996, 1913.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2488.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2488.000, 2488.000, 2488.000), stdev = 0.001
[info]   CI (99.9%): [2488.000, 2488.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.135 ±(99.9%) 719.259 MB/sec [Average]
[info]   (min, avg, max) = (1686.016, 1830.135, 2039.300), stdev = 186.789
[info]   CI (99.9%): [1110.876, 2549.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2512.714 ±(99.9%) 892.781 B/op [Average]
[info]   (min, avg, max) = (2297.730, 2512.714, 2770.480), stdev = 231.852
[info]   CI (99.9%): [1619.933, 3405.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.209 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.141), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 3.578
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 10.29% complete, ETA 00:16:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1157716.654 ops/s
[info] # Warmup Iteration   2: 1783246.142 ops/s
[info] # Warmup Iteration   3: 1791129.416 ops/s
[info] # Warmup Iteration   4: 1768674.461 ops/s
[info] # Warmup Iteration   5: 1781562.420 ops/s
[info] Iteration   1: 1793863.237 ops/s
[info]                  ·gc.alloc.rate:               1258.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 871.739 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 1666335.824 ops/s
[info]                  ·gc.alloc.rate:                   1169.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1259.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1738541.118 ops/s
[info]                  ·gc.alloc.rate:                   1219.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1214.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1549154.190 ops/s
[info]                  ·gc.alloc.rate:                   1087.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1025.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1680934.087 ops/s
[info]                  ·gc.alloc.rate:                   1179.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     947.437 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1685765.691 ±(99.9%) 352569.989 ops/s [Average]
[info]   (min, avg, max) = (1549154.190, 1685765.691, 1793863.237), stdev = 91561.307
[info]   CI (99.9%): [1333195.702, 2038335.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1182.988 ±(99.9%) 247.466 MB/sec [Average]
[info]   (min, avg, max) = (1087.065, 1182.988, 1258.847), stdev = 64.266
[info]   CI (99.9%): [935.522, 1430.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.407 ±(99.9%) 701.797 MB/sec [Average]
[info]   (min, avg, max) = (994.009, 1138.407, 1341.864), stdev = 182.254
[info]   CI (99.9%): [436.611, 1840.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1063.681 ±(99.9%) 646.469 B/op [Average]
[info]   (min, avg, max) = (871.739, 1063.681, 1259.285), stdev = 167.886
[info]   CI (99.9%): [417.213, 1710.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.059), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 3.114
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 11.76% complete, ETA 00:16:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5754335.652 ops/s
[info] # Warmup Iteration   2: 6369878.641 ops/s
[info] # Warmup Iteration   3: 6507822.350 ops/s
[info] # Warmup Iteration   4: 6453649.443 ops/s
[info] # Warmup Iteration   5: 6459268.766 ops/s
[info] Iteration   1: 6470900.943 ops/s
[info]                  ·gc.alloc.rate:                   822.634 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 6512327.471 ops/s
[info]                  ·gc.alloc.rate:                   827.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6528332.054 ops/s
[info]                  ·gc.alloc.rate:                   829.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6530142.059 ops/s
[info]                  ·gc.alloc.rate:               830.149 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 159.913 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 6481738.524 ops/s
[info]                  ·gc.alloc.rate:                   823.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6504688.210 ±(99.9%) 104279.881 ops/s [Average]
[info]   (min, avg, max) = (6470900.943, 6504688.210, 6530142.059), stdev = 27081.154
[info]   CI (99.9%): [6400408.329, 6608968.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   826.916 ±(99.9%) 13.257 MB/sec [Average]
[info]   (min, avg, max) = (822.634, 826.916, 830.149), stdev = 3.443
[info]   CI (99.9%): [813.659, 840.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.221 ±(99.9%) 697.989 MB/sec [Average]
[info]   (min, avg, max) = (657.771, 859.221, 999.287), stdev = 181.265
[info]   CI (99.9%): [161.233, 1557.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   207.897 ±(99.9%) 170.544 B/op [Average]
[info]   (min, avg, max) = (158.900, 207.897, 242.553), stdev = 44.290
[info]   CI (99.9%): [37.353, 378.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 8.000), stdev = 1.789
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 13.24% complete, ETA 00:15:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217148.758 ops/s
[info] # Warmup Iteration   2: 417933.031 ops/s
[info] # Warmup Iteration   3: 434867.674 ops/s
[info] # Warmup Iteration   4: 437317.206 ops/s
[info] # Warmup Iteration   5: 426586.383 ops/s
[info] Iteration   1: 434351.134 ops/s
[info]                  ·gc.alloc.rate:                   1148.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.029 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3578.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.226 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 436361.740 ops/s
[info]                  ·gc.alloc.rate:                   1153.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4781.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 428056.589 ops/s
[info]                  ·gc.alloc.rate:                   1131.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3677.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.306 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 432746.020 ops/s
[info]                  ·gc.alloc.rate:                   1144.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3649.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 440375.118 ops/s
[info]                  ·gc.alloc.rate:                   1164.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4804.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   434378.120 ±(99.9%) 17490.251 ops/s [Average]
[info]   (min, avg, max) = (428056.589, 434378.120, 440375.118), stdev = 4542.163
[info]   CI (99.9%): [416887.869, 451868.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1148.578 ±(99.9%) 46.158 MB/sec [Average]
[info]   (min, avg, max) = (1131.857, 1148.578, 1164.375), stdev = 11.987
[info]   CI (99.9%): [1102.420, 1194.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.715 ±(99.9%) 713.548 MB/sec [Average]
[info]   (min, avg, max) = (988.029, 1132.715, 1344.732), stdev = 185.306
[info]   CI (99.9%): [419.167, 1846.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4098.425 ±(99.9%) 2445.746 B/op [Average]
[info]   (min, avg, max) = (3578.556, 4098.425, 4804.368), stdev = 635.152
[info]   CI (99.9%): [1652.679, 6544.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.227 ±(99.9%) 0.295 B/op [Average]
[info]   (min, avg, max) = (0.149, 0.227, 0.306), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 10.000), stdev = 2.881
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 14.71% complete, ETA 00:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 378156.621 ops/s
[info] # Warmup Iteration   2: 615047.127 ops/s
[info] # Warmup Iteration   3: 627286.416 ops/s
[info] # Warmup Iteration   4: 631015.631 ops/s
[info] # Warmup Iteration   5: 618775.381 ops/s
[info] Iteration   1: 628778.503 ops/s
[info]                  ·gc.alloc.rate:                   2055.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5073.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 637201.117 ops/s
[info]                  ·gc.alloc.rate:                   2083.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5021.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 626038.133 ops/s
[info]                  ·gc.alloc.rate:                   2046.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5121.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 636867.066 ops/s
[info]                  ·gc.alloc.rate:                   2082.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5037.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 629649.537 ops/s
[info]                  ·gc.alloc.rate:                   2059.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2381.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5947.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   631706.871 ±(99.9%) 19421.613 ops/s [Average]
[info]   (min, avg, max) = (626038.133, 631706.871, 637201.117), stdev = 5043.731
[info]   CI (99.9%): [612285.259, 651128.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2065.594 ±(99.9%) 62.903 MB/sec [Average]
[info]   (min, avg, max) = (2046.924, 2065.594, 2083.208), stdev = 16.336
[info]   CI (99.9%): [2002.690, 2128.497] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2103.990 ±(99.9%) 597.167 MB/sec [Average]
[info]   (min, avg, max) = (2027.903, 2103.990, 2381.300), stdev = 155.082
[info]   CI (99.9%): [1506.823, 2701.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5240.358 ±(99.9%) 1529.003 B/op [Average]
[info]   (min, avg, max) = (5021.913, 5240.358, 5947.376), stdev = 397.077
[info]   CI (99.9%): [3711.355, 6769.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.201 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.167), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.187 ±(99.9%) 0.508 B/op [Average]
[info]   (min, avg, max) = (0.103, 0.187, 0.419), stdev = 0.132
[info]   CI (99.9%): [≈ 0, 0.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 16.000), stdev = 4.506
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 16.18% complete, ETA 00:15:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 838427.051 ops/s
[info] # Warmup Iteration   2: 1252001.230 ops/s
[info] # Warmup Iteration   3: 1261542.238 ops/s
[info] # Warmup Iteration   4: 1195125.549 ops/s
[info] # Warmup Iteration   5: 1089781.193 ops/s
[info] Iteration   1: 1121161.090 ops/s
[info]                  ·gc.alloc.rate:                   1020.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1389.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1007296.549 ops/s
[info]                  ·gc.alloc.rate:                   916.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1035.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1270567.422 ops/s
[info]                  ·gc.alloc.rate:                   1156.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1651.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1240914.857 ops/s
[info]                  ·gc.alloc.rate:                   1129.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1274.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1234402.526 ops/s
[info]                  ·gc.alloc.rate:                   1123.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1715.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1174868.489 ±(99.9%) 421946.727 ops/s [Average]
[info]   (min, avg, max) = (1007296.549, 1174868.489, 1270567.422), stdev = 109578.225
[info]   CI (99.9%): [752921.762, 1596815.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1069.393 ±(99.9%) 383.911 MB/sec [Average]
[info]   (min, avg, max) = (916.926, 1069.393, 1156.436), stdev = 99.701
[info]   CI (99.9%): [685.482, 1453.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1432.000, 1432.000, 1432.000), stdev = 0.001
[info]   CI (99.9%): [1432.000, 1432.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1067.768 ±(99.9%) 1092.431 MB/sec [Average]
[info]   (min, avg, max) = (663.145, 1067.768, 1346.214), stdev = 283.701
[info]   CI (99.9%): [≈ 0, 2160.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1413.445 ±(99.9%) 1073.017 B/op [Average]
[info]   (min, avg, max) = (1035.660, 1413.445, 1715.722), stdev = 278.659
[info]   CI (99.9%): [340.428, 2486.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.044, 0.077), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 15.000), stdev = 5.020
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 17.65% complete, ETA 00:15:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2048965.970 ops/s
[info] # Warmup Iteration   2: 2371430.291 ops/s
[info] # Warmup Iteration   3: 2401301.013 ops/s
[info] # Warmup Iteration   4: 2384091.547 ops/s
[info] # Warmup Iteration   5: 2396944.433 ops/s
[info] Iteration   1: 2400629.663 ops/s
[info]                  ·gc.alloc.rate:                   1098.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     865.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2362086.939 ops/s
[info]                  ·gc.alloc.rate:                   1081.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.985 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     663.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2377350.909 ops/s
[info]                  ·gc.alloc.rate:                   1087.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     662.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2364833.566 ops/s
[info]                  ·gc.alloc.rate:                   1082.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     668.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2348220.749 ops/s
[info]                  ·gc.alloc.rate:                   1074.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     900.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2370624.365 ±(99.9%) 75895.480 ops/s [Average]
[info]   (min, avg, max) = (2348220.749, 2370624.365, 2400629.663), stdev = 19709.815
[info]   CI (99.9%): [2294728.885, 2446519.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1084.916 ±(99.9%) 34.706 MB/sec [Average]
[info]   (min, avg, max) = (1074.673, 1084.916, 1098.641), stdev = 9.013
[info]   CI (99.9%): [1050.210, 1119.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1133.510 ±(99.9%) 701.489 MB/sec [Average]
[info]   (min, avg, max) = (995.985, 1133.510, 1344.831), stdev = 182.175
[info]   CI (99.9%): [432.021, 1835.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   752.189 ±(99.9%) 463.475 B/op [Average]
[info]   (min, avg, max) = (662.632, 752.189, 900.998), stdev = 120.363
[info]   CI (99.9%): [288.715, 1215.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.039, 0.055), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 13.000), stdev = 4.324
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 19.12% complete, ETA 00:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100972.663 ops/s
[info] # Warmup Iteration   2: 204782.759 ops/s
[info] # Warmup Iteration   3: 191219.893 ops/s
[info] # Warmup Iteration   4: 193983.326 ops/s
[info] # Warmup Iteration   5: 209876.223 ops/s
[info] Iteration   1: 213170.349 ops/s
[info]                  ·gc.alloc.rate:                   1308.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              9656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.842 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9748.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 212740.589 ops/s
[info]                  ·gc.alloc.rate:                   1305.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              9656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9841.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.462 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 208814.102 ops/s
[info]                  ·gc.alloc.rate:                   1281.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              9656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10081.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.471 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 207227.388 ops/s
[info]                  ·gc.alloc.rate:                   1271.849 MB/sec
[info]                  ·gc.alloc.rate.norm:              9656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7654.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 207103.887 ops/s
[info]                  ·gc.alloc.rate:                   1271.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              9656.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10243.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.316 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   209811.263 ±(99.9%) 11368.375 ops/s [Average]
[info]   (min, avg, max) = (207103.887, 209811.263, 213170.349), stdev = 2952.331
[info]   CI (99.9%): [198442.888, 221179.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1287.732 ±(99.9%) 69.848 MB/sec [Average]
[info]   (min, avg, max) = (1271.047, 1287.732, 1308.343), stdev = 18.139
[info]   CI (99.9%): [1217.884, 1357.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9656.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9656.002, 9656.002, 9656.002), stdev = 0.001
[info]   CI (99.9%): [9656.002, 9656.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1269.300 ±(99.9%) 563.260 MB/sec [Average]
[info]   (min, avg, max) = (1008.254, 1269.300, 1348.391), stdev = 146.277
[info]   CI (99.9%): [706.040, 1832.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9513.964 ±(99.9%) 4072.128 B/op [Average]
[info]   (min, avg, max) = (7654.763, 9513.964, 10243.579), stdev = 1057.519
[info]   CI (99.9%): [5441.836, 13586.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.374 ±(99.9%) 0.526 B/op [Average]
[info]   (min, avg, max) = (0.158, 0.374, 0.471), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 13.000), stdev = 4.266
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 20.59% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1002190.188 ops/s
[info] # Warmup Iteration   2: 1546177.243 ops/s
[info] # Warmup Iteration   3: 1561013.786 ops/s
[info] # Warmup Iteration   4: 1575910.518 ops/s
[info] # Warmup Iteration   5: 1556440.431 ops/s
[info] Iteration   1: 1565769.984 ops/s
[info]                  ·gc.alloc.rate:                   1011.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1582338.019 ops/s
[info]                  ·gc.alloc.rate:                   1021.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     995.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1536290.052 ops/s
[info]                  ·gc.alloc.rate:                   992.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1029.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1537029.071 ops/s
[info]                  ·gc.alloc.rate:                   992.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1032.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1551779.432 ops/s
[info]                  ·gc.alloc.rate:                   1002.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1025.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1554641.311 ±(99.9%) 75704.705 ops/s [Average]
[info]   (min, avg, max) = (1536290.052, 1554641.311, 1582338.019), stdev = 19660.271
[info]   CI (99.9%): [1478936.607, 1630346.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1003.987 ±(99.9%) 48.888 MB/sec [Average]
[info]   (min, avg, max) = (992.134, 1003.987, 1021.884), stdev = 12.696
[info]   CI (99.9%): [955.099, 1052.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1005.157 ±(99.9%) 21.933 MB/sec [Average]
[info]   (min, avg, max) = (997.622, 1005.157, 1011.941), stdev = 5.696
[info]   CI (99.9%): [983.224, 1027.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1017.350 ±(99.9%) 65.300 B/op [Average]
[info]   (min, avg, max) = (995.870, 1017.350, 1032.707), stdev = 16.958
[info]   CI (99.9%): [952.050, 1082.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.064), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 11.000), stdev = 4.382
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 22.06% complete, ETA 00:14:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5545024.736 ops/s
[info] # Warmup Iteration   2: 4292052.019 ops/s
[info] # Warmup Iteration   3: 4368354.352 ops/s
[info] # Warmup Iteration   4: 4390481.889 ops/s
[info] # Warmup Iteration   5: 4341088.730 ops/s
[info] Iteration   1: 4403942.997 ops/s
[info]                  ·gc.alloc.rate:               470.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.417 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4324841.580 ops/s
[info]                  ·gc.alloc.rate:               461.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 118.664 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4310493.922 ops/s
[info]                  ·gc.alloc.rate:                   460.304 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 4303655.520 ops/s
[info]                  ·gc.alloc.rate:               459.604 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.492 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 4316125.831 ops/s
[info]                  ·gc.alloc.rate:                   460.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   4331811.970 ±(99.9%) 158120.063 ops/s [Average]
[info]   (min, avg, max) = (4303655.520, 4331811.970, 4403942.997), stdev = 41063.278
[info]   CI (99.9%): [4173691.907, 4489932.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   462.575 ±(99.9%) 16.841 MB/sec [Average]
[info]   (min, avg, max) = (459.604, 462.575, 470.263), stdev = 4.374
[info]   CI (99.9%): [445.734, 479.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.693 ±(99.9%) 692.691 MB/sec [Average]
[info]   (min, avg, max) = (325.873, 457.693, 656.393), stdev = 179.890
[info]   CI (99.9%): [≈ 0, 1150.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   166.441 ±(99.9%) 254.447 B/op [Average]
[info]   (min, avg, max) = (116.417, 166.441, 239.264), stdev = 66.079
[info]   CI (99.9%): [≈ 0, 420.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.030), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 6.000), stdev = 2.191
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 23.53% complete, ETA 00:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127102.329 ops/s
[info] # Warmup Iteration   2: 248955.345 ops/s
[info] # Warmup Iteration   3: 234441.225 ops/s
[info] # Warmup Iteration   4: 263320.318 ops/s
[info] # Warmup Iteration   5: 263552.324 ops/s
[info] Iteration   1: 262908.448 ops/s
[info]                  ·gc.alloc.rate:                   1193.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5912.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 261937.241 ops/s
[info]                  ·gc.alloc.rate:                   1189.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7965.105 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 264608.661 ops/s
[info]                  ·gc.alloc.rate:                   1201.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7936.403 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 264719.144 ops/s
[info]                  ·gc.alloc.rate:                   1202.101 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5976.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 264417.676 ops/s
[info]                  ·gc.alloc.rate:                   1200.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8009.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   263718.234 ±(99.9%) 4759.709 ops/s [Average]
[info]   (min, avg, max) = (261937.241, 263718.234, 264719.144), stdev = 1236.081
[info]   CI (99.9%): [258958.525, 268477.943] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1197.495 ±(99.9%) 21.625 MB/sec [Average]
[info]   (min, avg, max) = (1189.414, 1197.495, 1202.101), stdev = 5.616
[info]   CI (99.9%): [1175.869, 1219.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.107 ±(99.9%) 715.641 MB/sec [Average]
[info]   (min, avg, max) = (987.937, 1200.107, 1346.039), stdev = 185.850
[info]   CI (99.9%): [484.466, 1915.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7159.851 ±(99.9%) 4275.278 B/op [Average]
[info]   (min, avg, max) = (5912.026, 7159.851, 8009.361), stdev = 1110.276
[info]   CI (99.9%): [2884.573, 11435.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.324 ±(99.9%) 0.807 B/op [Average]
[info]   (min, avg, max) = (0.124, 0.324, 0.625), stdev = 0.210
[info]   CI (99.9%): [≈ 0, 1.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.800, 14.000), stdev = 4.087
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 25.00% complete, ETA 00:13:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 359466.531 ops/s
[info] # Warmup Iteration   2: 545327.125 ops/s
[info] # Warmup Iteration   3: 542312.402 ops/s
[info] # Warmup Iteration   4: 539888.963 ops/s
[info] # Warmup Iteration   5: 545770.796 ops/s
[info] Iteration   1: 548945.435 ops/s
[info]                  ·gc.alloc.rate:                   1822.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5800.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 544507.746 ops/s
[info]                  ·gc.alloc.rate:                   1808.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4888.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 547229.660 ops/s
[info]                  ·gc.alloc.rate:               1817.004 MB/sec
[info]                  ·gc.alloc.rate.norm:          5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1696.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4876.960 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 549319.764 ops/s
[info]                  ·gc.alloc.rate:                   1824.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5839.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 547908.866 ops/s
[info]                  ·gc.alloc.rate:                   1819.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4879.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   547582.294 ±(99.9%) 7346.762 ops/s [Average]
[info]   (min, avg, max) = (544507.746, 547582.294, 549319.764), stdev = 1907.931
[info]   CI (99.9%): [540235.532, 554929.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1818.247 ±(99.9%) 24.318 MB/sec [Average]
[info]   (min, avg, max) = (1808.105, 1818.247, 1824.015), stdev = 6.315
[info]   CI (99.9%): [1793.930, 1842.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.094 ±(99.9%) 707.890 MB/sec [Average]
[info]   (min, avg, max) = (1692.100, 1830.094, 2038.858), stdev = 183.837
[info]   CI (99.9%): [1122.205, 2537.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5256.979 ±(99.9%) 1979.235 B/op [Average]
[info]   (min, avg, max) = (4876.960, 5256.979, 5839.312), stdev = 514.001
[info]   CI (99.9%): [3277.744, 7236.214] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.254 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.181), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 10.000), stdev = 2.683
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 26.47% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 423908.296 ops/s
[info] # Warmup Iteration   2: 690099.943 ops/s
[info] # Warmup Iteration   3: 694788.626 ops/s
[info] # Warmup Iteration   4: 700953.425 ops/s
[info] # Warmup Iteration   5: 693084.131 ops/s
[info] Iteration   1: 693925.695 ops/s
[info]                  ·gc.alloc.rate:               868.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2253.519 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 694861.506 ops/s
[info]                  ·gc.alloc.rate:                   869.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1506.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 692322.676 ops/s
[info]                  ·gc.alloc.rate:                   866.036 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2276.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 692412.011 ops/s
[info]                  ·gc.alloc.rate:               866.123 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1521.732 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 698991.616 ops/s
[info]                  ·gc.alloc.rate:                   874.330 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2269.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   694502.701 ±(99.9%) 10498.837 ops/s [Average]
[info]   (min, avg, max) = (692322.676, 694502.701, 698991.616), stdev = 2726.515
[info]   CI (99.9%): [684003.864, 705001.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   868.742 ±(99.9%) 13.075 MB/sec [Average]
[info]   (min, avg, max) = (866.036, 868.742, 874.330), stdev = 3.396
[info]   CI (99.9%): [855.666, 881.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   867.790 ±(99.9%) 704.098 MB/sec [Average]
[info]   (min, avg, max) = (665.419, 867.790, 1008.245), stdev = 182.852
[info]   CI (99.9%): [163.691, 1571.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1965.474 ±(99.9%) 1586.829 B/op [Average]
[info]   (min, avg, max) = (1506.618, 1965.474, 2276.076), stdev = 412.094
[info]   CI (99.9%): [378.645, 3552.303] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.094), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 7.000), stdev = 2.702
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 27.94% complete, ETA 00:13:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4024887.214 ops/s
[info] # Warmup Iteration   2: 4370797.436 ops/s
[info] # Warmup Iteration   3: 4431702.409 ops/s
[info] # Warmup Iteration   4: 4465322.018 ops/s
[info] # Warmup Iteration   5: 4399347.830 ops/s
[info] Iteration   1: 4429395.098 ops/s
[info]                  ·gc.alloc.rate:      202.715 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4391900.571 ops/s
[info]                  ·gc.alloc.rate:                   201.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4384412.646 ops/s
[info]                  ·gc.alloc.rate:                   200.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     91.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4399893.217 ops/s
[info]                  ·gc.alloc.rate:                   201.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.558 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.782 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4425645.929 ops/s
[info]                  ·gc.alloc.rate:      202.546 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4406249.492 ±(99.9%) 77852.613 ops/s [Average]
[info]   (min, avg, max) = (4384412.646, 4406249.492, 4429395.098), stdev = 20218.076
[info]   CI (99.9%): [4328396.879, 4484102.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   201.657 ±(99.9%) 3.560 MB/sec [Average]
[info]   (min, avg, max) = (200.658, 201.657, 202.715), stdev = 0.925
[info]   CI (99.9%): [198.097, 205.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.478 ±(99.9%) 598.802 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.478, 325.558), stdev = 155.507
[info]   CI (99.9%): [≈ 0, 766.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   59.981 ±(99.9%) 214.375 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 59.981, 116.406), stdev = 55.672
[info]   CI (99.9%): [≈ 0, 274.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.442 ±(99.9%) 3.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.442, 2.187), stdev = 0.976
[info]   CI (99.9%): [≈ 0, 4.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.158 ±(99.9%) 1.343 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.158, 0.782), stdev = 0.349
[info]   CI (99.9%): [≈ 0, 1.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 2.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 29.41% complete, ETA 00:12:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98336.845 ops/s
[info] # Warmup Iteration   2: 210239.627 ops/s
[info] # Warmup Iteration   3: 216366.956 ops/s
[info] # Warmup Iteration   4: 213444.969 ops/s
[info] # Warmup Iteration   5: 213918.874 ops/s
[info] Iteration   1: 214743.734 ops/s
[info]                  ·gc.alloc.rate:                   1192.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9671.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.305 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 217607.592 ops/s
[info]                  ·gc.alloc.rate:                   1208.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7195.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 217749.921 ops/s
[info]                  ·gc.alloc.rate:                   1209.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9644.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 211690.678 ops/s
[info]                  ·gc.alloc.rate:                   1175.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9974.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.310 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 211802.288 ops/s
[info]                  ·gc.alloc.rate:                   1176.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7504.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   214718.843 ±(99.9%) 11424.316 ops/s [Average]
[info]   (min, avg, max) = (211690.678, 214718.843, 217749.921), stdev = 2966.858
[info]   CI (99.9%): [203294.527, 226143.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1192.284 ±(99.9%) 63.491 MB/sec [Average]
[info]   (min, avg, max) = (1175.462, 1192.284, 1209.125), stdev = 16.488
[info]   CI (99.9%): [1128.793, 1255.774] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.531 ±(99.9%) 696.108 MB/sec [Average]
[info]   (min, avg, max) = (995.281, 1200.531, 1342.145), stdev = 180.777
[info]   CI (99.9%): [504.423, 1896.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8798.146 ±(99.9%) 5132.149 B/op [Average]
[info]   (min, avg, max) = (7195.590, 8798.146, 9974.787), stdev = 1332.803
[info]   CI (99.9%): [3665.997, 13930.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.001 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.042, 0.042), stdev = 0.001
[info]   CI (99.9%): [0.042, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.305 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.301, 0.305, 0.310), stdev = 0.004
[info]   CI (99.9%): [0.289, 0.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.362
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.88% complete, ETA 00:12:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2674969.362 ops/s
[info] # Warmup Iteration   2: 3071535.302 ops/s
[info] # Warmup Iteration   3: 3039113.801 ops/s
[info] # Warmup Iteration   4: 3079771.427 ops/s
[info] # Warmup Iteration   5: 3099700.718 ops/s
[info] Iteration   1: 3091955.334 ops/s
[info]                  ·gc.alloc.rate:                   1462.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     678.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3085310.304 ops/s
[info]                  ·gc.alloc.rate:                   1458.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 3074688.789 ops/s
[info]                  ·gc.alloc.rate:                   1454.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3081260.407 ops/s
[info]                  ·gc.alloc.rate:                   1457.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     690.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 3108984.088 ops/s
[info]                  ·gc.alloc.rate:                   1470.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     685.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3088439.784 ±(99.9%) 50385.145 ops/s [Average]
[info]   (min, avg, max) = (3074688.789, 3088439.784, 3108984.088), stdev = 13084.862
[info]   CI (99.9%): [3038054.639, 3138824.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1460.497 ±(99.9%) 23.838 MB/sec [Average]
[info]   (min, avg, max) = (1454.030, 1460.497, 1470.236), stdev = 6.191
[info]   CI (99.9%): [1436.659, 1484.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1412.817 ±(99.9%) 583.250 MB/sec [Average]
[info]   (min, avg, max) = (1333.474, 1412.817, 1683.326), stdev = 151.468
[info]   CI (99.9%): [829.568, 1996.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   719.870 ±(99.9%) 304.937 B/op [Average]
[info]   (min, avg, max) = (678.506, 719.870, 861.326), stdev = 79.191
[info]   CI (99.9%): [414.933, 1024.807] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.032, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 13.000), stdev = 4.817
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 32.35% complete, ETA 00:12:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132927.243 ops/s
[info] # Warmup Iteration   2: 233935.877 ops/s
[info] # Warmup Iteration   3: 240551.362 ops/s
[info] # Warmup Iteration   4: 238621.627 ops/s
[info] # Warmup Iteration   5: 238956.278 ops/s
[info] Iteration   1: 238682.019 ops/s
[info]                  ·gc.alloc.rate:                   1287.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8725.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 237962.737 ops/s
[info]                  ·gc.alloc.rate:                   1283.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8811.674 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.688 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 240187.655 ops/s
[info]                  ·gc.alloc.rate:                   1295.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8775.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.409 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 241291.646 ops/s
[info]                  ·gc.alloc.rate:                   1301.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6578.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 239643.355 ops/s
[info]                  ·gc.alloc.rate:                   1292.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8859.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   239553.482 ±(99.9%) 4991.518 ops/s [Average]
[info]   (min, avg, max) = (237962.737, 239553.482, 241291.646), stdev = 1296.281
[info]   CI (99.9%): [234561.964, 244545.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1292.399 ±(99.9%) 26.782 MB/sec [Average]
[info]   (min, avg, max) = (1283.829, 1292.399, 1301.692), stdev = 6.955
[info]   CI (99.9%): [1265.617, 1319.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8488.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8488.002, 8488.002, 8488.002), stdev = 0.001
[info]   CI (99.9%): [8488.002, 8488.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.936 ±(99.9%) 565.347 MB/sec [Average]
[info]   (min, avg, max) = (1008.836, 1270.936, 1349.454), stdev = 146.819
[info]   CI (99.9%): [705.589, 1836.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8350.202 ±(99.9%) 3818.647 B/op [Average]
[info]   (min, avg, max) = (6578.367, 8350.202, 8859.283), stdev = 991.690
[info]   CI (99.9%): [4531.556, 12168.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.329 ±(99.9%) 0.888 B/op [Average]
[info]   (min, avg, max) = (0.136, 0.329, 0.688), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 1.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 9.000), stdev = 1.949
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 33.82% complete, ETA 00:12:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 311401.903 ops/s
[info] # Warmup Iteration   2: 532222.705 ops/s
[info] # Warmup Iteration   3: 531164.559 ops/s
[info] # Warmup Iteration   4: 529185.968 ops/s
[info] # Warmup Iteration   5: 534600.464 ops/s
[info] Iteration   1: 538909.120 ops/s
[info]                  ·gc.alloc.rate:                   1907.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4923.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 537807.680 ops/s
[info]                  ·gc.alloc.rate:                   1903.358 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5941.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 538736.623 ops/s
[info]                  ·gc.alloc.rate:                   1906.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5945.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.182 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 540852.679 ops/s
[info]                  ·gc.alloc.rate:                   1914.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4943.087 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.242 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 535833.608 ops/s
[info]                  ·gc.alloc.rate:                   1896.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              5568.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5989.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   538427.942 ±(99.9%) 7027.150 ops/s [Average]
[info]   (min, avg, max) = (535833.608, 538427.942, 540852.679), stdev = 1824.929
[info]   CI (99.9%): [531400.792, 545455.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1905.568 ±(99.9%) 24.747 MB/sec [Average]
[info]   (min, avg, max) = (1896.461, 1905.568, 1914.136), stdev = 6.427
[info]   CI (99.9%): [1880.821, 1930.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5568.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5568.001, 5568.001, 5568.001), stdev = 0.001
[info]   CI (99.9%): [5568.001, 5568.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1898.580 ±(99.9%) 723.005 MB/sec [Average]
[info]   (min, avg, max) = (1686.660, 1898.580, 2039.930), stdev = 187.762
[info]   CI (99.9%): [1175.575, 2621.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5548.706 ±(99.9%) 2163.802 B/op [Average]
[info]   (min, avg, max) = (4923.961, 5548.706, 5989.224), stdev = 561.932
[info]   CI (99.9%): [3384.904, 7712.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.195 ±(99.9%) 0.194 B/op [Average]
[info]   (min, avg, max) = (0.122, 0.195, 0.243), stdev = 0.050
[info]   CI (99.9%): [0.001, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.600, 13.000), stdev = 2.702
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 35.29% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 287908.394 ops/s
[info] # Warmup Iteration   2: 533546.383 ops/s
[info] # Warmup Iteration   3: 533907.966 ops/s
[info] # Warmup Iteration   4: 534989.486 ops/s
[info] # Warmup Iteration   5: 537992.039 ops/s
[info] Iteration   1: 535181.042 ops/s
[info]                  ·gc.alloc.rate:               544.270 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1920.856 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 537598.316 ops/s
[info]                  ·gc.alloc.rate:                   546.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1921.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 537468.367 ops/s
[info]                  ·gc.alloc.rate:                   547.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     959.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 535394.781 ops/s
[info]                  ·gc.alloc.rate:                   544.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1940.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 537058.776 ops/s
[info]                  ·gc.alloc.rate:                   546.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1942.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.366 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   536540.256 ±(99.9%) 4477.902 ops/s [Average]
[info]   (min, avg, max) = (535181.042, 536540.256, 537598.316), stdev = 1162.897
[info]   CI (99.9%): [532062.354, 541018.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   545.776 ±(99.9%) 5.099 MB/sec [Average]
[info]   (min, avg, max) = (544.270, 545.776, 547.183), stdev = 1.324
[info]   CI (99.9%): [540.677, 550.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   592.305 ±(99.9%) 568.728 MB/sec [Average]
[info]   (min, avg, max) = (328.179, 592.305, 663.066), stdev = 147.697
[info]   CI (99.9%): [23.577, 1161.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1736.907 ±(99.9%) 1673.640 B/op [Average]
[info]   (min, avg, max) = (959.620, 1736.907, 1942.415), stdev = 434.639
[info]   CI (99.9%): [63.267, 3410.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.185 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.146 ±(99.9%) 0.541 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.146, 0.366), stdev = 0.141
[info]   CI (99.9%): [≈ 0, 0.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 36.76% complete, ETA 00:11:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2615308.709 ops/s
[info] # Warmup Iteration   2: 3020116.156 ops/s
[info] # Warmup Iteration   3: 3038560.328 ops/s
[info] # Warmup Iteration   4: 3040046.188 ops/s
[info] # Warmup Iteration   5: 3016548.249 ops/s
[info] Iteration   1: 3049950.713 ops/s
[info]                  ·gc.alloc.rate:                   759.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     506.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3039193.723 ops/s
[info]                  ·gc.alloc.rate:                   757.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3053020.757 ops/s
[info]                  ·gc.alloc.rate:                   760.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     339.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3011297.301 ops/s
[info]                  ·gc.alloc.rate:                   750.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 3052762.583 ops/s
[info]                  ·gc.alloc.rate:                   760.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     513.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   3041245.015 ±(99.9%) 68020.975 ops/s [Average]
[info]   (min, avg, max) = (3011297.301, 3041245.015, 3053020.757), stdev = 17664.831
[info]   CI (99.9%): [2973224.040, 3109265.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   757.758 ±(99.9%) 16.932 MB/sec [Average]
[info]   (min, avg, max) = (750.299, 757.758, 760.689), stdev = 4.397
[info]   CI (99.9%): [740.826, 774.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   791.027 ±(99.9%) 695.417 MB/sec [Average]
[info]   (min, avg, max) = (656.761, 791.027, 995.921), stdev = 180.598
[info]   CI (99.9%): [95.610, 1486.444] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   408.996 ±(99.9%) 354.642 B/op [Average]
[info]   (min, avg, max) = (339.637, 408.996, 513.282), stdev = 92.099
[info]   CI (99.9%): [54.354, 763.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.019, 0.033), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 13.000), stdev = 4.637
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 38.24% complete, ETA 00:11:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78499.232 ops/s
[info] # Warmup Iteration   2: 174702.269 ops/s
[info] # Warmup Iteration   3: 184829.830 ops/s
[info] # Warmup Iteration   4: 184612.206 ops/s
[info] # Warmup Iteration   5: 182123.088 ops/s
[info] Iteration   1: 184186.004 ops/s
[info]                  ·gc.alloc.rate:                   1254.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11293.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 183312.352 ops/s
[info]                  ·gc.alloc.rate:                   1248.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8561.648 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.894 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 182909.441 ops/s
[info]                  ·gc.alloc.rate:                   1245.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11495.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.537 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 183820.448 ops/s
[info]                  ·gc.alloc.rate:                   1251.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11495.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.356 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 183810.300 ops/s
[info]                  ·gc.alloc.rate:                   1251.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              10712.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11541.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   183607.709 ±(99.9%) 1921.024 ops/s [Average]
[info]   (min, avg, max) = (182909.441, 183607.709, 184186.004), stdev = 498.884
[info]   CI (99.9%): [181686.685, 185528.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1250.159 ±(99.9%) 13.124 MB/sec [Average]
[info]   (min, avg, max) = (1245.375, 1250.159, 1254.132), stdev = 3.408
[info]   CI (99.9%): [1237.035, 1263.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10712.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10712.002, 10712.002, 10712.003), stdev = 0.001
[info]   CI (99.9%): [10712.002, 10712.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.580 ±(99.9%) 586.637 MB/sec [Average]
[info]   (min, avg, max) = (997.620, 1269.580, 1348.473), stdev = 152.348
[info]   CI (99.9%): [682.943, 1856.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10877.601 ±(99.9%) 4998.957 B/op [Average]
[info]   (min, avg, max) = (8561.648, 10877.601, 11541.962), stdev = 1298.213
[info]   CI (99.9%): [5878.644, 15876.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.500 ±(99.9%) 1.022 B/op [Average]
[info]   (min, avg, max) = (0.178, 0.500, 0.894), stdev = 0.265
[info]   CI (99.9%): [≈ 0, 1.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 11.000), stdev = 2.683
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 39.71% complete, ETA 00:11:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 224330.672 ops/s
[info] # Warmup Iteration   2: 455214.240 ops/s
[info] # Warmup Iteration   3: 455537.641 ops/s
[info] # Warmup Iteration   4: 454476.264 ops/s
[info] # Warmup Iteration   5: 460356.585 ops/s
[info] Iteration   1: 458636.130 ops/s
[info]                  ·gc.alloc.rate:                   1630.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5764.208 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 455588.867 ops/s
[info]                  ·gc.alloc.rate:                   1620.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.013 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5813.829 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 461082.799 ops/s
[info]                  ·gc.alloc.rate:                   1638.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4620.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 460150.753 ops/s
[info]                  ·gc.alloc.rate:                   1635.493 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.973 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5798.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 463448.010 ops/s
[info]                  ·gc.alloc.rate:                   1647.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.683 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5766.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   459781.312 ±(99.9%) 11253.348 ops/s [Average]
[info]   (min, avg, max) = (455588.867, 459781.312, 463448.010), stdev = 2922.459
[info]   CI (99.9%): [448527.964, 471034.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1634.505 ±(99.9%) 38.034 MB/sec [Average]
[info]   (min, avg, max) = (1620.721, 1634.505, 1647.254), stdev = 9.877
[info]   CI (99.9%): [1596.471, 1672.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1622.847 ±(99.9%) 579.186 MB/sec [Average]
[info]   (min, avg, max) = (1354.118, 1622.847, 1698.683), stdev = 150.413
[info]   CI (99.9%): [1043.660, 2202.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5552.793 ±(99.9%) 2008.376 B/op [Average]
[info]   (min, avg, max) = (4620.550, 5552.793, 5813.829), stdev = 521.569
[info]   CI (99.9%): [3544.417, 7561.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.454 B/op [Average]
[info]   (min, avg, max) = (0.071, 0.157, 0.287), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 14.000), stdev = 4.147
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 41.18% complete, ETA 00:10:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 408440.741 ops/s
[info] # Warmup Iteration   2: 834462.770 ops/s
[info] # Warmup Iteration   3: 869566.964 ops/s
[info] # Warmup Iteration   4: 870273.112 ops/s
[info] # Warmup Iteration   5: 879074.207 ops/s
[info] Iteration   1: 877286.424 ops/s
[info]                  ·gc.alloc.rate:                   1034.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1786.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 877418.844 ops/s
[info]                  ·gc.alloc.rate:                   1035.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1794.136 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.112 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 872359.093 ops/s
[info]                  ·gc.alloc.rate:                   1029.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1812.998 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 862814.630 ops/s
[info]                  ·gc.alloc.rate:                   1017.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1837.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 875410.278 ops/s
[info]                  ·gc.alloc.rate:                   1032.709 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1816.868 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   873057.854 ±(99.9%) 23410.273 ops/s [Average]
[info]   (min, avg, max) = (862814.630, 873057.854, 877418.844), stdev = 6079.574
[info]   CI (99.9%): [849647.581, 896468.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1029.959 ±(99.9%) 27.633 MB/sec [Average]
[info]   (min, avg, max) = (1017.872, 1029.959, 1035.109), stdev = 7.176
[info]   CI (99.9%): [1002.327, 1057.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.147 ±(99.9%) 22.885 MB/sec [Average]
[info]   (min, avg, max) = (995.963, 1004.147, 1010.935), stdev = 5.943
[info]   CI (99.9%): [981.262, 1027.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1809.588 ±(99.9%) 78.412 B/op [Average]
[info]   (min, avg, max) = (1786.046, 1809.588, 1837.891), stdev = 20.363
[info]   CI (99.9%): [1731.176, 1887.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.234 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.167), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.112 ±(99.9%) 0.419 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.112, 0.299), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.483
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 42.65% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2613680.847 ops/s
[info] # Warmup Iteration   2: 3061047.244 ops/s
[info] # Warmup Iteration   3: 3060183.539 ops/s
[info] # Warmup Iteration   4: 3106275.271 ops/s
[info] # Warmup Iteration   5: 3114163.200 ops/s
[info] Iteration   1: 3084145.158 ops/s
[info]                  ·gc.alloc.rate:                   768.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     500.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3100108.895 ops/s
[info]                  ·gc.alloc.rate:               772.441 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 333.289 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3097604.925 ops/s
[info]                  ·gc.alloc.rate:                   771.819 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     334.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3068546.211 ops/s
[info]                  ·gc.alloc.rate:                   764.576 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     509.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3081630.141 ops/s
[info]                  ·gc.alloc.rate:               767.817 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 339.206 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3086407.066 ±(99.9%) 49465.322 ops/s [Average]
[info]   (min, avg, max) = (3068546.211, 3086407.066, 3100108.895), stdev = 12845.987
[info]   CI (99.9%): [3036941.744, 3135872.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   769.023 ±(99.9%) 12.335 MB/sec [Average]
[info]   (min, avg, max) = (764.576, 769.023, 772.441), stdev = 3.203
[info]   CI (99.9%): [756.688, 781.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   791.028 ±(99.9%) 690.721 MB/sec [Average]
[info]   (min, avg, max) = (656.750, 791.028, 993.281), stdev = 179.378
[info]   CI (99.9%): [100.307, 1481.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   403.446 ±(99.9%) 357.254 B/op [Average]
[info]   (min, avg, max) = (333.289, 403.446, 509.258), stdev = 92.778
[info]   CI (99.9%): [46.192, 760.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 5.000), stdev = 1.304
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 44.12% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 153314.197 ops/s
[info] # Warmup Iteration   2: 242990.849 ops/s
[info] # Warmup Iteration   3: 253869.853 ops/s
[info] # Warmup Iteration   4: 253838.796 ops/s
[info] # Warmup Iteration   5: 257368.490 ops/s
[info] Iteration   1: 251590.120 ops/s
[info]                  ·gc.alloc.rate:                   1308.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6215.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 254563.951 ops/s
[info]                  ·gc.alloc.rate:                   1324.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8236.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.644 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 252462.829 ops/s
[info]                  ·gc.alloc.rate:                   1313.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8349.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 252999.362 ops/s
[info]                  ·gc.alloc.rate:                   1316.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8370.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 252499.613 ops/s
[info]                  ·gc.alloc.rate:                   1313.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8412.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   252823.175 ±(99.9%) 4225.329 ops/s [Average]
[info]   (min, avg, max) = (251590.120, 252823.175, 254563.951), stdev = 1097.304
[info]   CI (99.9%): [248597.846, 257048.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1315.166 ±(99.9%) 22.054 MB/sec [Average]
[info]   (min, avg, max) = (1308.738, 1315.166, 1324.259), stdev = 5.727
[info]   CI (99.9%): [1293.112, 1337.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.001, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.551 ±(99.9%) 600.301 MB/sec [Average]
[info]   (min, avg, max) = (993.924, 1272.551, 1350.167), stdev = 155.896
[info]   CI (99.9%): [672.251, 1872.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7916.905 ±(99.9%) 3671.247 B/op [Average]
[info]   (min, avg, max) = (6215.355, 7916.905, 8412.359), stdev = 953.411
[info]   CI (99.9%): [4245.659, 11588.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.362 ±(99.9%) 0.733 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.362, 0.644), stdev = 0.190
[info]   CI (99.9%): [≈ 0, 1.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 9.000), stdev = 1.483
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 45.59% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139474.258 ops/s
[info] # Warmup Iteration   2: 609308.565 ops/s
[info] # Warmup Iteration   3: 614537.200 ops/s
[info] # Warmup Iteration   4: 615711.663 ops/s
[info] # Warmup Iteration   5: 610160.701 ops/s
[info] Iteration   1: 608971.477 ops/s
[info]                  ·gc.alloc.rate:               789.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1699.252 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 611184.326 ops/s
[info]                  ·gc.alloc.rate:                   792.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2553.377 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.322 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 616373.831 ops/s
[info]                  ·gc.alloc.rate:               799.264 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1695.905 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 612877.020 ops/s
[info]                  ·gc.alloc.rate:                   794.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2566.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 612085.433 ops/s
[info]                  ·gc.alloc.rate:                   793.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.052 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1719.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   612298.417 ±(99.9%) 10421.467 ops/s [Average]
[info]   (min, avg, max) = (608971.477, 612298.417, 616373.831), stdev = 2706.422
[info]   CI (99.9%): [601876.951, 622719.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   793.953 ±(99.9%) 13.566 MB/sec [Average]
[info]   (min, avg, max) = (789.630, 793.953, 799.264), stdev = 3.523
[info]   CI (99.9%): [780.387, 807.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   796.630 ±(99.9%) 700.922 MB/sec [Average]
[info]   (min, avg, max) = (657.735, 796.630, 999.972), stdev = 182.027
[info]   CI (99.9%): [95.709, 1497.552] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2047.032 ±(99.9%) 1804.097 B/op [Average]
[info]   (min, avg, max) = (1695.905, 2047.032, 2566.911), stdev = 468.518
[info]   CI (99.9%): [242.935, 3851.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.096 ±(99.9%) 0.514 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.096, 0.322), stdev = 0.133
[info]   CI (99.9%): [≈ 0, 0.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 6.000), stdev = 1.924
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 47.06% complete, ETA 00:09:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2022195.721 ops/s
[info] # Warmup Iteration   2: 2196141.874 ops/s
[info] # Warmup Iteration   3: 2191753.824 ops/s
[info] # Warmup Iteration   4: 2182527.792 ops/s
[info] # Warmup Iteration   5: 2215113.214 ops/s
[info] Iteration   1: 2213528.578 ops/s
[info]                  ·gc.alloc.rate:                   1508.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1667.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1185.326 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2213044.211 ops/s
[info]                  ·gc.alloc.rate:                   1507.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     954.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2200553.436 ops/s
[info]                  ·gc.alloc.rate:                   1499.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1204.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2253125.860 ops/s
[info]                  ·gc.alloc.rate:                   1535.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     944.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2224214.085 ops/s
[info]                  ·gc.alloc.rate:                   1515.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.650 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1198.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2220893.234 ±(99.9%) 76518.479 ops/s [Average]
[info]   (min, avg, max) = (2200553.436, 2220893.234, 2253125.860), stdev = 19871.606
[info]   CI (99.9%): [2144374.755, 2297411.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1513.264 ±(99.9%) 52.248 MB/sec [Average]
[info]   (min, avg, max) = (1499.375, 1513.264, 1535.275), stdev = 13.569
[info]   CI (99.9%): [1461.016, 1565.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1548.521 ±(99.9%) 707.787 MB/sec [Average]
[info]   (min, avg, max) = (1342.132, 1548.521, 1694.650), stdev = 183.810
[info]   CI (99.9%): [840.734, 2256.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1097.545 ±(99.9%) 521.705 B/op [Average]
[info]   (min, avg, max) = (944.621, 1097.545, 1204.942), stdev = 135.485
[info]   CI (99.9%): [575.840, 1619.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.047 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.047, 0.074), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 48.53% complete, ETA 00:09:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128954.839 ops/s
[info] # Warmup Iteration   2: 213039.464 ops/s
[info] # Warmup Iteration   3: 221620.925 ops/s
[info] # Warmup Iteration   4: 214006.466 ops/s
[info] # Warmup Iteration   5: 217936.918 ops/s
[info] Iteration   1: 217280.497 ops/s
[info]                  ·gc.alloc.rate:                   1144.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9549.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.452 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 218591.271 ops/s
[info]                  ·gc.alloc.rate:                   1151.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7163.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.450 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 217948.573 ops/s
[info]                  ·gc.alloc.rate:                   1148.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9635.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 220320.828 ops/s
[info]                  ·gc.alloc.rate:               1160.576 MB/sec
[info]                  ·gc.alloc.rate.norm:          8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7180.984 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 220805.834 ops/s
[info]                  ·gc.alloc.rate:                   1163.207 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7188.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   218989.401 ±(99.9%) 5850.670 ops/s [Average]
[info]   (min, avg, max) = (217280.497, 218989.401, 220805.834), stdev = 1519.400
[info]   CI (99.9%): [213138.731, 224840.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1153.654 ±(99.9%) 30.643 MB/sec [Average]
[info]   (min, avg, max) = (1144.681, 1153.654, 1163.207), stdev = 7.958
[info]   CI (99.9%): [1123.012, 1184.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.719 ±(99.9%) 683.205 MB/sec [Average]
[info]   (min, avg, max) = (995.298, 1132.719, 1334.944), stdev = 177.426
[info]   CI (99.9%): [449.514, 1815.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8143.566 ±(99.9%) 5094.199 B/op [Average]
[info]   (min, avg, max) = (7163.335, 8143.566, 9635.587), stdev = 1322.947
[info]   CI (99.9%): [3049.368, 13237.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.360 ±(99.9%) 0.879 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.360, 0.601), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 10.000), stdev = 3.050
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce
[info] # Run progress: 50.00% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157032.185 ops/s
[info] # Warmup Iteration   2: 427512.530 ops/s
[info] # Warmup Iteration   3: 459125.975 ops/s
[info] # Warmup Iteration   4: 454241.106 ops/s
[info] # Warmup Iteration   5: 454204.462 ops/s
[info] Iteration   1: 458163.419 ops/s
[info]                  ·gc.alloc.rate:                   1365.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4594.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 458514.778 ops/s
[info]                  ·gc.alloc.rate:                   1366.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4614.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 455133.642 ops/s
[info]                  ·gc.alloc.rate:                   1356.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4664.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.216 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 454306.520 ops/s
[info]                  ·gc.alloc.rate:                   1353.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4684.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 456272.081 ops/s
[info]                  ·gc.alloc.rate:                   1359.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4676.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce":
[info]   456478.088 ±(99.9%) 7088.252 ops/s [Average]
[info]   (min, avg, max) = (454306.520, 456478.088, 458514.778), stdev = 1840.797
[info]   CI (99.9%): [449389.836, 463566.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1360.205 ±(99.9%) 21.169 MB/sec [Average]
[info]   (min, avg, max) = (1353.746, 1360.205, 1366.275), stdev = 5.497
[info]   CI (99.9%): [1339.036, 1381.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4688.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4688.001, 4688.001, 4688.001), stdev = 0.001
[info]   CI (99.9%): [4688.001, 4688.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1348.266 ±(99.9%) 27.111 MB/sec [Average]
[info]   (min, avg, max) = (1338.160, 1348.266, 1356.116), stdev = 7.041
[info]   CI (99.9%): [1321.155, 1375.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4646.970 ±(99.9%) 153.777 B/op [Average]
[info]   (min, avg, max) = (4594.943, 4646.970, 4684.852), stdev = 39.935
[info]   CI (99.9%): [4493.193, 4800.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.144 ±(99.9%) 0.196 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.144, 0.216), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 10.000), stdev = 2.881
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 51.47% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 617634.303 ops/s
[info] # Warmup Iteration   2: 953926.810 ops/s
[info] # Warmup Iteration   3: 952823.008 ops/s
[info] # Warmup Iteration   4: 955201.310 ops/s
[info] # Warmup Iteration   5: 962549.892 ops/s
[info] Iteration   1: 961674.666 ops/s
[info]                  ·gc.alloc.rate:                   738.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1078.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 963944.555 ops/s
[info]                  ·gc.alloc.rate:                   740.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1622.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 964256.729 ops/s
[info]                  ·gc.alloc.rate:                   740.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.745 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1086.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 959828.500 ops/s
[info]                  ·gc.alloc.rate:               737.002 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1094.520 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 966454.395 ops/s
[info]                  ·gc.alloc.rate:                   742.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1089.712 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   963231.769 ±(99.9%) 9807.950 ops/s [Average]
[info]   (min, avg, max) = (959828.500, 963231.769, 966454.395), stdev = 2547.093
[info]   CI (99.9%): [953423.819, 973039.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   739.592 ±(99.9%) 7.480 MB/sec [Average]
[info]   (min, avg, max) = (737.002, 739.592, 742.042), stdev = 1.942
[info]   CI (99.9%): [732.112, 747.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.000), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   731.186 ±(99.9%) 565.853 MB/sec [Average]
[info]   (min, avg, max) = (659.074, 731.186, 993.965), stdev = 146.950
[info]   CI (99.9%): [165.333, 1297.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1194.192 ±(99.9%) 921.732 B/op [Average]
[info]   (min, avg, max) = (1078.244, 1194.192, 1622.260), stdev = 239.371
[info]   CI (99.9%): [272.460, 2115.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.198 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.136), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 8.000), stdev = 2.775
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 52.94% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2838362.712 ops/s
[info] # Warmup Iteration   2: 3017002.050 ops/s
[info] # Warmup Iteration   3: 2925198.530 ops/s
[info] # Warmup Iteration   4: 2978076.980 ops/s
[info] # Warmup Iteration   5: 2992954.715 ops/s
[info] Iteration   1: 3185315.185 ops/s
[info]                  ·gc.alloc.rate:                   97.183 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     126.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.829 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.879 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3210892.772 ops/s
[info]                  ·gc.alloc.rate:      97.966 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3126238.061 ops/s
[info]                  ·gc.alloc.rate:               95.381 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 128.784 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3022945.629 ops/s
[info]                  ·gc.alloc.rate:      92.230 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3015426.955 ops/s
[info]                  ·gc.alloc.rate:      92.001 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3112163.720 ±(99.9%) 347703.335 ops/s [Average]
[info]   (min, avg, max) = (3015426.955, 3112163.720, 3210892.772), stdev = 90297.452
[info]   CI (99.9%): [2764460.385, 3459867.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   94.952 ±(99.9%) 10.610 MB/sec [Average]
[info]   (min, avg, max) = (92.001, 94.952, 97.966), stdev = 2.755
[info]   CI (99.9%): [84.343, 105.562] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.361 ±(99.9%) 539.718 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.361, 255.905), stdev = 140.163
[info]   CI (99.9%): [≈ 0, 642.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   51.035 ±(99.9%) 269.113 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 51.035, 128.784), stdev = 69.888
[info]   CI (99.9%): [≈ 0, 320.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1.166 ±(99.9%) 10.037 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.166, 5.829), stdev = 2.607
[info]   CI (99.9%): [≈ 0, 11.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.576 ±(99.9%) 4.958 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.576, 2.879), stdev = 1.287
[info]   CI (99.9%): [≈ 0, 5.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 54.41% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87602.809 ops/s
[info] # Warmup Iteration   2: 160041.796 ops/s
[info] # Warmup Iteration   3: 164416.532 ops/s
[info] # Warmup Iteration   4: 166571.130 ops/s
[info] # Warmup Iteration   5: 165051.409 ops/s
[info] Iteration   1: 165919.101 ops/s
[info]                  ·gc.alloc.rate:                   1127.171 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9380.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 164579.029 ops/s
[info]                  ·gc.alloc.rate:                   1118.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9501.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 164635.759 ops/s
[info]                  ·gc.alloc.rate:                   1118.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.553 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12736.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 163646.614 ops/s
[info]                  ·gc.alloc.rate:                   1111.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9651.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 163101.584 ops/s
[info]                  ·gc.alloc.rate:               1108.054 MB/sec
[info]                  ·gc.alloc.rate.norm:          10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9725.762 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   164376.417 ±(99.9%) 4149.948 ops/s [Average]
[info]   (min, avg, max) = (163101.584, 164376.417, 165919.101), stdev = 1077.728
[info]   CI (99.9%): [160226.469, 168526.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1116.662 ±(99.9%) 28.106 MB/sec [Average]
[info]   (min, avg, max) = (1108.054, 1116.662, 1127.171), stdev = 7.299
[info]   CI (99.9%): [1088.555, 1144.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10688.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10688.003, 10688.003, 10688.003), stdev = 0.001
[info]   CI (99.9%): [10688.003, 10688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1065.601 ±(99.9%) 575.379 MB/sec [Average]
[info]   (min, avg, max) = (989.275, 1065.601, 1332.553), stdev = 149.424
[info]   CI (99.9%): [490.222, 1640.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10199.068 ±(99.9%) 5485.841 B/op [Average]
[info]   (min, avg, max) = (9380.453, 10199.068, 12736.334), stdev = 1424.656
[info]   CI (99.9%): [4713.226, 15684.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.477 ±(99.9%) 1.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.477, 0.601), stdev = 0.267
[info]   CI (99.9%): [≈ 0, 1.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 11.000), stdev = 4.037
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 55.88% complete, ETA 00:08:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 851601.377 ops/s
[info] # Warmup Iteration   2: 1274263.701 ops/s
[info] # Warmup Iteration   3: 1303683.093 ops/s
[info] # Warmup Iteration   4: 1310606.617 ops/s
[info] # Warmup Iteration   5: 1303977.490 ops/s
[info] Iteration   1: 1312213.346 ops/s
[info]                  ·gc.alloc.rate:                   1467.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2007.049 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1284986.315 ops/s
[info]                  ·gc.alloc.rate:                   1437.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1648.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 1305497.525 ops/s
[info]                  ·gc.alloc.rate:                   1460.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1628.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1293783.726 ops/s
[info]                  ·gc.alloc.rate:                   1447.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.992 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2058.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Iteration   5: 1291385.687 ops/s
[info]                  ·gc.alloc.rate:                   1444.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1652.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1297573.320 ±(99.9%) 42540.637 ops/s [Average]
[info]   (min, avg, max) = (1284986.315, 1297573.320, 1312213.346), stdev = 11047.668
[info]   CI (99.9%): [1255032.683, 1340113.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1451.598 ±(99.9%) 47.567 MB/sec [Average]
[info]   (min, avg, max) = (1437.571, 1451.598, 1467.999), stdev = 12.353
[info]   CI (99.9%): [1404.032, 1499.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.233 ±(99.9%) 701.165 MB/sec [Average]
[info]   (min, avg, max) = (1346.228, 1484.233, 1692.992), stdev = 182.090
[info]   CI (99.9%): [783.068, 2185.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1799.027 ±(99.9%) 825.792 B/op [Average]
[info]   (min, avg, max) = (1628.225, 1799.027, 2058.704), stdev = 214.455
[info]   CI (99.9%): [973.235, 2624.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.061, 0.076), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   64.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 12.800, 21.000), stdev = 5.891
[info]   CI (99.9%): [64.000, 64.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 57.35% complete, ETA 00:07:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2535699.292 ops/s
[info] # Warmup Iteration   2: 3721167.856 ops/s
[info] # Warmup Iteration   3: 3826542.209 ops/s
[info] # Warmup Iteration   4: 3851665.263 ops/s
[info] # Warmup Iteration   5: 3940216.101 ops/s
[info] Iteration   1: 3947866.880 ops/s
[info]                  ·gc.alloc.rate:                   1084.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3942158.926 ops/s
[info]                  ·gc.alloc.rate:                   1082.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3958236.543 ops/s
[info]                  ·gc.alloc.rate:                   1086.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.129 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     532.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3903877.528 ops/s
[info]                  ·gc.alloc.rate:               1071.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 406.205 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 3922852.705 ops/s
[info]                  ·gc.alloc.rate:                   1077.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     405.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3934998.517 ±(99.9%) 83322.382 ops/s [Average]
[info]   (min, avg, max) = (3903877.528, 3934998.517, 3958236.543), stdev = 21638.558
[info]   CI (99.9%): [3851676.134, 4018320.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1080.494 ±(99.9%) 22.927 MB/sec [Average]
[info]   (min, avg, max) = (1071.930, 1080.494, 1086.869), stdev = 5.954
[info]   CI (99.9%): [1057.567, 1103.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.240 ±(99.9%) 579.438 MB/sec [Average]
[info]   (min, avg, max) = (993.282, 1070.240, 1339.129), stdev = 150.478
[info]   CI (99.9%): [490.802, 1649.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   427.761 ±(99.9%) 225.593 B/op [Average]
[info]   (min, avg, max) = (395.831, 427.761, 532.266), stdev = 58.586
[info]   CI (99.9%): [202.168, 653.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 10.000), stdev = 3.130
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 58.82% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14710583.174 ops/s
[info] # Warmup Iteration   2: 15791687.445 ops/s
[info] # Warmup Iteration   3: 15949658.788 ops/s
[info] # Warmup Iteration   4: 15971658.757 ops/s
[info] # Warmup Iteration   5: 16055764.489 ops/s
[info] Iteration   1: 16140586.248 ops/s
[info]                  ·gc.alloc.rate:                   492.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 16241806.870 ops/s
[info]                  ·gc.alloc.rate:               495.543 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.597 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 15855542.499 ops/s
[info]                  ·gc.alloc.rate:                   483.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 15981294.762 ops/s
[info]                  ·gc.alloc.rate:               487.609 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.179 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 16048765.156 ops/s
[info]                  ·gc.alloc.rate:                   489.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   16053599.107 ±(99.9%) 569409.307 ops/s [Average]
[info]   (min, avg, max) = (15855542.499, 16053599.107, 16241806.870), stdev = 147873.789
[info]   CI (99.9%): [15484189.800, 16623008.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   489.805 ±(99.9%) 17.341 MB/sec [Average]
[info]   (min, avg, max) = (483.773, 489.805, 495.543), stdev = 4.503
[info]   CI (99.9%): [472.464, 507.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.745 ±(99.9%) 689.685 MB/sec [Average]
[info]   (min, avg, max) = (326.202, 522.745, 655.774), stdev = 179.109
[info]   CI (99.9%): [≈ 0, 1212.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   51.278 ±(99.9%) 68.185 B/op [Average]
[info]   (min, avg, max) = (31.597, 51.278, 64.803), stdev = 17.707
[info]   CI (99.9%): [≈ 0, 119.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.008), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 9.000), stdev = 3.962
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 60.29% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 554550.488 ops/s
[info] # Warmup Iteration   2: 792560.868 ops/s
[info] # Warmup Iteration   3: 805093.400 ops/s
[info] # Warmup Iteration   4: 806822.525 ops/s
[info] # Warmup Iteration   5: 809098.803 ops/s
[info] Iteration   1: 808752.680 ops/s
[info]                  ·gc.alloc.rate:                   1213.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.161 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2571.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 801016.351 ops/s
[info]                  ·gc.alloc.rate:                   1201.735 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2613.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 792876.105 ops/s
[info]                  ·gc.alloc.rate:                   1189.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1991.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.207 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 809826.520 ops/s
[info]                  ·gc.alloc.rate:                   1214.793 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2609.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 809274.260 ops/s
[info]                  ·gc.alloc.rate:                   1213.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1965.295 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   804349.183 ±(99.9%) 28321.720 ops/s [Average]
[info]   (min, avg, max) = (792876.105, 804349.183, 809826.520), stdev = 7355.061
[info]   CI (99.9%): [776027.463, 832670.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1206.604 ±(99.9%) 42.415 MB/sec [Average]
[info]   (min, avg, max) = (1189.360, 1206.604, 1214.793), stdev = 11.015
[info]   CI (99.9%): [1164.189, 1249.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.001, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1202.210 ±(99.9%) 686.036 MB/sec [Average]
[info]   (min, avg, max) = (1003.571, 1202.210, 1343.455), stdev = 178.161
[info]   CI (99.9%): [516.174, 1888.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2350.468 ±(99.9%) 1310.144 B/op [Average]
[info]   (min, avg, max) = (1965.295, 2350.468, 2613.764), stdev = 340.240
[info]   CI (99.9%): [1040.324, 3660.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.311 B/op [Average]
[info]   (min, avg, max) = (0.040, 0.098, 0.207), stdev = 0.081
[info]   CI (99.9%): [≈ 0, 0.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.194
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 61.76% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372555.165 ops/s
[info] # Warmup Iteration   2: 711579.810 ops/s
[info] # Warmup Iteration   3: 716721.890 ops/s
[info] # Warmup Iteration   4: 717037.697 ops/s
[info] # Warmup Iteration   5: 715758.093 ops/s
[info] Iteration   1: 719112.602 ops/s
[info]                  ·gc.alloc.rate:                   1736.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4421.237 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.228 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 714541.951 ops/s
[info]                  ·gc.alloc.rate:                   1725.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3721.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 718256.212 ops/s
[info]                  ·gc.alloc.rate:                   1734.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.709 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3712.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 712920.924 ops/s
[info]                  ·gc.alloc.rate:                   1721.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3747.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 722057.063 ops/s
[info]                  ·gc.alloc.rate:                   1744.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3702.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   717377.751 ±(99.9%) 14093.361 ops/s [Average]
[info]   (min, avg, max) = (712920.924, 717377.751, 722057.063), stdev = 3660.001
[info]   CI (99.9%): [703284.390, 731471.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1732.748 ±(99.9%) 33.950 MB/sec [Average]
[info]   (min, avg, max) = (1721.968, 1732.748, 1744.023), stdev = 8.817
[info]   CI (99.9%): [1698.799, 1766.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1760.667 ±(99.9%) 560.281 MB/sec [Average]
[info]   (min, avg, max) = (1690.385, 1760.667, 2020.877), stdev = 145.503
[info]   CI (99.9%): [1200.385, 2320.948] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3860.949 ±(99.9%) 1207.764 B/op [Average]
[info]   (min, avg, max) = (3702.568, 3860.949, 4421.237), stdev = 313.652
[info]   CI (99.9%): [2653.185, 5068.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.104), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.137 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (0.091, 0.137, 0.228), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.351] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.000, 14.000), stdev = 3.742
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 63.24% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1520460.704 ops/s
[info] # Warmup Iteration   2: 2564687.255 ops/s
[info] # Warmup Iteration   3: 2595949.671 ops/s
[info] # Warmup Iteration   4: 2608424.097 ops/s
[info] # Warmup Iteration   5: 2558250.760 ops/s
[info] Iteration   1: 2581613.939 ops/s
[info]                  ·gc.alloc.rate:                   1496.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.839 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     816.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2546478.355 ops/s
[info]                  ·gc.alloc.rate:                   1476.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1040.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2578479.512 ops/s
[info]                  ·gc.alloc.rate:                   1494.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2607025.879 ops/s
[info]                  ·gc.alloc.rate:                   1511.277 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     817.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2588470.309 ops/s
[info]                  ·gc.alloc.rate:                   1500.425 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1031.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   2580413.599 ±(99.9%) 84580.740 ops/s [Average]
[info]   (min, avg, max) = (2546478.355, 2580413.599, 2607025.879), stdev = 21965.349
[info]   CI (99.9%): [2495832.859, 2664994.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1495.823 ±(99.9%) 48.941 MB/sec [Average]
[info]   (min, avg, max) = (1476.217, 1495.823, 1511.277), stdev = 12.710
[info]   CI (99.9%): [1446.882, 1544.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.352 ±(99.9%) 719.953 MB/sec [Average]
[info]   (min, avg, max) = (1339.839, 1485.352, 1696.614), stdev = 186.970
[info]   CI (99.9%): [765.399, 2205.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   906.069 ±(99.9%) 455.738 B/op [Average]
[info]   (min, avg, max) = (816.519, 906.069, 1040.000), stdev = 118.354
[info]   CI (99.9%): [450.331, 1361.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.018, 0.026), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.194
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 64.71% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4304571.447 ops/s
[info] # Warmup Iteration   2: 4783730.136 ops/s
[info] # Warmup Iteration   3: 4848389.422 ops/s
[info] # Warmup Iteration   4: 4778498.442 ops/s
[info] # Warmup Iteration   5: 4751765.660 ops/s
[info] Iteration   1: 4816872.322 ops/s
[info]                  ·gc.alloc.rate:                   1322.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     434.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4827221.973 ops/s
[info]                  ·gc.alloc.rate:                   1325.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.775 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 4853756.890 ops/s
[info]                  ·gc.alloc.rate:                   1332.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4804499.092 ops/s
[info]                  ·gc.alloc.rate:                   1319.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 4799739.665 ops/s
[info]                  ·gc.alloc.rate:               1317.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1014.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 332.462 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4820417.988 ±(99.9%) 82841.497 ops/s [Average]
[info]   (min, avg, max) = (4799739.665, 4820417.988, 4853756.890), stdev = 21513.674
[info]   CI (99.9%): [4737576.491, 4903259.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1323.632 ±(99.9%) 22.817 MB/sec [Average]
[info]   (min, avg, max) = (1317.933, 1323.632, 1332.795), stdev = 5.926
[info]   CI (99.9%): [1300.815, 1346.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1274.624 ±(99.9%) 561.133 MB/sec [Average]
[info]   (min, avg, max) = (1014.264, 1274.624, 1348.818), stdev = 145.724
[info]   CI (99.9%): [713.491, 1835.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   415.920 ±(99.9%) 179.994 B/op [Average]
[info]   (min, avg, max) = (332.462, 415.920, 441.688), stdev = 46.744
[info]   CI (99.9%): [235.926, 595.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.034), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.608
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 66.18% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 190902.949 ops/s
[info] # Warmup Iteration   2: 325518.225 ops/s
[info] # Warmup Iteration   3: 333557.971 ops/s
[info] # Warmup Iteration   4: 331933.512 ops/s
[info] # Warmup Iteration   5: 328833.044 ops/s
[info] Iteration   1: 329650.086 ops/s
[info]                  ·gc.alloc.rate:                   1176.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4724.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 333324.754 ops/s
[info]                  ·gc.alloc.rate:                   1189.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.525 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6270.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 332246.185 ops/s
[info]                  ·gc.alloc.rate:                   1185.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4743.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.296 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 333057.557 ops/s
[info]                  ·gc.alloc.rate:                   1188.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6336.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 327564.956 ops/s
[info]                  ·gc.alloc.rate:                   1169.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.334 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4852.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   331168.708 ±(99.9%) 9562.956 ops/s [Average]
[info]   (min, avg, max) = (327564.956, 331168.708, 333324.754), stdev = 2483.469
[info]   CI (99.9%): [321605.752, 340731.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1182.153 ±(99.9%) 34.058 MB/sec [Average]
[info]   (min, avg, max) = (1169.340, 1182.153, 1189.859), stdev = 8.845
[info]   CI (99.9%): [1148.095, 1216.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1134.371 ±(99.9%) 705.969 MB/sec [Average]
[info]   (min, avg, max) = (989.937, 1134.371, 1341.452), stdev = 183.338
[info]   CI (99.9%): [428.401, 1840.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5385.413 ±(99.9%) 3234.113 B/op [Average]
[info]   (min, avg, max) = (4724.547, 5385.413, 6336.615), stdev = 839.889
[info]   CI (99.9%): [2151.300, 8619.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.217 ±(99.9%) 0.492 B/op [Average]
[info]   (min, avg, max) = (0.099, 0.217, 0.393), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 14.000), stdev = 3.362
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 67.65% complete, ETA 00:05:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1858829.019 ops/s
[info] # Warmup Iteration   2: 2738744.861 ops/s
[info] # Warmup Iteration   3: 2718154.207 ops/s
[info] # Warmup Iteration   4: 2690409.687 ops/s
[info] # Warmup Iteration   5: 2702970.495 ops/s
[info] Iteration   1: 2685200.197 ops/s
[info]                  ·gc.alloc.rate:                   1146.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     778.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2686873.057 ops/s
[info]                  ·gc.alloc.rate:                   1147.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     587.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2669538.724 ops/s
[info]                  ·gc.alloc.rate:                   1140.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     791.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2687541.391 ops/s
[info]                  ·gc.alloc.rate:                   1147.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     591.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2627326.265 ops/s
[info]                  ·gc.alloc.rate:                   1122.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     606.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2671295.927 ±(99.9%) 98855.670 ops/s [Average]
[info]   (min, avg, max) = (2627326.265, 2671295.927, 2687541.391), stdev = 25672.504
[info]   CI (99.9%): [2572440.257, 2770151.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1141.014 ±(99.9%) 42.279 MB/sec [Average]
[info]   (min, avg, max) = (1122.219, 1141.014, 1147.965), stdev = 10.980
[info]   CI (99.9%): [1098.735, 1183.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1140.012 ±(99.9%) 690.293 MB/sec [Average]
[info]   (min, avg, max) = (1003.290, 1140.012, 1343.066), stdev = 179.267
[info]   CI (99.9%): [449.719, 1830.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   671.297 ±(99.9%) 401.848 B/op [Average]
[info]   (min, avg, max) = (587.449, 671.297, 791.545), stdev = 104.359
[info]   CI (99.9%): [269.449, 1073.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.022, 0.037), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 11.000), stdev = 3.873
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 69.12% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3887957.926 ops/s
[info] # Warmup Iteration   2: 4156982.723 ops/s
[info] # Warmup Iteration   3: 4211728.916 ops/s
[info] # Warmup Iteration   4: 4240222.528 ops/s
[info] # Warmup Iteration   5: 4151696.818 ops/s
[info] Iteration   1: 4228606.930 ops/s
[info]                  ·gc.alloc.rate:               774.086 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 243.594 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4236940.608 ops/s
[info]                  ·gc.alloc.rate:               775.603 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 243.856 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4178642.599 ops/s
[info]                  ·gc.alloc.rate:                   764.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4162797.734 ops/s
[info]                  ·gc.alloc.rate:                   762.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4168507.152 ops/s
[info]                  ·gc.alloc.rate:                   763.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   4195099.004 ±(99.9%) 134701.184 ops/s [Average]
[info]   (min, avg, max) = (4162797.734, 4195099.004, 4236940.608), stdev = 34981.470
[info]   CI (99.9%): [4060397.820, 4329800.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   767.948 ±(99.9%) 24.654 MB/sec [Average]
[info]   (min, avg, max) = (762.039, 767.948, 775.603), stdev = 6.403
[info]   CI (99.9%): [743.294, 792.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   725.510 ±(99.9%) 567.990 MB/sec [Average]
[info]   (min, avg, max) = (654.731, 725.510, 989.279), stdev = 147.505
[info]   CI (99.9%): [157.519, 1293.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   272.205 ±(99.9%) 216.225 B/op [Average]
[info]   (min, avg, max) = (243.594, 272.205, 372.468), stdev = 56.153
[info]   CI (99.9%): [55.979, 488.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 9.000), stdev = 3.209
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 70.59% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 294250.793 ops/s
[info] # Warmup Iteration   2: 486157.425 ops/s
[info] # Warmup Iteration   3: 486349.051 ops/s
[info] # Warmup Iteration   4: 488520.747 ops/s
[info] # Warmup Iteration   5: 491090.567 ops/s
[info] Iteration   1: 493066.873 ops/s
[info]                  ·gc.alloc.rate:                   1459.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5301.906 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 488310.194 ops/s
[info]                  ·gc.alloc.rate:                   1445.195 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4313.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 489836.916 ops/s
[info]                  ·gc.alloc.rate:                   1449.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.799 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4319.347 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 478213.310 ops/s
[info]                  ·gc.alloc.rate:                   1415.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5551.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 472931.800 ops/s
[info]                  ·gc.alloc.rate:                   1399.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4503.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   484471.819 ±(99.9%) 32771.972 ops/s [Average]
[info]   (min, avg, max) = (472931.800, 484471.819, 493066.873), stdev = 8510.777
[info]   CI (99.9%): [451699.846, 517243.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1433.778 ±(99.9%) 97.019 MB/sec [Average]
[info]   (min, avg, max) = (1399.591, 1433.778, 1459.215), stdev = 25.196
[info]   CI (99.9%): [1336.759, 1530.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.282 ±(99.9%) 694.422 MB/sec [Average]
[info]   (min, avg, max) = (1338.828, 1477.282, 1687.348), stdev = 180.339
[info]   CI (99.9%): [782.859, 2171.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4797.855 ±(99.9%) 2254.944 B/op [Average]
[info]   (min, avg, max) = (4313.316, 4797.855, 5551.072), stdev = 585.602
[info]   CI (99.9%): [2542.911, 7052.799] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.175 ±(99.9%) 0.132 B/op [Average]
[info]   (min, avg, max) = (0.137, 0.175, 0.201), stdev = 0.034
[info]   CI (99.9%): [0.043, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 12.000), stdev = 3.194
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 72.06% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157623.785 ops/s
[info] # Warmup Iteration   2: 1016618.355 ops/s
[info] # Warmup Iteration   3: 1025666.843 ops/s
[info] # Warmup Iteration   4: 1019056.721 ops/s
[info] # Warmup Iteration   5: 1035552.513 ops/s
[info] Iteration   1: 1024280.849 ops/s
[info]                  ·gc.alloc.rate:                   1265.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2048.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1014161.820 ops/s
[info]                  ·gc.alloc.rate:                   1253.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1559.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1025000.409 ops/s
[info]                  ·gc.alloc.rate:                   1266.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2064.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1027063.997 ops/s
[info]                  ·gc.alloc.rate:                   1269.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2067.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1033547.494 ops/s
[info]                  ·gc.alloc.rate:                   1277.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2060.256 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   1024810.914 ±(99.9%) 26894.225 ops/s [Average]
[info]   (min, avg, max) = (1014161.820, 1024810.914, 1033547.494), stdev = 6984.345
[info]   CI (99.9%): [997916.689, 1051705.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1266.265 ±(99.9%) 33.330 MB/sec [Average]
[info]   (min, avg, max) = (1253.066, 1266.265, 1277.073), stdev = 8.656
[info]   CI (99.9%): [1232.935, 1299.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1277.333 ±(99.9%) 586.476 MB/sec [Average]
[info]   (min, avg, max) = (1005.216, 1277.333, 1353.445), stdev = 152.306
[info]   CI (99.9%): [690.857, 1863.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1959.944 ±(99.9%) 862.479 B/op [Average]
[info]   (min, avg, max) = (1559.487, 1959.944, 2067.641), stdev = 223.983
[info]   CI (99.9%): [1097.466, 2822.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.038, 0.065), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 13.000), stdev = 3.782
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 73.53% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2135567.481 ops/s
[info] # Warmup Iteration   2: 2390937.884 ops/s
[info] # Warmup Iteration   3: 2408823.066 ops/s
[info] # Warmup Iteration   4: 2366517.877 ops/s
[info] # Warmup Iteration   5: 2406934.903 ops/s
[info] Iteration   1: 2412952.343 ops/s
[info]                  ·gc.alloc.rate:                   466.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2373872.068 ops/s
[info]                  ·gc.alloc.rate:                   458.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2414976.691 ops/s
[info]                  ·gc.alloc.rate:               466.663 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.516 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2413800.614 ops/s
[info]                  ·gc.alloc.rate:                   466.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     426.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2416002.218 ops/s
[info]                  ·gc.alloc.rate:               466.855 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 213.511 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2406320.787 ±(99.9%) 69990.140 ops/s [Average]
[info]   (min, avg, max) = (2373872.068, 2406320.787, 2416002.218), stdev = 18176.217
[info]   CI (99.9%): [2336330.646, 2476310.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   464.986 ±(99.9%) 13.534 MB/sec [Average]
[info]   (min, avg, max) = (458.711, 464.986, 466.855), stdev = 3.515
[info]   CI (99.9%): [451.452, 478.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.181 ±(99.9%) 688.154 MB/sec [Average]
[info]   (min, avg, max) = (325.892, 457.181, 653.783), stdev = 178.711
[info]   CI (99.9%): [≈ 0, 1145.335] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   299.356 ±(99.9%) 456.282 B/op [Average]
[info]   (min, avg, max) = (212.477, 299.356, 432.171), stdev = 118.495
[info]   CI (99.9%): [≈ 0, 755.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 6.000), stdev = 2.280
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.00% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112406.816 ops/s
[info] # Warmup Iteration   2: 241654.619 ops/s
[info] # Warmup Iteration   3: 245025.518 ops/s
[info] # Warmup Iteration   4: 244519.184 ops/s
[info] # Warmup Iteration   5: 246374.416 ops/s
[info] Iteration   1: 245795.718 ops/s
[info]                  ·gc.alloc.rate:               963.632 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6298.068 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 249346.492 ops/s
[info]                  ·gc.alloc.rate:                   977.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6233.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.657 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 246697.055 ops/s
[info]                  ·gc.alloc.rate:                   967.197 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6338.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 245300.762 ops/s
[info]                  ·gc.alloc.rate:               961.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      998.594 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6404.571 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   5: 243416.870 ops/s
[info]                  ·gc.alloc.rate:                   954.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6484.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   246111.379 ±(99.9%) 8353.789 ops/s [Average]
[info]   (min, avg, max) = (243416.870, 246111.379, 249346.492), stdev = 2169.452
[info]   CI (99.9%): [237757.590, 254465.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   964.883 ±(99.9%) 32.771 MB/sec [Average]
[info]   (min, avg, max) = (954.309, 964.883, 977.568), stdev = 8.510
[info]   CI (99.9%): [932.112, 997.654] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.551 ±(99.9%) 30.074 MB/sec [Average]
[info]   (min, avg, max) = (983.952, 993.551, 1003.285), stdev = 7.810
[info]   CI (99.9%): [963.476, 1023.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6351.889 ±(99.9%) 372.698 B/op [Average]
[info]   (min, avg, max) = (6233.440, 6351.889, 6484.550), stdev = 96.789
[info]   CI (99.9%): [5979.191, 6724.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.291 ±(99.9%) 1.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.291, 0.657), stdev = 0.301
[info]   CI (99.9%): [≈ 0, 1.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 10.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 76.47% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 374367.294 ops/s
[info] # Warmup Iteration   2: 584264.629 ops/s
[info] # Warmup Iteration   3: 609264.282 ops/s
[info] # Warmup Iteration   4: 607355.506 ops/s
[info] # Warmup Iteration   5: 603869.537 ops/s
[info] Iteration   1: 613017.724 ops/s
[info]                  ·gc.alloc.rate:                   1571.096 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3439.440 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 609203.763 ops/s
[info]                  ·gc.alloc.rate:                   1561.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4347.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 613752.086 ops/s
[info]                  ·gc.alloc.rate:                   1572.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4333.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 616388.783 ops/s
[info]                  ·gc.alloc.rate:                   1579.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3459.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 615787.455 ops/s
[info]                  ·gc.alloc.rate:                   1578.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4336.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   613629.962 ±(99.9%) 10933.194 ops/s [Average]
[info]   (min, avg, max) = (609203.763, 613629.962, 616388.783), stdev = 2839.316
[info]   CI (99.9%): [602696.768, 624563.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1572.653 ±(99.9%) 27.990 MB/sec [Average]
[info]   (min, avg, max) = (1561.327, 1572.653, 1579.700), stdev = 7.269
[info]   CI (99.9%): [1544.663, 1600.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1553.417 ±(99.9%) 723.204 MB/sec [Average]
[info]   (min, avg, max) = (1340.201, 1553.417, 1697.382), stdev = 187.814
[info]   CI (99.9%): [830.213, 2276.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3983.307 ±(99.9%) 1876.564 B/op [Average]
[info]   (min, avg, max) = (3439.440, 3983.307, 4347.928), stdev = 487.338
[info]   CI (99.9%): [2106.743, 5859.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.139 ±(99.9%) 0.234 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.139, 0.214), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 12.000), stdev = 4.099
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 77.94% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 972453.582 ops/s
[info] # Warmup Iteration   2: 1575200.680 ops/s
[info] # Warmup Iteration   3: 1605877.393 ops/s
[info] # Warmup Iteration   4: 1575935.070 ops/s
[info] # Warmup Iteration   5: 1599837.173 ops/s
[info] Iteration   1: 1606915.974 ops/s
[info]                  ·gc.alloc.rate:               866.154 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 961.705 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 1613547.427 ops/s
[info]                  ·gc.alloc.rate:                   869.732 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     642.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1587281.737 ops/s
[info]                  ·gc.alloc.rate:                   855.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     984.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1575469.642 ops/s
[info]                  ·gc.alloc.rate:               849.200 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 664.796 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1591359.613 ops/s
[info]                  ·gc.alloc.rate:                   857.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     990.541 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1594914.879 ±(99.9%) 59036.165 ops/s [Average]
[info]   (min, avg, max) = (1575469.642, 1594914.879, 1613547.427), stdev = 15331.505
[info]   CI (99.9%): [1535878.714, 1653951.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   859.682 ±(99.9%) 31.835 MB/sec [Average]
[info]   (min, avg, max) = (849.200, 859.682, 869.732), stdev = 8.268
[info]   CI (99.9%): [827.847, 891.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   860.407 ±(99.9%) 697.147 MB/sec [Average]
[info]   (min, avg, max) = (658.753, 860.407, 1001.936), stdev = 181.047
[info]   CI (99.9%): [163.259, 1557.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   848.773 ±(99.9%) 688.186 B/op [Average]
[info]   (min, avg, max) = (642.292, 848.773, 990.541), stdev = 178.720
[info]   CI (99.9%): [160.586, 1536.959] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.066 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.041), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 8.000), stdev = 2.881
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.41% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4228976.141 ops/s
[info] # Warmup Iteration   2: 3510414.000 ops/s
[info] # Warmup Iteration   3: 3504681.776 ops/s
[info] # Warmup Iteration   4: 3512363.273 ops/s
[info] # Warmup Iteration   5: 3576064.504 ops/s
[info] Iteration   1: 3533934.084 ops/s
[info]                  ·gc.alloc.rate:               431.287 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 290.140 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 3550173.735 ops/s
[info]                  ·gc.alloc.rate:               433.251 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 144.562 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3539705.239 ops/s
[info]                  ·gc.alloc.rate:                   431.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     144.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3520285.290 ops/s
[info]                  ·gc.alloc.rate:                   429.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     292.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3539587.942 ops/s
[info]                  ·gc.alloc.rate:               431.980 MB/sec
[info]                  ·gc.alloc.rate.norm:          192.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145.736 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   3536737.258 ±(99.9%) 42005.533 ops/s [Average]
[info]   (min, avg, max) = (3520285.290, 3536737.258, 3550173.735), stdev = 10908.704
[info]   CI (99.9%): [3494731.725, 3578742.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   431.629 ±(99.9%) 5.099 MB/sec [Average]
[info]   (min, avg, max) = (429.628, 431.629, 433.251), stdev = 1.324
[info]   CI (99.9%): [426.530, 436.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   192.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (192.000, 192.000, 192.000), stdev = 0.001
[info]   CI (99.9%): [192.000, 192.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.168 ±(99.9%) 687.539 MB/sec [Average]
[info]   (min, avg, max) = (326.205, 457.168, 653.780), stdev = 178.552
[info]   CI (99.9%): [≈ 0, 1144.707] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   203.520 ±(99.9%) 308.072 B/op [Average]
[info]   (min, avg, max) = (144.562, 203.520, 292.174), stdev = 80.005
[info]   CI (99.9%): [≈ 0, 511.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.032 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.019), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 7.000), stdev = 2.881
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 80.88% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 217191.151 ops/s
[info] # Warmup Iteration   2: 352138.701 ops/s
[info] # Warmup Iteration   3: 356474.231 ops/s
[info] # Warmup Iteration   4: 358685.116 ops/s
[info] # Warmup Iteration   5: 356007.134 ops/s
[info] Iteration   1: 355411.119 ops/s
[info]                  ·gc.alloc.rate:                   1230.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5849.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.184 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 358825.297 ops/s
[info]                  ·gc.alloc.rate:                   1242.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5835.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.274 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 354397.941 ops/s
[info]                  ·gc.alloc.rate:                   1227.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5940.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.370 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 357779.361 ops/s
[info]                  ·gc.alloc.rate:                   1238.999 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4433.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.275 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 358734.450 ops/s
[info]                  ·gc.alloc.rate:                   1242.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.555 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5913.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.091 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   357029.634 ±(99.9%) 7758.424 ops/s [Average]
[info]   (min, avg, max) = (354397.941, 357029.634, 358825.297), stdev = 2014.838
[info]   CI (99.9%): [349271.209, 364788.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1236.358 ±(99.9%) 27.007 MB/sec [Average]
[info]   (min, avg, max) = (1227.177, 1236.358, 1242.574), stdev = 7.014
[info]   CI (99.9%): [1209.351, 1263.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.460 ±(99.9%) 563.444 MB/sec [Average]
[info]   (min, avg, max) = (1008.309, 1269.460, 1348.555), stdev = 146.325
[info]   CI (99.9%): [706.016, 1832.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5594.558 ±(99.9%) 2504.661 B/op [Average]
[info]   (min, avg, max) = (4433.632, 5594.558, 5940.505), stdev = 650.452
[info]   CI (99.9%): [3089.898, 8099.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.239 ±(99.9%) 0.406 B/op [Average]
[info]   (min, avg, max) = (0.091, 0.239, 0.370), stdev = 0.105
[info]   CI (99.9%): [≈ 0, 0.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 15.000), stdev = 5.099
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 82.35% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170755.908 ops/s
[info] # Warmup Iteration   2: 347926.196 ops/s
[info] # Warmup Iteration   3: 350939.602 ops/s
[info] # Warmup Iteration   4: 356152.947 ops/s
[info] # Warmup Iteration   5: 357423.843 ops/s
[info] Iteration   1: 356518.105 ops/s
[info]                  ·gc.alloc.rate:                   1046.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4330.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.092 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 348432.638 ops/s
[info]                  ·gc.alloc.rate:                   1022.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5951.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 348628.567 ops/s
[info]                  ·gc.alloc.rate:                   1022.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4491.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 351656.176 ops/s
[info]                  ·gc.alloc.rate:                   1031.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4481.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 351016.540 ops/s
[info]                  ·gc.alloc.rate:                   1029.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.588 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4507.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   351250.405 ±(99.9%) 12593.114 ops/s [Average]
[info]   (min, avg, max) = (348432.638, 351250.405, 356518.105), stdev = 3270.392
[info]   CI (99.9%): [338657.291, 363843.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1030.570 ±(99.9%) 36.946 MB/sec [Average]
[info]   (min, avg, max) = (1022.310, 1030.570, 1046.019), stdev = 9.595
[info]   CI (99.9%): [993.624, 1067.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4616.001, 4616.001, 4616.001), stdev = 0.001
[info]   CI (99.9%): [4616.001, 4616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1060.378 ±(99.9%) 556.004 MB/sec [Average]
[info]   (min, avg, max) = (981.271, 1060.378, 1318.146), stdev = 144.392
[info]   CI (99.9%): [504.374, 1616.382] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4752.342 ±(99.9%) 2596.388 B/op [Average]
[info]   (min, avg, max) = (4330.273, 4752.342, 5951.783), stdev = 674.274
[info]   CI (99.9%): [2155.954, 7348.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.131 ±(99.9%) 0.199 B/op [Average]
[info]   (min, avg, max) = (0.092, 0.131, 0.188), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 12.000), stdev = 3.962
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 83.82% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 122257.101 ops/s
[info] # Warmup Iteration   2: 1009304.454 ops/s
[info] # Warmup Iteration   3: 1019512.087 ops/s
[info] # Warmup Iteration   4: 1026464.050 ops/s
[info] # Warmup Iteration   5: 1027078.017 ops/s
[info] Iteration   1: 1034317.355 ops/s
[info]                  ·gc.alloc.rate:                   1072.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1513.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1029942.632 ops/s
[info]                  ·gc.alloc.rate:                   1068.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1527.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1020500.679 ops/s
[info]                  ·gc.alloc.rate:                   1058.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2065.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1028459.599 ops/s
[info]                  ·gc.alloc.rate:                   1066.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1032392.743 ops/s
[info]                  ·gc.alloc.rate:                   1070.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1542.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1029122.602 ±(99.9%) 20478.119 ops/s [Average]
[info]   (min, avg, max) = (1020500.679, 1029122.602, 1034317.355), stdev = 5318.103
[info]   CI (99.9%): [1008644.483, 1049600.721] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1067.551 ±(99.9%) 21.250 MB/sec [Average]
[info]   (min, avg, max) = (1058.609, 1067.551, 1072.956), stdev = 5.518
[info]   CI (99.9%): [1046.302, 1088.801] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.190 ±(99.9%) 578.889 MB/sec [Average]
[info]   (min, avg, max) = (995.269, 1071.190, 1339.850), stdev = 150.336
[info]   CI (99.9%): [492.302, 1650.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1638.472 ±(99.9%) 920.546 B/op [Average]
[info]   (min, avg, max) = (1513.836, 1638.472, 2065.574), stdev = 239.063
[info]   CI (99.9%): [717.926, 2559.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.022, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.089 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (0.063, 0.089, 0.096), stdev = 0.014
[info]   CI (99.9%): [0.034, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 85.29% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2185698.678 ops/s
[info] # Warmup Iteration   2: 2469934.636 ops/s
[info] # Warmup Iteration   3: 2496464.080 ops/s
[info] # Warmup Iteration   4: 2493714.196 ops/s
[info] # Warmup Iteration   5: 2536906.644 ops/s
[info] Iteration   1: 2502223.778 ops/s
[info]                  ·gc.alloc.rate:                   559.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 2509321.512 ops/s
[info]                  ·gc.alloc.rate:                   561.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.469 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2519016.293 ops/s
[info]                  ·gc.alloc.rate:                   563.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.140 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2488518.650 ops/s
[info]                  ·gc.alloc.rate:               556.812 MB/sec
[info]                  ·gc.alloc.rate.norm:          352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 207.498 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2496532.026 ops/s
[info]                  ·gc.alloc.rate:                   558.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     414.507 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2503122.451 ±(99.9%) 45093.445 ops/s [Average]
[info]   (min, avg, max) = (2488518.650, 2503122.451, 2519016.293), stdev = 11710.624
[info]   CI (99.9%): [2458029.007, 2548215.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   559.997 ±(99.9%) 9.672 MB/sec [Average]
[info]   (min, avg, max) = (556.812, 559.997, 563.321), stdev = 2.512
[info]   CI (99.9%): [550.325, 569.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   352.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.000, 352.000, 352.000), stdev = 0.001
[info]   CI (99.9%): [352.000, 352.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.190 ±(99.9%) 561.794 MB/sec [Average]
[info]   (min, avg, max) = (328.232, 589.190, 657.784), stdev = 145.896
[info]   CI (99.9%): [27.396, 1150.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   370.123 ±(99.9%) 350.163 B/op [Average]
[info]   (min, avg, max) = (207.498, 370.123, 414.507), stdev = 90.936
[info]   CI (99.9%): [19.961, 720.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.052), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 15.000), stdev = 6.261
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 86.76% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111010.619 ops/s
[info] # Warmup Iteration   2: 250060.927 ops/s
[info] # Warmup Iteration   3: 260047.478 ops/s
[info] # Warmup Iteration   4: 261438.669 ops/s
[info] # Warmup Iteration   5: 260712.071 ops/s
[info] Iteration   1: 261710.441 ops/s
[info]                  ·gc.alloc.rate:                   952.835 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5914.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 262956.235 ops/s
[info]                  ·gc.alloc.rate:                   957.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5914.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 257046.526 ops/s
[info]                  ·gc.alloc.rate:                   935.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4050.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 257896.565 ops/s
[info]                  ·gc.alloc.rate:                   938.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6085.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 260619.751 ops/s
[info]                  ·gc.alloc.rate:                   948.875 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6046.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   260045.904 ±(99.9%) 9662.342 ops/s [Average]
[info]   (min, avg, max) = (257046.526, 260045.904, 262956.235), stdev = 2509.280
[info]   CI (99.9%): [250383.562, 269708.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   946.784 ±(99.9%) 35.168 MB/sec [Average]
[info]   (min, avg, max) = (935.858, 946.784, 957.378), stdev = 9.133
[info]   CI (99.9%): [911.616, 981.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5728.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5728.002, 5728.002, 5728.002), stdev = 0.001
[info]   CI (99.9%): [5728.001, 5728.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.692 ±(99.9%) 570.982 MB/sec [Average]
[info]   (min, avg, max) = (661.732, 926.692, 1001.572), stdev = 148.282
[info]   CI (99.9%): [355.710, 1497.674] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5602.368 ±(99.9%) 3354.231 B/op [Average]
[info]   (min, avg, max) = (4050.194, 5602.368, 6085.713), stdev = 871.083
[info]   CI (99.9%): [2248.138, 8956.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.328 ±(99.9%) 0.877 B/op [Average]
[info]   (min, avg, max) = (0.125, 0.328, 0.623), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 88.24% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 139485.122 ops/s
[info] # Warmup Iteration   2: 330826.861 ops/s
[info] # Warmup Iteration   3: 339146.387 ops/s
[info] # Warmup Iteration   4: 343354.599 ops/s
[info] # Warmup Iteration   5: 336066.493 ops/s
[info] Iteration   1: 337557.788 ops/s
[info]                  ·gc.alloc.rate:                   981.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4576.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 344311.100 ops/s
[info]                  ·gc.alloc.rate:                   1001.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4523.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 342990.663 ops/s
[info]                  ·gc.alloc.rate:               997.619 MB/sec
[info]                  ·gc.alloc.rate.norm:          4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4565.326 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 340392.231 ops/s
[info]                  ·gc.alloc.rate:                   990.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.258 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4627.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 341620.555 ops/s
[info]                  ·gc.alloc.rate:               993.631 MB/sec
[info]                  ·gc.alloc.rate.norm:          4576.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4626.558 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   341374.468 ±(99.9%) 9972.404 ops/s [Average]
[info]   (min, avg, max) = (337557.788, 341374.468, 344311.100), stdev = 2589.802
[info]   CI (99.9%): [331402.064, 351346.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   992.927 ±(99.9%) 29.072 MB/sec [Average]
[info]   (min, avg, max) = (981.813, 992.927, 1001.514), stdev = 7.550
[info]   CI (99.9%): [963.855, 1021.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4576.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4576.001, 4576.001, 4576.001), stdev = 0.001
[info]   CI (99.9%): [4576.001, 4576.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   994.617 ±(99.9%) 34.789 MB/sec [Average]
[info]   (min, avg, max) = (981.943, 994.617, 1004.609), stdev = 9.035
[info]   CI (99.9%): [959.828, 1029.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4583.915 ±(99.9%) 170.169 B/op [Average]
[info]   (min, avg, max) = (4523.320, 4583.915, 4627.765), stdev = 44.192
[info]   CI (99.9%): [4413.746, 4754.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.115 ±(99.9%) 0.480 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.115, 0.285), stdev = 0.125
[info]   CI (99.9%): [≈ 0, 0.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.950
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 89.71% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94469.198 ops/s
[info] # Warmup Iteration   2: 977073.987 ops/s
[info] # Warmup Iteration   3: 1148586.044 ops/s
[info] # Warmup Iteration   4: 1149884.581 ops/s
[info] # Warmup Iteration   5: 1158779.064 ops/s
[info] Iteration   1: 1161356.567 ops/s
[info]                  ·gc.alloc.rate:                   1074.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1348.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.169 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1154622.055 ops/s
[info]                  ·gc.alloc.rate:                   1068.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1362.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1145873.863 ops/s
[info]                  ·gc.alloc.rate:                   1060.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.979 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1378.425 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1161370.605 ops/s
[info]                  ·gc.alloc.rate:                   1074.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1365.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1154881.526 ops/s
[info]                  ·gc.alloc.rate:                   1068.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1837.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1155620.923 ±(99.9%) 24543.594 ops/s [Average]
[info]   (min, avg, max) = (1145873.863, 1155620.923, 1161370.605), stdev = 6373.893
[info]   CI (99.9%): [1131077.329, 1180164.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1069.494 ±(99.9%) 22.704 MB/sec [Average]
[info]   (min, avg, max) = (1060.481, 1069.494, 1074.828), stdev = 5.896
[info]   CI (99.9%): [1046.790, 1092.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1456.000, 1456.000, 1456.000), stdev = 0.001
[info]   CI (99.9%): [1456.000, 1456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.196 ±(99.9%) 597.226 MB/sec [Average]
[info]   (min, avg, max) = (995.272, 1071.196, 1348.510), stdev = 155.098
[info]   CI (99.9%): [473.970, 1668.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1458.415 ±(99.9%) 816.010 B/op [Average]
[info]   (min, avg, max) = (1348.281, 1458.415, 1837.014), stdev = 211.915
[info]   CI (99.9%): [642.406, 2274.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.225 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.068, 0.169), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 7.000), stdev = 2.345
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 91.18% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1813302.325 ops/s
[info] # Warmup Iteration   2: 2046857.428 ops/s
[info] # Warmup Iteration   3: 2057065.164 ops/s
[info] # Warmup Iteration   4: 2070202.142 ops/s
[info] # Warmup Iteration   5: 2087879.496 ops/s
[info] Iteration   1: 2097082.274 ops/s
[info]                  ·gc.alloc.rate:               511.844 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 244.481 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2054591.997 ops/s
[info]                  ·gc.alloc.rate:                   501.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2034144.183 ops/s
[info]                  ·gc.alloc.rate:               496.493 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.818 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     21.000 ms
[info] Iteration   4: 2097546.101 ops/s
[info]                  ·gc.alloc.rate:               511.975 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 491.068 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2098612.200 ops/s
[info]                  ·gc.alloc.rate:                   512.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.793 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2076395.351 ±(99.9%) 115990.682 ops/s [Average]
[info]   (min, avg, max) = (2034144.183, 2076395.351, 2098612.200), stdev = 30122.412
[info]   CI (99.9%): [1960404.669, 2192386.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   506.800 ±(99.9%) 28.309 MB/sec [Average]
[info]   (min, avg, max) = (496.493, 506.800, 512.216), stdev = 7.352
[info]   CI (99.9%): [478.491, 535.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.548 ±(99.9%) 689.024 MB/sec [Average]
[info]   (min, avg, max) = (325.875, 457.548, 654.725), stdev = 178.937
[info]   CI (99.9%): [≈ 0, 1146.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   346.746 ±(99.9%) 522.525 B/op [Average]
[info]   (min, avg, max) = (244.481, 346.746, 499.570), stdev = 135.698
[info]   CI (99.9%): [≈ 0, 869.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 8.400, 21.000), stdev = 8.414
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 92.65% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82918.960 ops/s
[info] # Warmup Iteration   2: 174264.937 ops/s
[info] # Warmup Iteration   3: 175449.798 ops/s
[info] # Warmup Iteration   4: 175630.728 ops/s
[info] # Warmup Iteration   5: 242110.276 ops/s
[info] Iteration   1: 251352.790 ops/s
[info]                  ·gc.alloc.rate:                   972.677 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6121.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 251031.420 ops/s
[info]                  ·gc.alloc.rate:                   971.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6166.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 252561.745 ops/s
[info]                  ·gc.alloc.rate:                   977.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6154.248 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.519 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 252030.831 ops/s
[info]                  ·gc.alloc.rate:                   975.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6204.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 249665.043 ops/s
[info]                  ·gc.alloc.rate:                   966.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6292.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   251328.366 ±(99.9%) 4248.858 ops/s [Average]
[info]   (min, avg, max) = (249665.043, 251328.366, 252561.745), stdev = 1103.415
[info]   CI (99.9%): [247079.508, 255577.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   972.559 ±(99.9%) 16.451 MB/sec [Average]
[info]   (min, avg, max) = (966.104, 972.559, 977.308), stdev = 4.272
[info]   CI (99.9%): [956.108, 989.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6088.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6088.002, 6088.002, 6088.002), stdev = 0.001
[info]   CI (99.9%): [6088.002, 6088.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   988.483 ±(99.9%) 31.235 MB/sec [Average]
[info]   (min, avg, max) = (977.986, 988.483, 998.598), stdev = 8.112
[info]   CI (99.9%): [957.248, 1019.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6187.840 ±(99.9%) 253.270 B/op [Average]
[info]   (min, avg, max) = (6121.230, 6187.840, 6292.766), stdev = 65.773
[info]   CI (99.9%): [5934.569, 6441.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.234 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.234, 0.519), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 0.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 2.950
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 94.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 335051.391 ops/s
[info] # Warmup Iteration   2: 615364.391 ops/s
[info] # Warmup Iteration   3: 627793.539 ops/s
[info] # Warmup Iteration   4: 625901.827 ops/s
[info] # Warmup Iteration   5: 630763.041 ops/s
[info] Iteration   1: 638021.800 ops/s
[info]                  ·gc.alloc.rate:                   1258.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3281.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 632640.995 ops/s
[info]                  ·gc.alloc.rate:                   1248.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2495.019 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 634598.608 ops/s
[info]                  ·gc.alloc.rate:                   1251.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3330.738 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 628278.819 ops/s
[info]                  ·gc.alloc.rate:               1239.542 MB/sec
[info]                  ·gc.alloc.rate.norm:          3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.800 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3377.599 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 631681.892 ops/s
[info]                  ·gc.alloc.rate:                   1246.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              3104.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3369.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   633044.423 ±(99.9%) 13873.010 ops/s [Average]
[info]   (min, avg, max) = (628278.819, 633044.423, 638021.800), stdev = 3602.777
[info]   CI (99.9%): [619171.412, 646917.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1248.970 ±(99.9%) 27.414 MB/sec [Average]
[info]   (min, avg, max) = (1239.542, 1248.970, 1258.818), stdev = 7.119
[info]   CI (99.9%): [1221.556, 1276.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3104.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3104.001, 3104.001, 3104.001), stdev = 0.001
[info]   CI (99.9%): [3104.001, 3104.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1275.841 ±(99.9%) 587.501 MB/sec [Average]
[info]   (min, avg, max) = (1003.314, 1275.841, 1352.810), stdev = 152.572
[info]   CI (99.9%): [688.340, 1863.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3170.844 ±(99.9%) 1462.096 B/op [Average]
[info]   (min, avg, max) = (2495.019, 3170.844, 3377.599), stdev = 379.702
[info]   CI (99.9%): [1708.748, 4632.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.154), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.400, 11.000), stdev = 2.191
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.59% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1138360.480 ops/s
[info] # Warmup Iteration   2: 1571719.462 ops/s
[info] # Warmup Iteration   3: 1558165.743 ops/s
[info] # Warmup Iteration   4: 1572197.006 ops/s
[info] # Warmup Iteration   5: 1564292.079 ops/s
[info] Iteration   1: 1568926.011 ops/s
[info]                  ·gc.alloc.rate:                   702.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1576820.391 ops/s
[info]                  ·gc.alloc.rate:                   705.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     656.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1575789.738 ops/s
[info]                  ·gc.alloc.rate:               705.120 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.405 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 659.357 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1583682.876 ops/s
[info]                  ·gc.alloc.rate:                   708.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     658.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1584227.350 ops/s
[info]                  ·gc.alloc.rate:                   708.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1577889.273 ±(99.9%) 24325.258 ops/s [Average]
[info]   (min, avg, max) = (1568926.011, 1577889.273, 1584227.350), stdev = 6317.192
[info]   CI (99.9%): [1553564.015, 1602214.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   706.059 ±(99.9%) 10.892 MB/sec [Average]
[info]   (min, avg, max) = (702.042, 706.059, 708.880), stdev = 2.828
[info]   CI (99.9%): [695.167, 716.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   726.572 ±(99.9%) 584.258 MB/sec [Average]
[info]   (min, avg, max) = (653.725, 726.572, 997.925), stdev = 151.730
[info]   CI (99.9%): [142.314, 1310.830] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   724.184 ±(99.9%) 574.493 B/op [Average]
[info]   (min, avg, max) = (655.549, 724.184, 991.055), stdev = 149.194
[info]   CI (99.9%): [149.692, 1298.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 2.168
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 97.06% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3713035.756 ops/s
[info] # Warmup Iteration   2: 3854869.081 ops/s
[info] # Warmup Iteration   3: 4202731.360 ops/s
[info] # Warmup Iteration   4: 4308472.013 ops/s
[info] # Warmup Iteration   5: 4307612.090 ops/s
[info] Iteration   1: 4321073.115 ops/s
[info]                  ·gc.alloc.rate:                   351.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.103 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.766 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4335669.255 ops/s
[info]                  ·gc.alloc.rate:                   352.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4345671.326 ops/s
[info]                  ·gc.alloc.rate:                   353.658 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.716 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     117.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4291384.385 ops/s
[info]                  ·gc.alloc.rate:                   349.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     119.467 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4325316.086 ops/s
[info]                  ·gc.alloc.rate:                   351.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.393 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4323822.834 ±(99.9%) 78908.565 ops/s [Average]
[info]   (min, avg, max) = (4291384.385, 4323822.834, 4345671.326), stdev = 20492.304
[info]   CI (99.9%): [4244914.269, 4402731.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   351.802 ±(99.9%) 6.515 MB/sec [Average]
[info]   (min, avg, max) = (349.147, 351.802, 353.658), stdev = 1.692
[info]   CI (99.9%): [345.286, 358.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.010 ±(99.9%) 562.646 MB/sec [Average]
[info]   (min, avg, max) = (325.535, 391.010, 652.393), stdev = 146.117
[info]   CI (99.9%): [≈ 0, 953.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   142.261 ±(99.9%) 204.591 B/op [Average]
[info]   (min, avg, max) = (117.887, 142.261, 237.300), stdev = 53.132
[info]   CI (99.9%): [≈ 0, 346.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.450 ±(99.9%) 3.560 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.450, 2.103), stdev = 0.925
[info]   CI (99.9%): [≈ 0, 4.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 1.296 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.164, 0.766), stdev = 0.337
[info]   CI (99.9%): [≈ 0, 1.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.53% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94644.764 ops/s
[info] # Warmup Iteration   2: 208414.104 ops/s
[info] # Warmup Iteration   3: 213416.234 ops/s
[info] # Warmup Iteration   4: 212125.478 ops/s
[info] # Warmup Iteration   5: 210628.971 ops/s
[info] Iteration   1: 210612.430 ops/s
[info]                  ·gc.alloc.rate:                   1096.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7379.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.622 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 210193.483 ops/s
[info]                  ·gc.alloc.rate:                   1094.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9911.002 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.779 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 210515.875 ops/s
[info]                  ·gc.alloc.rate:                   1096.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7463.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.623 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 212695.510 ops/s
[info]                  ·gc.alloc.rate:                   1107.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7421.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 213686.717 ops/s
[info]                  ·gc.alloc.rate:                   1112.665 MB/sec
[info]                  ·gc.alloc.rate.norm:              8192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9888.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   211540.803 ±(99.9%) 5985.838 ops/s [Average]
[info]   (min, avg, max) = (210193.483, 211540.803, 213686.717), stdev = 1554.503
[info]   CI (99.9%): [205554.965, 217526.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1101.497 ±(99.9%) 31.146 MB/sec [Average]
[info]   (min, avg, max) = (1094.510, 1101.497, 1112.665), stdev = 8.088
[info]   CI (99.9%): [1070.352, 1132.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8192.002, 8192.002, 8192.002), stdev = 0.001
[info]   CI (99.9%): [8192.002, 8192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.433 ±(99.9%) 711.642 MB/sec [Average]
[info]   (min, avg, max) = (987.945, 1131.433, 1343.137), stdev = 184.811
[info]   CI (99.9%): [419.791, 1843.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8412.796 ±(99.9%) 5228.778 B/op [Average]
[info]   (min, avg, max) = (7379.956, 8412.796, 9911.002), stdev = 1357.897
[info]   CI (99.9%): [3184.019, 13641.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.497 ±(99.9%) 0.991 B/op [Average]
[info]   (min, avg, max) = (0.153, 0.497, 0.779), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 13.000), stdev = 4.528
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:18:16
[info] Benchmark                                                                                    Mode  Cnt         Score        Error   Units
[info] JsonCodecBenchmark.missingReqFieldCirce                                                     thrpt    5   1342673.098 ± 767757.517   ops/s
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2157.566 ±   1233.732  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2528.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2174.590 ±   1157.446  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2551.447 ±    255.123    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.051 ±      0.095    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        32.000               counts
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        51.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJackson                                                   thrpt    5    163393.483 ±  97550.031   ops/s
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       387.184 ±    231.140  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3728.003 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       392.592 ±    570.813  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3701.427 ±   2925.372    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.133 ±      0.766    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         6.000               counts
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        15.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniter                                                  thrpt    5    376514.101 ± 188290.041   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       352.288 ±    176.164  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1472.001 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       325.818 ±      1.063  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1383.737 ±    828.514    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.446 ±      3.703  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         2.400 ±     20.134    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5         9.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1210787.085 ±  30363.376   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5       757.665 ±     19.491  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       984.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5       724.822 ±    560.209  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       941.177 ±    721.565    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±      0.118  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.049 ±      0.154    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   1878998.498 ± 109522.214   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       277.072 ±     16.115  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       232.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       246.559 ±    543.319  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       207.225 ±    457.994    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.446 ±      3.637  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.373 ±      3.045    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         4.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        12.000                   ms
[info] JsonCodecBenchmark.missingReqFieldPlay                                                      thrpt    5    129190.702 ±   2592.737   ops/s
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1078.072 ±     21.612  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.003 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1061.866 ±    558.400  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     12928.283 ±   6696.773    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.507 ±      1.377    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readAnyRefsCirce                                                         thrpt    5   1145136.925 ±  65054.552   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1810.972 ±    102.976  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2488.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1830.135 ±    719.259  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2512.714 ±    892.781    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.063 ±      0.209    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                                       thrpt    5   1685765.691 ± 352569.989   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1182.988 ±    247.466  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1138.407 ±    701.797  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1063.681 ±    646.469    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.039 ±      0.091    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6504688.210 ± 104279.881   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       826.916 ±     13.257  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       859.221 ±    697.989  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       207.897 ±    170.544    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.011 ±      0.037    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                                          thrpt    5    434378.120 ±  17490.251   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1148.578 ±     46.158  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1132.715 ±    713.548  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4098.425 ±   2445.746    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.227 ±      0.295    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.readArraysCirce                                                          thrpt    5    631706.871 ±  19421.613   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2065.594 ±     62.903  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5144.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2103.990 ±    597.167  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5240.358 ±   1529.003    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.075 ±      0.201  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.187 ±      0.508    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                                thrpt    5        31.000               counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        48.000                   ms
[info] JsonCodecBenchmark.readArraysJackson                                                        thrpt    5   1174868.489 ± 421946.727   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1069.393 ±    383.911  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1067.768 ±   1092.431  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1413.445 ±   1073.017    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.044 ±      0.083    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                              thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                               thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readArraysJsoniter                                                       thrpt    5   2370624.365 ±  75895.480   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1084.916 ±     34.706  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       720.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1133.510 ±    701.489  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       752.189 ±    463.475    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.039 ±      0.058    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readArraysPlay                                                           thrpt    5    209811.263 ±  11368.375   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1287.732 ±     69.848  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9656.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1269.300 ±    563.260  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9513.964 ±   4072.128    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.374 ±      0.526    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readBitSetsJackson                                                       thrpt    5   1554641.311 ±  75704.705   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1003.987 ±     48.888  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1005.157 ±     21.933  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1017.350 ±     65.300    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.046 ±      0.069    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                                      thrpt    5   4331811.970 ± 158120.063   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       462.575 ±     16.841  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       168.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       457.693 ±    692.691  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       166.441 ±    254.447    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.011 ±      0.057    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        12.000                   ms
[info] JsonCodecBenchmark.readBitSetsPlay                                                          thrpt    5    263718.234 ±   4759.709   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1197.495 ±     21.625  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7144.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1200.107 ±    715.641  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7159.851 ±   4275.278    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±      0.134  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.324 ±      0.807    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        49.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                                   thrpt    5    547582.294 ±   7346.762   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1818.247 ±     24.318  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1830.094 ±    707.890  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5256.979 ±   1979.235    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.072 ±      0.254    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                                 thrpt    5    694502.701 ±  10498.837   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       868.742 ±     13.075  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1968.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       867.790 ±    704.098  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1965.474 ±   1586.829    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.038 ±      0.152    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        22.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4406249.492 ±  77852.613   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       201.657 ±      3.560  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       167.478 ±    598.802  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        59.981 ±    214.375    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.442 ±      3.757  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.158 ±      1.343    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        10.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                                    thrpt    5    214718.843 ±  11424.316   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1192.284 ±     63.491  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1200.531 ±    696.108  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8798.146 ±   5132.149    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.042 ±      0.001  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.305 ±      0.016    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3088439.784 ±  50385.145   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1460.497 ±     23.838  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5      1412.817 ±    583.250  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       719.870 ±    304.937    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.032 ±      0.041    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        21.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    239553.482 ±   4991.518   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1292.399 ±     26.782  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8488.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1270.936 ±    565.347  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8350.202 ±   3818.647    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.134  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.329 ±      0.888    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.readIterablesCirce                                                       thrpt    5    538427.942 ±   7027.150   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1905.568 ±     24.747  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5568.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1898.580 ±    723.005  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5548.706 ±   2163.802    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.067 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.195 ±      0.194    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        28.000               counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        48.000                   ms
[info] JsonCodecBenchmark.readIterablesJackson                                                     thrpt    5    536540.256 ±   4477.902   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       545.776 ±      5.099  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       592.305 ±    568.728  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1736.907 ±   1673.640    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.185  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.146 ±      0.541    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         9.000               counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                                    thrpt    5   3041245.015 ±  68020.975   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       757.758 ±     16.932  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       791.027 ±    695.417  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       408.996 ±    354.642    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.019 ±      0.035    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.readIterablesPlay                                                        thrpt    5    183607.709 ±   1921.024   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1250.159 ±     13.124  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10712.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1269.580 ±    586.637  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10877.601 ±   4998.957    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.500 ±      1.022    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.readMapsCirce                                                            thrpt    5    459781.312 ±  11253.348   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1634.505 ±     38.034  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1622.847 ±    579.186  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5552.793 ±   2008.376    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.157 ±      0.454    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readMapsJackson                                                          thrpt    5    873057.854 ±  23410.273   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1029.959 ±     27.633  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1004.147 ±     22.885  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1809.588 ±     78.412    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±      0.234  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.112 ±      0.419    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                                thrpt    5        15.000               counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.readMapsJsoniter                                                         thrpt    5   3086407.066 ±  49465.322   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       769.023 ±     12.335  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       791.028 ±    690.721  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       403.446 ±    357.254    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.019 ±      0.073    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readMapsPlay                                                             thrpt    5    252823.175 ±   4225.329   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1315.166 ±     22.054  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8184.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1272.551 ±    600.301  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      7916.905 ±   3671.247    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.362 ±      0.733    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                                   thrpt    5    612298.417 ±  10421.467   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       793.953 ±     13.566  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       796.630 ±    700.922  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2047.032 ±   1804.097    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.200  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.096 ±      0.514    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        14.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2220893.234 ±  76518.479   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1513.264 ±     52.248  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5      1072.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1548.521 ±    707.787  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1097.545 ±    521.705    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.047 ±      0.063    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        23.000               counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                                      thrpt    5    218989.401 ±   5850.670   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1153.654 ±     30.643  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8288.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1132.719 ±    683.205  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8143.566 ±   5094.199    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.360 ±      0.879    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readPrimitivesCirce                                                      thrpt    5    456478.088 ±   7088.252   ops/s
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1360.205 ±     21.169  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4688.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1348.266 ±     27.111  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4646.970 ±    153.777    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.144 ±      0.196    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        32.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                                    thrpt    5    963231.769 ±   9807.950   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       739.592 ±      7.480  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       731.186 ±    565.853  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1194.192 ±    921.732    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.054 ±      0.198    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3112163.720 ± 347703.335   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5        94.952 ±     10.610  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.361 ±    539.718  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        51.035 ±    269.113    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         1.166 ±     10.037  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.576 ±      4.958    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         5.000                   ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                                       thrpt    5    164376.417 ±   4149.948   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1116.662 ±     28.106  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10688.003 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1065.601 ±    575.379  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10199.068 ±   5485.841    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.050 ±      0.108  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.477 ±      1.028    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        32.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                                        thrpt    5   1297573.320 ±  42540.637   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1451.598 ±     47.567  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1760.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1484.233 ±    701.165  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1799.027 ±    825.792    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.061 ±      0.088    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        64.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                                      thrpt    5   3934998.517 ±  83322.382   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1080.494 ±     22.927  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1070.240 ±    579.438  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       427.761 ±    225.593    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.007 ±      0.014    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  16053599.107 ± 569409.307   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       489.805 ±     17.341  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       522.745 ±    689.685  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        51.278 ±     68.185    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±      0.132  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.002 ±      0.013    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                                         thrpt    5    804349.183 ±  28321.720   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1206.604 ±     42.415  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1202.210 ±    686.036  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2350.468 ±   1310.144    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.156  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.098 ±      0.311    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeArraysCirce                                                         thrpt    5    717377.751 ±  14093.361   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1732.748 ±     33.950  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3800.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1760.667 ±    560.281  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3860.949 ±   1207.764    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.137 ±      0.214    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000               counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        50.000                   ms
[info] JsonCodecBenchmark.writeArraysJackson                                                       thrpt    5   2580413.599 ±  84580.740   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1495.823 ±     48.941  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1485.352 ±    719.953  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       906.069 ±    455.738    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.018 ±      0.027    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                                      thrpt    5   4820417.988 ±  82841.497   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1323.632 ±     22.817  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1274.624 ±    561.133  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       415.920 ±    179.994    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.018 ±      0.047    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.writeArraysPlay                                                          thrpt    5    331168.708 ±   9562.956   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1182.153 ±     34.058  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1134.371 ±    705.969  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5385.413 ±   3234.113    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.217 ±      0.492    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        43.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                                      thrpt    5   2671295.927 ±  98855.670   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1141.014 ±     42.279  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       672.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1140.012 ±    690.293  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       671.297 ±    401.848    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.022 ±      0.039    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4195099.004 ± 134701.184   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       767.948 ±     24.654  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       725.510 ±    567.990  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       272.205 ±    216.225    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.014 ±      0.054    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        17.000                   ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                                         thrpt    5    484471.819 ±  32771.972   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1433.778 ±     97.019  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1477.282 ±    694.422  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4797.855 ±   2254.944    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.054 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.175 ±      0.132    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                               thrpt    5   1024810.914 ±  26894.225   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1266.265 ±     33.330  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1944.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1277.333 ±    586.476  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1959.944 ±    862.479    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.025 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.038 ±      0.056    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2406320.787 ±  69990.140   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       464.986 ±     13.534  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.181 ±    688.154  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       299.356 ±    456.282    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.016 ±      0.069    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        11.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    246111.379 ±   8353.789   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       964.883 ±     32.771  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       993.551 ±     30.074  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6351.889 ±    372.698    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.183  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.291 ±      1.158    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeIterablesCirce                                                      thrpt    5    613629.962 ±  10933.194   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1572.653 ±     27.990  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4032.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1553.417 ±    723.204  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3983.307 ±   1876.564    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.139 ±      0.234    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000               counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.writeIterablesJackson                                                    thrpt    5   1594914.879 ±  59036.165   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       859.682 ±     31.835  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       848.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       860.407 ±    697.147  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       848.773 ±    688.186    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.016 ±      0.066    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        13.000               counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                                   thrpt    5   3536737.258 ±  42005.533   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       431.629 ±      5.099  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       192.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       457.168 ±    687.539  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       203.520 ±    308.072    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.006 ±      0.032    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        17.000                   ms
[info] JsonCodecBenchmark.writeIterablesPlay                                                       thrpt    5    357029.634 ±   7758.424   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1236.358 ±     27.007  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1269.460 ±    563.444  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5594.558 ±   2504.661    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.239 ±      0.406    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.writeMapsCirce                                                           thrpt    5    351250.405 ±  12593.114   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1030.570 ±     36.946  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1060.378 ±    556.004  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4752.342 ±   2596.388    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.131 ±      0.199    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.writeMapsJackson                                                         thrpt    5   1029122.602 ±  20478.119   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1067.551 ±     21.250  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      1632.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1071.190 ±    578.889  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      1638.472 ±    920.546    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.089 ±      0.055    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                                        thrpt    5   2503122.451 ±  45093.445   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       559.997 ±      9.672  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       352.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       589.190 ±    561.794  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       370.123 ±    350.163    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.029 ±      0.083    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         9.000               counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        19.000                   ms
[info] JsonCodecBenchmark.writeMapsPlay                                                            thrpt    5    260045.904 ±   9662.342   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       946.784 ±     35.168  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5728.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       926.692 ±    570.982  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5602.368 ±   3354.231    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.054 ±      0.146  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.328 ±      0.877    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                                    thrpt    5    341374.468 ±   9972.404   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       992.927 ±     29.072  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4576.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       994.617 ±     34.789  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4583.915 ±    170.169    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.115 ±      0.480    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                                  thrpt    5   1155620.923 ±  24543.594   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1069.494 ±     22.704  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      1456.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1071.196 ±    597.226  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1458.415 ±    816.010    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.166  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.068 ±      0.225    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2076395.351 ± 115990.682   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       506.800 ±     28.309  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       457.548 ±    689.024  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       346.746 ±    522.525    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.013 ±      0.080    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        42.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                                     thrpt    5    251328.366 ±   4248.858   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       972.559 ±     16.451  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6088.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       988.483 ±     31.235  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6187.840 ±    253.270    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.234 ±      0.650    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                                     thrpt    5    633044.423 ±  13873.010   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1248.970 ±     27.414  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3104.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1275.841 ±    587.501  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3170.844 ±   1462.096    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.072 ±      0.226    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                                   thrpt    5   1577889.273 ±  24325.258   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       706.059 ±     10.892  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       704.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       726.572 ±    584.258  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       724.184 ±    574.493    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.025 ±      0.067    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        19.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4323822.834 ±  78908.565   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       351.802 ±      6.515  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       391.010 ±    562.646  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       142.261 ±    204.591    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.450 ±      3.560  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.164 ±      1.296    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5         6.000                   ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                                      thrpt    5    211540.803 ±   5985.838   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1101.497 ±     31.146  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8192.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1131.433 ±    711.642  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8412.796 ±   5228.778    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.067 ±      0.132  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.497 ±      0.991    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        30.000                   ms
[success] Total time: 1139 s, completed Nov 10, 2017 1:52:26 PM
