[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 11, 2017 8:17:26 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:26:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = in.readString()
[info]                   }
[info]                   case -3621593128239734518L => {
[info]                     req0.&=(-3L);
[info]                     _bd = BigDecimal(in.readBigDecimal())
[info]                   }
[info]                   case 3145557872620432656L => _os = Option(in.readString())
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           if (x.s.ne(null))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               out.writeVal(x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.bd.ne(null))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bd");
[info]               out.writeRaw(x.bd.toString)
[info]             }
[info]           else
[info]             ();
[info]           if (x.os.ne(null).&&(x.os.isDefined))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:28:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case -2880316277851419472L => _bs = d0(in)
[info]                   case 6036675737602992569L => _mbs = d1(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           BitSet.empty
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:31:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 7173115670136726671L => _l = d0(in)
[info]                   case 8782703599529504340L => _s = d1(in)
[info]                   case -8160163252060190562L => _ls = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[String]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[String]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           Set.empty[Int]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Set.empty[Int]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         }
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:33:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:36:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           HashMap.empty[String, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           OpenHashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           OpenHashMap.empty[Long, Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:39:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in)
[info]                   case -1832287182589162500L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         };
[info]       private def d0(in: JsonIterator): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           IntMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           IntMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[Double]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:42:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 127L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 3085628732346524253L => {
[info]                     req0.&=(-2L);
[info]                     _b = in.readInt().toByte
[info]                   }
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-3L);
[info]                     _s = in.readInt().toShort
[info]                   }
[info]                   case -874823976827361790L => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case 1948447510327205053L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case 4052889318286228612L => {
[info]                     req0.&=(-33L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -8922763623791618166L => {
[info]                     req0.&=(-65L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => {
[info]           skipFixedBytes(in, 3);
[info]           null
[info]         }
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.eq(null))
[info]         out.writeNull()
[info]       else
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 25 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 38 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 0.00% complete, ETA 00:05:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1122622.740 ops/s
[info] # Warmup Iteration   2: 1673133.432 ops/s
[info] # Warmup Iteration   3: 1684652.460 ops/s
[info] # Warmup Iteration   4: 1727109.573 ops/s
[info] # Warmup Iteration   5: 1732163.118 ops/s
[info] Iteration   1: 1732648.594 ops/s
[info]                  ·gc.alloc.rate:                   1233.478 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1626.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1476.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1721725.507 ops/s
[info]                  ·gc.alloc.rate:                   1225.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1475.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1348.485 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1715843.163 ops/s
[info]                  ·gc.alloc.rate:               1221.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      686.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 629.054 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1721704.656 ops/s
[info]                  ·gc.alloc.rate:                   1225.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1276.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1166.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1720113.173 ops/s
[info]                  ·gc.alloc.rate:                   1224.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1555.508 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1722407.019 ±(99.9%) 23907.628 ops/s [Average]
[info]   (min, avg, max) = (1715843.163, 1722407.019, 1732648.594), stdev = 6208.735
[info]   CI (99.9%): [1698499.390, 1746314.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1226.196 ±(99.9%) 17.017 MB/sec [Average]
[info]   (min, avg, max) = (1221.521, 1226.196, 1233.478), stdev = 4.419
[info]   CI (99.9%): [1209.179, 1243.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1353.093 ±(99.9%) 1565.435 MB/sec [Average]
[info]   (min, avg, max) = (686.074, 1353.093, 1700.674), stdev = 406.538
[info]   CI (99.9%): [≈ 0, 2918.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1235.250 ±(99.9%) 1422.317 B/op [Average]
[info]   (min, avg, max) = (629.054, 1235.250, 1555.508), stdev = 369.371
[info]   CI (99.9%): [≈ 0, 2657.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.147 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.095), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 3.000), stdev = 0.707
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 2.000
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 2.94% complete, ETA 00:08:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5794956.777 ops/s
[info] # Warmup Iteration   2: 6225483.863 ops/s
[info] # Warmup Iteration   3: 6420735.415 ops/s
[info] # Warmup Iteration   4: 6583806.534 ops/s
[info] # Warmup Iteration   5: 6593101.178 ops/s
[info] Iteration   1: 6582544.247 ops/s
[info]                  ·gc.alloc.rate:               1138.019 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 209.211 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 6565119.274 ops/s
[info]                  ·gc.alloc.rate:                   1135.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     390.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 6578864.045 ops/s
[info]                  ·gc.alloc.rate:               1137.390 MB/sec
[info]                  ·gc.alloc.rate.norm:          272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      756.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 180.876 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 6561531.176 ops/s
[info]                  ·gc.alloc.rate:                   1134.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1407.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     337.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 6599414.631 ops/s
[info]                  ·gc.alloc.rate:                   1140.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1278.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6577494.674 ±(99.9%) 58265.780 ops/s [Average]
[info]   (min, avg, max) = (6561531.176, 6577494.674, 6599414.631), stdev = 15131.438
[info]   CI (99.9%): [6519228.894, 6635760.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1137.158 ±(99.9%) 10.019 MB/sec [Average]
[info]   (min, avg, max) = (1134.413, 1137.158, 1140.932), stdev = 2.602
[info]   CI (99.9%): [1127.138, 1147.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1188.985 ±(99.9%) 1406.515 MB/sec [Average]
[info]   (min, avg, max) = (756.348, 1188.985, 1627.677), stdev = 365.267
[info]   CI (99.9%): [≈ 0, 2595.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   284.464 ±(99.9%) 337.685 B/op [Average]
[info]   (min, avg, max) = (180.876, 284.464, 390.057), stdev = 87.696
[info]   CI (99.9%): [≈ 0, 622.149] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.015), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 7.000), stdev = 2.387
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 5.88% complete, ETA 00:08:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196183.359 ops/s
[info] # Warmup Iteration   2: 286257.889 ops/s
[info] # Warmup Iteration   3: 341106.541 ops/s
[info] # Warmup Iteration   4: 269312.085 ops/s
[info] # Warmup Iteration   5: 238277.415 ops/s
[info] Iteration   1: 271006.421 ops/s
[info]                  ·gc.alloc.rate:               716.610 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.033 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4754.578 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 351616.065 ops/s
[info]                  ·gc.alloc.rate:                   929.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3491.695 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 350895.439 ops/s
[info]                  ·gc.alloc.rate:                   927.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.376 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3333.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 263936.088 ops/s
[info]                  ·gc.alloc.rate:               697.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.374 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4222.603 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     15.000 ms
[info] Iteration   5: 249630.031 ops/s
[info]                  ·gc.alloc.rate:                   660.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4254.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   297416.809 ±(99.9%) 191562.923 ops/s [Average]
[info]   (min, avg, max) = (249630.031, 297416.809, 351616.065), stdev = 49748.283
[info]   CI (99.9%): [105853.885, 488979.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   786.394 ±(99.9%) 506.413 MB/sec [Average]
[info]   (min, avg, max) = (660.051, 786.394, 929.622), stdev = 131.514
[info]   CI (99.9%): [279.981, 1292.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.002, 4160.002), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   745.223 ±(99.9%) 219.196 MB/sec [Average]
[info]   (min, avg, max) = (675.055, 745.223, 819.033), stdev = 56.924
[info]   CI (99.9%): [526.027, 964.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4011.294 ±(99.9%) 2266.923 B/op [Average]
[info]   (min, avg, max) = (3333.029, 4011.294, 4754.578), stdev = 588.713
[info]   CI (99.9%): [1744.371, 6278.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.624 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.394), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.000, 15.000), stdev = 6.000
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 8.82% complete, ETA 00:08:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5197442.471 ops/s
[info] # Warmup Iteration   2: 5253721.233 ops/s
[info] # Warmup Iteration   3: 3842183.523 ops/s
[info] # Warmup Iteration   4: 5436096.270 ops/s
[info] # Warmup Iteration   5: 5481588.285 ops/s
[info] Iteration   1: 4365890.827 ops/s
[info]                  ·gc.alloc.rate:               466.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 184.792 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 5501861.940 ops/s
[info]                  ·gc.alloc.rate:               587.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.873 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 5458192.753 ops/s
[info]                  ·gc.alloc.rate:                   582.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 5505695.184 ops/s
[info]                  ·gc.alloc.rate:               587.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.494 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 5526148.816 ops/s
[info]                  ·gc.alloc.rate:                   590.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.324 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     225.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5271557.904 ±(99.9%) 1951845.571 ops/s [Average]
[info]   (min, avg, max) = (4365890.827, 5271557.904, 5526148.816), stdev = 506888.096
[info]   CI (99.9%): [3319712.333, 7223403.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   562.913 ±(99.9%) 208.452 MB/sec [Average]
[info]   (min, avg, max) = (466.189, 562.913, 590.081), stdev = 54.134
[info]   CI (99.9%): [354.462, 771.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   626.553 ±(99.9%) 821.070 MB/sec [Average]
[info]   (min, avg, max) = (425.179, 626.553, 912.343), stdev = 213.229
[info]   CI (99.9%): [≈ 0, 1447.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   186.997 ±(99.9%) 226.153 B/op [Average]
[info]   (min, avg, max) = (121.494, 186.997, 262.962), stdev = 58.731
[info]   CI (99.9%): [≈ 0, 413.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.036), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 7.000), stdev = 2.550
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 11.76% complete, ETA 00:08:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2807763.908 ops/s
[info] # Warmup Iteration   2: 3224613.857 ops/s
[info] # Warmup Iteration   3: 3273920.230 ops/s
[info] # Warmup Iteration   4: 2734945.991 ops/s
[info] # Warmup Iteration   5: 2690514.790 ops/s
[info] Iteration   1: 3458031.522 ops/s
[info]                  ·gc.alloc.rate:                   1635.305 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1550.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     705.357 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3135382.641 ops/s
[info]                  ·gc.alloc.rate:                   1482.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1407.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     706.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3392874.590 ops/s
[info]                  ·gc.alloc.rate:                   1604.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1872.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     868.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2614407.282 ops/s
[info]                  ·gc.alloc.rate:               1236.373 MB/sec
[info]                  ·gc.alloc.rate.norm:          744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1107.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 666.667 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 3401708.843 ops/s
[info]                  ·gc.alloc.rate:                   1608.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1925.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     890.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3200480.976 ±(99.9%) 1349869.589 ops/s [Average]
[info]   (min, avg, max) = (2614407.282, 3200480.976, 3458031.522), stdev = 350556.846
[info]   CI (99.9%): [1850611.386, 4550350.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1513.517 ±(99.9%) 638.340 MB/sec [Average]
[info]   (min, avg, max) = (1236.373, 1513.517, 1635.305), stdev = 165.775
[info]   CI (99.9%): [875.177, 2151.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1572.844 ±(99.9%) 1303.805 MB/sec [Average]
[info]   (min, avg, max) = (1107.860, 1572.844, 1925.632), stdev = 338.594
[info]   CI (99.9%): [269.039, 2876.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   767.460 ±(99.9%) 399.836 B/op [Average]
[info]   (min, avg, max) = (666.667, 767.460, 890.581), stdev = 103.836
[info]   CI (99.9%): [367.624, 1167.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.056 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.038), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 4.000), stdev = 0.894
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 14.71% complete, ETA 00:07:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 281573.022 ops/s
[info] # Warmup Iteration   2: 502525.917 ops/s
[info] # Warmup Iteration   3: 521198.146 ops/s
[info] # Warmup Iteration   4: 511889.747 ops/s
[info] # Warmup Iteration   5: 514350.578 ops/s
[info] Iteration   1: 509641.731 ops/s
[info]                  ·gc.alloc.rate:               518.317 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      617.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1905.002 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 521651.634 ops/s
[info]                  ·gc.alloc.rate:               530.545 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      331.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 998.908 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 518273.867 ops/s
[info]                  ·gc.alloc.rate:                   527.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          688.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2089.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 523838.324 ops/s
[info]                  ·gc.alloc.rate:               532.745 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      357.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1072.765 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 519243.409 ops/s
[info]                  ·gc.alloc.rate:                   528.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          762.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2309.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   518529.793 ±(99.9%) 20869.885 ops/s [Average]
[info]   (min, avg, max) = (509641.731, 518529.793, 523838.324), stdev = 5419.843
[info]   CI (99.9%): [497659.908, 539399.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   527.344 ±(99.9%) 21.219 MB/sec [Average]
[info]   (min, avg, max) = (518.317, 527.344, 532.745), stdev = 5.511
[info]   CI (99.9%): [506.125, 548.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   551.255 ±(99.9%) 754.990 MB/sec [Average]
[info]   (min, avg, max) = (331.228, 551.255, 762.329), stdev = 196.069
[info]   CI (99.9%): [≈ 0, 1306.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1675.263 ±(99.9%) 2316.638 B/op [Average]
[info]   (min, avg, max) = (998.908, 1675.263, 2309.915), stdev = 601.623
[info]   CI (99.9%): [≈ 0, 3991.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.218 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.126), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.000, 8.000), stdev = 3.317
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 17.65% complete, ETA 00:07:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2573399.171 ops/s
[info] # Warmup Iteration   2: 2879618.286 ops/s
[info] # Warmup Iteration   3: 3041688.223 ops/s
[info] # Warmup Iteration   4: 3056400.371 ops/s
[info] # Warmup Iteration   5: 3045566.720 ops/s
[info] Iteration   1: 3112703.576 ops/s
[info]                  ·gc.alloc.rate:               838.881 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 413.954 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 3110092.494 ops/s
[info]                  ·gc.alloc.rate:                   838.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.782 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     770.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3117456.432 ops/s
[info]                  ·gc.alloc.rate:               840.195 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 357.503 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3094440.922 ops/s
[info]                  ·gc.alloc.rate:                   833.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2558523.493 ops/s
[info]                  ·gc.alloc.rate:               689.496 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 395.641 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   2998643.384 ±(99.9%) 947973.986 ops/s [Average]
[info]   (min, avg, max) = (2558523.493, 2998643.384, 3117456.432), stdev = 246185.834
[info]   CI (99.9%): [2050669.398, 3946617.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   808.146 ±(99.9%) 255.563 MB/sec [Average]
[info]   (min, avg, max) = (689.496, 808.146, 840.195), stdev = 66.369
[info]   CI (99.9%): [552.584, 1063.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   873.933 ±(99.9%) 1421.891 MB/sec [Average]
[info]   (min, avg, max) = (643.379, 873.933, 1523.782), stdev = 369.261
[info]   CI (99.9%): [≈ 0, 2295.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   456.223 ±(99.9%) 685.939 B/op [Average]
[info]   (min, avg, max) = (343.220, 456.223, 770.799), stdev = 178.136
[info]   CI (99.9%): [≈ 0, 1142.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 20.59% complete, ETA 00:07:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 45319.994 ops/s
[info] # Warmup Iteration   2: 124857.340 ops/s
[info] # Warmup Iteration   3: 105186.946 ops/s
[info] # Warmup Iteration   4: 109181.642 ops/s
[info] # Warmup Iteration   5: 151756.000 ops/s
[info] Iteration   1: 155919.474 ops/s
[info]                  ·gc.alloc.rate:               1064.025 MB/sec
[info]                  ·gc.alloc.rate.norm:          10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8264.075 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 154057.120 ops/s
[info]                  ·gc.alloc.rate:                   1051.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1523.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     15560.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.851 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 157934.429 ops/s
[info]                  ·gc.alloc.rate:               1077.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7056.759 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 157882.793 ops/s
[info]                  ·gc.alloc.rate:                   1077.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13138.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.830 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 155474.652 ops/s
[info]                  ·gc.alloc.rate:                   1060.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.186 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12124.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   156253.694 ±(99.9%) 6392.063 ops/s [Average]
[info]   (min, avg, max) = (154057.120, 156253.694, 157934.429), stdev = 1659.999
[info]   CI (99.9%): [149861.631, 162645.757] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1066.270 ±(99.9%) 43.575 MB/sec [Average]
[info]   (min, avg, max) = (1051.294, 1066.270, 1077.706), stdev = 11.316
[info]   CI (99.9%): [1022.695, 1109.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10736.003, 10736.003, 10736.003), stdev = 0.001
[info]   CI (99.9%): [10736.003, 10736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1113.566 ±(99.9%) 1317.588 MB/sec [Average]
[info]   (min, avg, max) = (708.375, 1113.566, 1523.753), stdev = 342.173
[info]   CI (99.9%): [≈ 0, 2431.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11229.002 ±(99.9%) 13533.768 B/op [Average]
[info]   (min, avg, max) = (7056.759, 11229.002, 15560.850), stdev = 3514.677
[info]   CI (99.9%): [≈ 0, 24762.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.378 ±(99.9%) 1.658 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.378, 0.851), stdev = 0.431
[info]   CI (99.9%): [≈ 0, 2.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 6.000), stdev = 1.517
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 23.53% complete, ETA 00:06:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 364675.691 ops/s
[info] # Warmup Iteration   2: 757143.651 ops/s
[info] # Warmup Iteration   3: 595407.276 ops/s
[info] # Warmup Iteration   4: 739374.354 ops/s
[info] # Warmup Iteration   5: 763340.527 ops/s
[info] Iteration   1: 833185.195 ops/s
[info]                  ·gc.alloc.rate:                   982.920 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1189.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2246.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 602058.671 ops/s
[info]                  ·gc.alloc.rate:               708.742 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      448.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1175.452 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 651855.446 ops/s
[info]                  ·gc.alloc.rate:                   769.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          922.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2226.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 854619.689 ops/s
[info]                  ·gc.alloc.rate:                   1008.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1802.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 666561.973 ops/s
[info]                  ·gc.alloc.rate:               786.377 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      505.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1193.610 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   721656.195 ±(99.9%) 440428.054 ops/s [Average]
[info]   (min, avg, max) = (602058.671, 721656.195, 854619.689), stdev = 114377.767
[info]   CI (99.9%): [281228.141, 1162084.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   851.056 ±(99.9%) 521.114 MB/sec [Average]
[info]   (min, avg, max) = (708.742, 851.056, 1008.228), stdev = 135.332
[info]   CI (99.9%): [329.942, 1372.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.001, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   809.149 ±(99.9%) 1230.220 MB/sec [Average]
[info]   (min, avg, max) = (448.864, 809.149, 1189.528), stdev = 319.484
[info]   CI (99.9%): [≈ 0, 2039.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1728.830 ±(99.9%) 2031.809 B/op [Average]
[info]   (min, avg, max) = (1175.452, 1728.830, 2246.129), stdev = 527.654
[info]   CI (99.9%): [≈ 0, 3760.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.244 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.151), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 3.000), stdev = 0.837
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 10.000), stdev = 3.962
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 26.47% complete, ETA 00:06:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2313067.748 ops/s
[info] # Warmup Iteration   2: 2405834.378 ops/s
[info] # Warmup Iteration   3: 2400221.813 ops/s
[info] # Warmup Iteration   4: 2432443.067 ops/s
[info] # Warmup Iteration   5: 3526366.593 ops/s
[info] Iteration   1: 3489878.958 ops/s
[info]                  ·gc.alloc.rate:                   869.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          955.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     430.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3488100.830 ops/s
[info]                  ·gc.alloc.rate:               869.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      870.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 392.709 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   3: 3470834.205 ops/s
[info]                  ·gc.alloc.rate:                   864.809 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     359.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3546461.179 ops/s
[info]                  ·gc.alloc.rate:                   883.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1062.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3497663.160 ops/s
[info]                  ·gc.alloc.rate:                   871.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          928.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417.566 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3498587.666 ±(99.9%) 109739.938 ops/s [Average]
[info]   (min, avg, max) = (3470834.205, 3498587.666, 3546461.179), stdev = 28499.113
[info]   CI (99.9%): [3388847.728, 3608327.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   871.725 ±(99.9%) 27.347 MB/sec [Average]
[info]   (min, avg, max) = (864.809, 871.725, 883.654), stdev = 7.102
[info]   CI (99.9%): [844.378, 899.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   922.117 ±(99.9%) 385.271 MB/sec [Average]
[info]   (min, avg, max) = (793.361, 922.117, 1062.240), stdev = 100.054
[info]   CI (99.9%): [536.847, 1307.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   414.414 ±(99.9%) 160.912 B/op [Average]
[info]   (min, avg, max) = (359.614, 414.414, 471.223), stdev = 41.788
[info]   CI (99.9%): [253.502, 575.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.048 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.028), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.702
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 29.41% complete, ETA 00:06:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 122572.178 ops/s
[info] # Warmup Iteration   2: 218561.147 ops/s
[info] # Warmup Iteration   3: 229296.892 ops/s
[info] # Warmup Iteration   4: 226038.818 ops/s
[info] # Warmup Iteration   5: 233590.471 ops/s
[info] Iteration   1: 230462.039 ops/s
[info]                  ·gc.alloc.rate:                   1239.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              8464.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11107.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 233900.830 ops/s
[info]                  ·gc.alloc.rate:               1257.914 MB/sec
[info]                  ·gc.alloc.rate.norm:          8464.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      755.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5085.301 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 229196.504 ops/s
[info]                  ·gc.alloc.rate:                   1233.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              8464.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1406.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9656.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.572 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 202097.321 ops/s
[info]                  ·gc.alloc.rate:               1087.234 MB/sec
[info]                  ·gc.alloc.rate.norm:          8464.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1277.465 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9944.936 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 164419.392 ops/s
[info]                  ·gc.alloc.rate:                   884.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              8464.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1161.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11111.512 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.399 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   212015.217 ±(99.9%) 113548.124 ops/s [Average]
[info]   (min, avg, max) = (164419.392, 212015.217, 233900.830), stdev = 29488.087
[info]   CI (99.9%): [98467.093, 325563.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1140.544 ±(99.9%) 610.571 MB/sec [Average]
[info]   (min, avg, max) = (884.584, 1140.544, 1257.914), stdev = 158.563
[info]   CI (99.9%): [529.973, 1751.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8464.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8464.002, 8464.002, 8464.003), stdev = 0.001
[info]   CI (99.9%): [8464.001, 8464.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1245.688 ±(99.9%) 1247.151 MB/sec [Average]
[info]   (min, avg, max) = (755.774, 1245.688, 1627.114), stdev = 323.881
[info]   CI (99.9%): [≈ 0, 2492.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9381.084 ±(99.9%) 9592.157 B/op [Average]
[info]   (min, avg, max) = (5085.301, 9381.084, 11111.512), stdev = 2491.053
[info]   CI (99.9%): [≈ 0, 18973.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.251 ±(99.9%) 0.966 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.251, 0.572), stdev = 0.251
[info]   CI (99.9%): [≈ 0, 1.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 12.000), stdev = 4.278
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 32.35% complete, ETA 00:06:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 78238.796 ops/s
[info] # Warmup Iteration   2: 560272.497 ops/s
[info] # Warmup Iteration   3: 686101.237 ops/s
[info] # Warmup Iteration   4: 782594.883 ops/s
[info] # Warmup Iteration   5: 685589.816 ops/s
[info] Iteration   1: 826344.680 ops/s
[info]                  ·gc.alloc.rate:               1071.486 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      928.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1768.050 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 815254.442 ops/s
[info]                  ·gc.alloc.rate:                   1057.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1947.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 642021.959 ops/s
[info]                  ·gc.alloc.rate:                   832.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1079.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2645.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 804731.717 ops/s
[info]                  ·gc.alloc.rate:                   1043.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1177.504 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2302.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 580035.549 ops/s
[info]                  ·gc.alloc.rate:               752.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      621.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1686.403 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   733677.669 ±(99.9%) 440294.205 ops/s [Average]
[info]   (min, avg, max) = (580035.549, 733677.669, 826344.680), stdev = 114343.007
[info]   CI (99.9%): [293383.464, 1173971.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   951.341 ±(99.9%) 570.952 MB/sec [Average]
[info]   (min, avg, max) = (752.096, 951.341, 1071.486), stdev = 148.274
[info]   CI (99.9%): [380.389, 1522.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.000, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   963.290 ±(99.9%) 815.393 MB/sec [Average]
[info]   (min, avg, max) = (621.733, 963.290, 1177.504), stdev = 211.755
[info]   CI (99.9%): [147.897, 1778.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2069.802 ±(99.9%) 1538.415 B/op [Average]
[info]   (min, avg, max) = (1686.403, 2069.802, 2645.474), stdev = 399.522
[info]   CI (99.9%): [531.387, 3608.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.094 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.051), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 2.775
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 35.29% complete, ETA 00:05:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1709541.917 ops/s
[info] # Warmup Iteration   2: 2589944.499 ops/s
[info] # Warmup Iteration   3: 2596093.878 ops/s
[info] # Warmup Iteration   4: 2659451.785 ops/s
[info] # Warmup Iteration   5: 2669846.298 ops/s
[info] Iteration   1: 2688173.997 ops/s
[info]                  ·gc.alloc.rate:                   1681.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1553.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     908.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2641837.373 ops/s
[info]                  ·gc.alloc.rate:                   1652.338 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1410.138 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     839.765 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2616632.047 ops/s
[info]                  ·gc.alloc.rate:                   1636.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1877.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1128.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2612162.211 ops/s
[info]                  ·gc.alloc.rate:                   1633.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1627.708 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     980.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2599826.934 ops/s
[info]                  ·gc.alloc.rate:                   1626.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1843.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1115.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2631726.512 ±(99.9%) 135002.499 ops/s [Average]
[info]   (min, avg, max) = (2599826.934, 2631726.512, 2688173.997), stdev = 35059.720
[info]   CI (99.9%): [2496724.013, 2766729.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1646.054 ±(99.9%) 84.331 MB/sec [Average]
[info]   (min, avg, max) = (1626.116, 1646.054, 1681.321), stdev = 21.901
[info]   CI (99.9%): [1561.723, 1730.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1662.202 ±(99.9%) 759.260 MB/sec [Average]
[info]   (min, avg, max) = (1410.138, 1662.202, 1877.062), stdev = 197.177
[info]   CI (99.9%): [902.942, 2421.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   994.562 ±(99.9%) 487.116 B/op [Average]
[info]   (min, avg, max) = (839.765, 994.562, 1128.506), stdev = 126.502
[info]   CI (99.9%): [507.446, 1481.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.035, 0.050), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 8.000), stdev = 2.510
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 38.24% complete, ETA 00:05:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 649878.730 ops/s
[info] # Warmup Iteration   2: 1010544.862 ops/s
[info] # Warmup Iteration   3: 1024756.196 ops/s
[info] # Warmup Iteration   4: 1027000.705 ops/s
[info] # Warmup Iteration   5: 1033501.231 ops/s
[info] Iteration   1: 1028653.946 ops/s
[info]                  ·gc.alloc.rate:      753.212 MB/sec
[info]                  ·gc.alloc.rate.norm: 1152.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 1034634.487 ops/s
[info]                  ·gc.alloc.rate:               757.600 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      856.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1301.662 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1033594.357 ops/s
[info]                  ·gc.alloc.rate:                   756.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          856.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1302.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1035583.245 ops/s
[info]                  ·gc.alloc.rate:               758.218 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1329.817 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1038792.853 ops/s
[info]                  ·gc.alloc.rate:               760.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          1152.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      875.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1325.718 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   1034251.777 ±(99.9%) 14188.533 ops/s [Average]
[info]   (min, avg, max) = (1028653.946, 1034251.777, 1038792.853), stdev = 3684.717
[info]   CI (99.9%): [1020063.244, 1048440.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   757.299 ±(99.9%) 10.353 MB/sec [Average]
[info]   (min, avg, max) = (753.212, 757.299, 760.625), stdev = 2.689
[info]   CI (99.9%): [746.945, 767.652] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1152.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1152.000, 1152.000, 1152.000), stdev = 0.001
[info]   CI (99.9%): [1152.000, 1152.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   692.524 ±(99.9%) 1491.171 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 692.524, 875.325), stdev = 387.252
[info]   CI (99.9%): [≈ 0, 2183.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1052.032 ±(99.9%) 2265.116 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 1052.032, 1329.817), stdev = 588.244
[info]   CI (99.9%): [≈ 0, 3317.148] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.109 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 5.000), stdev = 2.408
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 41.18% complete, ETA 00:05:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5423668.041 ops/s
[info] # Warmup Iteration   2: 4837988.222 ops/s
[info] # Warmup Iteration   3: 3993151.735 ops/s
[info] # Warmup Iteration   4: 4905962.707 ops/s
[info] # Warmup Iteration   5: 4910675.125 ops/s
[info] Iteration   1: 5731619.202 ops/s
[info]                  ·gc.alloc.rate:                   145.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          141.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     38.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5629890.051 ops/s
[info]                  ·gc.alloc.rate:                   143.140 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          133.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     37.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 5672735.853 ops/s
[info]                  ·gc.alloc.rate:                   144.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          125.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5681127.891 ops/s
[info]                  ·gc.alloc.rate:                   144.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          175.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     48.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5521736.066 ops/s
[info]                  ·gc.alloc.rate:                   140.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              40.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          109.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     31.330 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   5647421.813 ±(99.9%) 304239.681 ops/s [Average]
[info]   (min, avg, max) = (5521736.066, 5647421.813, 5731619.202), stdev = 79010.079
[info]   CI (99.9%): [5343182.132, 5951661.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   143.585 ±(99.9%) 7.736 MB/sec [Average]
[info]   (min, avg, max) = (140.389, 143.585, 145.725), stdev = 2.009
[info]   CI (99.9%): [135.849, 151.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   40.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (40.000, 40.000, 40.000), stdev = 0.001
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   137.214 ±(99.9%) 94.483 MB/sec [Average]
[info]   (min, avg, max) = (109.960, 137.214, 175.931), stdev = 24.537
[info]   CI (99.9%): [42.731, 231.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   38.183 ±(99.9%) 25.133 B/op [Average]
[info]   (min, avg, max) = (31.330, 38.183, 48.720), stdev = 6.527
[info]   CI (99.9%): [13.049, 63.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.096 ±(99.9%) 0.193 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.096, 0.146), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.027, 0.040), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.510
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 44.12% complete, ETA 00:05:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 67492.667 ops/s
[info] # Warmup Iteration   2: 148921.506 ops/s
[info] # Warmup Iteration   3: 151126.779 ops/s
[info] # Warmup Iteration   4: 149844.983 ops/s
[info] # Warmup Iteration   5: 154699.314 ops/s
[info] Iteration   1: 154871.050 ops/s
[info]                  ·gc.alloc.rate:                   958.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.344 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7927.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 152418.361 ops/s
[info]                  ·gc.alloc.rate:               943.223 MB/sec
[info]                  ·gc.alloc.rate.norm:          9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7673.044 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   3: 154337.079 ops/s
[info]                  ·gc.alloc.rate:                   955.090 MB/sec
[info]                  ·gc.alloc.rate.norm:              9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1383.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14102.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.849 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 154285.463 ops/s
[info]                  ·gc.alloc.rate:               954.796 MB/sec
[info]                  ·gc.alloc.rate.norm:          9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      643.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6560.862 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 153225.399 ops/s
[info]                  ·gc.alloc.rate:                   948.243 MB/sec
[info]                  ·gc.alloc.rate.norm:              9736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1198.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12302.701 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   153827.470 ±(99.9%) 3805.420 ops/s [Average]
[info]   (min, avg, max) = (152418.361, 153827.470, 154871.050), stdev = 988.255
[info]   CI (99.9%): [150022.051, 157632.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   951.949 ±(99.9%) 23.533 MB/sec [Average]
[info]   (min, avg, max) = (943.223, 951.949, 958.395), stdev = 6.112
[info]   CI (99.9%): [928.416, 975.483] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   9736.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9736.003, 9736.003, 9736.003), stdev = 0.001
[info]   CI (99.9%): [9736.003, 9736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   949.764 ±(99.9%) 1240.288 MB/sec [Average]
[info]   (min, avg, max) = (643.415, 949.764, 1383.471), stdev = 322.099
[info]   CI (99.9%): [≈ 0, 2190.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9713.338 ±(99.9%) 12663.812 B/op [Average]
[info]   (min, avg, max) = (6560.862, 9713.338, 14102.839), stdev = 3288.752
[info]   CI (99.9%): [≈ 0, 22377.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.297 ±(99.9%) 1.367 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.297, 0.849), stdev = 0.355
[info]   CI (99.9%): [≈ 0, 1.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 13.000), stdev = 4.722
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 47.06% complete, ETA 00:04:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1944255.409 ops/s
[info] # Warmup Iteration   2: 2533048.484 ops/s
[info] # Warmup Iteration   3: 3510539.281 ops/s
[info] # Warmup Iteration   4: 3332245.392 ops/s
[info] # Warmup Iteration   5: 3646608.201 ops/s
[info] Iteration   1: 2600538.669 ops/s
[info]                  ·gc.alloc.rate:      714.041 MB/sec
[info]                  ·gc.alloc.rate.norm: 432.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 2598185.091 ops/s
[info]                  ·gc.alloc.rate:               713.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 495.932 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3737836.161 ops/s
[info]                  ·gc.alloc.rate:               1026.312 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1523.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 641.357 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 3724600.587 ops/s
[info]                  ·gc.alloc.rate:                   1022.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     299.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3676326.947 ops/s
[info]                  ·gc.alloc.rate:                   1009.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     564.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3267497.491 ±(99.9%) 2350246.751 ops/s [Average]
[info]   (min, avg, max) = (2598185.091, 3267497.491, 3737836.161), stdev = 610351.618
[info]   CI (99.9%): [917250.740, 5617744.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   897.193 ±(99.9%) 645.350 MB/sec [Average]
[info]   (min, avg, max) = (713.420, 897.193, 1026.312), stdev = 167.595
[info]   CI (99.9%): [251.843, 1542.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   873.912 ±(99.9%) 2289.434 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 873.912, 1523.686), stdev = 594.559
[info]   CI (99.9%): [≈ 0, 3163.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   400.152 ±(99.9%) 990.354 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 400.152, 641.357), stdev = 257.192
[info]   CI (99.9%): [≈ 0, 1390.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 2.000), stdev = 0.837
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 9.000), stdev = 3.674
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 50.00% complete, ETA 00:04:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9872137.967 ops/s
[info] # Warmup Iteration   2: 12235570.222 ops/s
[info] # Warmup Iteration   3: 12618911.785 ops/s
[info] # Warmup Iteration   4: 12827622.172 ops/s
[info] # Warmup Iteration   5: 12545439.830 ops/s
[info] Iteration   1: 12876802.667 ops/s
[info]                  ·gc.alloc.rate:      392.864 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 12946382.078 ops/s
[info]                  ·gc.alloc.rate:               394.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 62.318 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 12967760.542 ops/s
[info]                  ·gc.alloc.rate:               395.640 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 59.344 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 12882336.896 ops/s
[info]                  ·gc.alloc.rate:                   393.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          466.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     57.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 12821858.529 ops/s
[info]                  ·gc.alloc.rate:               391.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 54.665 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   12899028.142 ±(99.9%) 225305.917 ops/s [Average]
[info]   (min, avg, max) = (12821858.529, 12899028.142, 12967760.542), stdev = 58511.231
[info]   CI (99.9%): [12673722.225, 13124334.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   393.544 ±(99.9%) 6.873 MB/sec [Average]
[info]   (min, avg, max) = (391.185, 393.544, 395.640), stdev = 1.785
[info]   CI (99.9%): [386.671, 400.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   382.853 ±(99.9%) 829.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 382.853, 512.802), stdev = 215.485
[info]   CI (99.9%): [≈ 0, 1212.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   46.667 ±(99.9%) 101.045 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 46.667, 62.318), stdev = 26.241
[info]   CI (99.9%): [≈ 0, 147.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.095
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 52.94% complete, ETA 00:04:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 615123.460 ops/s
[info] # Warmup Iteration   2: 941021.632 ops/s
[info] # Warmup Iteration   3: 929359.798 ops/s
[info] # Warmup Iteration   4: 955217.690 ops/s
[info] # Warmup Iteration   5: 965838.393 ops/s
[info] Iteration   1: 970816.424 ops/s
[info]                  ·gc.alloc.rate:                   1456.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1477.105 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2393.718 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 970518.026 ops/s
[info]                  ·gc.alloc.rate:                   1455.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2173.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 968567.791 ops/s
[info]                  ·gc.alloc.rate:                   1452.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1218.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1979.317 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 955818.079 ops/s
[info]                  ·gc.alloc.rate:                   1433.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1623.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2672.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 946797.229 ops/s
[info]                  ·gc.alloc.rate:                   1420.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1571.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2612.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   962503.510 ±(99.9%) 41360.594 ops/s [Average]
[info]   (min, avg, max) = (946797.229, 962503.510, 970816.424), stdev = 10741.215
[info]   CI (99.9%): [921142.916, 1003864.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1443.812 ±(99.9%) 62.127 MB/sec [Average]
[info]   (min, avg, max) = (1420.212, 1443.812, 1456.298), stdev = 16.134
[info]   CI (99.9%): [1381.685, 1505.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.000, 2360.000), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1446.490 ±(99.9%) 641.963 MB/sec [Average]
[info]   (min, avg, max) = (1218.500, 1446.490, 1623.720), stdev = 166.716
[info]   CI (99.9%): [804.527, 2088.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2366.367 ±(99.9%) 1125.622 B/op [Average]
[info]   (min, avg, max) = (1979.317, 2366.367, 2672.622), stdev = 292.320
[info]   CI (99.9%): [1240.745, 3491.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.176 B/op [Average]
[info]   (min, avg, max) = (0.034, 0.082, 0.135), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 10.000), stdev = 4.219
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 55.88% complete, ETA 00:04:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 603439.178 ops/s
[info] # Warmup Iteration   2: 1030511.056 ops/s
[info] # Warmup Iteration   3: 1080874.101 ops/s
[info] # Warmup Iteration   4: 1098056.684 ops/s
[info] # Warmup Iteration   5: 1092311.633 ops/s
[info] Iteration   1: 1087787.468 ops/s
[info]                  ·gc.alloc.rate:               431.443 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 425.056 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   2: 1089273.881 ops/s
[info]                  ·gc.alloc.rate:                   432.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          550.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     795.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 867683.036 ops/s
[info]                  ·gc.alloc.rate:               344.151 MB/sec
[info]                  ·gc.alloc.rate.norm:          624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      257.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 467.612 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1093753.696 ops/s
[info]                  ·gc.alloc.rate:                   433.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          483.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1099921.580 ops/s
[info]                  ·gc.alloc.rate:                   436.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              624.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          443.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     634.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   1047683.932 ±(99.9%) 387891.625 ops/s [Average]
[info]   (min, avg, max) = (867683.036, 1047683.932, 1099921.580), stdev = 100734.223
[info]   CI (99.9%): [659792.307, 1435575.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   415.537 ±(99.9%) 153.833 MB/sec [Average]
[info]   (min, avg, max) = (344.151, 415.537, 436.260), stdev = 39.950
[info]   CI (99.9%): [261.704, 569.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   624.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (624.000, 624.000, 624.001), stdev = 0.001
[info]   CI (99.9%): [624.000, 624.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   405.908 ±(99.9%) 482.493 MB/sec [Average]
[info]   (min, avg, max) = (257.899, 405.908, 550.453), stdev = 125.302
[info]   CI (99.9%): [≈ 0, 888.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   603.598 ±(99.9%) 597.892 B/op [Average]
[info]   (min, avg, max) = (425.056, 603.598, 795.054), stdev = 155.271
[info]   CI (99.9%): [5.705, 1201.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.125), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.090 ±(99.9%) 0.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.090, 0.179), stdev = 0.085
[info]   CI (99.9%): [≈ 0, 0.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 8.000), stdev = 2.950
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 58.82% complete, ETA 00:03:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3237957.118 ops/s
[info] # Warmup Iteration   2: 3807785.080 ops/s
[info] # Warmup Iteration   3: 3642290.502 ops/s
[info] # Warmup Iteration   4: 2749189.406 ops/s
[info] # Warmup Iteration   5: 2744131.159 ops/s
[info] Iteration   1: 3380800.011 ops/s
[info]                  ·gc.alloc.rate:                   618.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          640.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     298.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3906032.507 ops/s
[info]                  ·gc.alloc.rate:               715.034 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      610.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 245.866 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3909070.055 ops/s
[info]                  ·gc.alloc.rate:                   715.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1137.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     457.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3942839.390 ops/s
[info]                  ·gc.alloc.rate:                   721.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          529.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3917627.201 ops/s
[info]                  ·gc.alloc.rate:                   717.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     396.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3811273.833 ±(99.9%) 928299.837 ops/s [Average]
[info]   (min, avg, max) = (3380800.011, 3811273.833, 3942839.390), stdev = 241076.520
[info]   CI (99.9%): [2882973.996, 4739573.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   697.700 ±(99.9%) 169.970 MB/sec [Average]
[info]   (min, avg, max) = (618.883, 697.700, 721.829), stdev = 44.141
[info]   CI (99.9%): [527.730, 867.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   780.977 ±(99.9%) 1021.657 MB/sec [Average]
[info]   (min, avg, max) = (529.493, 780.977, 1137.231), stdev = 265.321
[info]   CI (99.9%): [≈ 0, 1802.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   321.867 ±(99.9%) 397.364 B/op [Average]
[info]   (min, avg, max) = (211.261, 321.867, 457.694), stdev = 103.194
[info]   CI (99.9%): [≈ 0, 719.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.019), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 6.000), stdev = 1.643
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 61.76% complete, ETA 00:03:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 64537.140 ops/s
[info] # Warmup Iteration   2: 897327.602 ops/s
[info] # Warmup Iteration   3: 887224.885 ops/s
[info] # Warmup Iteration   4: 741176.214 ops/s
[info] # Warmup Iteration   5: 774325.747 ops/s
[info] Iteration   1: 687865.599 ops/s
[info]                  ·gc.alloc.rate:                   849.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          620.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1418.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 692238.157 ops/s
[info]                  ·gc.alloc.rate:               855.338 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      620.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1409.315 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 981487.972 ops/s
[info]                  ·gc.alloc.rate:               1212.755 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1345.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2156.225 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 993853.168 ops/s
[info]                  ·gc.alloc.rate:                   1228.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1429.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2262.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 990482.602 ops/s
[info]                  ·gc.alloc.rate:                   1223.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          777.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1234.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   869185.499 ±(99.9%) 629948.542 ops/s [Average]
[info]   (min, avg, max) = (687865.599, 869185.499, 993853.168), stdev = 163595.636
[info]   CI (99.9%): [239236.957, 1499134.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1073.997 ±(99.9%) 778.463 MB/sec [Average]
[info]   (min, avg, max) = (849.925, 1073.997, 1228.069), stdev = 202.164
[info]   CI (99.9%): [295.533, 1852.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.001, 1944.001), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   958.361 ±(99.9%) 1532.154 MB/sec [Average]
[info]   (min, avg, max) = (620.073, 958.361, 1429.456), stdev = 397.895
[info]   CI (99.9%): [≈ 0, 2490.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1696.167 ±(99.9%) 1832.202 B/op [Average]
[info]   (min, avg, max) = (1234.235, 1696.167, 2262.790), stdev = 475.817
[info]   CI (99.9%): [≈ 0, 3528.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.095), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 10.000), stdev = 3.701
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 64.71% complete, ETA 00:03:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2563585.997 ops/s
[info] # Warmup Iteration   2: 2470336.952 ops/s
[info] # Warmup Iteration   3: 3061564.619 ops/s
[info] # Warmup Iteration   4: 3102708.970 ops/s
[info] # Warmup Iteration   5: 3096334.928 ops/s
[info] Iteration   1: 2685605.958 ops/s
[info]                  ·gc.alloc.rate:               314.096 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 172.160 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   2: 2491109.220 ops/s
[info]                  ·gc.alloc.rate:               291.355 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      281.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 177.612 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3142567.292 ops/s
[info]                  ·gc.alloc.rate:               367.538 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      269.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134.784 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3079682.835 ops/s
[info]                  ·gc.alloc.rate:                   360.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          504.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     257.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2565469.477 ops/s
[info]                  ·gc.alloc.rate:               300.042 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      236.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 145.077 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2792886.956 ±(99.9%) 1153307.933 ops/s [Average]
[info]   (min, avg, max) = (2491109.220, 2792886.956, 3142567.292), stdev = 299510.408
[info]   CI (99.9%): [1639579.024, 3946194.889] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   326.642 ±(99.9%) 134.875 MB/sec [Average]
[info]   (min, avg, max) = (291.355, 326.642, 367.538), stdev = 35.027
[info]   CI (99.9%): [191.767, 461.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   317.146 ±(99.9%) 412.191 MB/sec [Average]
[info]   (min, avg, max) = (236.572, 317.146, 504.805), stdev = 107.045
[info]   CI (99.9%): [≈ 0, 729.337] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   177.503 ±(99.9%) 186.326 B/op [Average]
[info]   (min, avg, max) = (134.784, 177.503, 257.883), stdev = 48.388
[info]   CI (99.9%): [≈ 0, 363.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.043), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 9.000), stdev = 4.099
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 67.65% complete, ETA 00:02:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 595077.867 ops/s
[info] # Warmup Iteration   2: 966686.420 ops/s
[info] # Warmup Iteration   3: 954678.827 ops/s
[info] # Warmup Iteration   4: 1150098.512 ops/s
[info] # Warmup Iteration   5: 1171516.237 ops/s
[info] Iteration   1: 1175552.870 ops/s
[info]                  ·gc.alloc.rate:               723.300 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 654.623 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1102436.219 ops/s
[info]                  ·gc.alloc.rate:                   678.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1301.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 956987.803 ops/s
[info]                  ·gc.alloc.rate:               588.840 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      425.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 698.982 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 1165337.757 ops/s
[info]                  ·gc.alloc.rate:                   717.009 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.370 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1071.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1174817.952 ops/s
[info]                  ·gc.alloc.rate:                   722.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.045 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     969.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1115026.520 ±(99.9%) 359702.636 ops/s [Average]
[info]   (min, avg, max) = (956987.803, 1115026.520, 1175552.870), stdev = 93413.632
[info]   CI (99.9%): [755323.884, 1474729.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   686.060 ±(99.9%) 221.269 MB/sec [Average]
[info]   (min, avg, max) = (588.840, 686.060, 723.300), stdev = 57.463
[info]   CI (99.9%): [464.792, 907.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   668.815 ±(99.9%) 792.653 MB/sec [Average]
[info]   (min, avg, max) = (425.195, 668.815, 912.326), stdev = 205.849
[info]   CI (99.9%): [≈ 0, 1461.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   939.251 ±(99.9%) 1034.277 B/op [Average]
[info]   (min, avg, max) = (654.623, 939.251, 1301.926), stdev = 268.599
[info]   CI (99.9%): [≈ 0, 1973.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.149), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 10.000), stdev = 3.507
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 70.59% complete, ETA 00:02:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3227414.544 ops/s
[info] # Warmup Iteration   2: 3224275.449 ops/s
[info] # Warmup Iteration   3: 4467519.276 ops/s
[info] # Warmup Iteration   4: 4427923.497 ops/s
[info] # Warmup Iteration   5: 4503479.165 ops/s
[info] Iteration   1: 4504294.413 ops/s
[info]                  ·gc.alloc.rate:                   687.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          489.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     170.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4485670.694 ops/s
[info]                  ·gc.alloc.rate:                   684.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          912.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4512921.219 ops/s
[info]                  ·gc.alloc.rate:                   688.431 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          831.014 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     289.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4444447.569 ops/s
[info]                  ·gc.alloc.rate:               678.008 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      387.528 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 137.176 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 4460408.307 ops/s
[info]                  ·gc.alloc.rate:                   680.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4481548.440 ±(99.9%) 111302.985 ops/s [Average]
[info]   (min, avg, max) = (4444447.569, 4481548.440, 4512921.219), stdev = 28905.032
[info]   CI (99.9%): [4370245.456, 4592851.425] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   683.652 ±(99.9%) 16.968 MB/sec [Average]
[info]   (min, avg, max) = (678.008, 683.652, 688.431), stdev = 4.407
[info]   CI (99.9%): [666.684, 700.620] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   668.806 ±(99.9%) 861.156 MB/sec [Average]
[info]   (min, avg, max) = (387.528, 668.806, 912.317), stdev = 223.640
[info]   CI (99.9%): [≈ 0, 1529.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   234.619 ±(99.9%) 300.212 B/op [Average]
[info]   (min, avg, max) = (137.176, 234.619, 319.974), stdev = 77.964
[info]   CI (99.9%): [≈ 0, 534.831] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.037), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.924
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 73.53% complete, ETA 00:02:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 193628.671 ops/s
[info] # Warmup Iteration   2: 339930.732 ops/s
[info] # Warmup Iteration   3: 353567.976 ops/s
[info] # Warmup Iteration   4: 333913.031 ops/s
[info] # Warmup Iteration   5: 306138.309 ops/s
[info] Iteration   1: 303346.059 ops/s
[info]                  ·gc.alloc.rate:               1044.264 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      780.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4047.208 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 356827.165 ops/s
[info]                  ·gc.alloc.rate:                   1228.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1451.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6400.743 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 269444.945 ops/s
[info]                  ·gc.alloc.rate:                   927.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7698.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 281749.095 ops/s
[info]                  ·gc.alloc.rate:               969.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          5416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      613.424 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3425.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 352399.708 ops/s
[info]                  ·gc.alloc.rate:                   1213.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1142.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5100.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   312753.395 ±(99.9%) 154502.904 ops/s [Average]
[info]   (min, avg, max) = (269444.945, 312753.395, 356827.165), stdev = 40123.914
[info]   CI (99.9%): [158250.490, 467256.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1076.652 ±(99.9%) 531.887 MB/sec [Average]
[info]   (min, avg, max) = (927.564, 1076.652, 1228.396), stdev = 138.129
[info]   CI (99.9%): [544.765, 1608.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.002), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1061.298 ±(99.9%) 1367.780 MB/sec [Average]
[info]   (min, avg, max) = (613.424, 1061.298, 1451.744), stdev = 355.208
[info]   CI (99.9%): [≈ 0, 2429.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5334.497 ±(99.9%) 6691.889 B/op [Average]
[info]   (min, avg, max) = (3425.357, 5334.497, 7698.245), stdev = 1737.862
[info]   CI (99.9%): [≈ 0, 12026.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.191 ±(99.9%) 0.822 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.191, 0.459), stdev = 0.214
[info]   CI (99.9%): [≈ 0, 1.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 7.000), stdev = 1.924
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 76.47% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96944.736 ops/s
[info] # Warmup Iteration   2: 968381.301 ops/s
[info] # Warmup Iteration   3: 978399.787 ops/s
[info] # Warmup Iteration   4: 986890.855 ops/s
[info] # Warmup Iteration   5: 982695.959 ops/s
[info] Iteration   1: 979170.468 ops/s
[info]                  ·gc.alloc.rate:               970.928 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      769.037 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1235.620 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 995077.181 ops/s
[info]                  ·gc.alloc.rate:               986.702 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      774.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1224.300 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 786793.943 ops/s
[info]                  ·gc.alloc.rate:                   780.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          876.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1752.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 819448.492 ops/s
[info]                  ·gc.alloc.rate:               812.533 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1683.109 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 984572.836 ops/s
[info]                  ·gc.alloc.rate:               976.266 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      877.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1402.943 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   913012.584 ±(99.9%) 389456.600 ops/s [Average]
[info]   (min, avg, max) = (786793.943, 913012.584, 995077.181), stdev = 101140.642
[info]   CI (99.9%): [523555.984, 1302469.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   905.313 ±(99.9%) 386.220 MB/sec [Average]
[info]   (min, avg, max) = (780.139, 905.313, 986.702), stdev = 100.300
[info]   CI (99.9%): [519.094, 1291.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.001), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   834.937 ±(99.9%) 222.402 MB/sec [Average]
[info]   (min, avg, max) = (769.037, 834.937, 877.977), stdev = 57.757
[info]   CI (99.9%): [612.535, 1057.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1459.791 ±(99.9%) 952.541 B/op [Average]
[info]   (min, avg, max) = (1224.300, 1459.791, 1752.981), stdev = 247.372
[info]   CI (99.9%): [507.249, 2412.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.072 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 2.049
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 79.41% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2945696.721 ops/s
[info] # Warmup Iteration   2: 3572255.233 ops/s
[info] # Warmup Iteration   3: 3643167.992 ops/s
[info] # Warmup Iteration   4: 3558648.716 ops/s
[info] # Warmup Iteration   5: 3623262.172 ops/s
[info] Iteration   1: 3608390.309 ops/s
[info]                  ·gc.alloc.rate:               587.175 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      956.019 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 416.811 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 3615972.307 ops/s
[info]                  ·gc.alloc.rate:               588.413 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.522 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 193.833 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3614571.615 ops/s
[info]                  ·gc.alloc.rate:                   588.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          425.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3608962.866 ops/s
[info]                  ·gc.alloc.rate:                   587.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          793.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3597596.620 ops/s
[info]                  ·gc.alloc.rate:                   585.418 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.642 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3609098.743 ±(99.9%) 27901.720 ops/s [Average]
[info]   (min, avg, max) = (3597596.620, 3609098.743, 3615972.307), stdev = 7245.988
[info]   CI (99.9%): [3581197.023, 3637000.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   587.291 ±(99.9%) 4.545 MB/sec [Average]
[info]   (min, avg, max) = (585.418, 587.291, 588.413), stdev = 1.180
[info]   CI (99.9%): [582.745, 591.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   668.846 ±(99.9%) 882.873 MB/sec [Average]
[info]   (min, avg, max) = (425.192, 668.846, 956.019), stdev = 229.279
[info]   CI (99.9%): [≈ 0, 1551.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   291.641 ±(99.9%) 385.824 B/op [Average]
[info]   (min, avg, max) = (185.061, 291.641, 416.811), stdev = 100.197
[info]   CI (99.9%): [≈ 0, 677.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.036), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 4.000), stdev = 1.342
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 82.35% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 102961.841 ops/s
[info] # Warmup Iteration   2: 266558.279 ops/s
[info] # Warmup Iteration   3: 272465.258 ops/s
[info] # Warmup Iteration   4: 274918.631 ops/s
[info] # Warmup Iteration   5: 276261.387 ops/s
[info] Iteration   1: 275915.312 ops/s
[info]                  ·gc.alloc.rate:                   1030.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              5864.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1214.797 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6915.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 275946.746 ops/s
[info]                  ·gc.alloc.rate:                   1028.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              5864.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          724.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4128.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 242516.012 ops/s
[info]                  ·gc.alloc.rate:               903.941 MB/sec
[info]                  ·gc.alloc.rate.norm:          5864.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      970.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6296.644 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 277181.671 ops/s
[info]                  ·gc.alloc.rate:                   1033.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              5864.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1109.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6295.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.473 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 250951.999 ops/s
[info]                  ·gc.alloc.rate:                   935.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              5864.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          932.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5846.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.653 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   264502.348 ±(99.9%) 63535.804 ops/s [Average]
[info]   (min, avg, max) = (242516.012, 264502.348, 277181.671), stdev = 16500.047
[info]   CI (99.9%): [200966.543, 328038.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   986.204 ±(99.9%) 237.950 MB/sec [Average]
[info]   (min, avg, max) = (903.941, 986.204, 1033.135), stdev = 61.795
[info]   CI (99.9%): [748.254, 1224.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5864.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5864.002, 5864.002, 5864.002), stdev = 0.001
[info]   CI (99.9%): [5864.001, 5864.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   990.268 ±(99.9%) 718.124 MB/sec [Average]
[info]   (min, avg, max) = (724.091, 990.268, 1214.797), stdev = 186.495
[info]   CI (99.9%): [272.144, 1708.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5896.660 ±(99.9%) 4078.871 B/op [Average]
[info]   (min, avg, max) = (4128.117, 5896.660, 6915.820), stdev = 1059.270
[info]   CI (99.9%): [1817.790, 9975.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.344 ±(99.9%) 0.947 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.344, 0.653), stdev = 0.246
[info]   CI (99.9%): [≈ 0, 1.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 3.200, 4.000), stdev = 0.837
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 12.000), stdev = 3.286
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 85.29% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77651.146 ops/s
[info] # Warmup Iteration   2: 855254.863 ops/s
[info] # Warmup Iteration   3: 716514.291 ops/s
[info] # Warmup Iteration   4: 902586.964 ops/s
[info] # Warmup Iteration   5: 960655.889 ops/s
[info] Iteration   1: 715638.252 ops/s
[info]                  ·gc.alloc.rate:               709.607 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1442.328 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 898740.527 ops/s
[info]                  ·gc.alloc.rate:               891.158 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      806.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1410.935 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 701544.492 ops/s
[info]                  ·gc.alloc.rate:                   695.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          818.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1834.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 986920.350 ops/s
[info]                  ·gc.alloc.rate:               978.608 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1398.004 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 993804.312 ops/s
[info]                  ·gc.alloc.rate:               985.405 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      876.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1388.342 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   859329.587 ±(99.9%) 549507.979 ops/s [Average]
[info]   (min, avg, max) = (701544.492, 859329.587, 993804.312), stdev = 142705.477
[info]   CI (99.9%): [309821.608, 1408837.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   852.081 ±(99.9%) 544.865 MB/sec [Average]
[info]   (min, avg, max) = (695.626, 852.081, 985.405), stdev = 141.500
[info]   CI (99.9%): [307.216, 1396.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.001, 1560.001), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   806.814 ±(99.9%) 348.124 MB/sec [Average]
[info]   (min, avg, max) = (656.080, 806.814, 876.986), stdev = 90.407
[info]   CI (99.9%): [458.690, 1154.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1494.821 ±(99.9%) 735.366 B/op [Average]
[info]   (min, avg, max) = (1388.342, 1494.821, 1834.494), stdev = 190.972
[info]   CI (99.9%): [759.454, 2230.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.241 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.140), stdev = 0.063
[info]   CI (99.9%): [≈ 0, 0.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 88.24% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2184796.359 ops/s
[info] # Warmup Iteration   2: 2741559.162 ops/s
[info] # Warmup Iteration   3: 2746960.883 ops/s
[info] # Warmup Iteration   4: 2768011.416 ops/s
[info] # Warmup Iteration   5: 2749567.310 ops/s
[info] Iteration   1: 2789644.185 ops/s
[info]                  ·gc.alloc.rate:               468.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      512.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 289.207 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2212694.702 ops/s
[info]                  ·gc.alloc.rate:               371.296 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      489.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 347.794 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2745116.971 ops/s
[info]                  ·gc.alloc.rate:                   460.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          466.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     267.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2770615.555 ops/s
[info]                  ·gc.alloc.rate:               464.921 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      445.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 252.965 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2282121.527 ops/s
[info]                  ·gc.alloc.rate:                   382.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          425.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     293.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2560038.588 ±(99.9%) 1104673.615 ops/s [Average]
[info]   (min, avg, max) = (2212694.702, 2560038.588, 2789644.185), stdev = 286880.230
[info]   CI (99.9%): [1455364.973, 3664712.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   429.581 ±(99.9%) 185.393 MB/sec [Average]
[info]   (min, avg, max) = (371.296, 429.581, 468.109), stdev = 48.146
[info]   CI (99.9%): [244.188, 614.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   467.877 ±(99.9%) 133.371 MB/sec [Average]
[info]   (min, avg, max) = (425.152, 467.877, 512.804), stdev = 34.636
[info]   CI (99.9%): [334.506, 601.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   290.119 ±(99.9%) 139.200 B/op [Average]
[info]   (min, avg, max) = (252.965, 290.119, 347.794), stdev = 36.150
[info]   CI (99.9%): [150.920, 429.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.014), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 9.000), stdev = 3.493
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 91.18% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1176740.527 ops/s
[info] # Warmup Iteration   2: 1680490.279 ops/s
[info] # Warmup Iteration   3: 1688574.703 ops/s
[info] # Warmup Iteration   4: 1717490.319 ops/s
[info] # Warmup Iteration   5: 1677016.008 ops/s
[info] Iteration   1: 1698634.897 ops/s
[info]                  ·gc.alloc.rate:               682.366 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      860.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 796.537 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 1729871.294 ops/s
[info]                  ·gc.alloc.rate:               694.951 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      819.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 744.868 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 1469855.945 ops/s
[info]                  ·gc.alloc.rate:                   590.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          780.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     835.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 1736020.998 ops/s
[info]                  ·gc.alloc.rate:               697.333 MB/sec
[info]                  ·gc.alloc.rate.norm:          632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      743.312 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 673.671 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 1288406.103 ops/s
[info]                  ·gc.alloc.rate:                   517.575 MB/sec
[info]                  ·gc.alloc.rate.norm:              632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          708.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     865.032 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1584557.848 ±(99.9%) 765138.159 ops/s [Average]
[info]   (min, avg, max) = (1288406.103, 1584557.848, 1736020.998), stdev = 198703.950
[info]   CI (99.9%): [819419.688, 2349696.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   636.539 ±(99.9%) 307.347 MB/sec [Average]
[info]   (min, avg, max) = (517.575, 636.539, 697.333), stdev = 79.817
[info]   CI (99.9%): [329.192, 943.886] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (632.000, 632.000, 632.000), stdev = 0.001
[info]   CI (99.9%): [632.000, 632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   782.239 ±(99.9%) 230.827 MB/sec [Average]
[info]   (min, avg, max) = (708.416, 782.239, 860.015), stdev = 59.945
[info]   CI (99.9%): [551.412, 1013.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   783.078 ±(99.9%) 292.324 B/op [Average]
[info]   (min, avg, max) = (673.671, 783.078, 865.032), stdev = 75.916
[info]   CI (99.9%): [490.754, 1075.402] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.027, 0.111), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 94.12% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5273515.421 ops/s
[info] # Warmup Iteration   2: 6063366.063 ops/s
[info] # Warmup Iteration   3: 6311218.189 ops/s
[info] # Warmup Iteration   4: 6230935.081 ops/s
[info] # Warmup Iteration   5: 6319124.176 ops/s
[info] Iteration   1: 6332129.132 ops/s
[info]                  ·gc.alloc.rate:               289.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      307.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 76.329 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 6357244.376 ops/s
[info]                  ·gc.alloc.rate:               290.939 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      293.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 72.729 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 6270636.339 ops/s
[info]                  ·gc.alloc.rate:                   286.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          281.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     70.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6258049.586 ops/s
[info]                  ·gc.alloc.rate:               286.399 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      269.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 67.682 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 6335302.260 ops/s
[info]                  ·gc.alloc.rate:                   289.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          257.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6310672.339 ±(99.9%) 167934.183 ops/s [Average]
[info]   (min, avg, max) = (6258049.586, 6310672.339, 6357244.376), stdev = 43611.974
[info]   CI (99.9%): [6142738.156, 6478606.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   288.807 ±(99.9%) 7.687 MB/sec [Average]
[info]   (min, avg, max) = (286.399, 288.807, 290.939), stdev = 1.996
[info]   CI (99.9%): [281.120, 296.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   281.889 ±(99.9%) 75.090 MB/sec [Average]
[info]   (min, avg, max) = (257.908, 281.889, 307.212), stdev = 19.501
[info]   CI (99.9%): [206.800, 356.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   70.269 ±(99.9%) 18.089 B/op [Average]
[info]   (min, avg, max) = (64.046, 70.269, 76.329), stdev = 4.698
[info]   CI (99.9%): [52.180, 88.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.010), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.400, 5.000), stdev = 1.673
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_112, VM 25.112-b15
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_112/jre/bin/java
[info] # VM options: <none>
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 97.06% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 98382.754 ops/s
[info] # Warmup Iteration   2: 219548.790 ops/s
[info] # Warmup Iteration   3: 174294.929 ops/s
[info] # Warmup Iteration   4: 205258.003 ops/s
[info] # Warmup Iteration   5: 156977.613 ops/s
[info] Iteration   1: 156380.157 ops/s
[info]                  ·gc.alloc.rate:               730.784 MB/sec
[info]                  ·gc.alloc.rate.norm:          7352.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      859.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8651.927 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 207232.343 ops/s
[info]                  ·gc.alloc.rate:                   968.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              7352.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1599.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12141.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 156232.579 ops/s
[info]                  ·gc.alloc.rate:                   730.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              7352.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          743.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7485.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.210 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 156157.433 ops/s
[info]                  ·gc.alloc.rate:               729.761 MB/sec
[info]                  ·gc.alloc.rate.norm:          7352.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      708.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7136.915 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 156330.008 ops/s
[info]                  ·gc.alloc.rate:                   730.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              7352.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          675.088 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6793.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   166466.504 ±(99.9%) 87752.169 ops/s [Average]
[info]   (min, avg, max) = (156157.433, 166466.504, 207232.343), stdev = 22788.960
[info]   CI (99.9%): [78714.335, 254218.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   777.912 ±(99.9%) 409.962 MB/sec [Average]
[info]   (min, avg, max) = (729.761, 777.912, 968.362), stdev = 106.466
[info]   CI (99.9%): [367.950, 1187.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   7352.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7352.002, 7352.003, 7352.003), stdev = 0.001
[info]   CI (99.9%): [7352.001, 7352.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   917.227 ±(99.9%) 1492.456 MB/sec [Average]
[info]   (min, avg, max) = (675.088, 917.227, 1599.254), stdev = 387.586
[info]   CI (99.9%): [≈ 0, 2409.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8442.066 ±(99.9%) 8407.095 B/op [Average]
[info]   (min, avg, max) = (6793.780, 8442.066, 12141.859), stdev = 2183.296
[info]   CI (99.9%): [34.971, 16849.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 0.669 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.419), stdev = 0.174
[info]   CI (99.9%): [≈ 0, 0.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 10.000), stdev = 3.912
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:09:04
[info] Benchmark                                                                     Mode  Cnt         Score         Error   Units
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1722407.019 ±   23907.628   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1226.196 ±      17.017  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1120.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1353.093 ±    1565.435  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1235.250 ±    1422.317    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±       0.160  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.038 ±       0.147    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        10.000                counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        20.000                    ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6577494.674 ±   58265.780   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1137.158 ±      10.019  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1188.985 ±    1406.515  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       284.464 ±     337.685    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.105  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.006 ±       0.025    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5         8.000                counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        21.000                    ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    297416.809 ±  191562.923   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5       786.394 ±     506.413  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.002 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5       745.223 ±     219.196  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4011.294 ±    2266.923    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.021 ±       0.098  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.116 ±       0.624    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5         5.000                counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        30.000                    ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5271557.904 ± 1951845.571   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       562.913 ±     208.452  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       626.553 ±     821.070  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       186.997 ±     226.153    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±       0.227  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±       0.065    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         7.000                counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        20.000                    ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3200480.976 ± 1349869.589   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1513.517 ±     638.340  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1572.844 ±    1303.805  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       767.460 ±     399.836    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.046 ±       0.119  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.022 ±       0.056    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        13.000                counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        34.000                    ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    518529.793 ±   20869.885   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       527.344 ±      21.219  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       551.255 ±     754.990  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1675.263 ±    2316.638    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.012 ±       0.072  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.038 ±       0.218    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000                counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        25.000                    ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   2998643.384 ±  947973.986   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       808.146 ±     255.563  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       424.000 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       873.933 ±    1421.891  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       456.223 ±     685.939    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±       0.143  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.013 ±       0.073    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5         6.000                counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5         5.000                    ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    156253.694 ±    6392.063   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1066.270 ±      43.575  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10736.003 ±       0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1113.566 ±    1317.588  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     11229.002 ±   13533.768    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.037 ±       0.164  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.378 ±       1.658    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5         8.000                counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        22.000                    ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    721656.195 ±  440428.054   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5       851.056 ±     521.114  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5       809.149 ±    1230.220  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1728.830 ±    2031.809    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.025 ±       0.105  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.054 ±       0.244    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5         9.000                counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        24.000                    ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3498587.666 ±  109739.938   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       871.725 ±      27.347  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±       0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       922.117 ±     385.271  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       414.414 ±     160.912    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±       0.108  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.022 ±       0.048    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        12.000                counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        38.000                    ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    212015.217 ±  113548.124   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1140.544 ±     610.571  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8464.002 ±       0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1245.688 ±    1247.151  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      9381.084 ±    9592.157    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±       0.134  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.251 ±       0.966    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5         9.000                counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        27.000                    ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    733677.669 ±  440294.205   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       951.341 ±     570.952  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       963.290 ±     815.393  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2069.802 ±    1538.415    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.012 ±       0.044  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.026 ±       0.094    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5         9.000                counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        24.000                    ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2631726.512 ±  135002.499   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1646.054 ±      84.331  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5       984.000 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1662.202 ±     759.260  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5       994.562 ±     487.116    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.058 ±       0.105  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.035 ±       0.063    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        14.000                counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        23.000                    ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5   1034251.777 ±   14188.533   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       757.299 ±      10.353  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1152.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       692.524 ±    1491.171  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1052.032 ±    2265.116    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.008 ±       0.072  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.013 ±       0.109    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5         4.000                counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        12.000                    ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   5647421.813 ±  304239.681   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       143.585 ±       7.736  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        40.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       137.214 ±      94.483  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        38.183 ±      25.133    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.096 ±       0.193  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.027 ±       0.053    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5        11.000                counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5        27.000                    ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    153827.470 ±    3805.420   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5       951.949 ±      23.533  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5      9736.003 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5       949.764 ±    1240.288  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      9713.338 ±   12663.812    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±       0.134  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.297 ±       1.367    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5         7.000                counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        27.000                    ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3267497.491 ± 2350246.751   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5       897.193 ±     645.350  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5       873.912 ±    2289.434  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       400.152 ±     990.354    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.174  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.011 ±       0.073    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5         6.000                counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        15.000                    ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  12899028.142 ±  225305.917   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       393.544 ±       6.873  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       382.853 ±     829.757  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        46.667 ±     101.045    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.008 ±       0.072  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.001 ±       0.009    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         4.000                counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5         6.000                    ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    962503.510 ±   41360.594   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1443.812 ±      62.127  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2360.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1446.490 ±     641.963  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2366.367 ±    1125.622    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±       0.108  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.082 ±       0.176    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        12.000                counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        33.000                    ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   1047683.932 ±  387891.625   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5       415.537 ±     153.833  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       624.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5       405.908 ±     482.493  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       603.598 ±     597.892    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.062 ±       0.227  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.090 ±       0.325    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5         8.000                counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        24.000                    ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3811273.833 ±  928299.837   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       697.700 ±     169.970  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       780.977 ±    1021.657  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       321.867 ±     397.364    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.021 ±       0.057  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.009 ±       0.027    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5         7.000                counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        19.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    869185.499 ±  629948.542   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1073.997 ±     778.463  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.001 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5       958.361 ±    1532.154  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1696.167 ±    1832.202    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.021 ±       0.080  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.039 ±       0.161    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5         7.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        21.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   2792886.956 ± 1153307.933   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       326.642 ±     134.875  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       317.146 ±     412.191  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       177.503 ±     186.326    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.017 ±       0.143  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.009 ±       0.073    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         6.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        23.000                    ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1115026.520 ±  359702.636   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       686.060 ±     221.269  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       968.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       668.815 ±     792.653  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       939.251 ±    1034.277    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.033 ±       0.166  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.046 ±       0.237    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5         8.000                counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        23.000                    ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4481548.440 ±  111302.985   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       683.652 ±      16.968  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       240.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       668.806 ±     861.156  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       234.619 ±     300.212    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±       0.200  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.023 ±       0.070    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5         8.000                counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        26.000                    ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    312753.395 ±  154502.904   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1076.652 ±     531.887  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1061.298 ±    1367.780  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5334.497 ±    6691.889    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±       0.188  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.191 ±       0.822    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5         8.000                counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        26.000                    ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5    913012.584 ±  389456.600   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5       905.313 ±     386.220  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1560.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5       834.937 ±     222.402  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1459.791 ±     952.541    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.004 ±       0.036  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.008 ±       0.072    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5         5.000                counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        14.000                    ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3609098.743 ±   27901.720   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       587.291 ±       4.545  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       256.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       668.846 ±     882.873  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       291.641 ±     385.824    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±       0.134  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.015 ±       0.059    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         8.000                counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        17.000                    ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    264502.348 ±   63535.804   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       986.204 ±     237.950  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5864.002 ±       0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       990.268 ±     718.124  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5896.660 ±    4078.871    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.058 ±       0.154  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.344 ±       0.947    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        16.000                counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        33.000                    ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5    859329.587 ±  549507.979   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5       852.081 ±     544.865  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.001 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5       806.814 ±     348.124  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1494.821 ±     735.366    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.012 ±       0.108  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.028 ±       0.241    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5         5.000                counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5         8.000                    ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2560038.588 ± 1104673.615   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       429.581 ±     185.393  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       467.877 ±     133.371  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       290.119 ±     139.200    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.008 ±       0.044  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.005 ±       0.028    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         5.000                counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        16.000                    ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1584557.848 ±  765138.159   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       636.539 ±     307.347  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       632.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       782.239 ±     230.827  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       783.078 ±     292.324    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.025 ±       0.174  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.027 ±       0.186    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5         5.000                counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5         6.000                    ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6310672.339 ±  167934.183   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       288.807 ±       7.687  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        72.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       281.889 ±      75.090  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        70.269 ±      18.089    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.017 ±       0.088  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.004 ±       0.022    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000                counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        12.000                    ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    166466.504 ±   87752.169   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5       777.912 ±     409.962  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      7352.003 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5       917.227 ±    1492.456  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8442.066 ±    8407.095    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.017 ±       0.067  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.157 ±       0.669    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5         6.000                counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        17.000                    ms
[success] Total time: 568 s, completed Oct 11, 2017 8:26:54 PM
