[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 8, 2017 8:00:10 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:187:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:55:70: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       private val reqFields: Array[String] = Array("s", "i");
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = materialize[MissingReqFields]
[info]                                                                      ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:57:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 135249149 => if (in.isReusableCharsEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isReusableCharsEqualsTo(l, "bd"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "os");
[info]               e0(out, x.os)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(out: JsonWriter, x: Option[String]): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:59:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 272946562 => if (in.isReusableCharsEqualsTo(l, "a"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d0(in, _a)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1396692260 => if (in.isReusableCharsEqualsTo(l, "aa"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d2(in, _aa)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "a");
[info]             e2(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d1(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays]
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:61:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 395882128 => if (in.isReusableCharsEqualsTo(l, "mbs"))
[info]                       _mbs = d0(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case -311899171 => if (in.isReusableCharsEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:63:57: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       _s = d0(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isReusableCharsEqualsTo(l, "ls"))
[info]                       _ls = d1(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       _l = d2(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d0(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:65:47: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d0(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:67:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d0(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps]
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:69:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d1(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d2(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               c = out.writeObjectField(c, "mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d0(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:71:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isReusableCharsEqualsTo(l, "bl"))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isReusableCharsEqualsTo(l, "f"))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isReusableCharsEqualsTo(l, "ch"))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 479329913 => if (in.isReusableCharsEqualsTo(l, "b"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isReusableCharsEqualsTo(l, "dbl"))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives]
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:73:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       override def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields]
[info]                                                                 ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 92 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 72 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 981448.925 ops/s
[info] # Warmup Iteration   2: 1492731.630 ops/s
[info] # Warmup Iteration   3: 1533571.339 ops/s
[info] # Warmup Iteration   4: 1536406.730 ops/s
[info] # Warmup Iteration   5: 1539663.052 ops/s
[info] Iteration   1: 1532999.979 ops/s
[info]                  ·gc.alloc.rate:                   2478.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2712.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2783.557 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   2: 1549431.908 ops/s
[info]                  ·gc.alloc.rate:                   2505.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2379.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2415.676 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 1514250.628 ops/s
[info]                  ·gc.alloc.rate:                   2448.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2381.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2474.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 1540036.327 ops/s
[info]                  ·gc.alloc.rate:                   2490.175 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.665 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2435.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 1537854.441 ops/s
[info]                  ·gc.alloc.rate:                   2486.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              2544.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2724.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2786.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce":
[info]   1534914.656 ±(99.9%) 50069.200 ops/s [Average]
[info]   (min, avg, max) = (1514250.628, 1534914.656, 1549431.908), stdev = 13002.812
[info]   CI (99.9%): [1484845.456, 1584983.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2481.942 ±(99.9%) 80.963 MB/sec [Average]
[info]   (min, avg, max) = (2448.509, 2481.942, 2505.402), stdev = 21.026
[info]   CI (99.9%): [2400.979, 2562.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2544.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2544.000, 2544.000, 2544.000), stdev = 0.001
[info]   CI (99.9%): [2544.000, 2544.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2516.183 ±(99.9%) 710.582 MB/sec [Average]
[info]   (min, avg, max) = (2379.025, 2516.183, 2724.238), stdev = 184.536
[info]   CI (99.9%): [1805.601, 3226.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2579.191 ±(99.9%) 728.969 B/op [Average]
[info]   (min, avg, max) = (2415.676, 2579.191, 2786.964), stdev = 189.311
[info]   CI (99.9%): [1850.221, 3308.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.010, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (0.042, 0.055, 0.064), stdev = 0.012
[info]   CI (99.9%): [0.011, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.count":
[info]   37.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.400, 8.000), stdev = 0.548
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.time":
[info]   92.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (13.000, 18.400, 30.000), stdev = 6.693
[info]   CI (99.9%): [92.000, 92.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson
[info] # Run progress: 1.47% complete, ETA 00:18:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86823.198 ops/s
[info] # Warmup Iteration   2: 207110.649 ops/s
[info] # Warmup Iteration   3: 212570.743 ops/s
[info] # Warmup Iteration   4: 213767.069 ops/s
[info] # Warmup Iteration   5: 211544.903 ops/s
[info] Iteration   1: 214462.961 ops/s
[info]                  ·gc.alloc.rate:               504.912 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.535 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2358.762 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 213278.524 ops/s
[info]                  ·gc.alloc.rate:                   502.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          646.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4768.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.768 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 213966.393 ops/s
[info]                  ·gc.alloc.rate:               503.749 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2388.740 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 214025.216 ops/s
[info]                  ·gc.alloc.rate:                   503.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4788.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.612 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 214406.280 ops/s
[info]                  ·gc.alloc.rate:               504.771 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2396.052 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson":
[info]   214027.875 ±(99.9%) 1824.291 ops/s [Average]
[info]   (min, avg, max) = (213278.524, 214027.875, 214462.961), stdev = 473.763
[info]   CI (99.9%): [212203.584, 215852.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   503.892 ±(99.9%) 4.271 MB/sec [Average]
[info]   (min, avg, max) = (502.135, 503.892, 504.912), stdev = 1.109
[info]   CI (99.9%): [499.620, 508.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.002, 3704.002, 3704.002), stdev = 0.001
[info]   CI (99.9%): [3704.002, 3704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   454.153 ±(99.9%) 684.686 MB/sec [Average]
[info]   (min, avg, max) = (321.535, 454.153, 651.409), stdev = 177.811
[info]   CI (99.9%): [≈ 0, 1138.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3340.050 ±(99.9%) 5056.182 B/op [Average]
[info]   (min, avg, max) = (2358.762, 3340.050, 4788.365), stdev = 1313.074
[info]   CI (99.9%): [≈ 0, 8396.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.276 ±(99.9%) 1.471 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.276, 0.768), stdev = 0.382
[info]   CI (99.9%): [≈ 0, 1.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.800, 6.000), stdev = 2.588
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.94% complete, ETA 00:17:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 427847.798 ops/s
[info] # Warmup Iteration   2: 456882.054 ops/s
[info] # Warmup Iteration   3: 462269.867 ops/s
[info] # Warmup Iteration   4: 463937.124 ops/s
[info] # Warmup Iteration   5: 461052.709 ops/s
[info] Iteration   1: 458836.264 ops/s
[info]                  ·gc.alloc.rate:                   424.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2233.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 462491.575 ops/s
[info]                  ·gc.alloc.rate:               428.035 MB/sec
[info]                  ·gc.alloc.rate.norm:          1456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1108.551 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 462200.689 ops/s
[info]                  ·gc.alloc.rate:               427.770 MB/sec
[info]                  ·gc.alloc.rate.norm:          1456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.228 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1110.381 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 456030.160 ops/s
[info]                  ·gc.alloc.rate:                   422.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2253.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 461379.084 ops/s
[info]                  ·gc.alloc.rate:               427.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          1456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1114.638 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter":
[info]   460187.554 ±(99.9%) 10526.227 ops/s [Average]
[info]   (min, avg, max) = (456030.160, 460187.554, 462491.575), stdev = 2733.628
[info]   CI (99.9%): [449661.328, 470713.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   425.905 ±(99.9%) 9.736 MB/sec [Average]
[info]   (min, avg, max) = (422.061, 425.905, 428.035), stdev = 2.528
[info]   CI (99.9%): [416.169, 435.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1456.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1456.001, 1456.001, 1456.001), stdev = 0.001
[info]   CI (99.9%): [1456.001, 1456.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.717 ±(99.9%) 687.460 MB/sec [Average]
[info]   (min, avg, max) = (325.892, 456.717, 653.121), stdev = 178.531
[info]   CI (99.9%): [≈ 0, 1144.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1564.059 ±(99.9%) 2388.007 B/op [Average]
[info]   (min, avg, max) = (1108.551, 1564.059, 2253.099), stdev = 620.158
[info]   CI (99.9%): [≈ 0, 3952.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.086 ±(99.9%) 0.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.086, 0.286), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.271
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 4.41% complete, ETA 00:17:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1652192.298 ops/s
[info] # Warmup Iteration   2: 1797040.605 ops/s
[info] # Warmup Iteration   3: 1833026.279 ops/s
[info] # Warmup Iteration   4: 1829753.655 ops/s
[info] # Warmup Iteration   5: 1835587.698 ops/s
[info] Iteration   1: 1832943.617 ops/s
[info]                  ·gc.alloc.rate:                   1127.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     851.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1844504.005 ops/s
[info]                  ·gc.alloc.rate:                   1134.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1133.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1821978.902 ops/s
[info]                  ·gc.alloc.rate:                   1121.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     865.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1819316.670 ops/s
[info]                  ·gc.alloc.rate:                   1119.488 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1802731.953 ops/s
[info]                  ·gc.alloc.rate:               1109.211 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.155 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1174.779 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless":
[info]   1824295.029 ±(99.9%) 60220.289 ops/s [Average]
[info]   (min, avg, max) = (1802731.953, 1824295.029, 1844504.005), stdev = 15639.018
[info]   CI (99.9%): [1764074.741, 1884515.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1122.497 ±(99.9%) 37.037 MB/sec [Average]
[info]   (min, avg, max) = (1109.211, 1122.497, 1134.918), stdev = 9.619
[info]   CI (99.9%): [1085.459, 1159.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1135.193 ±(99.9%) 712.938 MB/sec [Average]
[info]   (min, avg, max) = (991.961, 1135.193, 1346.155), stdev = 185.148
[info]   CI (99.9%): [422.254, 1848.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   979.103 ±(99.9%) 619.166 B/op [Average]
[info]   (min, avg, max) = (851.407, 979.103, 1174.779), stdev = 160.795
[info]   CI (99.9%): [359.937, 1598.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.101 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.071), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 11.000), stdev = 3.962
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 5.88% complete, ETA 00:17:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3408053.004 ops/s
[info] # Warmup Iteration   2: 3748994.707 ops/s
[info] # Warmup Iteration   3: 3772502.108 ops/s
[info] # Warmup Iteration   4: 3808972.660 ops/s
[info] # Warmup Iteration   5: 3763842.507 ops/s
[info] Iteration   1: 3809961.196 ops/s
[info]                  ·gc.alloc.rate:               523.071 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 134.564 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3794910.916 ops/s
[info]                  ·gc.alloc.rate:                   521.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3864492.013 ops/s
[info]                  ·gc.alloc.rate:                   530.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3856127.300 ops/s
[info]                  ·gc.alloc.rate:               529.437 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 133.906 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 3850251.963 ops/s
[info]                  ·gc.alloc.rate:               528.630 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 268.498 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3835148.678 ±(99.9%) 118414.811 ops/s [Average]
[info]   (min, avg, max) = (3794910.916, 3835148.678, 3864492.013), stdev = 30751.950
[info]   CI (99.9%): [3716733.866, 3953563.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   526.544 ±(99.9%) 16.293 MB/sec [Average]
[info]   (min, avg, max) = (521.011, 526.544, 530.570), stdev = 4.231
[info]   CI (99.9%): [510.251, 542.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   523.473 ±(99.9%) 690.529 MB/sec [Average]
[info]   (min, avg, max) = (325.862, 523.473, 657.112), stdev = 179.328
[info]   CI (99.9%): [≈ 0, 1214.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   214.719 ±(99.9%) 282.977 B/op [Average]
[info]   (min, avg, max) = (133.906, 214.719, 270.479), stdev = 73.488
[info]   CI (99.9%): [≈ 0, 497.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.017), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 9.000), stdev = 3.362
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay
[info] # Run progress: 7.35% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 36064.541 ops/s
[info] # Warmup Iteration   2: 123469.912 ops/s
[info] # Warmup Iteration   3: 124532.669 ops/s
[info] # Warmup Iteration   4: 132046.704 ops/s
[info] # Warmup Iteration   5: 133098.552 ops/s
[info] Iteration   1: 130058.575 ops/s
[info]                  ·gc.alloc.rate:                   1088.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              13168.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11902.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 129198.827 ops/s
[info]                  ·gc.alloc.rate:                   1081.394 MB/sec
[info]                  ·gc.alloc.rate.norm:              13168.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16084.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 129550.561 ops/s
[info]                  ·gc.alloc.rate:                   1084.333 MB/sec
[info]                  ·gc.alloc.rate.norm:              13168.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12110.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 129089.421 ops/s
[info]                  ·gc.alloc.rate:                   1080.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              13168.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12202.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.508 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 129999.791 ops/s
[info]                  ·gc.alloc.rate:                   1088.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              13168.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12166.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.504 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay":
[info]   129579.435 ±(99.9%) 1713.518 ops/s [Average]
[info]   (min, avg, max) = (129089.421, 129579.435, 130058.575), stdev = 444.995
[info]   CI (99.9%): [127865.917, 131292.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1084.581 ±(99.9%) 14.308 MB/sec [Average]
[info]   (min, avg, max) = (1080.501, 1084.581, 1088.602), stdev = 3.716
[info]   CI (99.9%): [1070.273, 1098.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13168.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13168.003, 13168.003, 13168.004), stdev = 0.001
[info]   CI (99.9%): [13168.003, 13168.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1061.742 ±(99.9%) 558.655 MB/sec [Average]
[info]   (min, avg, max) = (983.955, 1061.742, 1320.874), stdev = 145.081
[info]   CI (99.9%): [503.087, 1620.397] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   12893.244 ±(99.9%) 6883.197 B/op [Average]
[info]   (min, avg, max) = (11902.171, 12893.244, 16084.122), stdev = 1787.544
[info]   CI (99.9%): [6010.047, 19776.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.607 ±(99.9%) 1.115 B/op [Average]
[info]   (min, avg, max) = (0.252, 0.607, 1.014), stdev = 0.290
[info]   CI (99.9%): [≈ 0, 1.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 13.000), stdev = 4.243
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 8.82% complete, ETA 00:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 757528.251 ops/s
[info] # Warmup Iteration   2: 1212184.813 ops/s
[info] # Warmup Iteration   3: 1227314.799 ops/s
[info] # Warmup Iteration   4: 1221524.001 ops/s
[info] # Warmup Iteration   5: 1225140.011 ops/s
[info] Iteration   1: 1220933.944 ops/s
[info]                  ·gc.alloc.rate:                   1930.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2174.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1225260.480 ops/s
[info]                  ·gc.alloc.rate:                   1937.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2609.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1231520.827 ops/s
[info]                  ·gc.alloc.rate:                   1947.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2601.661 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1211136.634 ops/s
[info]                  ·gc.alloc.rate:                   1915.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2648.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 1214722.225 ops/s
[info]                  ·gc.alloc.rate:                   1920.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              2488.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2202.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1220714.822 ±(99.9%) 31349.875 ops/s [Average]
[info]   (min, avg, max) = (1211136.634, 1220714.822, 1231520.827), stdev = 8141.463
[info]   CI (99.9%): [1189364.947, 1252064.697] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1930.460 ±(99.9%) 49.601 MB/sec [Average]
[info]   (min, avg, max) = (1915.293, 1930.460, 1947.517), stdev = 12.881
[info]   CI (99.9%): [1880.859, 1980.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2488.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2488.000, 2488.000, 2488.000), stdev = 0.001
[info]   CI (99.9%): [2488.000, 2488.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1899.338 ±(99.9%) 721.409 MB/sec [Average]
[info]   (min, avg, max) = (1687.720, 1899.338, 2039.231), stdev = 187.348
[info]   CI (99.9%): [1177.929, 2620.747] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2447.583 ±(99.9%) 913.471 B/op [Average]
[info]   (min, avg, max) = (2174.681, 2447.583, 2648.997), stdev = 237.225
[info]   CI (99.9%): [1534.112, 3361.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.065, 0.081), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 12.000, 17.000), stdev = 4.243
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 10.29% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1238018.896 ops/s
[info] # Warmup Iteration   2: 1828067.091 ops/s
[info] # Warmup Iteration   3: 1833607.991 ops/s
[info] # Warmup Iteration   4: 1847825.390 ops/s
[info] # Warmup Iteration   5: 1856378.439 ops/s
[info] Iteration   1: 1848749.311 ops/s
[info]                  ·gc.alloc.rate:                   1297.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1126.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 1859904.111 ops/s
[info]                  ·gc.alloc.rate:                   1305.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1128.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1861987.055 ops/s
[info]                  ·gc.alloc.rate:                   1306.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1133.450 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1827547.496 ops/s
[info]                  ·gc.alloc.rate:                   1282.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1159.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1834130.805 ops/s
[info]                  ·gc.alloc.rate:               1287.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1352.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1159.789 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1846463.756 ±(99.9%) 58927.633 ops/s [Average]
[info]   (min, avg, max) = (1827547.496, 1846463.756, 1861987.055), stdev = 15303.319
[info]   CI (99.9%): [1787536.123, 1905391.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1295.720 ±(99.9%) 41.330 MB/sec [Average]
[info]   (min, avg, max) = (1282.445, 1295.720, 1306.592), stdev = 10.733
[info]   CI (99.9%): [1254.391, 1337.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1339.730 ±(99.9%) 43.556 MB/sec [Average]
[info]   (min, avg, max) = (1323.466, 1339.730, 1352.123), stdev = 11.311
[info]   CI (99.9%): [1296.174, 1383.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1141.597 ±(99.9%) 65.036 B/op [Average]
[info]   (min, avg, max) = (1126.253, 1141.597, 1159.965), stdev = 16.890
[info]   CI (99.9%): [1076.561, 1206.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.054), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 14.000), stdev = 4.528
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 11.76% complete, ETA 00:16:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5605036.674 ops/s
[info] # Warmup Iteration   2: 6505275.850 ops/s
[info] # Warmup Iteration   3: 6591328.801 ops/s
[info] # Warmup Iteration   4: 6580665.329 ops/s
[info] # Warmup Iteration   5: 6601175.156 ops/s
[info] Iteration   1: 6549238.799 ops/s
[info]                  ·gc.alloc.rate:                   832.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 6536991.316 ops/s
[info]                  ·gc.alloc.rate:                   831.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     237.778 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 6582462.978 ops/s
[info]                  ·gc.alloc.rate:                   836.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6547826.230 ops/s
[info]                  ·gc.alloc.rate:               832.410 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 239.298 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 6616664.192 ops/s
[info]                  ·gc.alloc.rate:                   841.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.613 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6566636.703 ±(99.9%) 126084.198 ops/s [Average]
[info]   (min, avg, max) = (6536991.316, 6566636.703, 6616664.192), stdev = 32743.666
[info]   CI (99.9%): [6440552.505, 6692720.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   834.784 ±(99.9%) 15.984 MB/sec [Average]
[info]   (min, avg, max) = (831.027, 834.784, 841.120), stdev = 4.151
[info]   CI (99.9%): [818.799, 850.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.216 ±(99.9%) 685.037 MB/sec [Average]
[info]   (min, avg, max) = (661.755, 859.216, 995.972), stdev = 177.902
[info]   CI (99.9%): [174.179, 1544.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   206.012 ±(99.9%) 167.461 B/op [Average]
[info]   (min, avg, max) = (158.163, 206.012, 239.298), stdev = 43.489
[info]   CI (99.9%): [38.551, 373.474] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.046] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 8.000), stdev = 3.114
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 13.24% complete, ETA 00:15:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 266548.991 ops/s
[info] # Warmup Iteration   2: 423833.406 ops/s
[info] # Warmup Iteration   3: 443991.935 ops/s
[info] # Warmup Iteration   4: 440775.276 ops/s
[info] # Warmup Iteration   5: 445786.412 ops/s
[info] Iteration   1: 441188.082 ops/s
[info]                  ·gc.alloc.rate:                   1159.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4705.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.223 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 439676.888 ops/s
[info]                  ·gc.alloc.rate:                   1155.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3561.410 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 442825.190 ops/s
[info]                  ·gc.alloc.rate:                   1164.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4742.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.222 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 433192.270 ops/s
[info]                  ·gc.alloc.rate:               1138.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3652.200 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 438575.551 ops/s
[info]                  ·gc.alloc.rate:                   1152.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              4136.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4828.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.224 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   439091.596 ±(99.9%) 14114.841 ops/s [Average]
[info]   (min, avg, max) = (433192.270, 439091.596, 442825.190), stdev = 3665.579
[info]   CI (99.9%): [424976.755, 453206.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1154.235 ±(99.9%) 37.205 MB/sec [Average]
[info]   (min, avg, max) = (1138.829, 1154.235, 1164.153), stdev = 9.662
[info]   CI (99.9%): [1117.030, 1191.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4136.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4136.001, 4136.001, 4136.001), stdev = 0.001
[info]   CI (99.9%): [4136.001, 4136.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.155 ±(99.9%) 702.970 MB/sec [Average]
[info]   (min, avg, max) = (995.319, 1200.155, 1345.512), stdev = 182.559
[info]   CI (99.9%): [497.185, 1903.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4298.043 ±(99.9%) 2439.074 B/op [Average]
[info]   (min, avg, max) = (3561.410, 4298.043, 4828.975), stdev = 633.420
[info]   CI (99.9%): [1858.970, 6737.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.178, 0.224), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.793
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 14.71% complete, ETA 00:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368021.705 ops/s
[info] # Warmup Iteration   2: 610797.484 ops/s
[info] # Warmup Iteration   3: 643309.688 ops/s
[info] # Warmup Iteration   4: 635328.713 ops/s
[info] # Warmup Iteration   5: 641191.708 ops/s
[info] Iteration   1: 642487.680 ops/s
[info]                  ·gc.alloc.rate:                   2100.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5794.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 642530.801 ops/s
[info]                  ·gc.alloc.rate:                   2100.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4982.519 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 648463.365 ops/s
[info]                  ·gc.alloc.rate:                   2120.201 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4946.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 640390.493 ops/s
[info]                  ·gc.alloc.rate:                   2093.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5011.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 636599.112 ops/s
[info]                  ·gc.alloc.rate:                   2081.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5049.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   642094.290 ±(99.9%) 16563.400 ops/s [Average]
[info]   (min, avg, max) = (636599.112, 642094.290, 648463.365), stdev = 4301.462
[info]   CI (99.9%): [625530.890, 658657.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2099.394 ±(99.9%) 54.135 MB/sec [Average]
[info]   (min, avg, max) = (2081.437, 2099.394, 2120.201), stdev = 14.059
[info]   CI (99.9%): [2045.258, 2153.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2104.590 ±(99.9%) 563.697 MB/sec [Average]
[info]   (min, avg, max) = (2034.887, 2104.590, 2366.408), stdev = 146.390
[info]   CI (99.9%): [1540.893, 2668.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5156.832 ±(99.9%) 1380.575 B/op [Average]
[info]   (min, avg, max) = (4946.525, 5156.832, 5794.635), stdev = 358.531
[info]   CI (99.9%): [3776.256, 6537.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.102 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.102, 0.153), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 11.000, 14.000), stdev = 2.915
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 16.18% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 781237.074 ops/s
[info] # Warmup Iteration   2: 1221898.200 ops/s
[info] # Warmup Iteration   3: 1232919.474 ops/s
[info] # Warmup Iteration   4: 1212841.935 ops/s
[info] # Warmup Iteration   5: 1226203.379 ops/s
[info] Iteration   1: 1224874.543 ops/s
[info]                  ·gc.alloc.rate:                   1152.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1696.542 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1220295.524 ops/s
[info]                  ·gc.alloc.rate:                   1147.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1286.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.081 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1210736.592 ops/s
[info]                  ·gc.alloc.rate:                   1139.012 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1738.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1233657.743 ops/s
[info]                  ·gc.alloc.rate:                   1160.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1232245.337 ops/s
[info]                  ·gc.alloc.rate:                   1159.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1291.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1224361.948 ±(99.9%) 36071.333 ops/s [Average]
[info]   (min, avg, max) = (1210736.592, 1224361.948, 1233657.743), stdev = 9367.611
[info]   CI (99.9%): [1188290.615, 1260433.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1151.806 ±(99.9%) 33.888 MB/sec [Average]
[info]   (min, avg, max) = (1139.012, 1151.806, 1160.535), stdev = 8.801
[info]   CI (99.9%): [1117.919, 1185.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1135.270 ±(99.9%) 683.601 MB/sec [Average]
[info]   (min, avg, max) = (997.984, 1135.270, 1338.232), stdev = 177.529
[info]   CI (99.9%): [451.669, 1818.872] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1459.719 ±(99.9%) 908.708 B/op [Average]
[info]   (min, avg, max) = (1285.439, 1459.719, 1738.860), stdev = 235.989
[info]   CI (99.9%): [551.011, 2368.427] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.043 ±(99.9%) 0.092 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.043, 0.081), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 15.000), stdev = 5.357
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 17.65% complete, ETA 00:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1954660.996 ops/s
[info] # Warmup Iteration   2: 2690274.870 ops/s
[info] # Warmup Iteration   3: 2702869.837 ops/s
[info] # Warmup Iteration   4: 2699512.150 ops/s
[info] # Warmup Iteration   5: 2716961.917 ops/s
[info] Iteration   1: 2710721.396 ops/s
[info]                  ·gc.alloc.rate:                   1240.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     769.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2690349.697 ops/s
[info]                  ·gc.alloc.rate:                   1231.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2715716.240 ops/s
[info]                  ·gc.alloc.rate:                   1242.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2686901.258 ops/s
[info]                  ·gc.alloc.rate:                   1229.649 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     787.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2743988.613 ops/s
[info]                  ·gc.alloc.rate:                   1255.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     580.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2709535.441 ±(99.9%) 88376.868 ops/s [Average]
[info]   (min, avg, max) = (2686901.258, 2709535.441, 2743988.613), stdev = 22951.192
[info]   CI (99.9%): [2621158.573, 2797912.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1239.994 ±(99.9%) 40.506 MB/sec [Average]
[info]   (min, avg, max) = (1229.649, 1239.994, 1255.785), stdev = 10.519
[info]   CI (99.9%): [1199.488, 1280.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.102 ±(99.9%) 697.996 MB/sec [Average]
[info]   (min, avg, max) = (999.209, 1204.102, 1344.753), stdev = 181.267
[info]   CI (99.9%): [506.106, 1902.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   699.404 ±(99.9%) 412.196 B/op [Average]
[info]   (min, avg, max) = (580.388, 699.404, 787.398), stdev = 107.046
[info]   CI (99.9%): [287.209, 1111.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.061 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.039, 0.049), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 4.000), stdev = 0.707
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 19.12% complete, ETA 00:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108194.889 ops/s
[info] # Warmup Iteration   2: 223407.513 ops/s
[info] # Warmup Iteration   3: 230080.502 ops/s
[info] # Warmup Iteration   4: 231462.410 ops/s
[info] # Warmup Iteration   5: 228637.420 ops/s
[info] Iteration   1: 228848.110 ops/s
[info]                  ·gc.alloc.rate:                   1402.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9116.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 228314.381 ops/s
[info]                  ·gc.alloc.rate:                   1399.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11500.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.574 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 228797.266 ops/s
[info]                  ·gc.alloc.rate:                   1401.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9235.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.430 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 229655.947 ops/s
[info]                  ·gc.alloc.rate:                   1407.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9237.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 230998.798 ops/s
[info]                  ·gc.alloc.rate:                   1415.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9206.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.284 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   229322.900 ±(99.9%) 4056.166 ops/s [Average]
[info]   (min, avg, max) = (228314.381, 229322.900, 230998.798), stdev = 1053.373
[info]   CI (99.9%): [225266.735, 233379.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1405.138 ±(99.9%) 24.638 MB/sec [Average]
[info]   (min, avg, max) = (1399.037, 1405.138, 1415.315), stdev = 6.398
[info]   CI (99.9%): [1380.500, 1429.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1407.720 ±(99.9%) 563.901 MB/sec [Average]
[info]   (min, avg, max) = (1326.106, 1407.720, 1669.090), stdev = 146.443
[info]   CI (99.9%): [843.819, 1971.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9659.676 ±(99.9%) 3967.644 B/op [Average]
[info]   (min, avg, max) = (9116.977, 9659.676, 11500.786), stdev = 1030.385
[info]   CI (99.9%): [5692.032, 13627.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.343 ±(99.9%) 0.632 B/op [Average]
[info]   (min, avg, max) = (0.143, 0.343, 0.574), stdev = 0.164
[info]   CI (99.9%): [≈ 0, 0.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.000, 16.000), stdev = 4.848
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 20.59% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1053294.357 ops/s
[info] # Warmup Iteration   2: 1538737.763 ops/s
[info] # Warmup Iteration   3: 1583736.383 ops/s
[info] # Warmup Iteration   4: 1602937.815 ops/s
[info] # Warmup Iteration   5: 1572353.161 ops/s
[info] Iteration   1: 1565349.266 ops/s
[info]                  ·gc.alloc.rate:                   1010.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.351 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1002.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1578444.456 ops/s
[info]                  ·gc.alloc.rate:                   1019.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.018 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1581670.934 ops/s
[info]                  ·gc.alloc.rate:               1021.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1000.268 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1521893.834 ops/s
[info]                  ·gc.alloc.rate:                   982.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1042.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   5: 1581103.138 ops/s
[info]                  ·gc.alloc.rate:               1021.033 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1006.947 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1565692.325 ±(99.9%) 97677.628 ops/s [Average]
[info]   (min, avg, max) = (1521893.834, 1565692.325, 1581670.934), stdev = 25366.570
[info]   CI (99.9%): [1468014.697, 1663369.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1011.123 ±(99.9%) 63.051 MB/sec [Average]
[info]   (min, avg, max) = (982.833, 1011.123, 1021.420), stdev = 16.374
[info]   CI (99.9%): [948.072, 1074.174] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1005.027 ±(99.9%) 22.448 MB/sec [Average]
[info]   (min, avg, max) = (997.351, 1005.027, 1011.935), stdev = 5.830
[info]   CI (99.9%): [982.579, 1027.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1010.105 ±(99.9%) 71.886 B/op [Average]
[info]   (min, avg, max) = (998.018, 1010.105, 1042.977), stdev = 18.669
[info]   CI (99.9%): [938.219, 1081.991] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.034, 0.084), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.400, 26.000), stdev = 9.476
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 22.06% complete, ETA 00:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4442436.979 ops/s
[info] # Warmup Iteration   2: 4851777.323 ops/s
[info] # Warmup Iteration   3: 4971246.559 ops/s
[info] # Warmup Iteration   4: 4993564.478 ops/s
[info] # Warmup Iteration   5: 5023973.225 ops/s
[info] Iteration   1: 4989410.247 ops/s
[info]                  ·gc.alloc.rate:                   532.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5008323.353 ops/s
[info]                  ·gc.alloc.rate:               534.863 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 102.474 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 5000939.965 ops/s
[info]                  ·gc.alloc.rate:                   534.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.763 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     205.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5042684.564 ops/s
[info]                  ·gc.alloc.rate:                   538.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5015480.197 ops/s
[info]                  ·gc.alloc.rate:               535.574 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 103.163 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   5011367.665 ±(99.9%) 76959.770 ops/s [Average]
[info]   (min, avg, max) = (4989410.247, 5011367.665, 5042684.564), stdev = 19986.208
[info]   CI (99.9%): [4934407.895, 5088327.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   535.151 ±(99.9%) 8.216 MB/sec [Average]
[info]   (min, avg, max) = (532.798, 535.151, 538.490), stdev = 2.134
[info]   CI (99.9%): [526.934, 543.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.351 ±(99.9%) 688.253 MB/sec [Average]
[info]   (min, avg, max) = (326.246, 523.351, 655.762), stdev = 178.737
[info]   CI (99.9%): [≈ 0, 1211.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   164.302 ±(99.9%) 216.133 B/op [Average]
[info]   (min, avg, max) = (102.474, 164.302, 205.668), stdev = 56.129
[info]   CI (99.9%): [≈ 0, 380.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 23.53% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123654.838 ops/s
[info] # Warmup Iteration   2: 251581.802 ops/s
[info] # Warmup Iteration   3: 259946.825 ops/s
[info] # Warmup Iteration   4: 257979.904 ops/s
[info] # Warmup Iteration   5: 257244.964 ops/s
[info] Iteration   1: 257732.390 ops/s
[info]                  ·gc.alloc.rate:                   1178.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8050.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.381 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 252065.962 ops/s
[info]                  ·gc.alloc.rate:                   1152.264 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6212.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.520 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 255287.353 ops/s
[info]                  ·gc.alloc.rate:                   1167.000 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8225.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.513 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 260205.367 ops/s
[info]                  ·gc.alloc.rate:               1189.502 MB/sec
[info]                  ·gc.alloc.rate.norm:          7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6080.115 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 256157.492 ops/s
[info]                  ·gc.alloc.rate:                   1170.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8267.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   256289.713 ±(99.9%) 11596.120 ops/s [Average]
[info]   (min, avg, max) = (252065.962, 256289.713, 260205.367), stdev = 3011.476
[info]   CI (99.9%): [244693.593, 267885.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1171.583 ±(99.9%) 53.067 MB/sec [Average]
[info]   (min, avg, max) = (1152.264, 1171.583, 1189.502), stdev = 13.781
[info]   CI (99.9%): [1118.516, 1224.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7192.002, 7192.002, 7192.002), stdev = 0.001
[info]   CI (99.9%): [7192.001, 7192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.106 ±(99.9%) 702.987 MB/sec [Average]
[info]   (min, avg, max) = (995.275, 1200.106, 1346.062), stdev = 182.563
[info]   CI (99.9%): [497.120, 1903.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7367.222 ±(99.9%) 4307.566 B/op [Average]
[info]   (min, avg, max) = (6080.115, 7367.222, 8267.655), stdev = 1118.661
[info]   CI (99.9%): [3059.657, 11674.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.334 ±(99.9%) 0.832 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.334, 0.520), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 1.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 9.600, 14.000), stdev = 4.827
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 25.00% complete, ETA 00:13:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 347899.118 ops/s
[info] # Warmup Iteration   2: 551174.814 ops/s
[info] # Warmup Iteration   3: 556982.838 ops/s
[info] # Warmup Iteration   4: 565196.485 ops/s
[info] # Warmup Iteration   5: 558860.983 ops/s
[info] Iteration   1: 561551.734 ops/s
[info]                  ·gc.alloc.rate:                   1864.603 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.674 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4725.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 553965.583 ops/s
[info]                  ·gc.alloc.rate:                   1839.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5768.623 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 557073.583 ops/s
[info]                  ·gc.alloc.rate:                   1849.695 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.984 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4789.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 557617.396 ops/s
[info]                  ·gc.alloc.rate:                   1851.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5751.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 561832.235 ops/s
[info]                  ·gc.alloc.rate:                   1865.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.681 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   558408.106 ±(99.9%) 12734.696 ops/s [Average]
[info]   (min, avg, max) = (553965.583, 558408.106, 561832.235), stdev = 3307.160
[info]   CI (99.9%): [545673.410, 571142.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1854.226 ±(99.9%) 42.239 MB/sec [Average]
[info]   (min, avg, max) = (1839.432, 1854.226, 1865.562), stdev = 10.969
[info]   CI (99.9%): [1811.987, 1896.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.454 ±(99.9%) 719.191 MB/sec [Average]
[info]   (min, avg, max) = (1686.674, 1830.454, 2038.730), stdev = 186.772
[info]   CI (99.9%): [1111.263, 2549.644] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5158.945 ±(99.9%) 2114.476 B/op [Average]
[info]   (min, avg, max) = (4725.502, 5158.945, 5768.623), stdev = 549.123
[info]   CI (99.9%): [3044.469, 7273.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.129 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.129, 0.175), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 11.000), stdev = 2.864
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 26.47% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 422701.391 ops/s
[info] # Warmup Iteration   2: 669557.424 ops/s
[info] # Warmup Iteration   3: 697386.195 ops/s
[info] # Warmup Iteration   4: 696588.458 ops/s
[info] # Warmup Iteration   5: 689884.808 ops/s
[info] Iteration   1: 688683.151 ops/s
[info]                  ·gc.alloc.rate:               854.539 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.356 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2234.832 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   2: 621063.131 ops/s
[info]                  ·gc.alloc.rate:                   770.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1661.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 635977.731 ops/s
[info]                  ·gc.alloc.rate:                   789.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1630.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 696228.044 ops/s
[info]                  ·gc.alloc.rate:                   863.933 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.381 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2244.479 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 697299.495 ops/s
[info]                  ·gc.alloc.rate:               865.160 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2255.325 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   667850.311 ±(99.9%) 140316.997 ops/s [Average]
[info]   (min, avg, max) = (621063.131, 667850.311, 697299.495), stdev = 36439.878
[info]   CI (99.9%): [527533.314, 808167.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   828.687 ±(99.9%) 174.036 MB/sec [Average]
[info]   (min, avg, max) = (770.680, 828.687, 865.160), stdev = 45.197
[info]   CI (99.9%): [654.651, 1002.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   857.315 ±(99.9%) 702.595 MB/sec [Average]
[info]   (min, avg, max) = (656.150, 857.315, 999.598), stdev = 182.462
[info]   CI (99.9%): [154.721, 1559.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2005.380 ±(99.9%) 1263.846 B/op [Average]
[info]   (min, avg, max) = (1630.348, 2005.380, 2255.325), stdev = 328.217
[info]   CI (99.9%): [741.535, 3269.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.169 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.041, 0.106), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.800, 11.000), stdev = 3.701
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 27.94% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3860737.549 ops/s
[info] # Warmup Iteration   2: 4118892.396 ops/s
[info] # Warmup Iteration   3: 4125837.052 ops/s
[info] # Warmup Iteration   4: 4144978.556 ops/s
[info] # Warmup Iteration   5: 4126961.851 ops/s
[info] Iteration   1: 4116621.294 ops/s
[info]                  ·gc.alloc.rate:               188.394 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 97.799 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 4097439.537 ops/s
[info]                  ·gc.alloc.rate:               187.522 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.256 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4097478.270 ops/s
[info]                  ·gc.alloc.rate:               187.519 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.258 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4112133.757 ops/s
[info]                  ·gc.alloc.rate:      188.209 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4113738.548 ops/s
[info]                  ·gc.alloc.rate:                   188.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     124.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.218 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.848 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4107482.281 ±(99.9%) 35773.477 ops/s [Average]
[info]   (min, avg, max) = (4097439.537, 4107482.281, 4116621.294), stdev = 9290.258
[info]   CI (99.9%): [4071708.804, 4143255.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   187.981 ±(99.9%) 1.641 MB/sec [Average]
[info]   (min, avg, max) = (187.519, 187.981, 188.394), stdev = 0.426
[info]   CI (99.9%): [186.340, 189.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   218.651 ±(99.9%) 484.775 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 218.651, 325.546), stdev = 125.895
[info]   CI (99.9%): [≈ 0, 703.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   83.763 ±(99.9%) 185.604 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 83.763, 124.504), stdev = 48.201
[info]   CI (99.9%): [≈ 0, 269.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.444 ±(99.9%) 3.819 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.444, 2.218), stdev = 0.992
[info]   CI (99.9%): [≈ 0, 4.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.170 ±(99.9%) 1.461 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.170, 0.848), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 29.41% complete, ETA 00:12:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 40274.145 ops/s
[info] # Warmup Iteration   2: 198315.716 ops/s
[info] # Warmup Iteration   3: 200398.468 ops/s
[info] # Warmup Iteration   4: 204593.269 ops/s
[info] # Warmup Iteration   5: 202691.816 ops/s
[info] Iteration   1: 204219.070 ops/s
[info]                  ·gc.alloc.rate:                   1134.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10123.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.321 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 204940.745 ops/s
[info]                  ·gc.alloc.rate:                   1137.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.236 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7609.535 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.480 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 205158.565 ops/s
[info]                  ·gc.alloc.rate:                   1139.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10205.405 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 205004.468 ops/s
[info]                  ·gc.alloc.rate:                   1138.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.378 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7699.551 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 198509.607 ops/s
[info]                  ·gc.alloc.rate:                   1102.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              8736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7977.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   203566.491 ±(99.9%) 10974.164 ops/s [Average]
[info]   (min, avg, max) = (198509.607, 203566.491, 205158.565), stdev = 2849.956
[info]   CI (99.9%): [192592.327, 214540.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1130.386 ±(99.9%) 60.990 MB/sec [Average]
[info]   (min, avg, max) = (1102.280, 1130.386, 1139.208), stdev = 15.839
[info]   CI (99.9%): [1069.395, 1191.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8736.002, 8736.002, 8736.002), stdev = 0.001
[info]   CI (99.9%): [8736.002, 8736.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1129.250 ±(99.9%) 680.051 MB/sec [Average]
[info]   (min, avg, max) = (991.236, 1129.250, 1330.824), stdev = 176.607
[info]   CI (99.9%): [449.199, 1809.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8723.259 ±(99.9%) 5094.785 B/op [Average]
[info]   (min, avg, max) = (7609.535, 8723.259, 10205.405), stdev = 1323.099
[info]   CI (99.9%): [3628.475, 13818.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.387 ±(99.9%) 0.560 B/op [Average]
[info]   (min, avg, max) = (0.160, 0.387, 0.495), stdev = 0.146
[info]   CI (99.9%): [≈ 0, 0.947] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.643
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.88% complete, ETA 00:12:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2536901.884 ops/s
[info] # Warmup Iteration   2: 2646123.548 ops/s
[info] # Warmup Iteration   3: 2697128.669 ops/s
[info] # Warmup Iteration   4: 2674521.239 ops/s
[info] # Warmup Iteration   5: 2657762.927 ops/s
[info] Iteration   1: 2703734.123 ops/s
[info]                  ·gc.alloc.rate:                   1278.589 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     772.435 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2696575.444 ops/s
[info]                  ·gc.alloc.rate:                   1275.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     779.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2704767.197 ops/s
[info]                  ·gc.alloc.rate:                   1279.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     780.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2683510.540 ops/s
[info]                  ·gc.alloc.rate:                   1269.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     592.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2713761.803 ops/s
[info]                  ·gc.alloc.rate:                   1283.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.144 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     783.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   2700469.822 ±(99.9%) 43419.459 ops/s [Average]
[info]   (min, avg, max) = (2683510.540, 2700469.822, 2713761.803), stdev = 11275.895
[info]   CI (99.9%): [2657050.363, 2743889.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1277.047 ±(99.9%) 20.519 MB/sec [Average]
[info]   (min, avg, max) = (1269.031, 1277.047, 1283.321), stdev = 5.329
[info]   CI (99.9%): [1256.529, 1297.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1273.287 ±(99.9%) 567.208 MB/sec [Average]
[info]   (min, avg, max) = (1010.245, 1273.287, 1351.144), stdev = 147.302
[info]   CI (99.9%): [706.078, 1840.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   741.572 ±(99.9%) 321.732 B/op [Average]
[info]   (min, avg, max) = (592.281, 741.572, 783.320), stdev = 83.553
[info]   CI (99.9%): [419.839, 1063.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.036 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.036, 0.049), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 3.082
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 32.35% complete, ETA 00:12:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131418.893 ops/s
[info] # Warmup Iteration   2: 246231.767 ops/s
[info] # Warmup Iteration   3: 255915.990 ops/s
[info] # Warmup Iteration   4: 254189.448 ops/s
[info] # Warmup Iteration   5: 250759.220 ops/s
[info] Iteration   1: 248867.178 ops/s
[info]                  ·gc.alloc.rate:                   1328.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8383.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 254847.375 ops/s
[info]                  ·gc.alloc.rate:                   1360.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8240.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 251115.498 ops/s
[info]                  ·gc.alloc.rate:                   1340.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8404.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 237255.565 ops/s
[info]                  ·gc.alloc.rate:                   1266.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8930.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.552 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 252079.140 ops/s
[info]                  ·gc.alloc.rate:                   1345.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6321.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   248832.951 ±(99.9%) 26254.933 ops/s [Average]
[info]   (min, avg, max) = (237255.565, 248832.951, 254847.375), stdev = 6818.323
[info]   CI (99.9%): [222578.018, 275087.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1328.589 ±(99.9%) 140.009 MB/sec [Average]
[info]   (min, avg, max) = (1266.874, 1328.589, 1360.722), stdev = 36.360
[info]   CI (99.9%): [1188.579, 1468.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8400.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8400.002, 8400.002, 8400.002), stdev = 0.001
[info]   CI (99.9%): [8400.001, 8400.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.464 ±(99.9%) 559.450 MB/sec [Average]
[info]   (min, avg, max) = (1012.937, 1272.464, 1346.947), stdev = 145.287
[info]   CI (99.9%): [713.015, 1831.914] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8056.269 ±(99.9%) 3867.651 B/op [Average]
[info]   (min, avg, max) = (6321.909, 8056.269, 8930.930), stdev = 1004.417
[info]   CI (99.9%): [4188.617, 11923.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.370 ±(99.9%) 0.676 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.370, 0.552), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 1.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 18.000), stdev = 6.148
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 33.82% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 293075.652 ops/s
[info] # Warmup Iteration   2: 527882.249 ops/s
[info] # Warmup Iteration   3: 531226.891 ops/s
[info] # Warmup Iteration   4: 534474.560 ops/s
[info] # Warmup Iteration   5: 541431.691 ops/s
[info] Iteration   1: 535265.790 ops/s
[info]                  ·gc.alloc.rate:                   1875.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5945.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 538167.437 ops/s
[info]                  ·gc.alloc.rate:                   1885.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5937.905 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 540469.737 ops/s
[info]                  ·gc.alloc.rate:                   1893.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4936.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 539468.728 ops/s
[info]                  ·gc.alloc.rate:                   1890.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.199 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5946.897 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 539769.071 ops/s
[info]                  ·gc.alloc.rate:                   1891.165 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4954.112 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   538628.152 ±(99.9%) 7919.006 ops/s [Average]
[info]   (min, avg, max) = (535265.790, 538628.152, 540469.737), stdev = 2056.541
[info]   CI (99.9%): [530709.146, 546547.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1887.135 ±(99.9%) 27.729 MB/sec [Average]
[info]   (min, avg, max) = (1875.352, 1887.135, 1893.550), stdev = 7.201
[info]   CI (99.9%): [1859.407, 1914.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1897.816 ±(99.9%) 703.167 MB/sec [Average]
[info]   (min, avg, max) = (1696.009, 1897.816, 2039.199), stdev = 182.610
[info]   CI (99.9%): [1194.648, 2600.983] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5544.304 ±(99.9%) 2104.903 B/op [Average]
[info]   (min, avg, max) = (4936.972, 5544.304, 5946.897), stdev = 546.637
[info]   CI (99.9%): [3439.401, 7649.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.134 ±(99.9%) 0.256 B/op [Average]
[info]   (min, avg, max) = (0.061, 0.134, 0.243), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.800, 16.000), stdev = 4.868
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 35.29% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 278992.220 ops/s
[info] # Warmup Iteration   2: 535250.902 ops/s
[info] # Warmup Iteration   3: 536387.335 ops/s
[info] # Warmup Iteration   4: 535786.258 ops/s
[info] # Warmup Iteration   5: 536911.350 ops/s
[info] Iteration   1: 536874.809 ops/s
[info]                  ·gc.alloc.rate:               545.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1914.800 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 533291.861 ops/s
[info]                  ·gc.alloc.rate:                   542.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1936.521 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 527936.017 ops/s
[info]                  ·gc.alloc.rate:               536.917 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 980.041 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 532455.414 ops/s
[info]                  ·gc.alloc.rate:               541.512 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1951.321 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 538636.807 ops/s
[info]                  ·gc.alloc.rate:                   547.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.074 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1936.754 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.243 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   533838.982 ±(99.9%) 16026.957 ops/s [Average]
[info]   (min, avg, max) = (527936.017, 533838.982, 538636.807), stdev = 4162.150
[info]   CI (99.9%): [517812.025, 549865.939] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   542.912 ±(99.9%) 16.275 MB/sec [Average]
[info]   (min, avg, max) = (536.917, 542.912, 547.782), stdev = 4.227
[info]   CI (99.9%): [526.637, 559.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   592.441 ±(99.9%) 567.525 MB/sec [Average]
[info]   (min, avg, max) = (328.875, 592.441, 663.074), stdev = 147.384
[info]   CI (99.9%): [24.916, 1159.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1743.887 ±(99.9%) 1645.003 B/op [Average]
[info]   (min, avg, max) = (980.041, 1743.887, 1951.321), stdev = 427.202
[info]   CI (99.9%): [98.884, 3388.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.420 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.073, 0.243), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 36.76% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2551389.174 ops/s
[info] # Warmup Iteration   2: 2564684.620 ops/s
[info] # Warmup Iteration   3: 2593773.768 ops/s
[info] # Warmup Iteration   4: 2606967.125 ops/s
[info] # Warmup Iteration   5: 2611213.310 ops/s
[info] Iteration   1: 2578540.434 ops/s
[info]                  ·gc.alloc.rate:               694.984 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 398.883 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2590984.554 ops/s
[info]                  ·gc.alloc.rate:                   698.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     398.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2602869.821 ops/s
[info]                  ·gc.alloc.rate:                   701.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 2618368.019 ops/s
[info]                  ·gc.alloc.rate:                   705.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     396.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2583150.785 ops/s
[info]                  ·gc.alloc.rate:                   696.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     403.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2594782.723 ±(99.9%) 61946.538 ops/s [Average]
[info]   (min, avg, max) = (2578540.434, 2594782.723, 2618368.019), stdev = 16087.319
[info]   CI (99.9%): [2532836.184, 2656729.261] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   699.336 ±(99.9%) 16.631 MB/sec [Average]
[info]   (min, avg, max) = (694.984, 699.336, 705.685), stdev = 4.319
[info]   CI (99.9%): [682.705, 715.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   658.179 ±(99.9%) 14.253 MB/sec [Average]
[info]   (min, avg, max) = (653.814, 658.179, 663.150), stdev = 3.701
[info]   CI (99.9%): [643.926, 672.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   399.056 ±(99.9%) 10.747 B/op [Average]
[info]   (min, avg, max) = (396.802, 399.056, 403.857), stdev = 2.791
[info]   CI (99.9%): [388.309, 409.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.055 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.038), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 12.000), stdev = 4.438
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 38.24% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81769.303 ops/s
[info] # Warmup Iteration   2: 176066.384 ops/s
[info] # Warmup Iteration   3: 179369.756 ops/s
[info] # Warmup Iteration   4: 182755.796 ops/s
[info] # Warmup Iteration   5: 182421.714 ops/s
[info] Iteration   1: 181314.287 ops/s
[info]                  ·gc.alloc.rate:                   1237.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11466.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.361 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 179441.464 ops/s
[info]                  ·gc.alloc.rate:                   1224.512 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8746.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.730 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 181253.777 ops/s
[info]                  ·gc.alloc.rate:                   1236.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11600.649 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.542 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 182140.293 ops/s
[info]                  ·gc.alloc.rate:                   1242.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11601.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.720 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 182773.644 ops/s
[info]                  ·gc.alloc.rate:                   1247.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              10736.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8701.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.359 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   181384.693 ±(99.9%) 4831.888 ops/s [Average]
[info]   (min, avg, max) = (179441.464, 181384.693, 182773.644), stdev = 1254.826
[info]   CI (99.9%): [176552.805, 186216.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1237.770 ±(99.9%) 32.983 MB/sec [Average]
[info]   (min, avg, max) = (1224.512, 1237.770, 1247.254), stdev = 8.566
[info]   CI (99.9%): [1204.787, 1270.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10736.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10736.002, 10736.002, 10736.003), stdev = 0.001
[info]   CI (99.9%): [10736.002, 10736.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1201.929 ±(99.9%) 695.703 MB/sec [Average]
[info]   (min, avg, max) = (997.608, 1201.929, 1343.134), stdev = 180.672
[info]   CI (99.9%): [506.226, 1897.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10423.449 ±(99.9%) 5977.210 B/op [Average]
[info]   (min, avg, max) = (8701.757, 10423.449, 11601.470), stdev = 1552.262
[info]   CI (99.9%): [4446.240, 16400.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.542 ±(99.9%) 0.703 B/op [Average]
[info]   (min, avg, max) = (0.359, 0.542, 0.730), stdev = 0.183
[info]   CI (99.9%): [≈ 0, 1.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 11.000), stdev = 3.050
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 39.71% complete, ETA 00:11:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 245568.133 ops/s
[info] # Warmup Iteration   2: 453850.852 ops/s
[info] # Warmup Iteration   3: 458760.844 ops/s
[info] # Warmup Iteration   4: 455048.541 ops/s
[info] # Warmup Iteration   5: 462126.218 ops/s
[info] Iteration   1: 463714.455 ops/s
[info]                  ·gc.alloc.rate:                   1648.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5701.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 459351.405 ops/s
[info]                  ·gc.alloc.rate:                   1632.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.682 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5780.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.143 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 463962.202 ops/s
[info]                  ·gc.alloc.rate:                   1649.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5741.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.212 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 466260.021 ops/s
[info]                  ·gc.alloc.rate:                   1657.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5722.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 463392.161 ops/s
[info]                  ·gc.alloc.rate:                   1647.073 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1359.489 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4615.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   463336.049 ±(99.9%) 9619.948 ops/s [Average]
[info]   (min, avg, max) = (459351.405, 463336.049, 466260.021), stdev = 2498.270
[info]   CI (99.9%): [453716.100, 472955.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1646.896 ±(99.9%) 34.177 MB/sec [Average]
[info]   (min, avg, max) = (1632.741, 1646.896, 1657.281), stdev = 8.876
[info]   CI (99.9%): [1612.719, 1681.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.385 ±(99.9%) 568.526 MB/sec [Average]
[info]   (min, avg, max) = (1359.489, 1623.385, 1696.044), stdev = 147.644
[info]   CI (99.9%): [1054.860, 2191.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5512.291 ±(99.9%) 1933.393 B/op [Average]
[info]   (min, avg, max) = (4615.620, 5512.291, 5780.167), stdev = 502.096
[info]   CI (99.9%): [3578.898, 7445.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.127 ±(99.9%) 0.228 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.127, 0.212), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.355] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.800, 12.000), stdev = 3.564
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 41.18% complete, ETA 00:10:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 417801.678 ops/s
[info] # Warmup Iteration   2: 914061.891 ops/s
[info] # Warmup Iteration   3: 927400.110 ops/s
[info] # Warmup Iteration   4: 932985.751 ops/s
[info] # Warmup Iteration   5: 928661.609 ops/s
[info] Iteration   1: 914568.478 ops/s
[info]                  ·gc.alloc.rate:                   1078.935 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1715.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 910433.578 ops/s
[info]                  ·gc.alloc.rate:                   1074.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1732.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 932714.771 ops/s
[info]                  ·gc.alloc.rate:                   1100.373 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.998 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1696.818 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 922854.814 ops/s
[info]                  ·gc.alloc.rate:                   1088.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2294.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 925236.114 ops/s
[info]                  ·gc.alloc.rate:                   1091.551 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1721.299 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   921161.551 ±(99.9%) 33980.930 ops/s [Average]
[info]   (min, avg, max) = (910433.578, 921161.551, 932714.771), stdev = 8824.740
[info]   CI (99.9%): [887180.621, 955142.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1086.737 ±(99.9%) 40.120 MB/sec [Average]
[info]   (min, avg, max) = (1074.080, 1086.737, 1100.373), stdev = 10.419
[info]   CI (99.9%): [1046.617, 1126.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1072.898 ±(99.9%) 588.731 MB/sec [Average]
[info]   (min, avg, max) = (997.276, 1072.898, 1346.225), stdev = 152.892
[info]   CI (99.9%): [484.167, 1661.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1832.234 ±(99.9%) 997.238 B/op [Average]
[info]   (min, avg, max) = (1696.818, 1832.234, 2294.932), stdev = 258.980
[info]   CI (99.9%): [834.996, 2829.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.078 ±(99.9%) 0.227 B/op [Average]
[info]   (min, avg, max) = (0.035, 0.078, 0.179), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 42.65% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2424411.452 ops/s
[info] # Warmup Iteration   2: 3179983.017 ops/s
[info] # Warmup Iteration   3: 3167627.321 ops/s
[info] # Warmup Iteration   4: 3224189.917 ops/s
[info] # Warmup Iteration   5: 3204245.905 ops/s
[info] Iteration   1: 3221490.306 ops/s
[info]                  ·gc.alloc.rate:                   802.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3191804.730 ops/s
[info]                  ·gc.alloc.rate:                   795.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3186959.158 ops/s
[info]                  ·gc.alloc.rate:                   794.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     488.362 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3190288.534 ops/s
[info]                  ·gc.alloc.rate:                   794.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326.991 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3157137.965 ops/s
[info]                  ·gc.alloc.rate:                   786.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     497.294 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3189536.139 ±(99.9%) 87872.839 ops/s [Average]
[info]   (min, avg, max) = (3157137.965, 3189536.139, 3221490.306), stdev = 22820.297
[info]   CI (99.9%): [3101663.299, 3277408.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   794.717 ±(99.9%) 21.967 MB/sec [Average]
[info]   (min, avg, max) = (786.623, 794.717, 802.710), stdev = 5.705
[info]   CI (99.9%): [772.750, 816.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.358 ±(99.9%) 707.562 MB/sec [Average]
[info]   (min, avg, max) = (654.789, 792.358, 997.916), stdev = 183.752
[info]   CI (99.9%): [84.796, 1499.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   391.225 ±(99.9%) 357.493 B/op [Average]
[info]   (min, avg, max) = (319.763, 391.225, 497.294), stdev = 92.840
[info]   CI (99.9%): [33.732, 748.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.021, 0.031), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.050
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 44.12% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 143600.880 ops/s
[info] # Warmup Iteration   2: 250967.569 ops/s
[info] # Warmup Iteration   3: 255554.639 ops/s
[info] # Warmup Iteration   4: 260061.579 ops/s
[info] # Warmup Iteration   5: 262692.556 ops/s
[info] Iteration   1: 262341.698 ops/s
[info]                  ·gc.alloc.rate:                   1364.740 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.233 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7953.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 256161.836 ops/s
[info]                  ·gc.alloc.rate:                   1332.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8198.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.512 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 260237.443 ops/s
[info]                  ·gc.alloc.rate:                   1353.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.508 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8110.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 259299.275 ops/s
[info]                  ·gc.alloc.rate:                   1348.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8175.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 256838.646 ops/s
[info]                  ·gc.alloc.rate:                   1336.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8274.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   258975.780 ±(99.9%) 9724.586 ops/s [Average]
[info]   (min, avg, max) = (256161.836, 258975.780, 262341.698), stdev = 2525.444
[info]   CI (99.9%): [249251.194, 268700.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1347.173 ±(99.9%) 50.625 MB/sec [Average]
[info]   (min, avg, max) = (1332.569, 1347.173, 1364.740), stdev = 13.147
[info]   CI (99.9%): [1296.548, 1397.798] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.001, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1340.165 ±(99.9%) 38.014 MB/sec [Average]
[info]   (min, avg, max) = (1326.233, 1340.165, 1350.813), stdev = 9.872
[info]   CI (99.9%): [1302.152, 1378.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8142.286 ±(99.9%) 465.838 B/op [Average]
[info]   (min, avg, max) = (7953.083, 8142.286, 8274.472), stdev = 120.977
[info]   CI (99.9%): [7676.449, 8608.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.304 ±(99.9%) 0.447 B/op [Average]
[info]   (min, avg, max) = (0.250, 0.304, 0.512), stdev = 0.116
[info]   CI (99.9%): [≈ 0, 0.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 13.000), stdev = 4.037
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 45.59% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103350.261 ops/s
[info] # Warmup Iteration   2: 630868.489 ops/s
[info] # Warmup Iteration   3: 698197.638 ops/s
[info] # Warmup Iteration   4: 694020.162 ops/s
[info] # Warmup Iteration   5: 699534.646 ops/s
[info] Iteration   1: 694179.987 ops/s
[info]                  ·gc.alloc.rate:               878.961 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1493.717 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 696584.037 ops/s
[info]                  ·gc.alloc.rate:                   882.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2243.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.423 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 698060.963 ops/s
[info]                  ·gc.alloc.rate:               883.864 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.639 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2252.928 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 701344.611 ops/s
[info]                  ·gc.alloc.rate:                   888.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.770 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1500.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 693590.333 ops/s
[info]                  ·gc.alloc.rate:                   878.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2281.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   696751.986 ±(99.9%) 12092.043 ops/s [Average]
[info]   (min, avg, max) = (693590.333, 696751.986, 701344.611), stdev = 3140.265
[info]   CI (99.9%): [684659.943, 708844.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   882.215 ±(99.9%) 15.350 MB/sec [Average]
[info]   (min, avg, max) = (878.181, 882.215, 888.042), stdev = 3.986
[info]   CI (99.9%): [866.865, 897.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1992.001, 1992.001, 1992.001), stdev = 0.001
[info]   CI (99.9%): [1992.001, 1992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   865.356 ±(99.9%) 708.362 MB/sec [Average]
[info]   (min, avg, max) = (659.096, 865.356, 1005.952), stdev = 183.959
[info]   CI (99.9%): [156.994, 1573.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1954.392 ±(99.9%) 1608.995 B/op [Average]
[info]   (min, avg, max) = (1493.717, 1954.392, 2281.827), stdev = 417.851
[info]   CI (99.9%): [345.398, 3563.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.298 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.187), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.673 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.122, 0.423), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 0.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 10.000), stdev = 3.082
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 47.06% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1785559.072 ops/s
[info] # Warmup Iteration   2: 2147940.770 ops/s
[info] # Warmup Iteration   3: 2186731.558 ops/s
[info] # Warmup Iteration   4: 2216260.656 ops/s
[info] # Warmup Iteration   5: 2196531.843 ops/s
[info] Iteration   1: 2192297.203 ops/s
[info]                  ·gc.alloc.rate:                   1493.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.484 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2181982.596 ops/s
[info]                  ·gc.alloc.rate:                   1486.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1208.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2209722.958 ops/s
[info]                  ·gc.alloc.rate:                   1505.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     959.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2191776.091 ops/s
[info]                  ·gc.alloc.rate:                   1493.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.685 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1213.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 2194107.350 ops/s
[info]                  ·gc.alloc.rate:                   1495.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     971.925 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2193977.240 ±(99.9%) 38481.576 ops/s [Average]
[info]   (min, avg, max) = (2181982.596, 2193977.240, 2209722.958), stdev = 9993.543
[info]   CI (99.9%): [2155495.664, 2232458.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1494.953 ±(99.9%) 26.144 MB/sec [Average]
[info]   (min, avg, max) = (1486.808, 1494.953, 1505.657), stdev = 6.790
[info]   CI (99.9%): [1468.809, 1521.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1480.689 ±(99.9%) 713.946 MB/sec [Average]
[info]   (min, avg, max) = (1333.484, 1480.689, 1690.685), stdev = 185.410
[info]   CI (99.9%): [766.743, 2194.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1062.094 ±(99.9%) 524.359 B/op [Average]
[info]   (min, avg, max) = (956.942, 1062.094, 1213.556), stdev = 136.174
[info]   CI (99.9%): [537.734, 1586.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.042 ±(99.9%) 0.111 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.042, 0.090), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 48.53% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 117252.866 ops/s
[info] # Warmup Iteration   2: 211328.975 ops/s
[info] # Warmup Iteration   3: 213944.721 ops/s
[info] # Warmup Iteration   4: 216101.283 ops/s
[info] # Warmup Iteration   5: 216037.367 ops/s
[info] Iteration   1: 218910.517 ops/s
[info]                  ·gc.alloc.rate:                   1153.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7104.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 215364.260 ops/s
[info]                  ·gc.alloc.rate:                   1134.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.112 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9687.671 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.761 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 218671.792 ops/s
[info]                  ·gc.alloc.rate:                   1151.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.595 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7198.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 219738.777 ops/s
[info]                  ·gc.alloc.rate:               1157.498 MB/sec
[info]                  ·gc.alloc.rate.norm:          8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1339.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9592.758 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 220054.603 ops/s
[info]                  ·gc.alloc.rate:                   1159.246 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7213.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   218547.990 ±(99.9%) 7196.364 ops/s [Average]
[info]   (min, avg, max) = (215364.260, 218547.990, 220054.603), stdev = 1868.873
[info]   CI (99.9%): [211351.625, 225744.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1151.286 ±(99.9%) 37.892 MB/sec [Average]
[info]   (min, avg, max) = (1134.516, 1151.286, 1159.246), stdev = 9.840
[info]   CI (99.9%): [1113.395, 1189.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.788 ±(99.9%) 704.273 MB/sec [Average]
[info]   (min, avg, max) = (988.586, 1132.788, 1339.720), stdev = 182.897
[info]   CI (99.9%): [428.515, 1837.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8159.513 ±(99.9%) 5208.945 B/op [Average]
[info]   (min, avg, max) = (7104.907, 8159.513, 9687.671), stdev = 1352.747
[info]   CI (99.9%): [2950.568, 13368.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.242 ±(99.9%) 1.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.242, 0.761), stdev = 0.297
[info]   CI (99.9%): [≈ 0, 1.386] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 10.000), stdev = 3.050
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce
[info] # Run progress: 50.00% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 58459.131 ops/s
[info] # Warmup Iteration   2: 425186.193 ops/s
[info] # Warmup Iteration   3: 445726.989 ops/s
[info] # Warmup Iteration   4: 463640.606 ops/s
[info] # Warmup Iteration   5: 463697.308 ops/s
[info] Iteration   1: 454447.894 ops/s
[info]                  ·gc.alloc.rate:                   1344.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4623.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 464198.397 ops/s
[info]                  ·gc.alloc.rate:               1373.793 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.204 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4548.941 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 460328.936 ops/s
[info]                  ·gc.alloc.rate:                   1362.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.576 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4605.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 465741.613 ops/s
[info]                  ·gc.alloc.rate:                   1378.321 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4566.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 467463.399 ops/s
[info]                  ·gc.alloc.rate:                   1383.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4559.640 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce":
[info]   462436.048 ±(99.9%) 19967.493 ops/s [Average]
[info]   (min, avg, max) = (454447.894, 462436.048, 467463.399), stdev = 5185.495
[info]   CI (99.9%): [442468.555, 482403.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1368.580 ±(99.9%) 59.023 MB/sec [Average]
[info]   (min, avg, max) = (1344.925, 1368.580, 1383.426), stdev = 15.328
[info]   CI (99.9%): [1309.557, 1427.603] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1346.365 ±(99.9%) 29.674 MB/sec [Average]
[info]   (min, avg, max) = (1335.479, 1346.365, 1354.795), stdev = 7.706
[info]   CI (99.9%): [1316.691, 1376.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4580.682 ±(99.9%) 122.912 B/op [Average]
[info]   (min, avg, max) = (4548.941, 4580.682, 4623.302), stdev = 31.920
[info]   CI (99.9%): [4457.770, 4703.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.140), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 51.47% complete, ETA 00:08:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 611239.586 ops/s
[info] # Warmup Iteration   2: 973739.772 ops/s
[info] # Warmup Iteration   3: 970077.853 ops/s
[info] # Warmup Iteration   4: 975593.276 ops/s
[info] # Warmup Iteration   5: 975310.119 ops/s
[info] Iteration   1: 966550.488 ops/s
[info]                  ·gc.alloc.rate:               742.146 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1611.348 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 964340.468 ops/s
[info]                  ·gc.alloc.rate:                   740.457 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1081.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 975281.427 ops/s
[info]                  ·gc.alloc.rate:                   748.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1073.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 968974.643 ops/s
[info]                  ·gc.alloc.rate:                   744.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1083.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 967366.535 ops/s
[info]                  ·gc.alloc.rate:                   742.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1088.137 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   968502.712 ±(99.9%) 15946.508 ops/s [Average]
[info]   (min, avg, max) = (964340.468, 968502.712, 975281.427), stdev = 4141.258
[info]   CI (99.9%): [952556.204, 984449.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   743.646 ±(99.9%) 12.244 MB/sec [Average]
[info]   (min, avg, max) = (740.457, 743.646, 748.851), stdev = 3.180
[info]   CI (99.9%): [731.403, 755.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.000), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.980 ±(99.9%) 557.511 MB/sec [Average]
[info]   (min, avg, max) = (663.077, 730.980, 989.946), stdev = 144.784
[info]   CI (99.9%): [173.468, 1288.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1187.651 ±(99.9%) 912.272 B/op [Average]
[info]   (min, avg, max) = (1073.386, 1187.651, 1611.348), stdev = 236.914
[info]   CI (99.9%): [275.378, 2099.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.149 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.102), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 7.000), stdev = 2.074
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 52.94% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2980887.867 ops/s
[info] # Warmup Iteration   2: 3240955.314 ops/s
[info] # Warmup Iteration   3: 3242056.125 ops/s
[info] # Warmup Iteration   4: 3297262.924 ops/s
[info] # Warmup Iteration   5: 3291503.603 ops/s
[info] Iteration   1: 3330337.980 ops/s
[info]                  ·gc.alloc.rate:      101.609 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3333813.458 ops/s
[info]                  ·gc.alloc.rate:      101.715 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3314113.348 ops/s
[info]                  ·gc.alloc.rate:               101.118 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.481 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 3334257.205 ops/s
[info]                  ·gc.alloc.rate:      101.732 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3260911.466 ops/s
[info]                  ·gc.alloc.rate:                   99.494 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.466 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3314686.691 ±(99.9%) 120018.842 ops/s [Average]
[info]   (min, avg, max) = (3260911.466, 3314686.691, 3334257.205), stdev = 31168.512
[info]   CI (99.9%): [3194667.850, 3434705.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   101.134 ±(99.9%) 3.658 MB/sec [Average]
[info]   (min, avg, max) = (99.494, 101.134, 101.732), stdev = 0.950
[info]   CI (99.9%): [97.475, 104.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.366 ±(99.9%) 539.748 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.366, 255.918), stdev = 140.171
[info]   CI (99.9%): [≈ 0, 642.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   48.989 ±(99.9%) 258.321 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.989, 123.466), stdev = 67.085
[info]   CI (99.9%): [≈ 0, 307.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.002 ±(99.9%) 0.018 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.001 ±(99.9%) 0.009 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.001, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 5.000), stdev = 2.191
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 54.41% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 93973.043 ops/s
[info] # Warmup Iteration   2: 162939.375 ops/s
[info] # Warmup Iteration   3: 163832.593 ops/s
[info] # Warmup Iteration   4: 162597.913 ops/s
[info] # Warmup Iteration   5: 162585.612 ops/s
[info] Iteration   1: 163496.098 ops/s
[info]                  ·gc.alloc.rate:                   1110.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9513.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.401 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 163707.637 ops/s
[info]                  ·gc.alloc.rate:                   1112.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.020 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9552.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.600 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 162979.134 ops/s
[info]                  ·gc.alloc.rate:                   1107.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12866.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.804 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 161616.330 ops/s
[info]                  ·gc.alloc.rate:                   1097.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9773.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.203 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 163179.204 ops/s
[info]                  ·gc.alloc.rate:                   1108.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9721.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   162995.681 ±(99.9%) 3160.029 ops/s [Average]
[info]   (min, avg, max) = (161616.330, 162995.681, 163707.637), stdev = 820.649
[info]   CI (99.9%): [159835.652, 166155.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1107.328 ±(99.9%) 21.582 MB/sec [Average]
[info]   (min, avg, max) = (1097.910, 1107.328, 1112.208), stdev = 5.605
[info]   CI (99.9%): [1085.745, 1128.910] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10688.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10688.003, 10688.003, 10688.003), stdev = 0.001
[info]   CI (99.9%): [10688.002, 10688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1065.551 ±(99.9%) 576.230 MB/sec [Average]
[info]   (min, avg, max) = (988.663, 1065.551, 1332.883), stdev = 149.645
[info]   CI (99.9%): [489.321, 1641.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10285.188 ±(99.9%) 5571.666 B/op [Average]
[info]   (min, avg, max) = (9513.271, 10285.188, 12866.121), stdev = 1446.944
[info]   CI (99.9%): [4713.522, 15856.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.482 ±(99.9%) 0.880 B/op [Average]
[info]   (min, avg, max) = (0.203, 0.482, 0.804), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 12.000), stdev = 3.912
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 55.88% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 879538.372 ops/s
[info] # Warmup Iteration   2: 1298374.238 ops/s
[info] # Warmup Iteration   3: 1318643.638 ops/s
[info] # Warmup Iteration   4: 1315638.753 ops/s
[info] # Warmup Iteration   5: 1312007.437 ops/s
[info] Iteration   1: 1309629.681 ops/s
[info]                  ·gc.alloc.rate:                   1465.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1609.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1301783.893 ops/s
[info]                  ·gc.alloc.rate:                   1456.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.251 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1626.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1312556.607 ops/s
[info]                  ·gc.alloc.rate:                   1468.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2024.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1316844.272 ops/s
[info]                  ·gc.alloc.rate:                   1473.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1618.653 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 1310677.140 ops/s
[info]                  ·gc.alloc.rate:                   1466.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1628.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1310298.319 ±(99.9%) 21181.638 ops/s [Average]
[info]   (min, avg, max) = (1301783.893, 1310298.319, 1316844.272), stdev = 5500.804
[info]   CI (99.9%): [1289116.681, 1331479.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1465.862 ±(99.9%) 23.574 MB/sec [Average]
[info]   (min, avg, max) = (1456.384, 1465.862, 1473.135), stdev = 6.122
[info]   CI (99.9%): [1442.288, 1489.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1417.438 ±(99.9%) 586.086 MB/sec [Average]
[info]   (min, avg, max) = (1339.883, 1417.438, 1689.439), stdev = 152.205
[info]   CI (99.9%): [831.352, 2003.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1701.728 ±(99.9%) 696.290 B/op [Average]
[info]   (min, avg, max) = (1609.538, 1701.728, 2024.912), stdev = 180.824
[info]   CI (99.9%): [1005.437, 2398.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.040, 0.050), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   48.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.600, 17.000), stdev = 4.561
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 57.35% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2650711.364 ops/s
[info] # Warmup Iteration   2: 3834897.749 ops/s
[info] # Warmup Iteration   3: 3801804.973 ops/s
[info] # Warmup Iteration   4: 3915192.891 ops/s
[info] # Warmup Iteration   5: 3887120.750 ops/s
[info] Iteration   1: 3888285.130 ops/s
[info]                  ·gc.alloc.rate:                   1067.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3889679.039 ops/s
[info]                  ·gc.alloc.rate:                   1068.058 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3885649.223 ops/s
[info]                  ·gc.alloc.rate:                   1066.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     542.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3940941.115 ops/s
[info]                  ·gc.alloc.rate:                   1082.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     402.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3887618.567 ops/s
[info]                  ·gc.alloc.rate:               1067.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 409.247 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3898434.615 ±(99.9%) 91668.941 ops/s [Average]
[info]   (min, avg, max) = (3885649.223, 3898434.615, 3940941.115), stdev = 23806.133
[info]   CI (99.9%): [3806765.674, 3990103.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1070.481 ±(99.9%) 25.137 MB/sec [Average]
[info]   (min, avg, max) = (1066.947, 1070.481, 1082.137), stdev = 6.528
[info]   CI (99.9%): [1045.344, 1095.618] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.132 ±(99.9%) 579.032 MB/sec [Average]
[info]   (min, avg, max) = (993.287, 1070.132, 1338.827), stdev = 150.373
[info]   CI (99.9%): [491.100, 1649.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   431.956 ±(99.9%) 237.320 B/op [Average]
[info]   (min, avg, max) = (401.901, 431.956, 542.082), stdev = 61.631
[info]   CI (99.9%): [194.636, 669.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 6.000), stdev = 1.871
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 58.82% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14941920.642 ops/s
[info] # Warmup Iteration   2: 15547308.604 ops/s
[info] # Warmup Iteration   3: 15019973.144 ops/s
[info] # Warmup Iteration   4: 14982606.607 ops/s
[info] # Warmup Iteration   5: 16054396.789 ops/s
[info] Iteration   1: 16005573.669 ops/s
[info]                  ·gc.alloc.rate:                   488.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     64.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 15946671.435 ops/s
[info]                  ·gc.alloc.rate:               486.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.184 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 15696333.557 ops/s
[info]                  ·gc.alloc.rate:                   478.890 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 14486797.427 ops/s
[info]                  ·gc.alloc.rate:               441.986 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 35.499 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 15846673.039 ops/s
[info]                  ·gc.alloc.rate:               483.464 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.552 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   15596409.825 ±(99.9%) 2430755.655 ops/s [Average]
[info]   (min, avg, max) = (14486797.427, 15596409.825, 16005573.669), stdev = 631259.524
[info]   CI (99.9%): [13165654.170, 18027165.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   475.843 ±(99.9%) 74.173 MB/sec [Average]
[info]   (min, avg, max) = (441.986, 475.843, 488.345), stdev = 19.262
[info]   CI (99.9%): [401.670, 550.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.166 ±(99.9%) 686.407 MB/sec [Average]
[info]   (min, avg, max) = (326.213, 457.166, 653.087), stdev = 178.258
[info]   CI (99.9%): [≈ 0, 1143.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   45.952 ±(99.9%) 66.334 B/op [Average]
[info]   (min, avg, max) = (32.184, 45.952, 65.460), stdev = 17.227
[info]   CI (99.9%): [≈ 0, 112.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 10.000), stdev = 3.962
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 60.29% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 574707.382 ops/s
[info] # Warmup Iteration   2: 870766.030 ops/s
[info] # Warmup Iteration   3: 874051.482 ops/s
[info] # Warmup Iteration   4: 873017.318 ops/s
[info] # Warmup Iteration   5: 880252.552 ops/s
[info] Iteration   1: 867561.653 ops/s
[info]                  ·gc.alloc.rate:                   1301.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2404.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 845001.021 ops/s
[info]                  ·gc.alloc.rate:                   1267.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1862.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 836137.814 ops/s
[info]                  ·gc.alloc.rate:                   1254.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.495 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2522.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 837530.182 ops/s
[info]                  ·gc.alloc.rate:                   1256.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2528.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 825862.614 ops/s
[info]                  ·gc.alloc.rate:                   1238.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2572.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   842418.657 ±(99.9%) 60157.842 ops/s [Average]
[info]   (min, avg, max) = (825862.614, 842418.657, 867561.653), stdev = 15622.801
[info]   CI (99.9%): [782260.815, 902576.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1263.699 ±(99.9%) 90.279 MB/sec [Average]
[info]   (min, avg, max) = (1238.844, 1263.699, 1301.424), stdev = 23.445
[info]   CI (99.9%): [1173.420, 1353.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.001, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.778 ±(99.9%) 586.890 MB/sec [Average]
[info]   (min, avg, max) = (1000.626, 1272.778, 1350.447), stdev = 152.414
[info]   CI (99.9%): [685.888, 1859.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2378.269 ±(99.9%) 1134.736 B/op [Average]
[info]   (min, avg, max) = (1862.966, 2378.269, 2572.603), stdev = 294.687
[info]   CI (99.9%): [1243.533, 3513.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (0.076, 0.101, 0.155), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 11.000), stdev = 2.408
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 61.76% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 385073.850 ops/s
[info] # Warmup Iteration   2: 704445.176 ops/s
[info] # Warmup Iteration   3: 723864.767 ops/s
[info] # Warmup Iteration   4: 719905.217 ops/s
[info] # Warmup Iteration   5: 726811.071 ops/s
[info] Iteration   1: 732109.057 ops/s
[info]                  ·gc.alloc.rate:                   1757.173 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.035 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3595.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 730512.072 ops/s
[info]                  ·gc.alloc.rate:                   1753.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.051 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3624.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 730236.208 ops/s
[info]                  ·gc.alloc.rate:                   1752.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3639.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 731251.051 ops/s
[info]                  ·gc.alloc.rate:                   1755.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4375.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 739942.488 ops/s
[info]                  ·gc.alloc.rate:                   1775.998 MB/sec
[info]                  ·gc.alloc.rate.norm:              3776.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.039 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3610.249 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.221 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   732810.175 ±(99.9%) 15605.670 ops/s [Average]
[info]   (min, avg, max) = (730236.208, 732810.175, 739942.488), stdev = 4052.743
[info]   CI (99.9%): [717204.505, 748415.845] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1758.829 ±(99.9%) 37.585 MB/sec [Average]
[info]   (min, avg, max) = (1752.546, 1758.829, 1775.998), stdev = 9.761
[info]   CI (99.9%): [1721.244, 1796.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3776.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3776.001, 3776.001, 3776.001), stdev = 0.001
[info]   CI (99.9%): [3776.001, 3776.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1755.452 ±(99.9%) 600.334 MB/sec [Average]
[info]   (min, avg, max) = (1673.035, 1755.452, 2033.866), stdev = 155.905
[info]   CI (99.9%): [1155.118, 2355.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3769.106 ±(99.9%) 1307.553 B/op [Average]
[info]   (min, avg, max) = (3595.197, 3769.106, 4375.823), stdev = 339.567
[info]   CI (99.9%): [2461.553, 5076.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.125 ±(99.9%) 0.252 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.125, 0.221), stdev = 0.065
[info]   CI (99.9%): [≈ 0, 0.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 11.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 63.24% complete, ETA 00:06:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1390579.123 ops/s
[info] # Warmup Iteration   2: 2361469.844 ops/s
[info] # Warmup Iteration   3: 2431994.185 ops/s
[info] # Warmup Iteration   4: 2450159.773 ops/s
[info] # Warmup Iteration   5: 2456469.938 ops/s
[info] Iteration   1: 2444044.829 ops/s
[info]                  ·gc.alloc.rate:                   1416.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1075.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 2452693.217 ops/s
[info]                  ·gc.alloc.rate:                   1421.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.612 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2393446.669 ops/s
[info]                  ·gc.alloc.rate:                   1387.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.103 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     887.473 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Iteration   4: 2458175.692 ops/s
[info]                  ·gc.alloc.rate:                   1425.015 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.497 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     866.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2476597.036 ops/s
[info]                  ·gc.alloc.rate:                   1435.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   2444991.489 ±(99.9%) 120079.215 ops/s [Average]
[info]   (min, avg, max) = (2393446.669, 2444991.489, 2476597.036), stdev = 31184.191
[info]   CI (99.9%): [2324912.274, 2565070.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1417.361 ±(99.9%) 69.796 MB/sec [Average]
[info]   (min, avg, max) = (1387.416, 1417.361, 1435.755), stdev = 18.126
[info]   CI (99.9%): [1347.565, 1487.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1415.146 ±(99.9%) 551.046 MB/sec [Average]
[info]   (min, avg, max) = (1344.860, 1415.146, 1671.027), stdev = 143.105
[info]   CI (99.9%): [864.100, 1966.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   910.697 ±(99.9%) 357.448 B/op [Average]
[info]   (min, avg, max) = (861.494, 910.697, 1075.677), stdev = 92.828
[info]   CI (99.9%): [553.249, 1268.145] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.024, 0.040), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   50.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.000, 22.000), stdev = 7.969
[info]   CI (99.9%): [50.000, 50.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 64.71% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4010359.633 ops/s
[info] # Warmup Iteration   2: 4395334.714 ops/s
[info] # Warmup Iteration   3: 4407531.111 ops/s
[info] # Warmup Iteration   4: 4389049.669 ops/s
[info] # Warmup Iteration   5: 4446541.378 ops/s
[info] Iteration   1: 4366042.141 ops/s
[info]                  ·gc.alloc.rate:                   1198.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     477.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 4487407.387 ops/s
[info]                  ·gc.alloc.rate:                   1232.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     350.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4506109.318 ops/s
[info]                  ·gc.alloc.rate:                   1237.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     467.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 4452008.520 ops/s
[info]                  ·gc.alloc.rate:                   1222.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.224 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4482496.318 ops/s
[info]                  ·gc.alloc.rate:                   1230.874 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4458812.737 ±(99.9%) 213252.448 ops/s [Average]
[info]   (min, avg, max) = (4366042.141, 4458812.737, 4506109.318), stdev = 55380.984
[info]   CI (99.9%): [4245560.289, 4672065.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1224.336 ±(99.9%) 58.573 MB/sec [Average]
[info]   (min, avg, max) = (1198.865, 1224.336, 1237.332), stdev = 15.211
[info]   CI (99.9%): [1165.762, 1282.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.114 ±(99.9%) 697.935 MB/sec [Average]
[info]   (min, avg, max) = (999.256, 1204.114, 1344.743), stdev = 181.252
[info]   CI (99.9%): [506.179, 1902.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   425.180 ±(99.9%) 254.887 B/op [Average]
[info]   (min, avg, max) = (350.338, 425.180, 477.622), stdev = 66.193
[info]   CI (99.9%): [170.293, 680.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.029), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 11.000), stdev = 2.775
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 66.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159457.268 ops/s
[info] # Warmup Iteration   2: 319271.883 ops/s
[info] # Warmup Iteration   3: 323803.165 ops/s
[info] # Warmup Iteration   4: 330047.173 ops/s
[info] # Warmup Iteration   5: 325011.051 ops/s
[info] Iteration   1: 328890.630 ops/s
[info]                  ·gc.alloc.rate:                   1174.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6308.523 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.598 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 322952.083 ops/s
[info]                  ·gc.alloc.rate:                   1152.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4848.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.406 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 325405.126 ops/s
[info]                  ·gc.alloc.rate:                   1162.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6442.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 334173.215 ops/s
[info]                  ·gc.alloc.rate:                   1192.919 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4734.126 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 326515.493 ops/s
[info]                  ·gc.alloc.rate:                   1165.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6486.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   327587.309 ±(99.9%) 16390.002 ops/s [Average]
[info]   (min, avg, max) = (322952.083, 327587.309, 334173.215), stdev = 4256.432
[info]   CI (99.9%): [311197.307, 343977.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1169.510 ±(99.9%) 58.267 MB/sec [Average]
[info]   (min, avg, max) = (1152.827, 1169.510, 1192.919), stdev = 15.132
[info]   CI (99.9%): [1111.243, 1227.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1199.843 ±(99.9%) 702.053 MB/sec [Average]
[info]   (min, avg, max) = (995.289, 1199.843, 1346.184), stdev = 182.321
[info]   CI (99.9%): [497.790, 1901.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5764.087 ±(99.9%) 3432.188 B/op [Average]
[info]   (min, avg, max) = (4734.126, 5764.087, 6486.328), stdev = 891.328
[info]   CI (99.9%): [2331.899, 9196.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.125), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.320 ±(99.9%) 0.689 B/op [Average]
[info]   (min, avg, max) = (0.196, 0.320, 0.598), stdev = 0.179
[info]   CI (99.9%): [≈ 0, 1.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 10.000), stdev = 3.033
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 67.65% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1776521.846 ops/s
[info] # Warmup Iteration   2: 2715938.586 ops/s
[info] # Warmup Iteration   3: 2739078.452 ops/s
[info] # Warmup Iteration   4: 2758672.415 ops/s
[info] # Warmup Iteration   5: 2740275.737 ops/s
[info] Iteration   1: 2742149.119 ops/s
[info]                  ·gc.alloc.rate:                   1171.303 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.836 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.381 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2725789.440 ops/s
[info]                  ·gc.alloc.rate:                   1164.283 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.237 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     579.047 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2724766.889 ops/s
[info]                  ·gc.alloc.rate:                   1163.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.534 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2712667.353 ops/s
[info]                  ·gc.alloc.rate:                   1158.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2725328.017 ops/s
[info]                  ·gc.alloc.rate:                   1164.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     779.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2726140.164 ±(99.9%) 40407.538 ops/s [Average]
[info]   (min, avg, max) = (2712667.353, 2726140.164, 2742149.119), stdev = 10493.709
[info]   CI (99.9%): [2685732.625, 2766547.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1164.459 ±(99.9%) 17.290 MB/sec [Average]
[info]   (min, avg, max) = (1158.687, 1164.459, 1171.303), stdev = 4.490
[info]   CI (99.9%): [1147.169, 1181.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1207.406 ±(99.9%) 704.910 MB/sec [Average]
[info]   (min, avg, max) = (1003.237, 1207.406, 1350.877), stdev = 183.063
[info]   CI (99.9%): [502.495, 1912.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   696.607 ±(99.9%) 401.370 B/op [Average]
[info]   (min, avg, max) = (579.047, 696.607, 779.770), stdev = 104.234
[info]   CI (99.9%): [295.237, 1097.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.017, 0.024), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 13.000), stdev = 4.037
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 69.12% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3891520.242 ops/s
[info] # Warmup Iteration   2: 4284818.214 ops/s
[info] # Warmup Iteration   3: 4324375.304 ops/s
[info] # Warmup Iteration   4: 4417851.392 ops/s
[info] # Warmup Iteration   5: 4418061.827 ops/s
[info] Iteration   1: 4399594.034 ops/s
[info]                  ·gc.alloc.rate:                   805.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4421514.950 ops/s
[info]                  ·gc.alloc.rate:                   809.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     350.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4363952.585 ops/s
[info]                  ·gc.alloc.rate:                   798.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4364489.945 ops/s
[info]                  ·gc.alloc.rate:                   798.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     358.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4318152.214 ops/s
[info]                  ·gc.alloc.rate:                   790.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.553 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   4373540.746 ±(99.9%) 151869.188 ops/s [Average]
[info]   (min, avg, max) = (4318152.214, 4373540.746, 4421514.950), stdev = 39439.946
[info]   CI (99.9%): [4221671.557, 4525409.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   800.613 ±(99.9%) 27.857 MB/sec [Average]
[info]   (min, avg, max) = (790.447, 800.613, 809.414), stdev = 7.234
[info]   CI (99.9%): [772.756, 828.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.359 ±(99.9%) 696.647 MB/sec [Average]
[info]   (min, avg, max) = (654.737, 792.359, 995.270), stdev = 180.917
[info]   CI (99.9%): [95.713, 1489.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   284.849 ±(99.9%) 246.172 B/op [Average]
[info]   (min, avg, max) = (234.130, 284.849, 358.761), stdev = 63.930
[info]   CI (99.9%): [38.678, 531.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.022, 0.027, 0.038), stdev = 0.007
[info]   CI (99.9%): [0.001, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 5.000), stdev = 1.414
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 70.59% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 282707.830 ops/s
[info] # Warmup Iteration   2: 487615.155 ops/s
[info] # Warmup Iteration   3: 500127.478 ops/s
[info] # Warmup Iteration   4: 495200.727 ops/s
[info] # Warmup Iteration   5: 500967.119 ops/s
[info] Iteration   1: 492616.738 ops/s
[info]                  ·gc.alloc.rate:                   1457.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4250.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 497501.827 ops/s
[info]                  ·gc.alloc.rate:                   1472.436 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4231.579 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 496164.568 ops/s
[info]                  ·gc.alloc.rate:                   1468.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5333.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 498516.411 ops/s
[info]                  ·gc.alloc.rate:                   1475.329 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4260.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 490588.220 ops/s
[info]                  ·gc.alloc.rate:                   1451.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4341.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   495077.553 ±(99.9%) 12928.959 ops/s [Average]
[info]   (min, avg, max) = (490588.220, 495077.553, 498516.411), stdev = 3357.610
[info]   CI (99.9%): [482148.594, 508006.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1465.169 ±(99.9%) 38.355 MB/sec [Average]
[info]   (min, avg, max) = (1451.851, 1465.169, 1475.329), stdev = 9.961
[info]   CI (99.9%): [1426.814, 1503.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1410.998 ±(99.9%) 584.480 MB/sec [Average]
[info]   (min, avg, max) = (1330.796, 1410.998, 1682.023), stdev = 151.788
[info]   CI (99.9%): [826.518, 1995.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4483.553 ±(99.9%) 1836.725 B/op [Average]
[info]   (min, avg, max) = (4231.579, 4483.553, 5333.501), stdev = 476.992
[info]   CI (99.9%): [2646.828, 6320.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.211 ±(99.9%) 0.486 B/op [Average]
[info]   (min, avg, max) = (0.067, 0.211, 0.395), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 12.000), stdev = 3.912
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 72.06% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 327853.728 ops/s
[info] # Warmup Iteration   2: 947637.215 ops/s
[info] # Warmup Iteration   3: 984747.139 ops/s
[info] # Warmup Iteration   4: 979771.341 ops/s
[info] # Warmup Iteration   5: 970421.965 ops/s
[info] Iteration   1: 978007.905 ops/s
[info]                  ·gc.alloc.rate:                   1228.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2145.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 992414.479 ops/s
[info]                  ·gc.alloc.rate:                   1246.392 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1593.662 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 942933.803 ops/s
[info]                  ·gc.alloc.rate:                   1184.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2243.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 971457.840 ops/s
[info]                  ·gc.alloc.rate:               1220.129 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1638.818 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 987288.786 ops/s
[info]                  ·gc.alloc.rate:                   1240.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2155.776 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   974420.562 ±(99.9%) 74627.898 ops/s [Average]
[info]   (min, avg, max) = (942933.803, 974420.562, 992414.479), stdev = 19380.628
[info]   CI (99.9%): [899792.664, 1049048.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1223.850 ±(99.9%) 93.559 MB/sec [Average]
[info]   (min, avg, max) = (1184.375, 1223.850, 1246.392), stdev = 24.297
[info]   CI (99.9%): [1130.290, 1317.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1976.000, 1976.000, 1976.000), stdev = 0.001
[info]   CI (99.9%): [1976.000, 1976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1209.668 ±(99.9%) 707.416 MB/sec [Average]
[info]   (min, avg, max) = (1005.227, 1209.668, 1352.816), stdev = 183.714
[info]   CI (99.9%): [502.252, 1917.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1955.435 ±(99.9%) 1202.981 B/op [Average]
[info]   (min, avg, max) = (1593.662, 1955.435, 2243.823), stdev = 312.410
[info]   CI (99.9%): [752.454, 3158.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.054 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.039
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.200, 15.000), stdev = 3.962
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 73.53% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2142879.128 ops/s
[info] # Warmup Iteration   2: 2397803.336 ops/s
[info] # Warmup Iteration   3: 2418951.548 ops/s
[info] # Warmup Iteration   4: 2419627.619 ops/s
[info] # Warmup Iteration   5: 2454706.022 ops/s
[info] Iteration   1: 2448674.775 ops/s
[info]                  ·gc.alloc.rate:                   473.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2446154.810 ops/s
[info]                  ·gc.alloc.rate:                   472.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.077 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     419.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2454674.260 ops/s
[info]                  ·gc.alloc.rate:               474.318 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 209.073 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 2448349.899 ops/s
[info]                  ·gc.alloc.rate:                   473.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     420.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2455008.875 ops/s
[info]                  ·gc.alloc.rate:               474.371 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 210.112 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2450572.524 ±(99.9%) 15470.193 ops/s [Average]
[info]   (min, avg, max) = (2446154.810, 2450572.524, 2455008.875), stdev = 4017.560
[info]   CI (99.9%): [2435102.331, 2466042.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   473.523 ±(99.9%) 2.978 MB/sec [Average]
[info]   (min, avg, max) = (472.669, 473.523, 474.371), stdev = 0.773
[info]   CI (99.9%): [470.545, 476.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.154 ±(99.9%) 688.126 MB/sec [Average]
[info]   (min, avg, max) = (325.874, 457.154, 653.746), stdev = 178.704
[info]   CI (99.9%): [≈ 0, 1145.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   293.604 ±(99.9%) 443.364 B/op [Average]
[info]   (min, avg, max) = (209.073, 293.604, 420.079), stdev = 115.140
[info]   CI (99.9%): [≈ 0, 736.968] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 4.000), stdev = 1.581
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.00% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 104599.256 ops/s
[info] # Warmup Iteration   2: 240236.516 ops/s
[info] # Warmup Iteration   3: 244350.240 ops/s
[info] # Warmup Iteration   4: 245861.464 ops/s
[info] # Warmup Iteration   5: 241988.319 ops/s
[info] Iteration   1: 239456.418 ops/s
[info]                  ·gc.alloc.rate:               929.035 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6464.826 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 242003.219 ops/s
[info]                  ·gc.alloc.rate:                   938.958 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6422.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.677 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 242071.300 ops/s
[info]                  ·gc.alloc.rate:                   939.219 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4300.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 242848.256 ops/s
[info]                  ·gc.alloc.rate:                   942.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6463.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.405 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 241852.682 ops/s
[info]                  ·gc.alloc.rate:               938.345 MB/sec
[info]                  ·gc.alloc.rate.norm:          6104.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6515.695 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   241646.375 ±(99.9%) 4942.827 ops/s [Average]
[info]   (min, avg, max) = (239456.418, 241646.375, 242848.256), stdev = 1283.637
[info]   CI (99.9%): [236703.548, 246589.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   937.561 ±(99.9%) 19.253 MB/sec [Average]
[info]   (min, avg, max) = (929.035, 937.561, 942.250), stdev = 5.000
[info]   CI (99.9%): [918.308, 956.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6104.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6104.002, 6104.002, 6104.002), stdev = 0.001
[info]   CI (99.9%): [6104.002, 6104.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.598 ±(99.9%) 570.726 MB/sec [Average]
[info]   (min, avg, max) = (661.769, 926.598, 1001.633), stdev = 148.216
[info]   CI (99.9%): [355.873, 1497.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6033.398 ±(99.9%) 3731.607 B/op [Average]
[info]   (min, avg, max) = (4300.851, 6033.398, 6515.695), stdev = 969.086
[info]   CI (99.9%): [2301.792, 9765.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.170 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.104), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.270 ±(99.9%) 1.105 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.270, 0.677), stdev = 0.287
[info]   CI (99.9%): [≈ 0, 1.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 10.000), stdev = 2.608
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 76.47% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 400439.074 ops/s
[info] # Warmup Iteration   2: 582674.392 ops/s
[info] # Warmup Iteration   3: 601260.585 ops/s
[info] # Warmup Iteration   4: 604655.209 ops/s
[info] # Warmup Iteration   5: 602653.946 ops/s
[info] Iteration   1: 598106.171 ops/s
[info]                  ·gc.alloc.rate:                   1520.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              4000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.684 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4407.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   2: 591383.300 ops/s
[info]                  ·gc.alloc.rate:                   1503.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              4000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3584.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 599541.242 ops/s
[info]                  ·gc.alloc.rate:               1524.301 MB/sec
[info]                  ·gc.alloc.rate.norm:          4000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1690.660 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4436.553 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 592809.278 ops/s
[info]                  ·gc.alloc.rate:                   1507.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              4000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3597.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 592532.637 ops/s
[info]                  ·gc.alloc.rate:                   1506.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              4000.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4506.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   594874.525 ±(99.9%) 14169.130 ops/s [Average]
[info]   (min, avg, max) = (591383.300, 594874.525, 599541.242), stdev = 3679.678
[info]   CI (99.9%): [580705.396, 609043.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1512.459 ±(99.9%) 36.019 MB/sec [Average]
[info]   (min, avg, max) = (1503.606, 1512.459, 1524.301), stdev = 9.354
[info]   CI (99.9%): [1476.441, 1548.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4000.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4000.001, 4000.001, 4000.001), stdev = 0.001
[info]   CI (99.9%): [4000.001, 4000.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1553.329 ±(99.9%) 710.241 MB/sec [Average]
[info]   (min, avg, max) = (1347.487, 1553.329, 1697.335), stdev = 184.447
[info]   CI (99.9%): [843.088, 2263.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4106.593 ±(99.9%) 1817.626 B/op [Average]
[info]   (min, avg, max) = (3584.681, 4106.593, 4506.690), stdev = 472.032
[info]   CI (99.9%): [2288.968, 5924.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.177 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.111), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.243] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.000, 16.000), stdev = 4.583
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 77.94% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 800746.239 ops/s
[info] # Warmup Iteration   2: 1188404.050 ops/s
[info] # Warmup Iteration   3: 1193048.851 ops/s
[info] # Warmup Iteration   4: 1190302.923 ops/s
[info] # Warmup Iteration   5: 1192971.320 ops/s
[info] Iteration   1: 1187981.689 ops/s
[info]                  ·gc.alloc.rate:                   730.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1303.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1191188.866 ops/s
[info]                  ·gc.alloc.rate:               732.936 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 870.478 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 1192085.537 ops/s
[info]                  ·gc.alloc.rate:                   733.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     873.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1192259.571 ops/s
[info]                  ·gc.alloc.rate:               733.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 876.725 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 1194287.616 ops/s
[info]                  ·gc.alloc.rate:                   734.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     878.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1191560.656 ±(99.9%) 8853.871 ops/s [Average]
[info]   (min, avg, max) = (1187981.689, 1191560.656, 1194287.616), stdev = 2299.322
[info]   CI (99.9%): [1182706.785, 1200414.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   733.157 ±(99.9%) 5.428 MB/sec [Average]
[info]   (min, avg, max) = (730.957, 733.157, 734.821), stdev = 1.410
[info]   CI (99.9%): [727.728, 738.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   727.259 ±(99.9%) 552.703 MB/sec [Average]
[info]   (min, avg, max) = (659.095, 727.259, 983.968), stdev = 143.535
[info]   CI (99.9%): [174.556, 1279.962] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   960.468 ±(99.9%) 737.557 B/op [Average]
[info]   (min, avg, max) = (870.478, 960.468, 1303.061), stdev = 191.541
[info]   CI (99.9%): [222.912, 1698.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.055), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 8.000), stdev = 1.304
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.41% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4186870.107 ops/s
[info] # Warmup Iteration   2: 4744870.869 ops/s
[info] # Warmup Iteration   3: 4768816.454 ops/s
[info] # Warmup Iteration   4: 4746500.644 ops/s
[info] # Warmup Iteration   5: 4826106.681 ops/s
[info] Iteration   1: 4790881.197 ops/s
[info]                  ·gc.alloc.rate:                   657.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 4829792.945 ops/s
[info]                  ·gc.alloc.rate:                   663.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     213.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 4735645.685 ops/s
[info]                  ·gc.alloc.rate:               651.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.249 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.383 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 4773865.563 ops/s
[info]                  ·gc.alloc.rate:                   655.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     217.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4770369.410 ops/s
[info]                  ·gc.alloc.rate:                   654.932 MB/sec
[info]                  ·gc.alloc.rate.norm:              216.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4780110.960 ±(99.9%) 131928.269 ops/s [Average]
[info]   (min, avg, max) = (4735645.685, 4780110.960, 4829792.945), stdev = 34261.352
[info]   CI (99.9%): [4648182.692, 4912039.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   656.466 ±(99.9%) 17.042 MB/sec [Average]
[info]   (min, avg, max) = (651.081, 656.466, 663.118), stdev = 4.426
[info]   CI (99.9%): [639.424, 673.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   216.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (216.000, 216.000, 216.000), stdev = 0.001
[info]   CI (99.9%): [216.000, 216.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.839 ±(99.9%) 13.440 MB/sec [Average]
[info]   (min, avg, max) = (653.060, 656.839, 661.729), stdev = 3.490
[info]   CI (99.9%): [643.399, 670.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   216.132 ±(99.9%) 8.055 B/op [Average]
[info]   (min, avg, max) = (213.385, 216.132, 218.242), stdev = 2.092
[info]   CI (99.9%): [208.078, 224.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 10.000), stdev = 3.362
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 80.88% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 201507.637 ops/s
[info] # Warmup Iteration   2: 387331.195 ops/s
[info] # Warmup Iteration   3: 396757.326 ops/s
[info] # Warmup Iteration   4: 397379.914 ops/s
[info] # Warmup Iteration   5: 388775.163 ops/s
[info] Iteration   1: 396401.450 ops/s
[info]                  ·gc.alloc.rate:                   1364.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5263.418 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 397041.137 ops/s
[info]                  ·gc.alloc.rate:                   1366.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5289.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 402258.503 ops/s
[info]                  ·gc.alloc.rate:                   1384.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5246.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.326 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 403225.996 ops/s
[info]                  ·gc.alloc.rate:                   1388.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5257.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.244 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 403039.013 ops/s
[info]                  ·gc.alloc.rate:                   1387.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.807 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5272.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   400393.220 ±(99.9%) 13011.931 ops/s [Average]
[info]   (min, avg, max) = (396401.450, 400393.220, 403225.996), stdev = 3379.157
[info]   CI (99.9%): [387381.289, 413405.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1378.357 ±(99.9%) 44.748 MB/sec [Average]
[info]   (min, avg, max) = (1364.620, 1378.357, 1388.104), stdev = 11.621
[info]   CI (99.9%): [1333.608, 1423.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1340.143 ±(99.9%) 38.129 MB/sec [Average]
[info]   (min, avg, max) = (1326.175, 1340.143, 1350.807), stdev = 9.902
[info]   CI (99.9%): [1302.014, 1378.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5265.902 ±(99.9%) 62.128 B/op [Average]
[info]   (min, avg, max) = (5246.607, 5265.902, 5289.170), stdev = 16.134
[info]   CI (99.9%): [5203.774, 5328.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.246 ±(99.9%) 0.316 B/op [Average]
[info]   (min, avg, max) = (0.163, 0.246, 0.330), stdev = 0.082
[info]   CI (99.9%): [≈ 0, 0.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.800, 10.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 82.35% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140664.868 ops/s
[info] # Warmup Iteration   2: 326743.979 ops/s
[info] # Warmup Iteration   3: 341075.848 ops/s
[info] # Warmup Iteration   4: 337578.173 ops/s
[info] # Warmup Iteration   5: 335229.266 ops/s
[info] Iteration   1: 337421.492 ops/s
[info]                  ·gc.alloc.rate:                   1009.367 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.669 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6136.133 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 337357.638 ops/s
[info]                  ·gc.alloc.rate:                   1008.699 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.318 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4641.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 335998.660 ops/s
[info]                  ·gc.alloc.rate:                   1004.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4685.252 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 338327.136 ops/s
[info]                  ·gc.alloc.rate:               1011.569 MB/sec
[info]                  ·gc.alloc.rate.norm:          4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.583 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4671.514 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 337409.411 ops/s
[info]                  ·gc.alloc.rate:                   1008.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4701.382 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   337302.867 ±(99.9%) 3209.291 ops/s [Average]
[info]   (min, avg, max) = (335998.660, 337302.867, 338327.136), stdev = 833.443
[info]   CI (99.9%): [334093.576, 340512.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1008.623 ±(99.9%) 9.695 MB/sec [Average]
[info]   (min, avg, max) = (1004.616, 1008.623, 1011.569), stdev = 2.518
[info]   CI (99.9%): [998.928, 1018.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4704.001, 4704.001, 4704.001), stdev = 0.001
[info]   CI (99.9%): [4704.001, 4704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1065.097 ±(99.9%) 541.844 MB/sec [Average]
[info]   (min, avg, max) = (995.318, 1065.097, 1316.669), stdev = 140.715
[info]   CI (99.9%): [523.253, 1606.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4967.177 ±(99.9%) 2517.688 B/op [Average]
[info]   (min, avg, max) = (4641.601, 4967.177, 6136.133), stdev = 653.836
[info]   CI (99.9%): [2449.488, 7484.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.264 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.194), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.400, 12.000), stdev = 2.881
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 83.82% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 135063.335 ops/s
[info] # Warmup Iteration   2: 1045843.740 ops/s
[info] # Warmup Iteration   3: 1036814.332 ops/s
[info] # Warmup Iteration   4: 1041900.530 ops/s
[info] # Warmup Iteration   5: 1037901.078 ops/s
[info] Iteration   1: 1036592.020 ops/s
[info]                  ·gc.alloc.rate:                   1075.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2015.815 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1042248.613 ops/s
[info]                  ·gc.alloc.rate:               1081.166 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1511.456 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1054089.481 ops/s
[info]                  ·gc.alloc.rate:                   1093.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1500.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1048507.968 ops/s
[info]                  ·gc.alloc.rate:               1087.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1009.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1513.916 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1055247.998 ops/s
[info]                  ·gc.alloc.rate:                   1094.688 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.564 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2011.977 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1047337.216 ±(99.9%) 30496.597 ops/s [Average]
[info]   (min, avg, max) = (1036592.020, 1047337.216, 1055247.998), stdev = 7919.869
[info]   CI (99.9%): [1016840.619, 1077833.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1086.479 ±(99.9%) 31.666 MB/sec [Average]
[info]   (min, avg, max) = (1075.339, 1086.479, 1094.688), stdev = 8.224
[info]   CI (99.9%): [1054.813, 1118.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.758 ±(99.9%) 704.206 MB/sec [Average]
[info]   (min, avg, max) = (1001.307, 1138.758, 1349.564), stdev = 182.880
[info]   CI (99.9%): [434.552, 1842.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1710.819 ±(99.9%) 1065.537 B/op [Average]
[info]   (min, avg, max) = (1500.931, 1710.819, 2015.815), stdev = 276.717
[info]   CI (99.9%): [645.282, 2776.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.217 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.126), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.273] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 7.000), stdev = 1.517
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 85.29% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1725504.237 ops/s
[info] # Warmup Iteration   2: 2410359.943 ops/s
[info] # Warmup Iteration   3: 2362256.477 ops/s
[info] # Warmup Iteration   4: 2373761.697 ops/s
[info] # Warmup Iteration   5: 2355862.058 ops/s
[info] Iteration   1: 2340659.251 ops/s
[info]                  ·gc.alloc.rate:                   488.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2354327.768 ops/s
[info]                  ·gc.alloc.rate:               490.842 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.218 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.991 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2383610.439 ops/s
[info]                  ·gc.alloc.rate:                   496.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     431.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2381654.238 ops/s
[info]                  ·gc.alloc.rate:               496.563 MB/sec
[info]                  ·gc.alloc.rate.norm:          328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 215.921 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2334677.269 ops/s
[info]                  ·gc.alloc.rate:                   486.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     441.896 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2358985.793 ±(99.9%) 87569.250 ops/s [Average]
[info]   (min, avg, max) = (2334677.269, 2358985.793, 2383610.439), stdev = 22741.456
[info]   CI (99.9%): [2271416.543, 2446555.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   491.825 ±(99.9%) 18.259 MB/sec [Average]
[info]   (min, avg, max) = (486.744, 491.825, 496.950), stdev = 4.742
[info]   CI (99.9%): [473.565, 510.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (328.000, 328.000, 328.000), stdev = 0.001
[info]   CI (99.9%): [328.000, 328.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.755 ±(99.9%) 689.707 MB/sec [Average]
[info]   (min, avg, max) = (326.218, 522.755, 655.762), stdev = 179.115
[info]   CI (99.9%): [≈ 0, 1212.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   348.991 ±(99.9%) 464.369 B/op [Average]
[info]   (min, avg, max) = (215.921, 348.991, 441.896), stdev = 120.595
[info]   CI (99.9%): [≈ 0, 813.360] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 8.000), stdev = 2.881
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 86.76% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106467.343 ops/s
[info] # Warmup Iteration   2: 258857.269 ops/s
[info] # Warmup Iteration   3: 259641.773 ops/s
[info] # Warmup Iteration   4: 263020.852 ops/s
[info] # Warmup Iteration   5: 262458.872 ops/s
[info] Iteration   1: 260859.511 ops/s
[info]                  ·gc.alloc.rate:               961.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5934.388 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 259157.485 ops/s
[info]                  ·gc.alloc.rate:                   955.412 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6001.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.379 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 259462.024 ops/s
[info]                  ·gc.alloc.rate:                   956.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6026.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 260143.053 ops/s
[info]                  ·gc.alloc.rate:                   959.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6039.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 259158.118 ops/s
[info]                  ·gc.alloc.rate:                   955.400 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6090.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   259756.038 ±(99.9%) 2835.949 ops/s [Average]
[info]   (min, avg, max) = (259157.485, 259756.038, 260859.511), stdev = 736.487
[info]   CI (99.9%): [256920.089, 262591.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   957.621 ±(99.9%) 10.523 MB/sec [Average]
[info]   (min, avg, max) = (955.400, 957.621, 961.722), stdev = 2.733
[info]   CI (99.9%): [947.098, 968.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.690 ±(99.9%) 29.530 MB/sec [Average]
[info]   (min, avg, max) = (984.005, 993.690, 1003.266), stdev = 7.669
[info]   CI (99.9%): [964.160, 1023.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6018.555 ±(99.9%) 219.964 B/op [Average]
[info]   (min, avg, max) = (5934.388, 6018.555, 6090.586), stdev = 57.124
[info]   CI (99.9%): [5798.591, 6238.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.177 ±(99.9%) 0.555 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.177, 0.379), stdev = 0.144
[info]   CI (99.9%): [≈ 0, 0.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.881
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 88.24% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142876.179 ops/s
[info] # Warmup Iteration   2: 334040.681 ops/s
[info] # Warmup Iteration   3: 346291.323 ops/s
[info] # Warmup Iteration   4: 339841.110 ops/s
[info] # Warmup Iteration   5: 339057.286 ops/s
[info] Iteration   1: 338903.648 ops/s
[info]                  ·gc.alloc.rate:                   1001.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.267 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4569.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 344747.632 ops/s
[info]                  ·gc.alloc.rate:                   1018.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4522.215 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 344569.101 ops/s
[info]                  ·gc.alloc.rate:                   1018.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4555.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 342355.305 ops/s
[info]                  ·gc.alloc.rate:                   1011.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4602.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 342219.445 ops/s
[info]                  ·gc.alloc.rate:               1011.018 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4626.053 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   342559.026 ±(99.9%) 9101.909 ops/s [Average]
[info]   (min, avg, max) = (338903.648, 342559.026, 344747.632), stdev = 2363.737
[info]   CI (99.9%): [333457.117, 351660.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1012.048 ±(99.9%) 26.939 MB/sec [Average]
[info]   (min, avg, max) = (1001.237, 1012.048, 1018.529), stdev = 6.996
[info]   CI (99.9%): [985.108, 1038.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   996.152 ±(99.9%) 33.474 MB/sec [Average]
[info]   (min, avg, max) = (984.267, 996.152, 1006.244), stdev = 8.693
[info]   CI (99.9%): [962.678, 1029.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4575.089 ±(99.9%) 156.424 B/op [Average]
[info]   (min, avg, max) = (4522.215, 4575.089, 4626.053), stdev = 40.623
[info]   CI (99.9%): [4418.666, 4731.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.134 ±(99.9%) 0.330 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.134, 0.193), stdev = 0.086
[info]   CI (99.9%): [≈ 0, 0.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 8.000), stdev = 2.510
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 89.71% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 80540.661 ops/s
[info] # Warmup Iteration   2: 1114653.632 ops/s
[info] # Warmup Iteration   3: 1169901.867 ops/s
[info] # Warmup Iteration   4: 1148440.639 ops/s
[info] # Warmup Iteration   5: 1167139.473 ops/s
[info] Iteration   1: 1162624.549 ops/s
[info]                  ·gc.alloc.rate:                   1075.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1345.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1165613.533 ops/s
[info]                  ·gc.alloc.rate:                   1078.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1349.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1149951.113 ops/s
[info]                  ·gc.alloc.rate:                   1064.328 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1832.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1159427.736 ops/s
[info]                  ·gc.alloc.rate:                   1073.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1368.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1156883.691 ops/s
[info]                  ·gc.alloc.rate:                   1070.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              1456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1375.276 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1158900.125 ±(99.9%) 23053.299 ops/s [Average]
[info]   (min, avg, max) = (1149951.113, 1158900.125, 1165613.533), stdev = 5986.869
[info]   CI (99.9%): [1135846.825, 1181953.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1072.558 ±(99.9%) 21.209 MB/sec [Average]
[info]   (min, avg, max) = (1064.328, 1072.558, 1078.738), stdev = 5.508
[info]   CI (99.9%): [1051.349, 1093.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1456.000, 1456.000, 1456.000), stdev = 0.001
[info]   CI (99.9%): [1456.000, 1456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.840 ±(99.9%) 579.141 MB/sec [Average]
[info]   (min, avg, max) = (994.618, 1070.840, 1339.619), stdev = 150.401
[info]   CI (99.9%): [491.700, 1649.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1454.419 ±(99.9%) 815.456 B/op [Average]
[info]   (min, avg, max) = (1345.899, 1454.419, 1832.599), stdev = 211.771
[info]   CI (99.9%): [638.962, 2269.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.118 B/op [Average]
[info]   (min, avg, max) = (0.028, 0.051, 0.085), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 13.000), stdev = 4.393
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 91.18% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1840393.338 ops/s
[info] # Warmup Iteration   2: 2089281.865 ops/s
[info] # Warmup Iteration   3: 2088606.761 ops/s
[info] # Warmup Iteration   4: 2076222.091 ops/s
[info] # Warmup Iteration   5: 2103079.984 ops/s
[info] Iteration   1: 2109297.353 ops/s
[info]                  ·gc.alloc.rate:               514.894 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 243.066 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2098003.224 ops/s
[info]                  ·gc.alloc.rate:                   512.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     488.750 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2055663.885 ops/s
[info]                  ·gc.alloc.rate:               501.739 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 250.173 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 2092131.793 ops/s
[info]                  ·gc.alloc.rate:                   510.642 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     492.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2065950.466 ops/s
[info]                  ·gc.alloc.rate:               504.257 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 249.682 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2084209.344 ±(99.9%) 86760.792 ops/s [Average]
[info]   (min, avg, max) = (2055663.885, 2084209.344, 2109297.353), stdev = 22531.502
[info]   CI (99.9%): [1997448.552, 2170970.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   508.719 ±(99.9%) 21.235 MB/sec [Average]
[info]   (min, avg, max) = (501.739, 508.719, 514.894), stdev = 5.515
[info]   CI (99.9%): [487.484, 529.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.433 ±(99.9%) 688.328 MB/sec [Average]
[info]   (min, avg, max) = (325.919, 457.433, 654.744), stdev = 178.757
[info]   CI (99.9%): [≈ 0, 1145.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   344.807 ±(99.9%) 512.470 B/op [Average]
[info]   (min, avg, max) = (243.066, 344.807, 492.365), stdev = 133.087
[info]   CI (99.9%): [≈ 0, 857.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.062), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 8.000), stdev = 3.050
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 92.65% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107875.809 ops/s
[info] # Warmup Iteration   2: 257840.162 ops/s
[info] # Warmup Iteration   3: 258768.167 ops/s
[info] # Warmup Iteration   4: 259710.821 ops/s
[info] # Warmup Iteration   5: 255174.401 ops/s
[info] Iteration   1: 258012.806 ops/s
[info]                  ·gc.alloc.rate:                   998.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6007.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 257607.463 ops/s
[info]                  ·gc.alloc.rate:                   996.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6045.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 257243.605 ops/s
[info]                  ·gc.alloc.rate:                   995.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6087.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 260757.130 ops/s
[info]                  ·gc.alloc.rate:                   1009.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6037.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 262169.830 ops/s
[info]                  ·gc.alloc.rate:                   1014.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6024.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.375 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   259158.167 ±(99.9%) 8394.244 ops/s [Average]
[info]   (min, avg, max) = (257243.605, 259158.167, 262169.830), stdev = 2179.959
[info]   CI (99.9%): [250763.923, 267552.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   1002.863 ±(99.9%) 32.434 MB/sec [Average]
[info]   (min, avg, max) = (995.450, 1002.863, 1014.489), stdev = 8.423
[info]   CI (99.9%): [970.429, 1035.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6088.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6088.002, 6088.002, 6088.002), stdev = 0.001
[info]   CI (99.9%): [6088.001, 6088.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   995.021 ±(99.9%) 29.217 MB/sec [Average]
[info]   (min, avg, max) = (985.311, 995.021, 1003.916), stdev = 7.588
[info]   CI (99.9%): [965.803, 1024.238] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6040.481 ±(99.9%) 114.200 B/op [Average]
[info]   (min, avg, max) = (6007.989, 6040.481, 6087.060), stdev = 29.657
[info]   CI (99.9%): [5926.280, 6154.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.329 ±(99.9%) 0.744 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.329, 0.509), stdev = 0.193
[info]   CI (99.9%): [≈ 0, 1.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 8.000), stdev = 2.168
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 94.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 397459.761 ops/s
[info] # Warmup Iteration   2: 618071.869 ops/s
[info] # Warmup Iteration   3: 632628.109 ops/s
[info] # Warmup Iteration   4: 642341.632 ops/s
[info] # Warmup Iteration   5: 645781.801 ops/s
[info] Iteration   1: 646433.088 ops/s
[info]                  ·gc.alloc.rate:                   1242.540 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.494 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3240.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 646379.440 ops/s
[info]                  ·gc.alloc.rate:                   1242.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3261.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 644953.885 ops/s
[info]                  ·gc.alloc.rate:               1239.731 MB/sec
[info]                  ·gc.alloc.rate.norm:          3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2461.122 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 647949.283 ops/s
[info]                  ·gc.alloc.rate:                   1245.464 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3276.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 653047.652 ops/s
[info]                  ·gc.alloc.rate:                   1255.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3259.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   647752.669 ±(99.9%) 12105.935 ops/s [Average]
[info]   (min, avg, max) = (644953.885, 647752.669, 653047.652), stdev = 3143.873
[info]   CI (99.9%): [635646.735, 659858.604] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1245.083 ±(99.9%) 23.206 MB/sec [Average]
[info]   (min, avg, max) = (1239.731, 1245.083, 1255.235), stdev = 6.027
[info]   CI (99.9%): [1221.876, 1268.289] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3024.001, 3024.001, 3024.001), stdev = 0.001
[info]   CI (99.9%): [3024.001, 3024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1276.533 ±(99.9%) 576.847 MB/sec [Average]
[info]   (min, avg, max) = (1008.971, 1276.533, 1352.837), stdev = 149.805
[info]   CI (99.9%): [699.685, 1853.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3099.690 ±(99.9%) 1375.451 B/op [Average]
[info]   (min, avg, max) = (2461.122, 3099.690, 3276.578), stdev = 357.200
[info]   CI (99.9%): [1724.239, 4475.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.222 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.152), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 14.000), stdev = 3.834
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.59% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1134492.187 ops/s
[info] # Warmup Iteration   2: 1612776.457 ops/s
[info] # Warmup Iteration   3: 1587605.508 ops/s
[info] # Warmup Iteration   4: 1583370.522 ops/s
[info] # Warmup Iteration   5: 1634893.724 ops/s
[info] Iteration   1: 1639120.969 ops/s
[info]                  ·gc.alloc.rate:                   733.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.691 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627.475 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1620371.884 ops/s
[info]                  ·gc.alloc.rate:                   725.381 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.244 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     958.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1596717.190 ops/s
[info]                  ·gc.alloc.rate:                   714.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     652.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1621623.811 ops/s
[info]                  ·gc.alloc.rate:               725.665 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 643.964 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1620131.820 ops/s
[info]                  ·gc.alloc.rate:                   724.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.498 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1619593.135 ±(99.9%) 58068.983 ops/s [Average]
[info]   (min, avg, max) = (1596717.190, 1619593.135, 1639120.969), stdev = 15080.331
[info]   CI (99.9%): [1561524.152, 1677662.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   724.791 ±(99.9%) 25.910 MB/sec [Average]
[info]   (min, avg, max) = (714.515, 724.791, 733.414), stdev = 6.729
[info]   CI (99.9%): [698.881, 750.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   726.451 ±(99.9%) 561.654 MB/sec [Average]
[info]   (min, avg, max) = (653.691, 726.451, 987.244), stdev = 145.860
[info]   CI (99.9%): [164.797, 1288.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   705.624 ±(99.9%) 544.712 B/op [Average]
[info]   (min, avg, max) = (627.475, 705.624, 958.145), stdev = 141.460
[info]   CI (99.9%): [160.912, 1250.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 3.421
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 97.06% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3614896.803 ops/s
[info] # Warmup Iteration   2: 4378760.426 ops/s
[info] # Warmup Iteration   3: 4343498.727 ops/s
[info] # Warmup Iteration   4: 3999859.139 ops/s
[info] # Warmup Iteration   5: 3930158.921 ops/s
[info] Iteration   1: 4387028.900 ops/s
[info]                  ·gc.alloc.rate:                   356.923 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.745 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.155 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.773 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4381602.048 ops/s
[info]                  ·gc.alloc.rate:                   356.490 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4415890.867 ops/s
[info]                  ·gc.alloc.rate:                   359.279 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.097 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 4412087.012 ops/s
[info]                  ·gc.alloc.rate:               358.965 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.198 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 4411567.214 ops/s
[info]                  ·gc.alloc.rate:                   358.922 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.408 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4401635.208 ±(99.9%) 61663.843 ops/s [Average]
[info]   (min, avg, max) = (4381602.048, 4401635.208, 4415890.867), stdev = 16013.904
[info]   CI (99.9%): [4339971.365, 4463299.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   358.116 ±(99.9%) 5.018 MB/sec [Average]
[info]   (min, avg, max) = (356.490, 358.116, 359.279), stdev = 1.303
[info]   CI (99.9%): [353.098, 363.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.046 ±(99.9%) 562.602 MB/sec [Average]
[info]   (min, avg, max) = (325.537, 391.046, 652.408), stdev = 146.106
[info]   CI (99.9%): [≈ 0, 953.649] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   139.719 ±(99.9%) 200.076 B/op [Average]
[info]   (min, avg, max) = (116.097, 139.719, 232.664), stdev = 51.959
[info]   CI (99.9%): [≈ 0, 339.795] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.456 ±(99.9%) 3.659 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.456, 2.155), stdev = 0.950
[info]   CI (99.9%): [≈ 0, 4.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 1.312 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.164, 0.773), stdev = 0.341
[info]   CI (99.9%): [≈ 0, 1.476] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.200, 9.000), stdev = 3.493
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.53% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 79570.372 ops/s
[info] # Warmup Iteration   2: 209492.090 ops/s
[info] # Warmup Iteration   3: 213697.796 ops/s
[info] # Warmup Iteration   4: 213347.684 ops/s
[info] # Warmup Iteration   5: 213922.393 ops/s
[info] Iteration   1: 215653.562 ops/s
[info]                  ·gc.alloc.rate:                   1098.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7207.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.456 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 214824.035 ops/s
[info]                  ·gc.alloc.rate:                   1094.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7264.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.610 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 214354.136 ops/s
[info]                  ·gc.alloc.rate:                   1092.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9772.668 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.459 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 215123.361 ops/s
[info]                  ·gc.alloc.rate:                   1096.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7339.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 212755.670 ops/s
[info]                  ·gc.alloc.rate:                   1084.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              8016.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7445.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   214542.153 ±(99.9%) 4252.897 ops/s [Average]
[info]   (min, avg, max) = (212755.670, 214542.153, 215653.562), stdev = 1104.464
[info]   CI (99.9%): [210289.256, 218795.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1093.127 ±(99.9%) 21.709 MB/sec [Average]
[info]   (min, avg, max) = (1084.021, 1093.127, 1098.824), stdev = 5.638
[info]   CI (99.9%): [1071.417, 1114.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8016.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8016.002, 8016.002, 8016.002), stdev = 0.001
[info]   CI (99.9%): [8016.002, 8016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.391 ±(99.9%) 575.724 MB/sec [Average]
[info]   (min, avg, max) = (988.005, 1064.391, 1331.480), stdev = 149.514
[info]   CI (99.9%): [488.667, 1640.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7806.056 ±(99.9%) 4247.181 B/op [Average]
[info]   (min, avg, max) = (7207.568, 7806.056, 9772.668), stdev = 1102.979
[info]   CI (99.9%): [3558.875, 12053.236] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.366 ±(99.9%) 0.786 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.366, 0.610), stdev = 0.204
[info]   CI (99.9%): [≈ 0, 1.152] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:18:16
[info] Benchmark                                                                                    Mode  Cnt         Score         Error   Units
[info] JsonCodecBenchmark.missingReqFieldCirce                                                     thrpt    5   1534914.656 ±   50069.200   ops/s
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2481.942 ±      80.963  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2544.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2516.183 ±     710.582  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2579.191 ±     728.969    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±       0.044  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.055 ±       0.045    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        37.000                counts
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        92.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJackson                                                   thrpt    5    214027.875 ±    1824.291   ops/s
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       503.892 ±       4.271  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3704.002 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       454.153 ±     684.686  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3340.050 ±    5056.182    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±       0.200  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.276 ±       1.471    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000                counts
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        14.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniter                                                  thrpt    5    460187.554 ±   10526.227   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       425.905 ±       9.736  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1456.001 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       456.717 ±     687.460  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1564.059 ±    2388.007    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.025 ±       0.143  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.086 ±       0.492    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1824295.029 ±   60220.289   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1122.497 ±      37.037  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       968.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1135.193 ±     712.938  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       979.103 ±     619.166    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±       0.119  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.032 ±       0.101    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        17.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3835148.678 ±  118414.811   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       526.544 ±      16.293  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       216.000 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       523.473 ±     690.529  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       214.719 ±     282.977    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.017 ±       0.088  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.007 ±       0.036    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000                counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.missingReqFieldPlay                                                      thrpt    5    129579.435 ±    1713.518   ops/s
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1084.581 ±      14.308  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13168.003 ±       0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1061.742 ±     558.655  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     12893.244 ±    6883.197    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.607 ±       1.115    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        30.000                    ms
[info] JsonCodecBenchmark.readAnyRefsCirce                                                         thrpt    5   1220714.822 ±   31349.875   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1930.460 ±      49.601  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2488.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1899.338 ±     721.409  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2447.583 ±     913.471    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.065 ±       0.093    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        28.000                counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        60.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                                       thrpt    5   1846463.756 ±   58927.633   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1295.720 ±      41.330  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1339.730 ±      43.556  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1141.597 ±      65.036    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.039 ±       0.089    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        30.000                    ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6566636.703 ±  126084.198   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       834.784 ±      15.984  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       859.216 ±     685.037  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       206.012 ±     167.461    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±       0.154  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.009 ±       0.037    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        13.000                counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        24.000                    ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                                          thrpt    5    439091.596 ±   14114.841   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1154.235 ±      37.205  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4136.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1200.155 ±     702.970  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4298.043 ±    2439.074    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±       0.108  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.178 ±       0.384    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.readArraysCirce                                                          thrpt    5    642094.290 ±   16563.400   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2099.394 ±      54.135  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5144.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2104.590 ±     563.697  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5156.832 ±    1380.575    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.042 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.102 ±       0.139    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                                thrpt    5        31.000                counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        55.000                    ms
[info] JsonCodecBenchmark.readArraysJackson                                                        thrpt    5   1224361.948 ±   36071.333   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1151.806 ±      33.888  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1480.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1135.270 ±     683.601  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1459.719 ±     908.708    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.033 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.043 ±       0.092    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                               thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.readArraysJsoniter                                                       thrpt    5   2709535.441 ±   88376.868   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1239.994 ±      40.506  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       720.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1204.102 ±     697.996  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       699.404 ±     412.196    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.067 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.039 ±       0.061    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        15.000                    ms
[info] JsonCodecBenchmark.readArraysPlay                                                           thrpt    5    229322.900 ±    4056.166   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1405.138 ±      24.638  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1407.720 ±     563.901  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9659.676 ±    3967.644    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.343 ±       0.632    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000                counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        55.000                    ms
[info] JsonCodecBenchmark.readBitSetsJackson                                                       thrpt    5   1565692.325 ±   97677.628   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1011.123 ±      63.051  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1005.027 ±      22.448  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1010.105 ±      71.886    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.033 ±       0.134  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.034 ±       0.135    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        15.000                counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        47.000                    ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                                      thrpt    5   5011367.665 ±   76959.770   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       535.151 ±       8.216  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       168.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       523.351 ±     688.253  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       164.302 ±     216.133    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.108  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.009 ±       0.034    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         8.000                counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         7.000                    ms
[info] JsonCodecBenchmark.readBitSetsPlay                                                          thrpt    5    256289.713 ±   11596.120   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1171.583 ±      53.067  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7192.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1200.106 ±     702.987  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7367.222 ±    4307.566    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±       0.134  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.334 ±       0.832    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        48.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                                   thrpt    5    558408.106 ±   12734.696   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1854.226 ±      42.239  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1830.454 ±     719.191  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5158.945 ±    2114.476    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.129 ±       0.186    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000                counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                                 thrpt    5    667850.311 ±  140316.997   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       828.687 ±     174.036  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1952.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       857.315 ±     702.595  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      2005.380 ±    1263.846    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.041 ±       0.169    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4107482.281 ±   35773.477   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       187.981 ±       1.641  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       218.651 ±     484.775  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        83.763 ±     185.604    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.444 ±       3.819  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.170 ±       1.461    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         4.000                counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        11.000                    ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                                    thrpt    5    203566.491 ±   10974.164   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1130.386 ±      60.990  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8736.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1129.250 ±     680.051  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8723.259 ±    5094.785    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.050 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.387 ±       0.560    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   2700469.822 ±   43419.459   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1277.047 ±      20.519  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       744.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5      1273.287 ±     567.208  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       741.572 ±     321.732    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.062 ±       0.098  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.036 ±       0.057    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        30.000                    ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    248832.951 ±   26254.933   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1328.589 ±     140.009  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8400.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1272.464 ±     559.450  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8056.269 ±    3867.651    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.058 ±       0.105  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.370 ±       0.676    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        19.000                counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.readIterablesCirce                                                       thrpt    5    538628.152 ±    7919.006   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1887.135 ±      27.729  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5512.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1897.816 ±     703.167  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5544.304 ±    2104.903    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±       0.088  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.134 ±       0.256    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        28.000                counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        54.000                    ms
[info] JsonCodecBenchmark.readIterablesJackson                                                     thrpt    5    533838.982 ±   16026.957   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       542.912 ±      16.275  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       592.441 ±     567.525  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1743.887 ±    1645.003    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±       0.143  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.073 ±       0.420    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         9.000                counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        12.000                    ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                                    thrpt    5   2594782.723 ±   61946.538   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       699.336 ±      16.631  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       424.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       658.179 ±      14.253  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       399.056 ±      10.747    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.020 ±       0.055    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        10.000                counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        21.000                    ms
[info] JsonCodecBenchmark.readIterablesPlay                                                        thrpt    5    181384.693 ±    4831.888   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1237.770 ±      32.983  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     10736.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1201.929 ±     695.703  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     10423.449 ±    5977.210    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.062 ±       0.080  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.542 ±       0.703    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        18.000                counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.readMapsCirce                                                            thrpt    5    463336.049 ±    9619.948   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1646.896 ±      34.177  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1623.385 ±     568.526  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5512.291 ±    1933.393    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.127 ±       0.228    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000                counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        44.000                    ms
[info] JsonCodecBenchmark.readMapsJackson                                                          thrpt    5    921161.551 ±   33980.930   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1086.737 ±      40.120  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1072.898 ±     588.731  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1832.234 ±     997.238    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±       0.132  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.078 ±       0.227    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.readMapsJsoniter                                                         thrpt    5   3189536.139 ±   87872.839   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       794.717 ±      21.967  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       792.358 ±     707.562  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       391.225 ±     357.493    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±       0.080  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.021 ±       0.040    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000                counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.readMapsPlay                                                             thrpt    5    258975.780 ±    9724.586   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1347.173 ±      50.625  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8184.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1340.165 ±      38.014  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8142.286 ±     465.838    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.050 ±       0.072  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.304 ±       0.447    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                                   thrpt    5    696751.986 ±   12092.043   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       882.215 ±      15.350  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      1992.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       865.356 ±     708.362  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      1954.392 ±    1608.995    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.054 ±       0.298  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.122 ±       0.673    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        13.000                counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        25.000                    ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2193977.240 ±   38481.576   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1494.953 ±      26.144  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5      1072.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1480.689 ±     713.946  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1062.094 ±     524.359    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.058 ±       0.154  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.042 ±       0.111    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        22.000                counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        45.000                    ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                                      thrpt    5    218547.990 ±    7196.364   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1151.286 ±      37.892  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8288.002 ±       0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1132.788 ±     704.273  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8159.513 ±    5208.945    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±       0.156  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.242 ±       1.144    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        17.000                counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.readPrimitivesCirce                                                      thrpt    5    462436.048 ±   19967.493   ops/s
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1368.580 ±      59.023  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1346.365 ±      29.674  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4580.682 ±     122.912    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.071 ±       0.191    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        20.000                counts
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                                    thrpt    5    968502.712 ±   15946.508   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       743.646 ±      12.244  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       730.980 ±     557.511  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1187.651 ±     912.272    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.054 ±       0.149    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        23.000                    ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3314686.691 ±  120018.842   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       101.134 ±       3.658  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.366 ±     539.748  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        48.989 ±     258.321    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.002 ±       0.018  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.001 ±       0.009    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000                counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         7.000                    ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                                       thrpt    5    162995.681 ±    3160.029   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1107.328 ±      21.582  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10688.003 ±       0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1065.551 ±     576.230  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10285.188 ±    5571.666    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.050 ±       0.091  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.482 ±       0.880    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        16.000                counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                                        thrpt    5   1310298.319 ±   21181.638   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1465.862 ±      23.574  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1760.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1417.438 ±     586.086  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1701.728 ±     696.290    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.033 ±       0.044  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.040 ±       0.053    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        21.000                counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        48.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                                      thrpt    5   3898434.615 ±   91668.941   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1070.481 ±      25.137  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1070.132 ±     579.032  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       431.956 ±     237.320    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.012 ±       0.037    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        20.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15596409.825 ± 2430755.655   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       475.843 ±      74.173  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       457.166 ±     686.407  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        45.952 ±      66.334    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±       0.176  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±       0.018    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        16.000                    ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                                         thrpt    5    842418.657 ±   60157.842   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1263.699 ±      90.279  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2360.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1272.778 ±     586.890  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2378.269 ±    1134.736    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.054 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.101 ±       0.135    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        42.000                    ms
[info] JsonCodecBenchmark.writeArraysCirce                                                         thrpt    5    732810.175 ±   15605.670   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1758.829 ±      37.585  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3776.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1755.452 ±     600.334  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3769.106 ±    1307.553    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±       0.119  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.125 ±       0.252    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000                counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.writeArraysJackson                                                       thrpt    5   2444991.489 ±  120079.215   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1417.361 ±      69.796  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1415.146 ±     551.046  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       910.697 ±     357.448    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.037 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.024 ±       0.043    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        21.000                counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        50.000                    ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                                      thrpt    5   4458812.737 ±  213252.448   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1224.336 ±      58.573  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1204.114 ±     697.935  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       425.180 ±     254.887    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.108  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.018 ±       0.037    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writeArraysPlay                                                          thrpt    5    327587.309 ±   16390.002   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1169.510 ±      58.267  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1199.843 ±     702.053  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5764.087 ±    3432.188    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.067 ±       0.143  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.320 ±       0.689    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        31.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                                      thrpt    5   2726140.164 ±   40407.538   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1164.459 ±      17.290  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       672.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1207.406 ±     704.910  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       696.607 ±     401.370    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±       0.044  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.017 ±       0.025    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4373540.746 ±  151869.188   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       800.613 ±      27.857  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       792.359 ±     696.647  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       284.849 ±     246.172    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.075 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.027 ±       0.026    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        12.000                counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        15.000                    ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                                         thrpt    5    495077.553 ±   12928.959   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1465.169 ±      38.355  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1410.998 ±     584.480  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4483.553 ±    1836.725    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.067 ±       0.154  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.211 ±       0.486    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        21.000                counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        38.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    974420.562 ±   74627.898   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1223.850 ±      93.559  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1976.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1209.668 ±     707.416  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1955.435 ±    1202.981    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.054 ±       0.152    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        18.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        46.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2450572.524 ±   15470.193   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       473.523 ±       2.978  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.154 ±     688.126  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       293.604 ±     443.364    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.025 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.016 ±       0.067    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        10.000                    ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    241646.375 ±    4942.827   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       937.561 ±      19.253  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6104.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       926.598 ±     570.726  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6033.398 ±    3731.607    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.042 ±       0.170  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.270 ±       1.105    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        14.000                counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        33.000                    ms
[info] JsonCodecBenchmark.writeIterablesCirce                                                      thrpt    5    594874.525 ±   14169.130   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1512.459 ±      36.019  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4000.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1553.329 ±     710.241  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4106.593 ±    1817.626    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.066 ±       0.177    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000                counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        45.000                    ms
[info] JsonCodecBenchmark.writeIterablesJackson                                                    thrpt    5   1191560.656 ±    8853.871   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       733.157 ±       5.428  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       968.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       727.259 ±     552.703  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       960.468 ±     737.557    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.017 ±       0.067  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.022 ±       0.088    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        29.000                    ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                                   thrpt    5   4780110.960 ±  131928.269   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       656.466 ±      17.042  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       216.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       656.839 ±      13.440  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       216.132 ±       8.055    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.015 ±       0.034    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        10.000                counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        23.000                    ms
[info] JsonCodecBenchmark.writeIterablesPlay                                                       thrpt    5    400393.220 ±   13011.931   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1378.357 ±      44.748  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5416.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1340.143 ±      38.129  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5265.902 ±      62.128    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.062 ±       0.080  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.246 ±       0.316    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        20.000                counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        34.000                    ms
[info] JsonCodecBenchmark.writeMapsCirce                                                           thrpt    5    337302.867 ±    3209.291   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1008.623 ±       9.695  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4704.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1065.097 ±     541.844  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4967.177 ±    2517.688    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.021 ±       0.057  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.097 ±       0.264    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        37.000                    ms
[info] JsonCodecBenchmark.writeMapsJackson                                                         thrpt    5   1047337.216 ±   30496.597   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1086.479 ±      31.666  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      1632.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1138.758 ±     704.206  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      1710.819 ±    1065.537    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±       0.143  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.056 ±       0.217    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        17.000                counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                                        thrpt    5   2358985.793 ±   87569.250   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       491.825 ±      18.259  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       328.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       522.755 ±     689.707  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       348.991 ±     464.369    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.025 ±       0.105  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.017 ±       0.069    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         8.000                counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        23.000                    ms
[info] JsonCodecBenchmark.writeMapsPlay                                                            thrpt    5    259756.038 ±    2835.949   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       957.621 ±      10.523  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       993.690 ±      29.530  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      6018.555 ±     219.964    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.177 ±       0.555    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                                    thrpt    5    342559.026 ±    9101.909   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5      1012.048 ±      26.939  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4648.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       996.152 ±      33.474  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4575.089 ±     156.424    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.134 ±       0.330    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        28.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                                  thrpt    5   1158900.125 ±   23053.299   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1072.558 ±      21.209  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      1456.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1070.840 ±     579.141  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1454.419 ±     815.456    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.037 ±       0.088  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.051 ±       0.118    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        27.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2084209.344 ±   86760.792   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       508.719 ±      21.235  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       457.433 ±     688.328  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       344.807 ±     512.470    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±       0.156  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.022 ±       0.117    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         7.000                counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        22.000                    ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                                     thrpt    5    259158.167 ±    8394.244   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5      1002.863 ±      32.434  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6088.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       995.021 ±      29.217  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6040.481 ±     114.200    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.054 ±       0.122  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.329 ±       0.744    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000                counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        26.000                    ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                                     thrpt    5    647752.669 ±   12105.935   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1245.083 ±      23.206  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3024.001 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1276.533 ±     576.847  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3099.690 ±    1375.451    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±       0.091  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.071 ±       0.222    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        19.000                counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        36.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                                   thrpt    5   1619593.135 ±   58068.983   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       724.791 ±      25.910  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       704.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       726.451 ±     561.654  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       705.624 ±     544.712    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.029 ±       0.072  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.028 ±       0.070    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000                counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        24.000                    ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4401635.208 ±   61663.843   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       358.116 ±       5.018  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       391.046 ±     562.602  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       139.719 ±     200.076    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.456 ±       3.659  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.164 ±       1.312    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000                counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        16.000                    ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                                      thrpt    5    214542.153 ±    4252.897   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1093.127 ±      21.709  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8016.002 ±       0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1064.391 ±     575.724  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      7806.056 ±    4247.181    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±       0.108  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.366 ±       0.786    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        16.000                counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        31.000                    ms
[success] Total time: 1130 s, completed Nov 8, 2017 8:19:00 PM
