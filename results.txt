[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 26, 2017 4:36:08 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:49:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case -3621593128239734518L => {
[info]                     req0.&=(-3L);
[info]                     _bd = readBigDecimal(in, _bd)
[info]                   }
[info]                   case 3145557872620432656L => _os = Option(readString(in, null))
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             e0(out, x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(out: JsonStream, x: scala.math.BigDecimal): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:47: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5298137317268724415L => {
[info]                     req0.&=(-2L);
[info]                     _aa = d1(in, _aa)
[info]                   }
[info]                   case 4695216661739385763L => {
[info]                     req0.&=(-3L);
[info]                     _a = d2(in, _a)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("a");
[info]             e3(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: Array[Int]): Array[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: Array[Array[Int]]): Array[Array[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: Array[BigInt]): Array[BigInt] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(readBigInt(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.math.BigInt): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull();
[info]       private def e3(out: JsonStream, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e2(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: Codec[Arrays] = materialize[Arrays]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:53:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -2880316277851419472L => _bs = d0(in, _bs)
[info]                   case 6036675737602992569L => _mbs = d1(in, _mbs)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:55:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 7173115670136726671L => _l = d0(in, _l)
[info]                   case 8782703599529504340L => _s = d1(in, _s)
[info]                   case -8160163252060190562L => _ls = d2(in, _ls)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: List[String]): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(readString(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: List[Set[Int]]): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:57:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(this.readObjectFieldAsString(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in, HashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:59:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(this.readObjectFieldAsString(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:61:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), readDouble(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in, LongMap.empty[Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:63:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 3085628732346524253L => {
[info]                     req0.&=(-2L);
[info]                     _b = toByte(in, readInt(in))
[info]                   }
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-3L);
[info]                     _s = toShort(in, readInt(in))
[info]                   }
[info]                   case -874823976827361790L => {
[info]                     req0.&=(-5L);
[info]                     _i = readInt(in)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-9L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case 1948447510327205053L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -2547476555686174996L => {
[info]                     req0.&=(-33L);
[info]                     _ch = toChar(in, readInt(in))
[info]                   }
[info]                   case 4052889318286228612L => {
[info]                     req0.&=(-65L);
[info]                     _dbl = readDouble(in)
[info]                   }
[info]                   case -8922763623791618166L => {
[info]                     req0.&=(-129L);
[info]                     _f = readFloat(in)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:65:61: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _l: Long = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-3L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: Codec[ExtractFields] = materialize[ExtractFields]
[info]                                                             ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 647916.109 ops/s
[info] # Warmup Iteration   2: 1073806.185 ops/s
[info] # Warmup Iteration   3: 842209.742 ops/s
[info] # Warmup Iteration   4: 841458.650 ops/s
[info] # Warmup Iteration   5: 971978.737 ops/s
[info] Iteration   1: 1169567.654 ops/s
[info]                  ·gc.alloc.rate:                   1831.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2257.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1159351.906 ops/s
[info]                  ·gc.alloc.rate:                   1815.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2288.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1131842.532 ops/s
[info]                  ·gc.alloc.rate:                   1772.626 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.125 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2823.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         30.000 ms
[info] Iteration   4: 1188338.085 ops/s
[info]                  ·gc.alloc.rate:                   1861.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.978 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2245.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1163029.718 ops/s
[info]                  ·gc.alloc.rate:                   1821.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2298.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1162425.979 ±(99.9%) 78623.002 ops/s [Average]
[info]   (min, avg, max) = (1131842.532, 1162425.979, 1188338.085), stdev = 20418.144
[info]   CI (99.9%): [1083802.977, 1241048.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1820.554 ±(99.9%) 123.182 MB/sec [Average]
[info]   (min, avg, max) = (1772.626, 1820.554, 1861.132), stdev = 31.990
[info]   CI (99.9%): [1697.372, 1943.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1758.284 ±(99.9%) 588.162 MB/sec [Average]
[info]   (min, avg, max) = (1678.333, 1758.284, 2031.125), stdev = 152.744
[info]   CI (99.9%): [1170.122, 2346.447] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2382.768 ±(99.9%) 952.059 B/op [Average]
[info]   (min, avg, max) = (2245.349, 2382.768, 2823.322), stdev = 247.247
[info]   CI (99.9%): [1430.708, 3334.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.062, 0.085), stdev = 0.013
[info]   CI (99.9%): [0.013, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.200, 30.000), stdev = 10.569
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1156067.417 ops/s
[info] # Warmup Iteration   2: 1799116.093 ops/s
[info] # Warmup Iteration   3: 1800851.593 ops/s
[info] # Warmup Iteration   4: 1786225.281 ops/s
[info] # Warmup Iteration   5: 1771046.984 ops/s
[info] Iteration   1: 1832176.543 ops/s
[info]                  ·gc.alloc.rate:                   1304.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1149.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1825783.649 ops/s
[info]                  ·gc.alloc.rate:                   1299.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     868.827 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1807354.438 ops/s
[info]                  ·gc.alloc.rate:                   1286.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1173.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1807122.043 ops/s
[info]                  ·gc.alloc.rate:                   1286.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1176.865 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1808716.600 ops/s
[info]                  ·gc.alloc.rate:                   1287.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1178.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1816230.654 ±(99.9%) 45713.570 ops/s [Average]
[info]   (min, avg, max) = (1807122.043, 1816230.654, 1832176.543), stdev = 11871.669
[info]   CI (99.9%): [1770517.085, 1861944.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1292.966 ±(99.9%) 32.590 MB/sec [Average]
[info]   (min, avg, max) = (1286.426, 1292.966, 1304.302), stdev = 8.464
[info]   CI (99.9%): [1260.376, 1325.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1280.306 ±(99.9%) 585.976 MB/sec [Average]
[info]   (min, avg, max) = (1008.317, 1280.306, 1354.866), stdev = 152.176
[info]   CI (99.9%): [694.330, 1866.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1109.407 ±(99.9%) 519.904 B/op [Average]
[info]   (min, avg, max) = (868.827, 1109.407, 1178.449), stdev = 135.017
[info]   CI (99.9%): [589.503, 1629.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.033, 0.054), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:15:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7585971.869 ops/s
[info] # Warmup Iteration   2: 7838400.345 ops/s
[info] # Warmup Iteration   3: 7879247.525 ops/s
[info] # Warmup Iteration   4: 7843321.559 ops/s
[info] # Warmup Iteration   5: 7925043.927 ops/s
[info] Iteration   1: 7850229.433 ops/s
[info]                  ·gc.alloc.rate:                   997.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     197.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7746701.586 ops/s
[info]                  ·gc.alloc.rate:                   984.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     201.586 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 7696234.717 ops/s
[info]                  ·gc.alloc.rate:                   978.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 7752084.008 ops/s
[info]                  ·gc.alloc.rate:                   985.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     203.337 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 7753120.490 ops/s
[info]                  ·gc.alloc.rate:                   985.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     204.189 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   7759674.047 ±(99.9%) 215203.022 ops/s [Average]
[info]   (min, avg, max) = (7696234.717, 7759674.047, 7850229.433), stdev = 55887.541
[info]   CI (99.9%): [7544471.025, 7974877.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   986.449 ±(99.9%) 27.366 MB/sec [Average]
[info]   (min, avg, max) = (978.370, 986.449, 997.960), stdev = 7.107
[info]   CI (99.9%): [959.083, 1013.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   997.336 ±(99.9%) 27.966 MB/sec [Average]
[info]   (min, avg, max) = (987.959, 997.336, 1006.252), stdev = 7.263
[info]   CI (99.9%): [969.369, 1025.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   202.220 ±(99.9%) 9.914 B/op [Average]
[info]   (min, avg, max) = (197.996, 202.220, 204.189), stdev = 2.575
[info]   CI (99.9%): [192.306, 212.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.004, 0.011, 0.017), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 8.000), stdev = 2.775
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 244155.694 ops/s
[info] # Warmup Iteration   2: 418568.357 ops/s
[info] # Warmup Iteration   3: 419071.015 ops/s
[info] # Warmup Iteration   4: 426810.137 ops/s
[info] # Warmup Iteration   5: 424732.344 ops/s
[info] Iteration   1: 425580.351 ops/s
[info]                  ·gc.alloc.rate:                   1125.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3651.034 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 421691.253 ops/s
[info]                  ·gc.alloc.rate:                   1115.044 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4947.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 410703.629 ops/s
[info]                  ·gc.alloc.rate:                   1085.963 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3830.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 422413.404 ops/s
[info]                  ·gc.alloc.rate:                   1116.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3739.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 423008.801 ops/s
[info]                  ·gc.alloc.rate:                   1118.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3750.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   420679.488 ±(99.9%) 22203.233 ops/s [Average]
[info]   (min, avg, max) = (410703.629, 420679.488, 425580.351), stdev = 5766.109
[info]   CI (99.9%): [398476.255, 442882.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1112.338 ±(99.9%) 58.693 MB/sec [Average]
[info]   (min, avg, max) = (1085.963, 1112.338, 1125.289), stdev = 15.242
[info]   CI (99.9%): [1053.646, 1171.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1065.195 ±(99.9%) 562.646 MB/sec [Average]
[info]   (min, avg, max) = (987.613, 1065.195, 1326.215), stdev = 146.117
[info]   CI (99.9%): [502.548, 1627.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   3983.728 ±(99.9%) 2089.718 B/op [Average]
[info]   (min, avg, max) = (3651.034, 3983.728, 4947.837), stdev = 542.693
[info]   CI (99.9%): [1894.010, 6073.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 0.456 B/op [Average]
[info]   (min, avg, max) = (0.077, 0.203, 0.388), stdev = 0.119
[info]   CI (99.9%): [≈ 0, 0.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 8.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386743.408 ops/s
[info] # Warmup Iteration   2: 628321.912 ops/s
[info] # Warmup Iteration   3: 636184.464 ops/s
[info] # Warmup Iteration   4: 632881.937 ops/s
[info] # Warmup Iteration   5: 630496.652 ops/s
[info] Iteration   1: 636121.466 ops/s
[info]                  ·gc.alloc.rate:                   2079.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2366.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5852.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.206 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 628418.776 ops/s
[info]                  ·gc.alloc.rate:                   2054.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5094.257 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 637450.279 ops/s
[info]                  ·gc.alloc.rate:                   2084.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.812 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5031.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 628618.173 ops/s
[info]                  ·gc.alloc.rate:                   2055.389 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5105.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.156 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 633201.057 ops/s
[info]                  ·gc.alloc.rate:                   2070.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5076.631 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.155 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   632761.950 ±(99.9%) 16050.032 ops/s [Average]
[info]   (min, avg, max) = (628418.776, 632761.950, 637450.279), stdev = 4168.142
[info]   CI (99.9%): [616711.918, 648811.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2068.911 ±(99.9%) 52.433 MB/sec [Average]
[info]   (min, avg, max) = (2054.727, 2068.911, 2084.200), stdev = 13.617
[info]   CI (99.9%): [2016.478, 2121.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2104.652 ±(99.9%) 563.767 MB/sec [Average]
[info]   (min, avg, max) = (2034.857, 2104.652, 2366.501), stdev = 146.408
[info]   CI (99.9%): [1540.885, 2668.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5232.162 ±(99.9%) 1340.003 B/op [Average]
[info]   (min, avg, max) = (5031.979, 5232.162, 5852.663), stdev = 347.994
[info]   CI (99.9%): [3892.160, 6572.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.168 B/op [Average]
[info]   (min, avg, max) = (0.103, 0.166, 0.209), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 16.000), stdev = 4.393
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 743078.923 ops/s
[info] # Warmup Iteration   2: 1218761.922 ops/s
[info] # Warmup Iteration   3: 1235170.047 ops/s
[info] # Warmup Iteration   4: 1221519.366 ops/s
[info] # Warmup Iteration   5: 1224614.913 ops/s
[info] Iteration   1: 1240344.553 ops/s
[info]                  ·gc.alloc.rate:                   1179.444 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1693.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1240389.900 ops/s
[info]                  ·gc.alloc.rate:                   1179.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.611 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1275.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1199943.311 ops/s
[info]                  ·gc.alloc.rate:                   1141.004 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1322.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1243513.350 ops/s
[info]                  ·gc.alloc.rate:                   1182.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1707.353 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1248485.864 ops/s
[info]                  ·gc.alloc.rate:                   1187.158 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1704.782 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1234535.396 ±(99.9%) 75551.485 ops/s [Average]
[info]   (min, avg, max) = (1199943.311, 1234535.396, 1248485.864), stdev = 19620.481
[info]   CI (99.9%): [1158983.910, 1310086.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1173.895 ±(99.9%) 71.834 MB/sec [Average]
[info]   (min, avg, max) = (1141.004, 1173.895, 1187.158), stdev = 18.655
[info]   CI (99.9%): [1102.061, 1245.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1496.000, 1496.000, 1496.000), stdev = 0.001
[info]   CI (99.9%): [1496.000, 1496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1210.338 ±(99.9%) 714.274 MB/sec [Average]
[info]   (min, avg, max) = (1005.611, 1210.338, 1352.838), stdev = 185.495
[info]   CI (99.9%): [496.064, 1924.612] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1540.716 ±(99.9%) 851.733 B/op [Average]
[info]   (min, avg, max) = (1275.502, 1540.716, 1707.353), stdev = 221.192
[info]   CI (99.9%): [688.983, 2392.449] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.166 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.058, 0.132), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 3.130
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2340229.870 ops/s
[info] # Warmup Iteration   2: 2655105.980 ops/s
[info] # Warmup Iteration   3: 2701542.355 ops/s
[info] # Warmup Iteration   4: 2683488.446 ops/s
[info] # Warmup Iteration   5: 2698542.103 ops/s
[info] Iteration   1: 2690944.614 ops/s
[info]                  ·gc.alloc.rate:                   1231.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.570 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2700908.008 ops/s
[info]                  ·gc.alloc.rate:                   1236.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     776.755 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2695089.871 ops/s
[info]                  ·gc.alloc.rate:                   1233.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     586.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2677850.604 ops/s
[info]                  ·gc.alloc.rate:                   1225.483 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     790.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2678143.573 ops/s
[info]                  ·gc.alloc.rate:                   1225.632 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     793.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2688587.334 ±(99.9%) 39644.258 ops/s [Average]
[info]   (min, avg, max) = (2677850.604, 2688587.334, 2700908.008), stdev = 10295.488
[info]   CI (99.9%): [2648943.077, 2728231.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1230.427 ±(99.9%) 18.220 MB/sec [Average]
[info]   (min, avg, max) = (1225.483, 1230.427, 1236.107), stdev = 4.732
[info]   CI (99.9%): [1212.208, 1248.647] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1271.731 ±(99.9%) 576.222 MB/sec [Average]
[info]   (min, avg, max) = (1004.591, 1271.731, 1350.153), stdev = 149.643
[info]   CI (99.9%): [695.509, 1847.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   744.284 ±(99.9%) 341.130 B/op [Average]
[info]   (min, avg, max) = (586.453, 744.284, 793.150), stdev = 88.590
[info]   CI (99.9%): [403.154, 1085.414] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.044, 0.061), stdev = 0.011
[info]   CI (99.9%): [0.002, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 107155.251 ops/s
[info] # Warmup Iteration   2: 214204.234 ops/s
[info] # Warmup Iteration   3: 219328.618 ops/s
[info] # Warmup Iteration   4: 218260.595 ops/s
[info] # Warmup Iteration   5: 219951.738 ops/s
[info] Iteration   1: 216228.009 ops/s
[info]                  ·gc.alloc.rate:                   1316.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9629.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 217350.512 ops/s
[info]                  ·gc.alloc.rate:                   1322.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9642.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.452 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 218245.728 ops/s
[info]                  ·gc.alloc.rate:                   1328.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9656.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.751 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 220544.387 ops/s
[info]                  ·gc.alloc.rate:                   1342.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9598.069 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 219775.580 ops/s
[info]                  ·gc.alloc.rate:                   1337.697 MB/sec
[info]                  ·gc.alloc.rate.norm:              9576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9662.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay":
[info]   218428.843 ±(99.9%) 6760.383 ops/s [Average]
[info]   (min, avg, max) = (216228.009, 218428.843, 220544.387), stdev = 1755.650
[info]   CI (99.9%): [211668.461, 225189.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1329.505 ±(99.9%) 41.080 MB/sec [Average]
[info]   (min, avg, max) = (1316.136, 1329.505, 1342.364), stdev = 10.668
[info]   CI (99.9%): [1288.425, 1370.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9576.002, 9576.002, 9576.002), stdev = 0.001
[info]   CI (99.9%): [9576.002, 9576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.080 ±(99.9%) 40.443 MB/sec [Average]
[info]   (min, avg, max) = (1323.529, 1338.080, 1349.821), stdev = 10.503
[info]   CI (99.9%): [1297.637, 1378.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9637.805 ±(99.9%) 98.542 B/op [Average]
[info]   (min, avg, max) = (9598.069, 9637.805, 9662.789), stdev = 25.591
[info]   CI (99.9%): [9539.263, 9736.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.390 ±(99.9%) 0.878 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.390, 0.751), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 12.000), stdev = 3.975
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1060505.218 ops/s
[info] # Warmup Iteration   2: 1593537.827 ops/s
[info] # Warmup Iteration   3: 1575026.572 ops/s
[info] # Warmup Iteration   4: 1586587.193 ops/s
[info] # Warmup Iteration   5: 1618462.606 ops/s
[info] Iteration   1: 1614372.488 ops/s
[info]                  ·gc.alloc.rate:                   1042.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     971.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.122 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1592605.706 ops/s
[info]                  ·gc.alloc.rate:                   1028.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1319.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1580981.206 ops/s
[info]                  ·gc.alloc.rate:                   1020.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 1601883.766 ops/s
[info]                  ·gc.alloc.rate:                   1034.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     991.236 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1584930.540 ops/s
[info]                  ·gc.alloc.rate:                   1023.531 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1004.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1594954.741 ±(99.9%) 51888.143 ops/s [Average]
[info]   (min, avg, max) = (1580981.206, 1594954.741, 1614372.488), stdev = 13475.186
[info]   CI (99.9%): [1543066.598, 1646842.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1030.023 ±(99.9%) 33.599 MB/sec [Average]
[info]   (min, avg, max) = (1020.987, 1030.023, 1042.608), stdev = 8.725
[info]   CI (99.9%): [996.424, 1063.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1072.123 ±(99.9%) 568.786 MB/sec [Average]
[info]   (min, avg, max) = (997.306, 1072.123, 1336.174), stdev = 147.712
[info]   CI (99.9%): [503.336, 1640.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1057.706 ±(99.9%) 566.601 B/op [Average]
[info]   (min, avg, max) = (971.854, 1057.706, 1319.946), stdev = 147.144
[info]   CI (99.9%): [491.105, 1624.307] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.179 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.041 ±(99.9%) 0.174 B/op [Average]
[info]   (min, avg, max) = (0.020, 0.041, 0.122), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 13.000), stdev = 4.159
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7952276.834 ops/s
[info] # Warmup Iteration   2: 8625676.581 ops/s
[info] # Warmup Iteration   3: 8623678.372 ops/s
[info] # Warmup Iteration   4: 8565975.039 ops/s
[info] # Warmup Iteration   5: 8505531.269 ops/s
[info] Iteration   1: 8605403.141 ops/s
[info]                  ·gc.alloc.rate:                   918.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.648 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 8491712.215 ops/s
[info]                  ·gc.alloc.rate:                   906.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.452 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     122.358 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 8475065.158 ops/s
[info]                  ·gc.alloc.rate:                   905.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 8518167.569 ops/s
[info]                  ·gc.alloc.rate:                   909.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     184.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 8499181.611 ops/s
[info]                  ·gc.alloc.rate:                   907.599 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     185.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   8517905.939 ±(99.9%) 197548.476 ops/s [Average]
[info]   (min, avg, max) = (8475065.158, 8517905.939, 8605403.141), stdev = 51302.712
[info]   CI (99.9%): [8320357.463, 8715454.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   909.607 ±(99.9%) 21.075 MB/sec [Average]
[info]   (min, avg, max) = (905.029, 909.607, 918.937), stdev = 5.473
[info]   CI (99.9%): [888.532, 930.683] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   928.880 ±(99.9%) 578.379 MB/sec [Average]
[info]   (min, avg, max) = (660.452, 928.880, 1003.655), stdev = 150.203
[info]   CI (99.9%): [350.501, 1507.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   171.531 ±(99.9%) 106.172 B/op [Average]
[info]   (min, avg, max) = (122.358, 171.531, 185.780), stdev = 27.572
[info]   CI (99.9%): [65.359, 277.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.012 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.011, 0.015), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 18.000), stdev = 5.941
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 136118.764 ops/s
[info] # Warmup Iteration   2: 270599.696 ops/s
[info] # Warmup Iteration   3: 278262.958 ops/s
[info] # Warmup Iteration   4: 275383.918 ops/s
[info] # Warmup Iteration   5: 278567.374 ops/s
[info] Iteration   1: 279436.965 ops/s
[info]                  ·gc.alloc.rate:                   1311.495 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7451.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 279973.877 ops/s
[info]                  ·gc.alloc.rate:                   1314.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7485.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.468 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 281316.868 ops/s
[info]                  ·gc.alloc.rate:                   1320.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7491.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 279809.908 ops/s
[info]                  ·gc.alloc.rate:                   1313.260 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7565.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 280407.647 ops/s
[info]                  ·gc.alloc.rate:                   1316.106 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5677.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   280189.053 ±(99.9%) 2773.692 ops/s [Average]
[info]   (min, avg, max) = (279436.965, 280189.053, 281316.868), stdev = 720.319
[info]   CI (99.9%): [277415.361, 282962.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1315.044 ±(99.9%) 13.019 MB/sec [Average]
[info]   (min, avg, max) = (1311.495, 1315.044, 1320.318), stdev = 3.381
[info]   CI (99.9%): [1302.025, 1328.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7384.002, 7384.002, 7384.002), stdev = 0.001
[info]   CI (99.9%): [7384.001, 7384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.511 ±(99.9%) 557.416 MB/sec [Average]
[info]   (min, avg, max) = (1011.977, 1270.511, 1345.476), stdev = 144.759
[info]   CI (99.9%): [713.096, 1827.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7134.241 ±(99.9%) 3139.400 B/op [Average]
[info]   (min, avg, max) = (5677.690, 7134.241, 7565.143), stdev = 815.292
[info]   CI (99.9%): [3994.841, 10273.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.234 ±(99.9%) 0.552 B/op [Average]
[info]   (min, avg, max) = (0.117, 0.234, 0.468), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 352553.644 ops/s
[info] # Warmup Iteration   2: 509068.255 ops/s
[info] # Warmup Iteration   3: 540852.641 ops/s
[info] # Warmup Iteration   4: 539844.986 ops/s
[info] # Warmup Iteration   5: 538336.650 ops/s
[info] Iteration   1: 541590.089 ops/s
[info]                  ·gc.alloc.rate:                   1798.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4894.714 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 528157.808 ops/s
[info]                  ·gc.alloc.rate:                   1753.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.429 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5038.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 531991.131 ops/s
[info]                  ·gc.alloc.rate:                   1766.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5013.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 537671.998 ops/s
[info]                  ·gc.alloc.rate:                   1785.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5962.826 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   5: 541390.263 ops/s
[info]                  ·gc.alloc.rate:                   1797.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.369 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4938.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   536160.258 ±(99.9%) 22824.787 ops/s [Average]
[info]   (min, avg, max) = (528157.808, 536160.258, 541590.089), stdev = 5927.525
[info]   CI (99.9%): [513335.471, 558985.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1780.339 ±(99.9%) 75.768 MB/sec [Average]
[info]   (min, avg, max) = (1753.811, 1780.339, 1798.362), stdev = 19.677
[info]   CI (99.9%): [1704.570, 1856.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1761.798 ±(99.9%) 594.586 MB/sec [Average]
[info]   (min, avg, max) = (1685.005, 1761.798, 2037.857), stdev = 154.412
[info]   CI (99.9%): [1167.212, 2356.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5169.525 ±(99.9%) 1721.941 B/op [Average]
[info]   (min, avg, max) = (4894.714, 5169.525, 5962.826), stdev = 447.183
[info]   CI (99.9%): [3447.584, 6891.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.062, 0.122, 0.183), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   63.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 12.600, 20.000), stdev = 6.731
[info]   CI (99.9%): [63.000, 63.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 409342.825 ops/s
[info] # Warmup Iteration   2: 687582.529 ops/s
[info] # Warmup Iteration   3: 683269.561 ops/s
[info] # Warmup Iteration   4: 672626.629 ops/s
[info] # Warmup Iteration   5: 670751.139 ops/s
[info] Iteration   1: 679202.896 ops/s
[info]                  ·gc.alloc.rate:                   849.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1532.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 680938.294 ops/s
[info]                  ·gc.alloc.rate:                   851.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2304.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 665764.394 ops/s
[info]                  ·gc.alloc.rate:                   832.805 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.419 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1577.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 664587.898 ops/s
[info]                  ·gc.alloc.rate:                   831.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2376.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 683404.161 ops/s
[info]                  ·gc.alloc.rate:                   854.858 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   674779.529 ±(99.9%) 34280.618 ops/s [Average]
[info]   (min, avg, max) = (664587.898, 674779.529, 683404.161), stdev = 8902.568
[info]   CI (99.9%): [640498.911, 709060.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   844.087 ±(99.9%) 42.880 MB/sec [Average]
[info]   (min, avg, max) = (831.337, 844.087, 854.858), stdev = 11.136
[info]   CI (99.9%): [801.207, 886.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   800.501 ±(99.9%) 704.212 MB/sec [Average]
[info]   (min, avg, max) = (661.792, 800.501, 1003.958), stdev = 182.882
[info]   CI (99.9%): [96.289, 1504.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1867.607 ±(99.9%) 1667.363 B/op [Average]
[info]   (min, avg, max) = (1532.850, 1867.607, 2376.641), stdev = 433.009
[info]   CI (99.9%): [200.244, 3534.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.240 B/op [Average]
[info]   (min, avg, max) = (0.048, 0.087, 0.192), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.600, 10.000), stdev = 4.037
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4690977.440 ops/s
[info] # Warmup Iteration   2: 5055078.602 ops/s
[info] # Warmup Iteration   3: 5154925.211 ops/s
[info] # Warmup Iteration   4: 5196330.657 ops/s
[info] # Warmup Iteration   5: 5185175.241 ops/s
[info] Iteration   1: 5186598.915 ops/s
[info]                  ·gc.alloc.rate:               237.364 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 5189496.909 ops/s
[info]                  ·gc.alloc.rate:               237.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 77.581 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 5219807.227 ops/s
[info]                  ·gc.alloc.rate:                   238.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.020 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.659 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 5205785.302 ops/s
[info]                  ·gc.alloc.rate:      238.241 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 5185700.004 ops/s
[info]                  ·gc.alloc.rate:               237.316 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 98.665 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   5197477.671 ±(99.9%) 57385.549 ops/s [Average]
[info]   (min, avg, max) = (5185700.004, 5197477.671, 5219807.227), stdev = 14902.845
[info]   CI (99.9%): [5140092.123, 5254863.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   237.862 ±(99.9%) 2.644 MB/sec [Average]
[info]   (min, avg, max) = (237.316, 237.862, 238.893), stdev = 0.687
[info]   CI (99.9%): [235.218, 240.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   232.448 ±(99.9%) 517.852 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 232.448, 325.227), stdev = 134.484
[info]   CI (99.9%): [≈ 0, 750.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   70.378 ±(99.9%) 156.671 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 70.378, 98.665), stdev = 40.687
[info]   CI (99.9%): [≈ 0, 227.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.437 ±(99.9%) 3.766 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.437, 2.187), stdev = 0.978
[info]   CI (99.9%): [≈ 0, 4.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.132 ±(99.9%) 1.135 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.132, 0.659), stdev = 0.295
[info]   CI (99.9%): [≈ 0, 1.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 7.000), stdev = 2.702
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82877.133 ops/s
[info] # Warmup Iteration   2: 200218.358 ops/s
[info] # Warmup Iteration   3: 207098.694 ops/s
[info] # Warmup Iteration   4: 204287.770 ops/s
[info] # Warmup Iteration   5: 203998.817 ops/s
[info] Iteration   1: 205330.277 ops/s
[info]                  ·gc.alloc.rate:                   1133.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10084.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.638 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 204337.777 ops/s
[info]                  ·gc.alloc.rate:                   1128.456 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7652.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.641 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 205551.191 ops/s
[info]                  ·gc.alloc.rate:                   1135.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10196.345 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 205658.807 ops/s
[info]                  ·gc.alloc.rate:                   1135.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7680.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 205642.543 ops/s
[info]                  ·gc.alloc.rate:               1135.661 MB/sec
[info]                  ·gc.alloc.rate.norm:          8688.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7713.866 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   205304.119 ±(99.9%) 2140.384 ops/s [Average]
[info]   (min, avg, max) = (204337.777, 205304.119, 205658.807), stdev = 555.851
[info]   CI (99.9%): [203163.735, 207444.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1133.791 ±(99.9%) 11.818 MB/sec [Average]
[info]   (min, avg, max) = (1128.456, 1133.791, 1135.755), stdev = 3.069
[info]   CI (99.9%): [1121.973, 1145.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8688.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8688.002, 8688.002, 8688.002), stdev = 0.001
[info]   CI (99.9%): [8688.002, 8688.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.956 ±(99.9%) 680.023 MB/sec [Average]
[info]   (min, avg, max) = (994.003, 1130.956, 1332.222), stdev = 176.600
[info]   CI (99.9%): [450.933, 1810.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8665.574 ±(99.9%) 5187.581 B/op [Average]
[info]   (min, avg, max) = (7652.847, 8665.574, 10196.345), stdev = 1347.198
[info]   CI (99.9%): [3477.993, 13853.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.352 ±(99.9%) 1.102 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.352, 0.641), stdev = 0.286
[info]   CI (99.9%): [≈ 0, 1.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 10.000), stdev = 3.130
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2308071.089 ops/s
[info] # Warmup Iteration   2: 2614100.135 ops/s
[info] # Warmup Iteration   3: 2638651.720 ops/s
[info] # Warmup Iteration   4: 2636144.575 ops/s
[info] # Warmup Iteration   5: 2631722.527 ops/s
[info] Iteration   1: 2633713.126 ops/s
[info]                  ·gc.alloc.rate:                   1767.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1001.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2585884.864 ops/s
[info]                  ·gc.alloc.rate:                   1735.772 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1230.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 2636524.267 ops/s
[info]                  ·gc.alloc.rate:                   1769.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1009.873 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2610133.466 ops/s
[info]                  ·gc.alloc.rate:                   1752.057 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 2611858.249 ops/s
[info]                  ·gc.alloc.rate:                   1753.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              1056.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1023.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   2615622.794 ±(99.9%) 79214.323 ops/s [Average]
[info]   (min, avg, max) = (2585884.864, 2615622.794, 2636524.267), stdev = 20571.708
[info]   CI (99.9%): [2536408.471, 2694837.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1755.690 ±(99.9%) 53.093 MB/sec [Average]
[info]   (min, avg, max) = (1735.772, 1755.690, 1769.693), stdev = 13.788
[info]   CI (99.9%): [1702.597, 1808.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   1056.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1056.000, 1056.000, 1056.000), stdev = 0.001
[info]   CI (99.9%): [1056.000, 1056.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1757.421 ±(99.9%) 573.313 MB/sec [Average]
[info]   (min, avg, max) = (1676.353, 1757.421, 2023.296), stdev = 148.887
[info]   CI (99.9%): [1184.108, 2330.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1057.564 ±(99.9%) 374.824 B/op [Average]
[info]   (min, avg, max) = (1001.351, 1057.564, 1230.923), stdev = 97.341
[info]   CI (99.9%): [682.740, 1432.388] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.045 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.045, 0.063), stdev = 0.012
[info]   CI (99.9%): [0.001, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 16.000), stdev = 5.495
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134339.173 ops/s
[info] # Warmup Iteration   2: 233994.485 ops/s
[info] # Warmup Iteration   3: 237783.559 ops/s
[info] # Warmup Iteration   4: 236142.164 ops/s
[info] # Warmup Iteration   5: 238789.117 ops/s
[info] Iteration   1: 239760.128 ops/s
[info]                  ·gc.alloc.rate:                   1293.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8684.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 240784.983 ops/s
[info]                  ·gc.alloc.rate:                   1299.111 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8704.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 238169.186 ops/s
[info]                  ·gc.alloc.rate:                   1284.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8848.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.413 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 234661.613 ops/s
[info]                  ·gc.alloc.rate:               1266.050 MB/sec
[info]                  ·gc.alloc.rate.norm:          8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6762.110 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 240961.716 ops/s
[info]                  ·gc.alloc.rate:                   1299.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              8488.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8806.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.544 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   238867.525 ±(99.9%) 10011.007 ops/s [Average]
[info]   (min, avg, max) = (234661.613, 238867.525, 240961.716), stdev = 2599.827
[info]   CI (99.9%): [228856.518, 248878.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1288.728 ±(99.9%) 53.990 MB/sec [Average]
[info]   (min, avg, max) = (1266.050, 1288.728, 1299.967), stdev = 14.021
[info]   CI (99.9%): [1234.738, 1342.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8488.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8488.002, 8488.002, 8488.002), stdev = 0.001
[info]   CI (99.9%): [8488.002, 8488.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.510 ±(99.9%) 564.870 MB/sec [Average]
[info]   (min, avg, max) = (1008.620, 1270.510, 1348.743), stdev = 146.695
[info]   CI (99.9%): [705.639, 1835.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8361.096 ±(99.9%) 3452.046 B/op [Average]
[info]   (min, avg, max) = (6762.110, 8361.096, 8848.334), stdev = 896.485
[info]   CI (99.9%): [4909.050, 11813.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.328 ±(99.9%) 0.953 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.328, 0.544), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 326946.989 ops/s
[info] # Warmup Iteration   2: 548952.077 ops/s
[info] # Warmup Iteration   3: 564170.574 ops/s
[info] # Warmup Iteration   4: 560784.973 ops/s
[info] # Warmup Iteration   5: 559136.385 ops/s
[info] Iteration   1: 553148.341 ops/s
[info]                  ·gc.alloc.rate:                   1937.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5762.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 555276.463 ops/s
[info]                  ·gc.alloc.rate:                   1945.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4799.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 547953.150 ops/s
[info]                  ·gc.alloc.rate:                   1919.803 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5847.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 559334.835 ops/s
[info]                  ·gc.alloc.rate:                   1959.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5735.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 561760.857 ops/s
[info]                  ·gc.alloc.rate:                   1968.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5716.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   555494.729 ±(99.9%) 20775.587 ops/s [Average]
[info]   (min, avg, max) = (547953.150, 555494.729, 561760.857), stdev = 5395.354
[info]   CI (99.9%): [534719.142, 576270.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1946.194 ±(99.9%) 72.660 MB/sec [Average]
[info]   (min, avg, max) = (1919.803, 1946.194, 1968.102), stdev = 18.870
[info]   CI (99.9%): [1873.534, 2018.854] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1967.420 ±(99.9%) 588.950 MB/sec [Average]
[info]   (min, avg, max) = (1694.012, 1967.420, 2041.201), stdev = 152.949
[info]   CI (99.9%): [1378.470, 2556.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5572.415 ±(99.9%) 1674.630 B/op [Average]
[info]   (min, avg, max) = (4799.580, 5572.415, 5847.192), stdev = 434.896
[info]   CI (99.9%): [3897.785, 7247.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.142 ±(99.9%) 0.129 B/op [Average]
[info]   (min, avg, max) = (0.117, 0.142, 0.179), stdev = 0.034
[info]   CI (99.9%): [0.013, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.600, 12.000), stdev = 2.702
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 302076.439 ops/s
[info] # Warmup Iteration   2: 526837.512 ops/s
[info] # Warmup Iteration   3: 532852.561 ops/s
[info] # Warmup Iteration   4: 533361.215 ops/s
[info] # Warmup Iteration   5: 529888.118 ops/s
[info] Iteration   1: 525949.785 ops/s
[info]                  ·gc.alloc.rate:                   534.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1953.524 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 533439.205 ops/s
[info]                  ·gc.alloc.rate:                   542.517 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1935.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 530011.002 ops/s
[info]                  ·gc.alloc.rate:                   539.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     976.197 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 531791.311 ops/s
[info]                  ·gc.alloc.rate:               540.847 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1953.728 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 538043.497 ops/s
[info]                  ·gc.alloc.rate:                   547.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     969.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.426 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   531846.960 ±(99.9%) 17121.604 ops/s [Average]
[info]   (min, avg, max) = (525949.785, 531846.960, 538043.497), stdev = 4446.426
[info]   CI (99.9%): [514725.356, 548968.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   540.894 ±(99.9%) 17.438 MB/sec [Average]
[info]   (min, avg, max) = (534.884, 540.894, 547.200), stdev = 4.529
[info]   CI (99.9%): [523.455, 558.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.069 ±(99.9%) 688.554 MB/sec [Average]
[info]   (min, avg, max) = (328.868, 526.069, 660.417), stdev = 178.815
[info]   CI (99.9%): [≈ 0, 1214.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1557.776 ±(99.9%) 2056.396 B/op [Average]
[info]   (min, avg, max) = (969.451, 1557.776, 1953.728), stdev = 534.039
[info]   CI (99.9%): [≈ 0, 3614.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.223 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 0.650 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.135, 0.426), stdev = 0.169
[info]   CI (99.9%): [≈ 0, 0.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.800, 6.000), stdev = 2.280
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2890441.565 ops/s
[info] # Warmup Iteration   2: 3113104.769 ops/s
[info] # Warmup Iteration   3: 3184884.730 ops/s
[info] # Warmup Iteration   4: 3146847.267 ops/s
[info] # Warmup Iteration   5: 3149293.637 ops/s
[info] Iteration   1: 3118680.353 ops/s
[info]                  ·gc.alloc.rate:                   777.053 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     330.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 3169131.731 ops/s
[info]                  ·gc.alloc.rate:                   789.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     489.290 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3199805.841 ops/s
[info]                  ·gc.alloc.rate:                   797.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     324.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3149245.082 ops/s
[info]                  ·gc.alloc.rate:                   784.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     331.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3143788.392 ops/s
[info]                  ·gc.alloc.rate:                   783.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.991 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3156130.280 ±(99.9%) 116777.046 ops/s [Average]
[info]   (min, avg, max) = (3118680.353, 3156130.280, 3199805.841), stdev = 30326.628
[info]   CI (99.9%): [3039353.234, 3272907.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   786.399 ±(99.9%) 29.107 MB/sec [Average]
[info]   (min, avg, max) = (777.053, 786.399, 797.274), stdev = 7.559
[info]   CI (99.9%): [757.292, 815.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.372 ±(99.9%) 701.364 MB/sec [Average]
[info]   (min, avg, max) = (654.749, 792.372, 997.991), stdev = 182.142
[info]   CI (99.9%): [91.007, 1493.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   394.993 ±(99.9%) 349.667 B/op [Average]
[info]   (min, avg, max) = (324.704, 394.993, 499.415), stdev = 90.807
[info]   CI (99.9%): [45.327, 744.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.023, 0.041), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 15.000), stdev = 4.827
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83796.881 ops/s
[info] # Warmup Iteration   2: 164306.378 ops/s
[info] # Warmup Iteration   3: 169179.020 ops/s
[info] # Warmup Iteration   4: 168838.475 ops/s
[info] # Warmup Iteration   5: 167683.809 ops/s
[info] Iteration   1: 168330.899 ops/s
[info]                  ·gc.alloc.rate:                   1150.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9227.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 164621.185 ops/s
[info]                  ·gc.alloc.rate:                   1125.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12673.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.796 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   3: 169344.762 ops/s
[info]                  ·gc.alloc.rate:                   1157.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9289.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.580 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 167865.854 ops/s
[info]                  ·gc.alloc.rate:                   1147.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12553.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 168726.259 ops/s
[info]                  ·gc.alloc.rate:                   1153.087 MB/sec
[info]                  ·gc.alloc.rate.norm:              10752.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9404.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   167777.792 ±(99.9%) 7108.803 ops/s [Average]
[info]   (min, avg, max) = (164621.185, 167777.792, 169344.762), stdev = 1846.134
[info]   CI (99.9%): [160668.989, 174886.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1146.628 ±(99.9%) 48.532 MB/sec [Average]
[info]   (min, avg, max) = (1125.080, 1146.628, 1157.345), stdev = 12.604
[info]   CI (99.9%): [1098.096, 1195.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10752.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10752.003, 10752.003, 10752.003), stdev = 0.001
[info]   CI (99.9%): [10752.002, 10752.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.301 ±(99.9%) 705.748 MB/sec [Average]
[info]   (min, avg, max) = (987.262, 1132.301, 1339.505), stdev = 183.281
[info]   CI (99.9%): [426.553, 1838.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10629.948 ±(99.9%) 6979.923 B/op [Average]
[info]   (min, avg, max) = (9227.319, 10629.948, 12673.730), stdev = 1812.664
[info]   CI (99.9%): [3650.025, 17609.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.470 ±(99.9%) 0.877 B/op [Average]
[info]   (min, avg, max) = (0.194, 0.470, 0.796), stdev = 0.228
[info]   CI (99.9%): [≈ 0, 1.347] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 24.000), stdev = 9.028
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 238965.324 ops/s
[info] # Warmup Iteration   2: 440114.065 ops/s
[info] # Warmup Iteration   3: 455007.618 ops/s
[info] # Warmup Iteration   4: 455804.053 ops/s
[info] # Warmup Iteration   5: 455374.436 ops/s
[info] Iteration   1: 453219.293 ops/s
[info]                  ·gc.alloc.rate:                   1620.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.365 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5832.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 444863.185 ops/s
[info]                  ·gc.alloc.rate:                   1590.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4773.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 447090.681 ops/s
[info]                  ·gc.alloc.rate:                   1598.217 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5953.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 452481.749 ops/s
[info]                  ·gc.alloc.rate:                   1617.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5897.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 452566.213 ops/s
[info]                  ·gc.alloc.rate:                   1617.761 MB/sec
[info]                  ·gc.alloc.rate.norm:              5624.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.654 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5905.219 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   450044.224 ±(99.9%) 14656.442 ops/s [Average]
[info]   (min, avg, max) = (444863.185, 450044.224, 453219.293), stdev = 3806.232
[info]   CI (99.9%): [435387.782, 464700.667] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1608.788 ±(99.9%) 52.328 MB/sec [Average]
[info]   (min, avg, max) = (1590.312, 1608.788, 1620.170), stdev = 13.590
[info]   CI (99.9%): [1556.459, 1661.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5624.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5624.001, 5624.001, 5624.001), stdev = 0.001
[info]   CI (99.9%): [5624.001, 5624.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.368 ±(99.9%) 589.417 MB/sec [Average]
[info]   (min, avg, max) = (1349.834, 1623.368, 1698.654), stdev = 153.070
[info]   CI (99.9%): [1033.951, 2212.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5672.546 ±(99.9%) 1942.196 B/op [Average]
[info]   (min, avg, max) = (4773.571, 5672.546, 5953.928), stdev = 504.382
[info]   CI (99.9%): [3730.350, 7614.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.153 B/op [Average]
[info]   (min, avg, max) = (0.072, 0.116, 0.147), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 12.000), stdev = 3.899
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 440120.369 ops/s
[info] # Warmup Iteration   2: 854041.577 ops/s
[info] # Warmup Iteration   3: 857192.729 ops/s
[info] # Warmup Iteration   4: 853329.373 ops/s
[info] # Warmup Iteration   5: 868323.642 ops/s
[info] Iteration   1: 855096.317 ops/s
[info]                  ·gc.alloc.rate:                   1008.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1832.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 855505.363 ops/s
[info]                  ·gc.alloc.rate:                   1009.252 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1838.846 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 863285.512 ops/s
[info]                  ·gc.alloc.rate:                   1018.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1830.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 861334.654 ops/s
[info]                  ·gc.alloc.rate:                   1016.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1841.055 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 858378.418 ops/s
[info]                  ·gc.alloc.rate:               1012.653 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1852.923 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   858720.053 ±(99.9%) 13784.817 ops/s [Average]
[info]   (min, avg, max) = (855096.317, 858720.053, 863285.512), stdev = 3579.873
[info]   CI (99.9%): [844935.236, 872504.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1013.050 ±(99.9%) 16.272 MB/sec [Average]
[info]   (min, avg, max) = (1008.770, 1013.050, 1018.430), stdev = 4.226
[info]   CI (99.9%): [996.778, 1029.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.001, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.881 ±(99.9%) 23.285 MB/sec [Average]
[info]   (min, avg, max) = (995.938, 1003.881, 1010.974), stdev = 6.047
[info]   CI (99.9%): [980.597, 1027.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1839.205 ±(99.9%) 33.825 B/op [Average]
[info]   (min, avg, max) = (1830.810, 1839.205, 1852.923), stdev = 8.784
[info]   CI (99.9%): [1805.380, 1873.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.146), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.418 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.268), stdev = 0.108
[info]   CI (99.9%): [≈ 0, 0.494] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 3.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2141517.913 ops/s
[info] # Warmup Iteration   2: 2482212.634 ops/s
[info] # Warmup Iteration   3: 2509665.456 ops/s
[info] # Warmup Iteration   4: 2486448.541 ops/s
[info] # Warmup Iteration   5: 2469099.105 ops/s
[info] Iteration   1: 2522484.212 ops/s
[info]                  ·gc.alloc.rate:                   1128.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     618.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2513654.164 ops/s
[info]                  ·gc.alloc.rate:                   1124.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.629 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     623.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2522890.875 ops/s
[info]                  ·gc.alloc.rate:                   1128.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     832.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2534994.616 ops/s
[info]                  ·gc.alloc.rate:                   1134.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     624.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2533901.554 ops/s
[info]                  ·gc.alloc.rate:                   1133.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.449 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   2525585.084 ±(99.9%) 34275.272 ops/s [Average]
[info]   (min, avg, max) = (2513654.164, 2525585.084, 2534994.616), stdev = 8901.179
[info]   CI (99.9%): [2491309.812, 2559860.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   1130.144 ±(99.9%) 15.275 MB/sec [Average]
[info]   (min, avg, max) = (1124.822, 1130.144, 1134.347), stdev = 3.967
[info]   CI (99.9%): [1114.868, 1145.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1067.597 ±(99.9%) 577.410 MB/sec [Average]
[info]   (min, avg, max) = (991.612, 1067.597, 1335.529), stdev = 149.952
[info]   CI (99.9%): [490.187, 1645.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   665.077 ±(99.9%) 361.255 B/op [Average]
[info]   (min, avg, max) = (618.460, 665.077, 832.819), stdev = 93.817
[info]   CI (99.9%): [303.823, 1026.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.031, 0.052), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 4.099
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142634.992 ops/s
[info] # Warmup Iteration   2: 239877.134 ops/s
[info] # Warmup Iteration   3: 253337.249 ops/s
[info] # Warmup Iteration   4: 252506.890 ops/s
[info] # Warmup Iteration   5: 254643.361 ops/s
[info] Iteration   1: 254390.924 ops/s
[info]                  ·gc.alloc.rate:                   1323.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8184.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 256256.601 ops/s
[info]                  ·gc.alloc.rate:                   1333.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8178.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.639 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 253870.030 ops/s
[info]                  ·gc.alloc.rate:                   1320.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8301.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 255876.028 ops/s
[info]                  ·gc.alloc.rate:                   1331.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8274.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 255648.159 ops/s
[info]                  ·gc.alloc.rate:               1329.862 MB/sec
[info]                  ·gc.alloc.rate.norm:          8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8308.525 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   255208.348 ±(99.9%) 3944.487 ops/s [Average]
[info]   (min, avg, max) = (253870.030, 255208.348, 256256.601), stdev = 1024.371
[info]   CI (99.9%): [251263.861, 259152.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1327.563 ±(99.9%) 20.539 MB/sec [Average]
[info]   (min, avg, max) = (1320.598, 1327.563, 1333.013), stdev = 5.334
[info]   CI (99.9%): [1307.024, 1348.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.002, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.192 ±(99.9%) 41.059 MB/sec [Average]
[info]   (min, avg, max) = (1323.441, 1338.192, 1350.096), stdev = 10.663
[info]   CI (99.9%): [1297.133, 1379.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8249.563 ±(99.9%) 243.091 B/op [Average]
[info]   (min, avg, max) = (8178.799, 8249.563, 8308.525), stdev = 63.130
[info]   CI (99.9%): [8006.472, 8492.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.308 ±(99.9%) 0.895 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.308, 0.639), stdev = 0.232
[info]   CI (99.9%): [≈ 0, 1.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.600, 12.000), stdev = 3.362
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185069.597 ops/s
[info] # Warmup Iteration   2: 677771.424 ops/s
[info] # Warmup Iteration   3: 685046.675 ops/s
[info] # Warmup Iteration   4: 684642.083 ops/s
[info] # Warmup Iteration   5: 690008.503 ops/s
[info] Iteration   1: 686616.008 ops/s
[info]                  ·gc.alloc.rate:               890.309 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2266.776 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 686621.243 ops/s
[info]                  ·gc.alloc.rate:                   890.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2282.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.429 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 685183.376 ops/s
[info]                  ·gc.alloc.rate:               888.505 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1530.185 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 683569.094 ops/s
[info]                  ·gc.alloc.rate:                   886.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.672 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2307.578 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 681851.531 ops/s
[info]                  ·gc.alloc.rate:                   884.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2324.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   684768.250 ±(99.9%) 7930.211 ops/s [Average]
[info]   (min, avg, max) = (681851.531, 684768.250, 686621.243), stdev = 2059.451
[info]   CI (99.9%): [676838.040, 692698.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   887.956 ±(99.9%) 10.307 MB/sec [Average]
[info]   (min, avg, max) = (884.157, 887.956, 890.402), stdev = 2.677
[info]   CI (99.9%): [877.649, 898.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   932.358 ±(99.9%) 572.969 MB/sec [Average]
[info]   (min, avg, max) = (666.459, 932.358, 1007.319), stdev = 148.798
[info]   CI (99.9%): [359.389, 1505.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2142.157 ±(99.9%) 1320.090 B/op [Average]
[info]   (min, avg, max) = (1530.185, 2142.157, 2324.172), stdev = 342.823
[info]   CI (99.9%): [822.068, 3462.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.307 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.187), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.704 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.429), stdev = 0.183
[info]   CI (99.9%): [≈ 0, 0.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 8.000), stdev = 2.490
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1521412.989 ops/s
[info] # Warmup Iteration   2: 1828712.258 ops/s
[info] # Warmup Iteration   3: 1954754.906 ops/s
[info] # Warmup Iteration   4: 1944803.520 ops/s
[info] # Warmup Iteration   5: 1947797.542 ops/s
[info] Iteration   1: 1963274.636 ops/s
[info]                  ·gc.alloc.rate:                   1727.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              1384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1341.985 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1945279.632 ops/s
[info]                  ·gc.alloc.rate:                   1711.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              1384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1361.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1950006.775 ops/s
[info]                  ·gc.alloc.rate:                   1715.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              1384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.703 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1364.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1963298.000 ops/s
[info]                  ·gc.alloc.rate:                   1727.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              1384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1357.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1980212.424 ops/s
[info]                  ·gc.alloc.rate:                   1741.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              1384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.995 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1349.054 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   1960414.293 ±(99.9%) 52580.600 ops/s [Average]
[info]   (min, avg, max) = (1945279.632, 1960414.293, 1980212.424), stdev = 13655.015
[info]   CI (99.9%): [1907833.693, 2012994.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1724.596 ±(99.9%) 46.172 MB/sec [Average]
[info]   (min, avg, max) = (1711.337, 1724.596, 1741.980), stdev = 11.991
[info]   CI (99.9%): [1678.424, 1770.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1384.000, 1384.000, 1384.000), stdev = 0.001
[info]   CI (99.9%): [1384.000, 1384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1688.296 ±(99.9%) 35.945 MB/sec [Average]
[info]   (min, avg, max) = (1674.702, 1688.296, 1697.995), stdev = 9.335
[info]   CI (99.9%): [1652.350, 1724.241] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1354.904 ±(99.9%) 35.352 B/op [Average]
[info]   (min, avg, max) = (1341.985, 1354.904, 1364.063), stdev = 9.181
[info]   CI (99.9%): [1319.551, 1390.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.044 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.044, 0.067), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.600, 11.000), stdev = 3.050
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128382.156 ops/s
[info] # Warmup Iteration   2: 213031.360 ops/s
[info] # Warmup Iteration   3: 220958.350 ops/s
[info] # Warmup Iteration   4: 219371.269 ops/s
[info] # Warmup Iteration   5: 221226.248 ops/s
[info] Iteration   1: 221517.435 ops/s
[info]                  ·gc.alloc.rate:                   1184.981 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7030.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 224056.892 ops/s
[info]                  ·gc.alloc.rate:                   1198.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9325.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 224106.205 ops/s
[info]                  ·gc.alloc.rate:                   1198.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7029.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.585 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 223312.541 ops/s
[info]                  ·gc.alloc.rate:                   1194.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9445.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.293 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 222082.887 ops/s
[info]                  ·gc.alloc.rate:                   1188.002 MB/sec
[info]                  ·gc.alloc.rate.norm:              8416.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7154.510 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   223015.192 ±(99.9%) 4505.556 ops/s [Average]
[info]   (min, avg, max) = (221517.435, 223015.192, 224106.205), stdev = 1170.078
[info]   CI (99.9%): [218509.636, 227520.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1192.991 ±(99.9%) 24.098 MB/sec [Average]
[info]   (min, avg, max) = (1184.981, 1192.991, 1198.814), stdev = 6.258
[info]   CI (99.9%): [1168.892, 1217.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8416.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8416.002, 8416.002, 8416.002), stdev = 0.001
[info]   CI (99.9%): [8416.002, 8416.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1134.009 ±(99.9%) 705.376 MB/sec [Average]
[info]   (min, avg, max) = (989.934, 1134.009, 1340.783), stdev = 183.184
[info]   CI (99.9%): [428.633, 1839.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7997.224 ±(99.9%) 4888.147 B/op [Average]
[info]   (min, avg, max) = (7029.024, 7997.224, 9445.996), stdev = 1269.436
[info]   CI (99.9%): [3109.077, 12885.371] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.381 ±(99.9%) 0.752 B/op [Average]
[info]   (min, avg, max) = (0.148, 0.381, 0.585), stdev = 0.195
[info]   CI (99.9%): [≈ 0, 1.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 14.000), stdev = 4.722
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 632560.415 ops/s
[info] # Warmup Iteration   2: 980820.681 ops/s
[info] # Warmup Iteration   3: 988719.794 ops/s
[info] # Warmup Iteration   4: 997112.715 ops/s
[info] # Warmup Iteration   5: 998118.772 ops/s
[info] Iteration   1: 995895.752 ops/s
[info]                  ·gc.alloc.rate:                   734.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.068 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1041.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 979432.366 ops/s
[info]                  ·gc.alloc.rate:                   722.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1596.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 996963.445 ops/s
[info]                  ·gc.alloc.rate:                   735.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.412 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1050.074 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 998238.692 ops/s
[info]                  ·gc.alloc.rate:                   736.028 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1051.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 994007.409 ops/s
[info]                  ·gc.alloc.rate:                   732.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.055 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1058.965 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   992907.533 ±(99.9%) 29614.367 ops/s [Average]
[info]   (min, avg, max) = (979432.366, 992907.533, 998238.692), stdev = 7690.757
[info]   CI (99.9%): [963293.166, 1022521.899] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   732.100 ±(99.9%) 21.721 MB/sec [Average]
[info]   (min, avg, max) = (722.221, 732.100, 736.028), stdev = 5.641
[info]   CI (99.9%): [710.379, 753.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.962 ±(99.9%) 566.109 MB/sec [Average]
[info]   (min, avg, max) = (659.068, 730.962, 993.866), stdev = 147.017
[info]   CI (99.9%): [164.853, 1297.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1159.673 ±(99.9%) 940.201 B/op [Average]
[info]   (min, avg, max) = (1041.167, 1159.673, 1596.305), stdev = 244.167
[info]   CI (99.9%): [219.472, 2099.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.159 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.066, 0.134), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 11.000), stdev = 4.278
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2998791.806 ops/s
[info] # Warmup Iteration   2: 3257746.160 ops/s
[info] # Warmup Iteration   3: 3271733.919 ops/s
[info] # Warmup Iteration   4: 3288955.516 ops/s
[info] # Warmup Iteration   5: 3260240.368 ops/s
[info] Iteration   1: 3286903.363 ops/s
[info]                  ·gc.alloc.rate:                   534.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3299627.577 ops/s
[info]                  ·gc.alloc.rate:               536.908 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 155.539 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 3190180.764 ops/s
[info]                  ·gc.alloc.rate:                   519.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3262858.881 ops/s
[info]                  ·gc.alloc.rate:                   530.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.727 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3234643.425 ops/s
[info]                  ·gc.alloc.rate:               526.353 MB/sec
[info]                  ·gc.alloc.rate.norm:          256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 159.955 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   3254842.802 ±(99.9%) 168803.718 ops/s [Average]
[info]   (min, avg, max) = (3190180.764, 3254842.802, 3299627.577), stdev = 43837.790
[info]   CI (99.9%): [3086039.084, 3423646.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   529.626 ±(99.9%) 27.446 MB/sec [Average]
[info]   (min, avg, max) = (519.107, 529.626, 536.908), stdev = 7.128
[info]   CI (99.9%): [502.181, 557.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.328 ±(99.9%) 688.233 MB/sec [Average]
[info]   (min, avg, max) = (326.211, 523.328, 655.727), stdev = 178.732
[info]   CI (99.9%): [≈ 0, 1211.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   253.237 ±(99.9%) 336.011 B/op [Average]
[info]   (min, avg, max) = (155.539, 253.237, 322.394), stdev = 87.261
[info]   CI (99.9%): [≈ 0, 589.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.031), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 12.000), stdev = 4.393
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94737.652 ops/s
[info] # Warmup Iteration   2: 164024.409 ops/s
[info] # Warmup Iteration   3: 168939.023 ops/s
[info] # Warmup Iteration   4: 169336.914 ops/s
[info] # Warmup Iteration   5: 169533.131 ops/s
[info] Iteration   1: 168053.479 ops/s
[info]                  ·gc.alloc.rate:                   1186.120 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9267.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.195 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 164098.712 ops/s
[info]                  ·gc.alloc.rate:                   1158.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12733.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.998 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   3: 168965.180 ops/s
[info]                  ·gc.alloc.rate:                   1192.519 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.242 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9322.951 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.582 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 168705.415 ops/s
[info]                  ·gc.alloc.rate:                   1190.725 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12509.384 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.388 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 170038.843 ops/s
[info]                  ·gc.alloc.rate:                   1200.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              11104.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9347.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   167972.326 ±(99.9%) 8781.903 ops/s [Average]
[info]   (min, avg, max) = (164098.712, 167972.326, 170038.843), stdev = 2280.632
[info]   CI (99.9%): [159190.422, 176754.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1185.537 ±(99.9%) 61.897 MB/sec [Average]
[info]   (min, avg, max) = (1158.230, 1185.537, 1200.093), stdev = 16.075
[info]   CI (99.9%): [1123.640, 1247.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   11104.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11104.003, 11104.003, 11104.003), stdev = 0.001
[info]   CI (99.9%): [11104.002, 11104.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1134.220 ±(99.9%) 705.877 MB/sec [Average]
[info]   (min, avg, max) = (989.974, 1134.220, 1341.430), stdev = 183.314
[info]   CI (99.9%): [428.343, 1840.097] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10636.223 ±(99.9%) 6985.766 B/op [Average]
[info]   (min, avg, max) = (9267.757, 10636.223, 12733.439), stdev = 1814.181
[info]   CI (99.9%): [3650.457, 17621.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.510 ±(99.9%) 1.176 B/op [Average]
[info]   (min, avg, max) = (0.195, 0.510, 0.998), stdev = 0.305
[info]   CI (99.9%): [≈ 0, 1.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.000, 17.000), stdev = 5.788
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 875803.159 ops/s
[info] # Warmup Iteration   2: 1258901.376 ops/s
[info] # Warmup Iteration   3: 1311193.843 ops/s
[info] # Warmup Iteration   4: 1317603.950 ops/s
[info] # Warmup Iteration   5: 1306317.540 ops/s
[info] Iteration   1: 1294199.052 ops/s
[info]                  ·gc.alloc.rate:                   1447.847 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1625.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1309754.164 ops/s
[info]                  ·gc.alloc.rate:                   1465.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1614.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1272434.016 ops/s
[info]                  ·gc.alloc.rate:                   1423.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1668.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1290237.404 ops/s
[info]                  ·gc.alloc.rate:                   1443.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.348 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2062.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1293297.726 ops/s
[info]                  ·gc.alloc.rate:               1446.865 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1649.702 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1291984.472 ±(99.9%) 51217.311 ops/s [Average]
[info]   (min, avg, max) = (1272434.016, 1291984.472, 1309754.164), stdev = 13300.973
[info]   CI (99.9%): [1240767.161, 1343201.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1445.337 ±(99.9%) 57.377 MB/sec [Average]
[info]   (min, avg, max) = (1423.413, 1445.337, 1465.208), stdev = 14.901
[info]   CI (99.9%): [1387.960, 1502.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1415.658 ±(99.9%) 594.041 MB/sec [Average]
[info]   (min, avg, max) = (1337.183, 1415.658, 1691.348), stdev = 154.270
[info]   CI (99.9%): [821.618, 2009.699] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1724.133 ±(99.9%) 732.516 B/op [Average]
[info]   (min, avg, max) = (1614.971, 1724.133, 2062.402), stdev = 190.232
[info]   CI (99.9%): [991.617, 2456.650] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.100), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 13.000), stdev = 2.588
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2652584.768 ops/s
[info] # Warmup Iteration   2: 3853105.500 ops/s
[info] # Warmup Iteration   3: 3860657.001 ops/s
[info] # Warmup Iteration   4: 3910589.954 ops/s
[info] # Warmup Iteration   5: 3904034.063 ops/s
[info] Iteration   1: 3932674.306 ops/s
[info]                  ·gc.alloc.rate:                   1079.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3932361.250 ops/s
[info]                  ·gc.alloc.rate:                   1079.826 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.858 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     533.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3954788.830 ops/s
[info]                  ·gc.alloc.rate:               1085.974 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 399.920 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3953765.133 ops/s
[info]                  ·gc.alloc.rate:               1085.650 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 401.085 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3913939.298 ops/s
[info]                  ·gc.alloc.rate:                   1074.756 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3937505.763 ±(99.9%) 65807.121 ops/s [Average]
[info]   (min, avg, max) = (3913939.298, 3937505.763, 3954788.830), stdev = 17089.900
[info]   CI (99.9%): [3871698.643, 4003312.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1081.219 ±(99.9%) 18.032 MB/sec [Average]
[info]   (min, avg, max) = (1074.756, 1081.219, 1085.974), stdev = 4.683
[info]   CI (99.9%): [1063.186, 1099.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.150 ±(99.9%) 566.106 MB/sec [Average]
[info]   (min, avg, max) = (993.274, 1070.150, 1332.858), stdev = 147.016
[info]   CI (99.9%): [504.044, 1636.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   427.618 ±(99.9%) 227.699 B/op [Average]
[info]   (min, avg, max) = (397.351, 427.618, 533.229), stdev = 59.133
[info]   CI (99.9%): [199.919, 655.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.025), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 10.000), stdev = 2.915
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13997880.942 ops/s
[info] # Warmup Iteration   2: 14572360.536 ops/s
[info] # Warmup Iteration   3: 14873989.303 ops/s
[info] # Warmup Iteration   4: 14229891.037 ops/s
[info] # Warmup Iteration   5: 14854672.872 ops/s
[info] Iteration   1: 15007978.237 ops/s
[info]                  ·gc.alloc.rate:                   457.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 15032358.873 ops/s
[info]                  ·gc.alloc.rate:                   458.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 14864921.259 ops/s
[info]                  ·gc.alloc.rate:               453.517 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34.490 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 15016607.044 ops/s
[info]                  ·gc.alloc.rate:                   458.160 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     34.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 15072594.263 ops/s
[info]                  ·gc.alloc.rate:                   459.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.758 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     68.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   14998891.935 ±(99.9%) 303789.922 ops/s [Average]
[info]   (min, avg, max) = (14864921.259, 14998891.935, 15072594.263), stdev = 78893.278
[info]   CI (99.9%): [14695102.013, 15302681.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   457.617 ±(99.9%) 9.293 MB/sec [Average]
[info]   (min, avg, max) = (453.517, 457.617, 459.868), stdev = 2.413
[info]   CI (99.9%): [448.324, 466.911] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.027 ±(99.9%) 689.791 MB/sec [Average]
[info]   (min, avg, max) = (325.873, 457.027, 654.758), stdev = 179.137
[info]   CI (99.9%): [≈ 0, 1146.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   47.890 ±(99.9%) 71.664 B/op [Average]
[info]   (min, avg, max) = (34.160, 47.890, 68.342), stdev = 18.611
[info]   CI (99.9%): [≈ 0, 119.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.013 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.009), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 6.000), stdev = 2.121
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 581403.099 ops/s
[info] # Warmup Iteration   2: 862801.168 ops/s
[info] # Warmup Iteration   3: 878682.909 ops/s
[info] # Warmup Iteration   4: 869472.349 ops/s
[info] # Warmup Iteration   5: 875707.654 ops/s
[info] Iteration   1: 871272.686 ops/s
[info]                  ·gc.alloc.rate:                   1324.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2394.682 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 873090.756 ops/s
[info]                  ·gc.alloc.rate:                   1327.450 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.170 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2404.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 865444.344 ops/s
[info]                  ·gc.alloc.rate:                   1315.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2438.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 868837.708 ops/s
[info]                  ·gc.alloc.rate:                   1320.968 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2439.921 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 860624.911 ops/s
[info]                  ·gc.alloc.rate:                   1308.485 MB/sec
[info]                  ·gc.alloc.rate.norm:              2392.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2469.310 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   867854.081 ±(99.9%) 19073.799 ops/s [Average]
[info]   (min, avg, max) = (860624.911, 867854.081, 873090.756), stdev = 4953.405
[info]   CI (99.9%): [848780.282, 886927.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1319.473 ±(99.9%) 29.005 MB/sec [Average]
[info]   (min, avg, max) = (1308.485, 1319.473, 1327.450), stdev = 7.532
[info]   CI (99.9%): [1290.468, 1348.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2392.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2392.000, 2392.001, 2392.001), stdev = 0.001
[info]   CI (99.9%): [2392.000, 2392.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1339.993 ±(99.9%) 38.481 MB/sec [Average]
[info]   (min, avg, max) = (1326.142, 1339.993, 1350.776), stdev = 9.993
[info]   CI (99.9%): [1301.512, 1378.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2429.327 ±(99.9%) 116.052 B/op [Average]
[info]   (min, avg, max) = (2394.682, 2429.327, 2469.310), stdev = 30.138
[info]   CI (99.9%): [2313.275, 2545.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.098 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.098, 0.151), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 15.000), stdev = 4.037
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 370355.783 ops/s
[info] # Warmup Iteration   2: 696742.437 ops/s
[info] # Warmup Iteration   3: 712685.308 ops/s
[info] # Warmup Iteration   4: 706220.119 ops/s
[info] # Warmup Iteration   5: 689032.843 ops/s
[info] Iteration   1: 683878.733 ops/s
[info]                  ·gc.alloc.rate:                   1662.326 MB/sec
[info]                  ·gc.alloc.rate.norm:              3824.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3845.809 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 687041.624 ops/s
[info]                  ·gc.alloc.rate:                   1670.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              3824.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3079.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 707060.233 ops/s
[info]                  ·gc.alloc.rate:                   1718.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              3824.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2026.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4508.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 713673.894 ops/s
[info]                  ·gc.alloc.rate:                   1734.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              3824.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.986 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3734.327 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 709139.422 ops/s
[info]                  ·gc.alloc.rate:                   1723.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              3824.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3765.602 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.185 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   700158.781 ±(99.9%) 52658.173 ops/s [Average]
[info]   (min, avg, max) = (683878.733, 700158.781, 713673.894), stdev = 13675.160
[info]   CI (99.9%): [647500.608, 752816.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1701.851 ±(99.9%) 127.828 MB/sec [Average]
[info]   (min, avg, max) = (1662.326, 1701.851, 1734.664), stdev = 33.196
[info]   CI (99.9%): [1574.023, 1829.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3824.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3824.001, 3824.001, 3824.001), stdev = 0.001
[info]   CI (99.9%): [3824.001, 3824.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1686.856 ±(99.9%) 928.402 MB/sec [Average]
[info]   (min, avg, max) = (1344.900, 1686.856, 2026.270), stdev = 241.103
[info]   CI (99.9%): [758.455, 2615.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3786.772 ±(99.9%) 1951.939 B/op [Average]
[info]   (min, avg, max) = (3079.550, 3786.772, 4508.571), stdev = 506.912
[info]   CI (99.9%): [1834.832, 5738.711] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.122 ±(99.9%) 0.277 B/op [Average]
[info]   (min, avg, max) = (0.046, 0.122, 0.191), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.399] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.236
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1498155.049 ops/s
[info] # Warmup Iteration   2: 2587382.745 ops/s
[info] # Warmup Iteration   3: 2560373.692 ops/s
[info] # Warmup Iteration   4: 2568439.215 ops/s
[info] # Warmup Iteration   5: 2553389.423 ops/s
[info] Iteration   1: 2580477.184 ops/s
[info]                  ·gc.alloc.rate:                   1495.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     816.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2552417.781 ops/s
[info]                  ·gc.alloc.rate:               1479.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 829.757 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     16.000 ms
[info] Iteration   3: 2586253.337 ops/s
[info]                  ·gc.alloc.rate:                   1499.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.243 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 2594906.441 ops/s
[info]                  ·gc.alloc.rate:                   1504.274 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     821.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2574026.621 ops/s
[info]                  ·gc.alloc.rate:                   1492.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1037.027 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2577616.273 ±(99.9%) 61778.035 ops/s [Average]
[info]   (min, avg, max) = (2552417.781, 2577616.273, 2594906.441), stdev = 16043.560
[info]   CI (99.9%): [2515838.238, 2639394.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1494.241 ±(99.9%) 35.815 MB/sec [Average]
[info]   (min, avg, max) = (1479.649, 1494.241, 1504.274), stdev = 9.301
[info]   CI (99.9%): [1458.426, 1530.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.261 ±(99.9%) 729.561 MB/sec [Average]
[info]   (min, avg, max) = (1339.822, 1485.261, 1696.686), stdev = 189.465
[info]   CI (99.9%): [755.700, 2214.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   906.459 ±(99.9%) 442.327 B/op [Average]
[info]   (min, avg, max) = (816.855, 906.459, 1037.027), stdev = 114.871
[info]   CI (99.9%): [464.132, 1348.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.038), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.400, 16.000), stdev = 3.847
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5148015.848 ops/s
[info] # Warmup Iteration   2: 5998000.500 ops/s
[info] # Warmup Iteration   3: 6104153.997 ops/s
[info] # Warmup Iteration   4: 6057712.476 ops/s
[info] # Warmup Iteration   5: 6037101.443 ops/s
[info] Iteration   1: 6100618.361 ops/s
[info]                  ·gc.alloc.rate:                   1209.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6093427.782 ops/s
[info]                  ·gc.alloc.rate:                   1208.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 6053560.844 ops/s
[info]                  ·gc.alloc.rate:                   1200.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.777 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 6051630.466 ops/s
[info]                  ·gc.alloc.rate:                   1200.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     262.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 6075570.913 ops/s
[info]                  ·gc.alloc.rate:                   1204.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              312.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.818 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     349.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   6074961.673 ±(99.9%) 86145.513 ops/s [Average]
[info]   (min, avg, max) = (6051630.466, 6074961.673, 6100618.361), stdev = 22371.716
[info]   CI (99.9%): [5988816.160, 6161107.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1204.744 ±(99.9%) 17.112 MB/sec [Average]
[info]   (min, avg, max) = (1200.109, 1204.744, 1209.855), stdev = 4.444
[info]   CI (99.9%): [1187.632, 1221.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   312.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (312.000, 312.000, 312.000), stdev = 0.001
[info]   CI (99.9%): [312.000, 312.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.120 ±(99.9%) 715.433 MB/sec [Average]
[info]   (min, avg, max) = (993.316, 1204.120, 1348.818), stdev = 185.796
[info]   CI (99.9%): [488.687, 1919.553] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   311.853 ±(99.9%) 185.633 B/op [Average]
[info]   (min, avg, max) = (256.159, 311.853, 349.270), stdev = 48.208
[info]   CI (99.9%): [126.220, 497.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.015, 0.022), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 10.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 185627.296 ops/s
[info] # Warmup Iteration   2: 336516.879 ops/s
[info] # Warmup Iteration   3: 343217.067 ops/s
[info] # Warmup Iteration   4: 342954.457 ops/s
[info] # Warmup Iteration   5: 342977.481 ops/s
[info] Iteration   1: 342846.355 ops/s
[info]                  ·gc.alloc.rate:                   1223.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6060.974 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 344785.392 ops/s
[info]                  ·gc.alloc.rate:                   1230.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4550.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.665 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 346778.529 ops/s
[info]                  ·gc.alloc.rate:                   1237.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6062.007 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 342038.476 ops/s
[info]                  ·gc.alloc.rate:                   1220.950 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6174.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 345491.544 ops/s
[info]                  ·gc.alloc.rate:               1233.285 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.269 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4600.455 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay":
[info]   344388.059 ±(99.9%) 7453.581 ops/s [Average]
[info]   (min, avg, max) = (342038.476, 344388.059, 346778.529), stdev = 1935.671
[info]   CI (99.9%): [336934.478, 351841.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1229.353 ±(99.9%) 26.603 MB/sec [Average]
[info]   (min, avg, max) = (1220.950, 1229.353, 1237.866), stdev = 6.909
[info]   CI (99.9%): [1202.749, 1255.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1201.409 ±(99.9%) 695.495 MB/sec [Average]
[info]   (min, avg, max) = (997.337, 1201.409, 1342.444), stdev = 180.618
[info]   CI (99.9%): [505.914, 1896.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5489.794 ±(99.9%) 3219.255 B/op [Average]
[info]   (min, avg, max) = (4550.697, 5489.794, 6174.838), stdev = 836.030
[info]   CI (99.9%): [2270.539, 8709.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.217 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.247 ±(99.9%) 0.988 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.247, 0.665), stdev = 0.257
[info]   CI (99.9%): [≈ 0, 1.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 11.000), stdev = 3.162
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1731727.038 ops/s
[info] # Warmup Iteration   2: 2644380.394 ops/s
[info] # Warmup Iteration   3: 2638883.758 ops/s
[info] # Warmup Iteration   4: 2652889.468 ops/s
[info] # Warmup Iteration   5: 2661467.437 ops/s
[info] Iteration   1: 2646432.220 ops/s
[info]                  ·gc.alloc.rate:               1130.384 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      994.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 591.283 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 2642936.868 ops/s
[info]                  ·gc.alloc.rate:                   1128.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.883 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 2673069.540 ops/s
[info]                  ·gc.alloc.rate:                   1141.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     591.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2673439.862 ops/s
[info]                  ·gc.alloc.rate:                   1141.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     792.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2643944.613 ops/s
[info]                  ·gc.alloc.rate:               1129.380 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.343 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 602.361 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2655964.620 ±(99.9%) 60976.254 ops/s [Average]
[info]   (min, avg, max) = (2642936.868, 2655964.620, 2673439.862), stdev = 15835.339
[info]   CI (99.9%): [2594988.367, 2716940.874] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1134.482 ±(99.9%) 26.008 MB/sec [Average]
[info]   (min, avg, max) = (1128.929, 1134.482, 1141.974), stdev = 6.754
[info]   CI (99.9%): [1108.474, 1160.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.533 ±(99.9%) 708.992 MB/sec [Average]
[info]   (min, avg, max) = (994.609, 1138.533, 1346.225), stdev = 184.123
[info]   CI (99.9%): [429.541, 1847.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   674.342 ±(99.9%) 417.789 B/op [Average]
[info]   (min, avg, max) = (591.283, 674.342, 794.000), stdev = 108.498
[info]   CI (99.9%): [256.554, 1092.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.050), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.000, 14.000), stdev = 4.183
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5086038.754 ops/s
[info] # Warmup Iteration   2: 3989145.180 ops/s
[info] # Warmup Iteration   3: 4025000.898 ops/s
[info] # Warmup Iteration   4: 4017467.391 ops/s
[info] # Warmup Iteration   5: 3952565.392 ops/s
[info] Iteration   1: 4030847.240 ops/s
[info]                  ·gc.alloc.rate:               737.903 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 255.427 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 4022431.586 ops/s
[info]                  ·gc.alloc.rate:                   736.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.467 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256.744 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4000957.132 ops/s
[info]                  ·gc.alloc.rate:                   732.453 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.364 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     389.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 3979826.482 ops/s
[info]                  ·gc.alloc.rate:                   728.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     261.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4006220.747 ops/s
[info]                  ·gc.alloc.rate:                   733.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.439 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.923 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   4008056.637 ±(99.9%) 76451.668 ops/s [Average]
[info]   (min, avg, max) = (3979826.482, 4008056.637, 4030847.240), stdev = 19854.255
[info]   CI (99.9%): [3931604.969, 4084508.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   733.743 ±(99.9%) 13.979 MB/sec [Average]
[info]   (min, avg, max) = (728.581, 733.743, 737.903), stdev = 3.630
[info]   CI (99.9%): [719.764, 747.722] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   725.434 ±(99.9%) 568.350 MB/sec [Average]
[info]   (min, avg, max) = (654.446, 725.434, 989.364), stdev = 147.599
[info]   CI (99.9%): [157.084, 1293.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   284.794 ±(99.9%) 224.591 B/op [Average]
[info]   (min, avg, max) = (255.427, 284.794, 389.017), stdev = 58.326
[info]   CI (99.9%): [60.204, 509.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.033), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 2.588
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 264915.633 ops/s
[info] # Warmup Iteration   2: 436201.009 ops/s
[info] # Warmup Iteration   3: 439910.256 ops/s
[info] # Warmup Iteration   4: 435654.587 ops/s
[info] # Warmup Iteration   5: 442476.879 ops/s
[info] Iteration   1: 438470.890 ops/s
[info]                  ·gc.alloc.rate:                   1306.492 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.445 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4748.832 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Iteration   2: 440363.875 ops/s
[info]                  ·gc.alloc.rate:                   1312.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4761.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.298 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 444794.239 ops/s
[info]                  ·gc.alloc.rate:                   1325.346 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4739.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 442619.447 ops/s
[info]                  ·gc.alloc.rate:                   1318.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4784.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 444585.416 ops/s
[info]                  ·gc.alloc.rate:                   1324.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              4688.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.136 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4777.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.368 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   442166.773 ±(99.9%) 10522.253 ops/s [Average]
[info]   (min, avg, max) = (438470.890, 442166.773, 444794.239), stdev = 2732.596
[info]   CI (99.9%): [431644.521, 452689.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1317.534 ±(99.9%) 31.367 MB/sec [Average]
[info]   (min, avg, max) = (1306.492, 1317.534, 1325.346), stdev = 8.146
[info]   CI (99.9%): [1286.166, 1348.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4688.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4688.001, 4688.001, 4688.001), stdev = 0.001
[info]   CI (99.9%): [4688.001, 4688.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.460 ±(99.9%) 41.044 MB/sec [Average]
[info]   (min, avg, max) = (1323.445, 1338.460, 1350.136), stdev = 10.659
[info]   CI (99.9%): [1297.417, 1379.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4762.444 ±(99.9%) 73.809 B/op [Average]
[info]   (min, avg, max) = (4739.072, 4762.444, 4784.806), stdev = 19.168
[info]   CI (99.9%): [4688.634, 4836.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.252 ±(99.9%) 0.379 B/op [Average]
[info]   (min, avg, max) = (0.148, 0.252, 0.368), stdev = 0.098
[info]   CI (99.9%): [≈ 0, 0.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 20.000), stdev = 6.058
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 233360.346 ops/s
[info] # Warmup Iteration   2: 986556.249 ops/s
[info] # Warmup Iteration   3: 991664.784 ops/s
[info] # Warmup Iteration   4: 997095.147 ops/s
[info] # Warmup Iteration   5: 992992.716 ops/s
[info] Iteration   1: 992927.018 ops/s
[info]                  ·gc.alloc.rate:                   1267.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2111.791 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 995985.378 ops/s
[info]                  ·gc.alloc.rate:                   1271.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.887 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 993177.780 ops/s
[info]                  ·gc.alloc.rate:                   1267.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1598.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 985176.345 ops/s
[info]                  ·gc.alloc.rate:                   1257.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2154.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 985853.142 ops/s
[info]                  ·gc.alloc.rate:                   1258.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              2008.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2158.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   990623.933 ±(99.9%) 18567.941 ops/s [Average]
[info]   (min, avg, max) = (985176.345, 990623.933, 995985.378), stdev = 4822.035
[info]   CI (99.9%): [972055.992, 1009191.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1264.369 ±(99.9%) 23.741 MB/sec [Average]
[info]   (min, avg, max) = (1257.413, 1264.369, 1271.240), stdev = 6.165
[info]   CI (99.9%): [1240.628, 1288.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   2008.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2008.000, 2008.000, 2008.000), stdev = 0.001
[info]   CI (99.9%): [2008.000, 2008.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1276.850 ±(99.9%) 576.759 MB/sec [Average]
[info]   (min, avg, max) = (1009.275, 1276.850, 1352.823), stdev = 149.783
[info]   CI (99.9%): [700.091, 1853.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2028.172 ±(99.9%) 927.940 B/op [Average]
[info]   (min, avg, max) = (1598.779, 2028.172, 2158.901), stdev = 240.983
[info]   CI (99.9%): [1100.233, 2956.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.073 ±(99.9%) 0.106 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.073, 0.099), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   45.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.000, 12.000), stdev = 2.000
[info]   CI (99.9%): [45.000, 45.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3183727.546 ops/s
[info] # Warmup Iteration   2: 3532389.646 ops/s
[info] # Warmup Iteration   3: 3567258.081 ops/s
[info] # Warmup Iteration   4: 3568377.937 ops/s
[info] # Warmup Iteration   5: 3566711.587 ops/s
[info] Iteration   1: 3553304.423 ops/s
[info]                  ·gc.alloc.rate:                   415.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     287.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3565751.055 ops/s
[info]                  ·gc.alloc.rate:               417.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 143.487 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3575549.391 ops/s
[info]                  ·gc.alloc.rate:                   418.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.389 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3574453.379 ops/s
[info]                  ·gc.alloc.rate:                   418.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3548073.002 ops/s
[info]                  ·gc.alloc.rate:               414.966 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 289.590 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3563426.250 ±(99.9%) 47635.533 ops/s [Average]
[info]   (min, avg, max) = (3548073.002, 3563426.250, 3575549.391), stdev = 12370.797
[info]   CI (99.9%): [3515790.717, 3611061.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   416.755 ±(99.9%) 5.574 MB/sec [Average]
[info]   (min, avg, max) = (414.966, 416.755, 418.170), stdev = 1.447
[info]   CI (99.9%): [411.182, 422.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.089 ±(99.9%) 687.767 MB/sec [Average]
[info]   (min, avg, max) = (325.213, 456.089, 653.097), stdev = 178.611
[info]   CI (99.9%): [≈ 0, 1143.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   201.575 ±(99.9%) 306.563 B/op [Average]
[info]   (min, avg, max) = (143.389, 201.575, 289.590), stdev = 79.613
[info]   CI (99.9%): [≈ 0, 508.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.009 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.009, 0.028), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 8.000), stdev = 3.578
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109294.683 ops/s
[info] # Warmup Iteration   2: 244504.162 ops/s
[info] # Warmup Iteration   3: 244545.165 ops/s
[info] # Warmup Iteration   4: 245662.586 ops/s
[info] # Warmup Iteration   5: 248129.408 ops/s
[info] Iteration   1: 250569.314 ops/s
[info]                  ·gc.alloc.rate:                   982.352 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6169.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 246935.188 ops/s
[info]                  ·gc.alloc.rate:                   968.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6290.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.531 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 249903.402 ops/s
[info]                  ·gc.alloc.rate:                   979.790 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6257.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 247449.994 ops/s
[info]                  ·gc.alloc.rate:               970.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6344.901 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 247963.366 ops/s
[info]                  ·gc.alloc.rate:               972.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6365.474 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   248564.253 ±(99.9%) 6109.700 ops/s [Average]
[info]   (min, avg, max) = (246935.188, 248564.253, 250569.314), stdev = 1586.670
[info]   CI (99.9%): [242454.552, 254673.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   974.510 ±(99.9%) 23.958 MB/sec [Average]
[info]   (min, avg, max) = (968.135, 974.510, 982.352), stdev = 6.222
[info]   CI (99.9%): [950.551, 998.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.023 ±(99.9%) 31.707 MB/sec [Average]
[info]   (min, avg, max) = (982.621, 993.023, 1003.280), stdev = 8.234
[info]   CI (99.9%): [961.317, 1024.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6285.495 ±(99.9%) 299.219 B/op [Average]
[info]   (min, avg, max) = (6169.694, 6285.495, 6365.474), stdev = 77.706
[info]   CI (99.9%): [5986.275, 6584.714] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.237 ±(99.9%) 0.910 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.237, 0.531), stdev = 0.236
[info]   CI (99.9%): [≈ 0, 1.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.400, 8.000), stdev = 2.510
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 417321.289 ops/s
[info] # Warmup Iteration   2: 588401.814 ops/s
[info] # Warmup Iteration   3: 589578.233 ops/s
[info] # Warmup Iteration   4: 593462.825 ops/s
[info] # Warmup Iteration   5: 598034.946 ops/s
[info] Iteration   1: 598094.785 ops/s
[info]                  ·gc.alloc.rate:                   1532.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3509.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 592392.690 ops/s
[info]                  ·gc.alloc.rate:                   1518.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4456.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 586207.822 ops/s
[info]                  ·gc.alloc.rate:               1502.346 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1348.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3619.955 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   4: 590280.869 ops/s
[info]                  ·gc.alloc.rate:                   1512.800 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4507.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 590074.791 ops/s
[info]                  ·gc.alloc.rate:                   1512.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3615.736 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   591410.192 ±(99.9%) 16759.417 ops/s [Average]
[info]   (min, avg, max) = (586207.822, 591410.192, 598094.785), stdev = 4352.368
[info]   CI (99.9%): [574650.774, 608169.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1515.700 ±(99.9%) 43.034 MB/sec [Average]
[info]   (min, avg, max) = (1502.346, 1515.700, 1532.866), stdev = 11.176
[info]   CI (99.9%): [1472.665, 1558.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1481.704 ±(99.9%) 714.392 MB/sec [Average]
[info]   (min, avg, max) = (1334.197, 1481.704, 1691.341), stdev = 185.525
[info]   CI (99.9%): [767.313, 2196.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3941.877 ±(99.9%) 1908.001 B/op [Average]
[info]   (min, avg, max) = (3509.429, 3941.877, 4507.858), stdev = 495.502
[info]   CI (99.9%): [2033.876, 5849.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.233 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.166), stdev = 0.061
[info]   CI (99.9%): [≈ 0, 0.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.600, 13.000), stdev = 4.827
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1019721.173 ops/s
[info] # Warmup Iteration   2: 1537373.097 ops/s
[info] # Warmup Iteration   3: 1544874.760 ops/s
[info] # Warmup Iteration   4: 1548421.339 ops/s
[info] # Warmup Iteration   5: 1546576.725 ops/s
[info] Iteration   1: 1556359.319 ops/s
[info]                  ·gc.alloc.rate:               838.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 658.834 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1549833.527 ops/s
[info]                  ·gc.alloc.rate:                   835.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     999.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1527682.149 ops/s
[info]                  ·gc.alloc.rate:               823.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 679.784 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1544937.704 ops/s
[info]                  ·gc.alloc.rate:                   832.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.264 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1013.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1551539.168 ops/s
[info]                  ·gc.alloc.rate:               836.283 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 675.064 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1546070.374 ±(99.9%) 42590.157 ops/s [Average]
[info]   (min, avg, max) = (1527682.149, 1546070.374, 1556359.319), stdev = 11060.529
[info]   CI (99.9%): [1503480.216, 1588660.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   833.335 ±(99.9%) 22.974 MB/sec [Average]
[info]   (min, avg, max) = (823.417, 833.335, 838.885), stdev = 5.966
[info]   CI (99.9%): [810.361, 856.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   791.423 ±(99.9%) 697.654 MB/sec [Average]
[info]   (min, avg, max) = (651.753, 791.423, 995.264), stdev = 181.179
[info]   CI (99.9%): [93.769, 1489.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   805.275 ±(99.9%) 707.699 B/op [Average]
[info]   (min, avg, max) = (658.834, 805.275, 1013.530), stdev = 183.787
[info]   CI (99.9%): [97.577, 1512.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.106 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.063), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.000, 9.000), stdev = 3.082
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4528064.485 ops/s
[info] # Warmup Iteration   2: 4746384.477 ops/s
[info] # Warmup Iteration   3: 4817478.244 ops/s
[info] # Warmup Iteration   4: 4901102.572 ops/s
[info] # Warmup Iteration   5: 4928876.424 ops/s
[info] Iteration   1: 4884425.275 ops/s
[info]                  ·gc.alloc.rate:                   819.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     316.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4829408.772 ops/s
[info]                  ·gc.alloc.rate:                   810.397 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4862385.630 ops/s
[info]                  ·gc.alloc.rate:                   815.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.966 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 4874759.042 ops/s
[info]                  ·gc.alloc.rate:               818.009 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.731 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 214.209 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 4813989.798 ops/s
[info]                  ·gc.alloc.rate:                   807.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     326.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4852993.703 ±(99.9%) 115958.669 ops/s [Average]
[info]   (min, avg, max) = (4813989.798, 4852993.703, 4884425.275), stdev = 30114.098
[info]   CI (99.9%): [4737035.035, 4968952.372] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   814.344 ±(99.9%) 19.482 MB/sec [Average]
[info]   (min, avg, max) = (807.785, 814.344, 819.631), stdev = 5.059
[info]   CI (99.9%): [794.862, 833.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.059 ±(99.9%) 697.551 MB/sec [Average]
[info]   (min, avg, max) = (657.740, 859.059, 999.240), stdev = 181.152
[info]   CI (99.9%): [161.508, 1556.610] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   278.504 ±(99.9%) 226.316 B/op [Average]
[info]   (min, avg, max) = (214.209, 278.504, 326.571), stdev = 58.773
[info]   CI (99.9%): [52.188, 504.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.034), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 9.000), stdev = 3.564
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 164286.855 ops/s
[info] # Warmup Iteration   2: 369326.625 ops/s
[info] # Warmup Iteration   3: 376910.893 ops/s
[info] # Warmup Iteration   4: 377008.840 ops/s
[info] # Warmup Iteration   5: 373409.979 ops/s
[info] Iteration   1: 380467.851 ops/s
[info]                  ·gc.alloc.rate:                   1309.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5472.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 378922.387 ops/s
[info]                  ·gc.alloc.rate:                   1304.510 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.646 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4146.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 380442.892 ops/s
[info]                  ·gc.alloc.rate:                   1309.718 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5533.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 381149.459 ops/s
[info]                  ·gc.alloc.rate:                   1312.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5551.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 376871.045 ops/s
[info]                  ·gc.alloc.rate:                   1297.441 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5633.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   379570.727 ±(99.9%) 6604.310 ops/s [Average]
[info]   (min, avg, max) = (376871.045, 379570.727, 381149.459), stdev = 1715.118
[info]   CI (99.9%): [372966.417, 386175.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1306.716 ±(99.9%) 22.664 MB/sec [Average]
[info]   (min, avg, max) = (1297.441, 1306.716, 1312.124), stdev = 5.886
[info]   CI (99.9%): [1284.051, 1329.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1270.940 ±(99.9%) 587.352 MB/sec [Average]
[info]   (min, avg, max) = (998.646, 1270.940, 1349.526), stdev = 152.533
[info]   CI (99.9%): [683.588, 1858.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5267.406 ±(99.9%) 2423.733 B/op [Average]
[info]   (min, avg, max) = (4146.128, 5267.406, 5633.422), stdev = 629.436
[info]   CI (99.9%): [2843.673, 7691.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.046, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.010, 0.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (0.172, 0.190, 0.261), stdev = 0.040
[info]   CI (99.9%): [0.038, 0.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 9.000), stdev = 2.550
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138807.869 ops/s
[info] # Warmup Iteration   2: 347531.926 ops/s
[info] # Warmup Iteration   3: 348160.607 ops/s
[info] # Warmup Iteration   4: 345208.951 ops/s
[info] # Warmup Iteration   5: 345330.166 ops/s
[info] Iteration   1: 348488.329 ops/s
[info]                  ·gc.alloc.rate:                   1036.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4502.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 344262.232 ops/s
[info]                  ·gc.alloc.rate:                   1024.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4575.710 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 348909.903 ops/s
[info]                  ·gc.alloc.rate:                   1037.861 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.253 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4532.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 347925.431 ops/s
[info]                  ·gc.alloc.rate:                   1034.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4557.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 347236.750 ops/s
[info]                  ·gc.alloc.rate:               1032.917 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4581.974 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   347364.529 ±(99.9%) 7101.879 ops/s [Average]
[info]   (min, avg, max) = (344262.232, 347364.529, 348909.903), stdev = 1844.335
[info]   CI (99.9%): [340262.650, 354466.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1033.302 ±(99.9%) 21.060 MB/sec [Average]
[info]   (min, avg, max) = (1024.100, 1033.302, 1037.861), stdev = 5.469
[info]   CI (99.9%): [1012.243, 1054.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1004.610 ±(99.9%) 21.157 MB/sec [Average]
[info]   (min, avg, max) = (997.290, 1004.610, 1011.281), stdev = 5.494
[info]   CI (99.9%): [983.454, 1025.767] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4550.142 ±(99.9%) 126.351 B/op [Average]
[info]   (min, avg, max) = (4502.321, 4550.142, 4581.974), stdev = 32.813
[info]   CI (99.9%): [4423.791, 4676.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.188 ±(99.9%) 0.443 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.188, 0.282), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 6.000), stdev = 1.517
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113125.664 ops/s
[info] # Warmup Iteration   2: 1030970.704 ops/s
[info] # Warmup Iteration   3: 1023807.676 ops/s
[info] # Warmup Iteration   4: 1029474.388 ops/s
[info] # Warmup Iteration   5: 1016177.556 ops/s
[info] Iteration   1: 1023623.557 ops/s
[info]                  ·gc.alloc.rate:                   1015.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1526.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1028529.913 ops/s
[info]                  ·gc.alloc.rate:                   1019.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.689 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1529.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1026705.537 ops/s
[info]                  ·gc.alloc.rate:                   1018.098 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1537.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1030351.441 ops/s
[info]                  ·gc.alloc.rate:                   1021.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1538.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1026314.538 ops/s
[info]                  ·gc.alloc.rate:                   1017.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.000 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1548.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1027104.997 ±(99.9%) 9717.558 ops/s [Average]
[info]   (min, avg, max) = (1023623.557, 1027104.997, 1030351.441), stdev = 2523.619
[info]   CI (99.9%): [1017387.439, 1036822.555] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1018.489 ±(99.9%) 9.669 MB/sec [Average]
[info]   (min, avg, max) = (1015.020, 1018.489, 1021.711), stdev = 2.511
[info]   CI (99.9%): [1008.819, 1028.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1002.805 ±(99.9%) 25.295 MB/sec [Average]
[info]   (min, avg, max) = (993.325, 1002.805, 1010.000), stdev = 6.569
[info]   CI (99.9%): [977.510, 1028.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1535.974 ±(99.9%) 32.901 B/op [Average]
[info]   (min, avg, max) = (1526.657, 1535.974, 1548.198), stdev = 8.544
[info]   CI (99.9%): [1503.073, 1568.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (0.064, 0.077, 0.096), stdev = 0.018
[info]   CI (99.9%): [0.009, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 8.000), stdev = 1.949
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3545480.396 ops/s
[info] # Warmup Iteration   2: 3767417.622 ops/s
[info] # Warmup Iteration   3: 3907554.423 ops/s
[info] # Warmup Iteration   4: 3897900.707 ops/s
[info] # Warmup Iteration   5: 3982034.377 ops/s
[info] Iteration   1: 3973410.246 ops/s
[info]                  ·gc.alloc.rate:               585.926 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 129.161 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   2: 3979894.906 ops/s
[info]                  ·gc.alloc.rate:                   586.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     258.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3947554.705 ops/s
[info]                  ·gc.alloc.rate:                   582.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.791 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     260.941 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3959359.037 ops/s
[info]                  ·gc.alloc.rate:               583.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 260.957 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 3876818.949 ops/s
[info]                  ·gc.alloc.rate:               571.690 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 267.460 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3947407.568 ±(99.9%) 159432.224 ops/s [Average]
[info]   (min, avg, max) = (3876818.949, 3947407.568, 3979894.906), stdev = 41404.042
[info]   CI (99.9%): [3787975.345, 4106839.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   582.107 ±(99.9%) 23.502 MB/sec [Average]
[info]   (min, avg, max) = (571.690, 582.107, 586.881), stdev = 6.103
[info]   CI (99.9%): [558.605, 605.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.974 ±(99.9%) 567.855 MB/sec [Average]
[info]   (min, avg, max) = (326.202, 589.974, 659.069), stdev = 147.470
[info]   CI (99.9%): [22.120, 1157.829] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   235.336 ±(99.9%) 228.928 B/op [Average]
[info]   (min, avg, max) = (129.161, 235.336, 267.460), stdev = 59.452
[info]   CI (99.9%): [6.408, 464.264] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.033), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 9.000), stdev = 3.464
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127722.115 ops/s
[info] # Warmup Iteration   2: 254553.555 ops/s
[info] # Warmup Iteration   3: 258189.897 ops/s
[info] # Warmup Iteration   4: 262448.817 ops/s
[info] # Warmup Iteration   5: 262261.984 ops/s
[info] Iteration   1: 262339.720 ops/s
[info]                  ·gc.alloc.rate:                   953.806 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5896.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 264141.616 ops/s
[info]                  ·gc.alloc.rate:                   960.363 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5880.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 264568.365 ops/s
[info]                  ·gc.alloc.rate:                   961.899 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5910.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.248 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 262262.397 ops/s
[info]                  ·gc.alloc.rate:                   953.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5986.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 263542.326 ops/s
[info]                  ·gc.alloc.rate:                   958.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5989.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   263370.885 ±(99.9%) 4015.312 ops/s [Average]
[info]   (min, avg, max) = (262262.397, 263370.885, 264568.365), stdev = 1042.764
[info]   CI (99.9%): [259355.573, 267386.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   957.555 ±(99.9%) 14.588 MB/sec [Average]
[info]   (min, avg, max) = (953.529, 957.555, 961.899), stdev = 3.788
[info]   CI (99.9%): [942.967, 972.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5720.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5720.002, 5720.002, 5720.002), stdev = 0.001
[info]   CI (99.9%): [5720.001, 5720.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.152 ±(99.9%) 30.900 MB/sec [Average]
[info]   (min, avg, max) = (983.288, 993.152, 1003.285), stdev = 8.025
[info]   CI (99.9%): [962.253, 1024.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5932.704 ±(99.9%) 198.155 B/op [Average]
[info]   (min, avg, max) = (5880.552, 5932.704, 5989.283), stdev = 51.460
[info]   CI (99.9%): [5734.550, 6130.859] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.298 ±(99.9%) 0.426 B/op [Average]
[info]   (min, avg, max) = (0.248, 0.298, 0.496), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.600, 7.000), stdev = 2.074
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 161109.640 ops/s
[info] # Warmup Iteration   2: 318724.841 ops/s
[info] # Warmup Iteration   3: 326133.864 ops/s
[info] # Warmup Iteration   4: 327155.508 ops/s
[info] # Warmup Iteration   5: 320792.634 ops/s
[info] Iteration   1: 323151.355 ops/s
[info]                  ·gc.alloc.rate:                   954.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          977.679 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.633 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 326480.787 ops/s
[info]                  ·gc.alloc.rate:                   964.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4751.234 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 325087.969 ops/s
[info]                  ·gc.alloc.rate:               960.436 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4797.392 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 329456.278 ops/s
[info]                  ·gc.alloc.rate:                   973.334 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.930 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4765.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 325546.748 ops/s
[info]                  ·gc.alloc.rate:                   961.811 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4845.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   325944.627 ±(99.9%) 8888.588 ops/s [Average]
[info]   (min, avg, max) = (323151.355, 325944.627, 329456.278), stdev = 2308.338
[info]   CI (99.9%): [317056.040, 334833.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   962.983 ±(99.9%) 26.213 MB/sec [Average]
[info]   (min, avg, max) = (954.749, 962.983, 973.334), stdev = 6.807
[info]   CI (99.9%): [936.770, 989.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   991.110 ±(99.9%) 37.808 MB/sec [Average]
[info]   (min, avg, max) = (977.679, 991.110, 1002.627), stdev = 9.819
[info]   CI (99.9%): [953.302, 1028.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4783.792 ±(99.9%) 148.402 B/op [Average]
[info]   (min, avg, max) = (4751.234, 4783.792, 4845.245), stdev = 38.539
[info]   CI (99.9%): [4635.391, 4932.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.181 ±(99.9%) 0.426 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.181, 0.304), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 7.000), stdev = 1.140
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90387.905 ops/s
[info] # Warmup Iteration   2: 1012008.773 ops/s
[info] # Warmup Iteration   3: 1035756.062 ops/s
[info] # Warmup Iteration   4: 1028450.757 ops/s
[info] # Warmup Iteration   5: 1033362.289 ops/s
[info] Iteration   1: 1029016.438 ops/s
[info]                  ·gc.alloc.rate:                   1020.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.571 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2023.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1023215.403 ops/s
[info]                  ·gc.alloc.rate:               1014.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1536.968 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   3: 1020530.809 ops/s
[info]                  ·gc.alloc.rate:                   1011.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1547.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1045046.974 ops/s
[info]                  ·gc.alloc.rate:                   1036.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1516.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1043586.955 ops/s
[info]                  ·gc.alloc.rate:                   1034.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1522.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   1032279.316 ±(99.9%) 43975.977 ops/s [Average]
[info]   (min, avg, max) = (1020530.809, 1032279.316, 1045046.974), stdev = 11420.421
[info]   CI (99.9%): [988303.339, 1076255.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1023.597 ±(99.9%) 43.618 MB/sec [Average]
[info]   (min, avg, max) = (1011.915, 1023.597, 1036.253), stdev = 11.327
[info]   CI (99.9%): [979.979, 1067.215] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1068.803 ±(99.9%) 548.612 MB/sec [Average]
[info]   (min, avg, max) = (999.622, 1068.803, 1323.571), stdev = 142.473
[info]   CI (99.9%): [520.190, 1617.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1629.304 ±(99.9%) 849.730 B/op [Average]
[info]   (min, avg, max) = (1516.387, 1629.304, 2023.464), stdev = 220.672
[info]   CI (99.9%): [779.574, 2479.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.239 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.051, 0.159), stdev = 0.062
[info]   CI (99.9%): [≈ 0, 0.290] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 9.000), stdev = 2.408
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2757039.991 ops/s
[info] # Warmup Iteration   2: 2963048.443 ops/s
[info] # Warmup Iteration   3: 3057096.661 ops/s
[info] # Warmup Iteration   4: 3107982.457 ops/s
[info] # Warmup Iteration   5: 3084586.260 ops/s
[info] Iteration   1: 3071414.508 ops/s
[info]                  ·gc.alloc.rate:                   515.396 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     166.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 3027041.551 ops/s
[info]                  ·gc.alloc.rate:                   507.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.732 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3067345.608 ops/s
[info]                  ·gc.alloc.rate:               514.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 167.655 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 3068322.696 ops/s
[info]                  ·gc.alloc.rate:                   514.877 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.401 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     335.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3069365.349 ops/s
[info]                  ·gc.alloc.rate:                   515.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   3060697.942 ±(99.9%) 72680.579 ops/s [Average]
[info]   (min, avg, max) = (3027041.551, 3060697.942, 3071414.508), stdev = 18874.916
[info]   CI (99.9%): [2988017.363, 3133378.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   513.595 ±(99.9%) 12.176 MB/sec [Average]
[info]   (min, avg, max) = (507.957, 513.595, 515.396), stdev = 3.162
[info]   CI (99.9%): [501.420, 525.771] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.059 ±(99.9%) 691.420 MB/sec [Average]
[info]   (min, avg, max) = (325.871, 523.059, 656.407), stdev = 179.560
[info]   CI (99.9%): [≈ 0, 1214.479] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   269.062 ±(99.9%) 357.782 B/op [Average]
[info]   (min, avg, max) = (166.920, 269.062, 338.732), stdev = 92.915
[info]   CI (99.9%): [≈ 0, 626.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.032), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.000, 10.000), stdev = 4.528
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100771.846 ops/s
[info] # Warmup Iteration   2: 251678.259 ops/s
[info] # Warmup Iteration   3: 252080.466 ops/s
[info] # Warmup Iteration   4: 253557.451 ops/s
[info] # Warmup Iteration   5: 255392.833 ops/s
[info] Iteration   1: 251505.155 ops/s
[info]                  ·gc.alloc.rate:                   968.113 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6150.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 254986.333 ops/s
[info]                  ·gc.alloc.rate:                   981.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6091.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.385 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 255266.199 ops/s
[info]                  ·gc.alloc.rate:                   982.614 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6125.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 255862.094 ops/s
[info]                  ·gc.alloc.rate:                   984.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6136.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 252525.545 ops/s
[info]                  ·gc.alloc.rate:                   972.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6250.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   254029.065 ±(99.9%) 7315.603 ops/s [Average]
[info]   (min, avg, max) = (251505.155, 254029.065, 255862.094), stdev = 1899.839
[info]   CI (99.9%): [246713.462, 261344.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   977.851 ±(99.9%) 28.177 MB/sec [Average]
[info]   (min, avg, max) = (968.113, 977.851, 984.903), stdev = 7.318
[info]   CI (99.9%): [949.674, 1006.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.002, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.146 ±(99.9%) 30.943 MB/sec [Average]
[info]   (min, avg, max) = (983.268, 993.146, 1003.292), stdev = 8.036
[info]   CI (99.9%): [962.203, 1024.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6150.934 ±(99.9%) 230.137 B/op [Average]
[info]   (min, avg, max) = (6091.472, 6150.934, 6250.445), stdev = 59.766
[info]   CI (99.9%): [5920.797, 6381.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.258 ±(99.9%) 0.351 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.258, 0.385), stdev = 0.091
[info]   CI (99.9%): [≈ 0, 0.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 14.000), stdev = 5.958
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 362548.678 ops/s
[info] # Warmup Iteration   2: 604795.913 ops/s
[info] # Warmup Iteration   3: 638005.921 ops/s
[info] # Warmup Iteration   4: 631912.480 ops/s
[info] # Warmup Iteration   5: 624911.666 ops/s
[info] Iteration   1: 626459.475 ops/s
[info]                  ·gc.alloc.rate:               1226.440 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3323.755 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 628264.233 ops/s
[info]                  ·gc.alloc.rate:                   1229.984 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2502.359 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 633370.676 ops/s
[info]                  ·gc.alloc.rate:                   1239.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3325.618 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 633897.875 ops/s
[info]                  ·gc.alloc.rate:                   1240.980 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3340.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 633231.753 ops/s
[info]                  ·gc.alloc.rate:                   1239.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3354.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   631044.802 ±(99.9%) 13211.871 ops/s [Average]
[info]   (min, avg, max) = (626459.475, 631044.802, 633897.875), stdev = 3431.081
[info]   CI (99.9%): [617832.932, 644256.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1235.395 ±(99.9%) 25.774 MB/sec [Average]
[info]   (min, avg, max) = (1226.440, 1235.395, 1240.980), stdev = 6.693
[info]   CI (99.9%): [1209.621, 1261.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1271.558 ±(99.9%) 587.349 MB/sec [Average]
[info]   (min, avg, max) = (999.306, 1271.558, 1350.141), stdev = 152.533
[info]   CI (99.9%): [684.209, 1858.906] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3169.402 ±(99.9%) 1436.659 B/op [Average]
[info]   (min, avg, max) = (2502.359, 3169.402, 3354.368), stdev = 373.096
[info]   CI (99.9%): [1732.743, 4606.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.141 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.052, 0.103), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.800, 11.000), stdev = 1.924
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1109340.487 ops/s
[info] # Warmup Iteration   2: 1597312.134 ops/s
[info] # Warmup Iteration   3: 1601608.234 ops/s
[info] # Warmup Iteration   4: 1612039.788 ops/s
[info] # Warmup Iteration   5: 1605397.749 ops/s
[info] Iteration   1: 1616610.196 ops/s
[info]                  ·gc.alloc.rate:                   674.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     637.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1606686.601 ops/s
[info]                  ·gc.alloc.rate:                   669.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     966.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1608027.250 ops/s
[info]                  ·gc.alloc.rate:                   670.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     647.452 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1598729.446 ops/s
[info]                  ·gc.alloc.rate:               666.648 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 653.837 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1602131.363 ops/s
[info]                  ·gc.alloc.rate:                   668.049 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.415 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1606436.971 ±(99.9%) 26118.469 ops/s [Average]
[info]   (min, avg, max) = (1598729.446, 1606436.971, 1616610.196), stdev = 6782.883
[info]   CI (99.9%): [1580318.503, 1632555.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   669.858 ±(99.9%) 10.899 MB/sec [Average]
[info]   (min, avg, max) = (666.648, 669.858, 674.103), stdev = 2.831
[info]   CI (99.9%): [658.959, 680.758] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   726.962 ±(99.9%) 560.761 MB/sec [Average]
[info]   (min, avg, max) = (654.789, 726.962, 987.350), stdev = 145.628
[info]   CI (99.9%): [166.201, 1287.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   711.935 ±(99.9%) 549.193 B/op [Average]
[info]   (min, avg, max) = (637.205, 711.935, 966.767), stdev = 142.624
[info]   CI (99.9%): [162.742, 1261.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.041), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 7.000), stdev = 2.049
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6045321.109 ops/s
[info] # Warmup Iteration   2: 6314891.235 ops/s
[info] # Warmup Iteration   3: 6233750.501 ops/s
[info] # Warmup Iteration   4: 6184690.771 ops/s
[info] # Warmup Iteration   5: 6201260.895 ops/s
[info] Iteration   1: 6196306.553 ops/s
[info]                  ·gc.alloc.rate:                   315.093 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     82.658 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.197 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.558 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6141246.679 ops/s
[info]                  ·gc.alloc.rate:                   312.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.560 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.398 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   3: 6041707.840 ops/s
[info]                  ·gc.alloc.rate:                   307.231 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 6107100.357 ops/s
[info]                  ·gc.alloc.rate:               310.558 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83.950 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 6144167.341 ops/s
[info]                  ·gc.alloc.rate:                   312.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6126105.754 ±(99.9%) 219248.727 ops/s [Average]
[info]   (min, avg, max) = (6041707.840, 6126105.754, 6196306.553), stdev = 56938.198
[info]   CI (99.9%): [5906857.027, 6345354.481] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   311.522 ±(99.9%) 11.148 MB/sec [Average]
[info]   (min, avg, max) = (307.231, 311.522, 315.093), stdev = 2.895
[info]   CI (99.9%): [300.374, 322.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.758 ±(99.9%) 0.698 MB/sec [Average]
[info]   (min, avg, max) = (325.560, 325.758, 325.892), stdev = 0.181
[info]   CI (99.9%): [325.060, 326.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   83.662 ±(99.9%) 3.130 B/op [Average]
[info]   (min, avg, max) = (82.658, 83.662, 84.859), stdev = 0.813
[info]   CI (99.9%): [80.532, 86.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.456 ±(99.9%) 3.748 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.456, 2.197), stdev = 0.973
[info]   CI (99.9%): [≈ 0, 4.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.116 ±(99.9%) 0.952 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.116, 0.558), stdev = 0.247
[info]   CI (99.9%): [≈ 0, 1.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97320.275 ops/s
[info] # Warmup Iteration   2: 199822.013 ops/s
[info] # Warmup Iteration   3: 200257.424 ops/s
[info] # Warmup Iteration   4: 199842.734 ops/s
[info] # Warmup Iteration   5: 200406.855 ops/s
[info] Iteration   1: 198069.097 ops/s
[info]                  ·gc.alloc.rate:                   1057.528 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7836.729 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.496 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 204519.287 ops/s
[info]                  ·gc.alloc.rate:                   1091.974 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7625.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.481 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 204992.093 ops/s
[info]                  ·gc.alloc.rate:                   1094.476 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10213.569 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.479 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 204489.653 ops/s
[info]                  ·gc.alloc.rate:                   1091.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7718.637 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 204963.473 ops/s
[info]                  ·gc.alloc.rate:               1094.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          8400.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7726.629 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   203406.720 ±(99.9%) 11525.856 ops/s [Average]
[info]   (min, avg, max) = (198069.097, 203406.720, 204992.093), stdev = 2993.228
[info]   CI (99.9%): [191880.864, 214932.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1086.029 ±(99.9%) 61.539 MB/sec [Average]
[info]   (min, avg, max) = (1057.528, 1086.029, 1094.476), stdev = 15.981
[info]   CI (99.9%): [1024.490, 1147.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8400.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8400.002, 8400.002, 8400.002), stdev = 0.001
[info]   CI (99.9%): [8400.002, 8400.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1063.709 ±(99.9%) 575.754 MB/sec [Average]
[info]   (min, avg, max) = (986.614, 1063.709, 1330.774), stdev = 149.521
[info]   CI (99.9%): [487.955, 1639.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8224.197 ±(99.9%) 4291.969 B/op [Average]
[info]   (min, avg, max) = (7625.420, 8224.197, 10213.569), stdev = 1114.611
[info]   CI (99.9%): [3932.228, 12516.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.323 ±(99.9%) 0.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.323, 0.496), stdev = 0.229
[info]   CI (99.9%): [≈ 0, 1.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 10.000), stdev = 3.286
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                     Mode  Cnt         Score        Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1162425.979 ±  78623.002   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1820.554 ±    123.182  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2464.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1758.284 ±    588.162  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2382.768 ±    952.059    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.036  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.062 ±      0.049    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        26.000               counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        56.000                   ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1816230.654 ±  45713.570   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1292.966 ±     32.590  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1120.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1280.306 ±    585.976  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1109.407 ±    519.904    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±      0.067  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.033 ±      0.059    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        36.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   7759674.047 ± 215203.022   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       986.449 ±     27.366  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       997.336 ±     27.966  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       202.220 ±      9.914    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.011 ±      0.019    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        15.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        26.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    420679.488 ±  22203.233   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1112.338 ±     58.693  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1065.195 ±    562.646  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3983.728 ±   2089.718    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.203 ±      0.456    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        16.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        32.000                   ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    632761.950 ±  16050.032   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2068.911 ±     52.433  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5144.001 ±      0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2104.652 ±    563.767  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5232.162 ±   1340.003    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.067 ±      0.067  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.166 ±      0.168    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        31.000               counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        47.000                   ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1234535.396 ±  75551.485   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1173.895 ±     71.834  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1496.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1210.338 ±    714.274  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1540.716 ±    851.733    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.046 ±      0.132  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.058 ±      0.166    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        32.000                   ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2688587.334 ±  39644.258   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1230.427 ±     18.220  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1271.731 ±    576.222  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       744.284 ±    341.130    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.075 ±      0.072  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.044 ±      0.042    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        36.000                   ms
[info] CodecBenchmark.readArraysPlay                                                thrpt    5    218428.843 ±   6760.383   ops/s
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1329.505 ±     41.080  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9576.002 ±      0.001    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1338.080 ±     40.443  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9637.805 ±     98.542    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.390 ±      0.878    B/op
[info] CodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        20.000               counts
[info] CodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        32.000                   ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1594954.741 ±  51888.143   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1030.023 ±     33.599  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1016.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1072.123 ±    568.786  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1057.706 ±    566.601    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.179  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.041 ±      0.174    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        16.000               counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        32.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   8517905.939 ± 197548.476   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       909.607 ±     21.075  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       928.880 ±    578.379  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       171.531 ±    106.172    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.011 ±      0.012    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        14.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        38.000                   ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    280189.053 ±   2773.692   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1315.044 ±     13.019  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7384.002 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1270.511 ±    557.416  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7134.241 ±   3139.400    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.234 ±      0.552    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        19.000               counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        40.000                   ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    536160.258 ±  22824.787   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1780.339 ±     75.768  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1761.798 ±    594.586  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5169.525 ±   1721.941    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±      0.057  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.122 ±      0.164    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        26.000               counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        63.000                   ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    674779.529 ±  34280.618   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       844.087 ±     42.880  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1968.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       800.501 ±    704.212  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1867.607 ±   1667.363    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.087 ±      0.240    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        12.000               counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        28.000                   ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   5197477.671 ±  57385.549   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       237.862 ±      2.644  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       232.448 ±    517.852  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        70.378 ±    156.671    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.437 ±      3.766  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.132 ±      1.135    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         4.000               counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5        13.000                   ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    205304.119 ±   2140.384   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1133.791 ±     11.818  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8688.002 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1130.956 ±    680.023  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8665.574 ±   5187.581    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±      0.143  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.352 ±      1.102    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        17.000               counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        23.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   2615622.794 ±  79214.323   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1755.690 ±     53.093  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5      1056.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1757.421 ±    573.313  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5      1057.564 ±    374.824    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.075 ±      0.072  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.045 ±      0.045    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        26.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        39.000                   ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    238867.525 ±  10011.007   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1288.728 ±     53.990  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8488.002 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1270.510 ±    564.870  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8361.096 ±   3452.046    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.050 ±      0.146  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.328 ±      0.953    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        19.000               counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        31.000                   ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    555494.729 ±  20775.587   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1946.194 ±     72.660  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1967.420 ±    588.950  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5572.415 ±   1674.630    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.044  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.142 ±      0.129    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        29.000               counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        38.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    531846.960 ±  17121.604   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       540.894 ±     17.438  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.069 ±    688.554  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1557.776 ±   2056.396    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±      0.223  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.135 ±      0.650    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        19.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3156130.280 ± 116777.046   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       786.399 ±     29.107  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       792.372 ±    701.364  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       394.993 ±    349.667    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.023 ±      0.043    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        12.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        37.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    167777.792 ±   7108.803   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1146.628 ±     48.532  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10752.003 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1132.301 ±    705.748  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10629.948 ±   6979.923    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.470 ±      0.877    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        17.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        40.000                   ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    450044.224 ±  14656.442   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1608.788 ±     52.328  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5624.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1623.368 ±    589.417  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5672.546 ±   1942.196    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.044  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.116 ±      0.153    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000               counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        41.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    858720.053 ±  13784.817   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1013.050 ±     16.272  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1003.881 ±     23.285  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1839.205 ±     33.825    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.227  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.076 ±      0.418    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        35.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   2525585.084 ±  34275.272   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5      1130.144 ±     15.275  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       704.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5      1067.597 ±    577.410  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       665.077 ±    361.255    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.031 ±      0.057    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        16.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        28.000                   ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    255208.348 ±   3944.487   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1327.563 ±     20.539  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8184.002 ±      0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1338.192 ±     41.059  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8249.563 ±    243.091    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.146  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.308 ±      0.895    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        43.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    684768.250 ±   7930.211   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       887.956 ±     10.307  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       932.358 ±    572.969  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2142.157 ±   1320.090    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±      0.307  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.105 ±      0.704    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        14.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        29.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   1960414.293 ±  52580.600   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1724.596 ±     46.172  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1384.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1688.296 ±     35.945  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1354.904 ±     35.352    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±      0.072  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.044 ±      0.059    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        25.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        38.000                   ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    223015.192 ±   4505.556   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1192.991 ±     24.098  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8416.002 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1134.009 ±    705.376  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      7997.224 ±   4888.147    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.108  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.381 ±      0.752    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        38.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5    992907.533 ±  29614.367   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       732.100 ±     21.721  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       730.962 ±    566.109  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1159.673 ±    940.201    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.066 ±      0.159    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        23.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   3254842.802 ± 168803.718   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       529.626 ±     27.446  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5       256.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       523.328 ±    688.233  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       253.237 ±    336.011    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.012 ±      0.051    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         8.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5        22.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    167972.326 ±   8781.903   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1185.537 ±     61.897  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     11104.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1134.220 ±    705.877  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10636.223 ±   6985.766    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.510 ±      1.176    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        17.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        40.000                   ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1291984.472 ±  51217.311   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1445.337 ±     57.377  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1415.658 ±    594.041  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1724.133 ±    732.516    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±      0.122  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.040 ±      0.146    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        21.000               counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        49.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3937505.763 ±  65807.121   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1081.219 ±     18.032  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1070.150 ±    566.106  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       427.618 ±    227.699    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.021 ±      0.098  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±      0.039    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        25.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  14998891.935 ± 303789.922   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       457.617 ±      9.293  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       457.027 ±    689.791  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        47.890 ±     71.664    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.033 ±      0.122  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.003 ±      0.013    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         7.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        20.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    867854.081 ±  19073.799   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1319.473 ±     29.005  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2392.001 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1339.993 ±     38.481  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2429.327 ±    116.052    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.091  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.098 ±      0.167    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        20.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        42.000                   ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    700158.781 ±  52658.173   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1701.851 ±    127.828  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3824.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1686.856 ±    928.402  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3786.772 ±   1951.939    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.122 ±      0.277    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        25.000               counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        35.000                   ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2577616.273 ±  61778.035   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1494.241 ±     35.815  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1485.261 ±    729.561  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       906.459 ±    442.327    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.023 ±      0.064    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        22.000               counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        47.000                   ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   6074961.673 ±  86145.513   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1204.744 ±     17.112  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       312.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1204.120 ±    715.433  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       311.853 ±    185.633    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.015 ±      0.017    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        35.000                   ms
[info] CodecBenchmark.writeArraysPlay                                               thrpt    5    344388.059 ±   7453.581   ops/s
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1229.353 ±     26.603  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1201.409 ±    695.495  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5489.794 ±   3219.255    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.217  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.247 ±      0.988    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        18.000               counts
[info] CodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        30.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2655964.620 ±  60976.254   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1134.482 ±     26.008  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1138.533 ±    708.992  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       674.342 ±    417.789    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.132  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.015 ±      0.078    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        45.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   4008056.637 ±  76451.668   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       733.743 ±     13.979  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       725.434 ±    568.350  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       284.794 ±    224.591    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.127  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.016 ±      0.050    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        11.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        26.000                   ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    442166.773 ±  10522.253   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1317.534 ±     31.367  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4688.001 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1338.460 ±     41.044  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4762.444 ±     73.809    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.071 ±      0.108  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.252 ±      0.379    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        20.000               counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        54.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    990623.933 ±  18567.941   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1264.369 ±     23.741  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      2008.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1276.850 ±    576.759  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      2028.172 ±    927.940    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.046 ±      0.067  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.073 ±      0.106    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        19.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        45.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3563426.250 ±  47635.533   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       416.755 ±      5.574  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       456.089 ±    687.767  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       201.575 ±    306.563    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.021 ±      0.098  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.009 ±      0.043    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        18.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    248564.253 ±   6109.700   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       974.510 ±     23.958  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.023 ±     31.707  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6285.495 ±    299.219    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.037 ±      0.143  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.237 ±      0.910    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000               counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        22.000                   ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    591410.192 ±  16759.417   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1515.700 ±     43.034  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1481.704 ±    714.392  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      3941.877 ±   1908.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.066 ±      0.233    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        22.000               counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        43.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1546070.374 ±  42590.157   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       833.335 ±     22.974  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       791.423 ±    697.654  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       805.275 ±    707.699    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±      0.105  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.017 ±      0.106    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        12.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        20.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4852993.703 ± 115958.669   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       814.344 ±     19.482  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       859.059 ±    697.551  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       278.504 ±    226.316    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.050 ±      0.146  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.016 ±      0.047    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        13.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        29.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    379570.727 ±   6604.310   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1306.716 ±     22.664  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5416.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1270.940 ±    587.352  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5267.406 ±   2423.733    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.036  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.190 ±      0.152    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        25.000                   ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    347364.529 ±   7101.879   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1033.302 ±     21.060  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±      0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1004.610 ±     21.157  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4550.142 ±    126.351    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.188 ±      0.443    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        18.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1027104.997 ±   9717.558   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1018.489 ±      9.669  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1002.805 ±     25.295  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1535.974 ±     32.901    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.044  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.077 ±      0.068    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        27.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3947407.568 ± 159432.224   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       582.107 ±     23.502  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.974 ±    567.855  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       235.336 ±    228.928    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.025 ±      0.143  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.010 ±      0.057    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        20.000                   ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    263370.885 ±   4015.312   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       957.555 ±     14.588  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5720.002 ±      0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       993.152 ±     30.900  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5932.704 ±    198.155    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.050 ±      0.072  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.298 ±      0.426    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        15.000               counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        18.000                   ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    325944.627 ±   8888.588   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       962.983 ±     26.213  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4648.001 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5       991.110 ±     37.808  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4783.792 ±    148.402    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.037 ±      0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.181 ±      0.426    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        27.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1032279.316 ±  43975.977   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1023.597 ±     43.618  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1068.803 ±    548.612  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1629.304 ±    849.730    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.033 ±      0.156  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.051 ±      0.239    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        16.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        32.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   3060697.942 ±  72680.579   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       513.595 ±     12.176  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       523.059 ±    691.420  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       269.062 ±    357.782    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.013 ±      0.046    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        25.000                   ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    254029.065 ±   7315.603   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       977.851 ±     28.177  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6056.002 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.146 ±     30.943  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6150.934 ±    230.137    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.057  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.258 ±      0.351    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        35.000                   ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    631044.802 ±  13211.871   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1235.395 ±     25.774  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1271.558 ±    587.349  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3169.402 ±   1436.659    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.021 ±      0.057  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.052 ±      0.141    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000               counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        44.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1606436.971 ±  26118.469   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       669.858 ±     10.899  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       726.962 ±    560.761  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       711.935 ±    549.193    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.025 ±      0.067  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.024 ±      0.065    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        11.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        19.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6126105.754 ± 219248.727   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       311.522 ±     11.148  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.758 ±      0.698  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        83.662 ±      3.130    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.456 ±      3.748  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.116 ±      0.952    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        11.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    203406.720 ±  11525.856   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1086.029 ±     61.539  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8400.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1063.709 ±    575.754  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8224.197 ±   4291.969    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.113  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.323 ±      0.883    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        23.000                   ms
[success] Total time: 1017 s, completed Oct 26, 2017 4:53:05 PM
