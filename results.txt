[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 25, 2017 5:59:12 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:49:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case -3621593128239734518L => {
[info]                     req0.&=(-3L);
[info]                     _bd = d0(in, _bd)
[info]                   }
[info]                   case 3145557872620432656L => _os = Option(readString(in, null))
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             e0(out, x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.math.BigDecimal): scala.math.BigDecimal = {
[info]         val x = in.readBigDecimal();
[info]         if (x.ne(null))
[info]           BigDecimal(x)
[info]         else
[info]           default
[info]       };
[info]       private def e0(out: JsonStream, x: scala.math.BigDecimal): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:51:47: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5298137317268724415L => {
[info]                     req0.&=(-2L);
[info]                     _aa = d1(in, _aa)
[info]                   }
[info]                   case 4695216661739385763L => {
[info]                     req0.&=(-3L);
[info]                     _a = d3(in, _a)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("a");
[info]             e3(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: Array[Int]): Array[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: Array[Array[Int]]): Array[Array[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.math.BigInt): scala.math.BigInt = {
[info]         val x = in.readBigInteger();
[info]         if (x.ne(null))
[info]           BigInt(x)
[info]         else
[info]           default
[info]       };
[info]       private def d3(in: JsonIterator, default: Array[BigInt]): Array[BigInt] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(d2(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.math.BigInt): Unit = if (x.ne(null))
[info]         out.writeRaw(x.toString)
[info]       else
[info]         out.writeNull();
[info]       private def e3(out: JsonStream, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = writeSep(out, first);
[info]             e2(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: Codec[Arrays] = materialize[Arrays]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:53:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case -2880316277851419472L => _bs = d0(in, _bs)
[info]                   case 6036675737602992569L => _mbs = d1(in, _mbs)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:55:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 7173115670136726671L => _l = d0(in, _l)
[info]                   case 8782703599529504340L => _s = d1(in, _s)
[info]                   case -8160163252060190562L => _ls = d2(in, _ls)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: List[String]): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(readString(in, null))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(readInt(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: List[Set[Int]]): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:57:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in, HashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:59:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:61:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 5563527740743840757L => _m = d0(in, _m)
[info]                   case -1832287182589162500L => _mm = d2(in, _mm)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           default
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in, LongMap.empty[Double]))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => parseNull(in, default)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:63:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 3085628732346524253L => {
[info]                     req0.&=(-2L);
[info]                     _b = toByte(in, readInt(in))
[info]                   }
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-3L);
[info]                     _s = toShort(in, readInt(in))
[info]                   }
[info]                   case -874823976827361790L => {
[info]                     req0.&=(-5L);
[info]                     _i = readInt(in)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-9L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case 1948447510327205053L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -2547476555686174996L => {
[info]                     req0.&=(-33L);
[info]                     _ch = toChar(in, readInt(in))
[info]                   }
[info]                   case 4052889318286228612L => {
[info]                     req0.&=(-65L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case -8922763623791618166L => {
[info]                     req0.&=(-129L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:65:61: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.jsoniter.CodecBase._;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _l: Long = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (readObjectFieldAsHash(in) match {
[info]                   case 8782703599529504340L => {
[info]                     req0.&=(-2L);
[info]                     _s = readString(in, _s)
[info]                   }
[info]                   case 7173115670136726671L => {
[info]                     req0.&=(-3L);
[info]                     _l = readLong(in)
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: Codec[ExtractFields] = materialize[ExtractFields]
[info]                                                             ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 693918.331 ops/s
[info] # Warmup Iteration   2: 1160031.032 ops/s
[info] # Warmup Iteration   3: 891220.894 ops/s
[info] # Warmup Iteration   4: 832728.147 ops/s
[info] # Warmup Iteration   5: 830914.957 ops/s
[info] Iteration   1: 1043055.528 ops/s
[info]                  ·gc.alloc.rate:                   1644.211 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2531.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 1181278.439 ops/s
[info]                  ·gc.alloc.rate:                   1862.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.699 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2246.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1177510.069 ops/s
[info]                  ·gc.alloc.rate:                   1856.139 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.141 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2713.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1183489.411 ops/s
[info]                  ·gc.alloc.rate:               1865.593 MB/sec
[info]                  ·gc.alloc.rate.norm:          2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1695.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2254.513 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1165377.057 ops/s
[info]                  ·gc.alloc.rate:                   1837.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              2480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2752.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce":
[info]   1150142.101 ±(99.9%) 232080.440 ops/s [Average]
[info]   (min, avg, max) = (1043055.528, 1150142.101, 1183489.411), stdev = 60270.553
[info]   CI (99.9%): [918061.660, 1382222.541] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1813.036 ±(99.9%) 365.868 MB/sec [Average]
[info]   (min, avg, max) = (1644.211, 1813.036, 1865.593), stdev = 95.015
[info]   CI (99.9%): [1447.168, 2178.904] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2480.000, 2480.000, 2480.000), stdev = 0.001
[info]   CI (99.9%): [2480.000, 2480.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1826.269 ±(99.9%) 734.882 MB/sec [Average]
[info]   (min, avg, max) = (1678.289, 1826.269, 2039.250), stdev = 190.847
[info]   CI (99.9%): [1091.387, 2561.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2499.795 ±(99.9%) 933.811 B/op [Average]
[info]   (min, avg, max) = (2246.371, 2499.795, 2752.869), stdev = 242.508
[info]   CI (99.9%): [1565.984, 3433.606] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.158 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.111), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.200, 15.000), stdev = 3.493
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1148789.217 ops/s
[info] # Warmup Iteration   2: 1800033.330 ops/s
[info] # Warmup Iteration   3: 1809635.456 ops/s
[info] # Warmup Iteration   4: 1805102.688 ops/s
[info] # Warmup Iteration   5: 1805629.605 ops/s
[info] Iteration   1: 1805897.458 ops/s
[info]                  ·gc.alloc.rate:                   1285.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1165.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1795190.553 ops/s
[info]                  ·gc.alloc.rate:                   1278.080 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1178.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 1801347.928 ops/s
[info]                  ·gc.alloc.rate:                   1282.383 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     883.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1792463.477 ops/s
[info]                  ·gc.alloc.rate:                   1276.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1186.505 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1792054.848 ops/s
[info]                  ·gc.alloc.rate:               1275.791 MB/sec
[info]                  ·gc.alloc.rate.norm:          1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.852 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1189.408 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1797390.853 ±(99.9%) 23232.986 ops/s [Average]
[info]   (min, avg, max) = (1792054.848, 1797390.853, 1805897.458), stdev = 6033.533
[info]   CI (99.9%): [1774157.866, 1820623.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1279.578 ±(99.9%) 16.508 MB/sec [Average]
[info]   (min, avg, max) = (1275.791, 1279.578, 1285.612), stdev = 4.287
[info]   CI (99.9%): [1263.070, 1296.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1280.328 ±(99.9%) 578.210 MB/sec [Average]
[info]   (min, avg, max) = (1011.964, 1280.328, 1354.852), stdev = 150.159
[info]   CI (99.9%): [702.117, 1858.538] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1120.809 ±(99.9%) 511.350 B/op [Average]
[info]   (min, avg, max) = (883.823, 1120.809, 1189.408), stdev = 132.796
[info]   CI (99.9%): [609.459, 1632.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.055), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 4.219
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:15:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5770291.743 ops/s
[info] # Warmup Iteration   2: 5917519.071 ops/s
[info] # Warmup Iteration   3: 6054814.413 ops/s
[info] # Warmup Iteration   4: 6022956.444 ops/s
[info] # Warmup Iteration   5: 6215811.609 ops/s
[info] Iteration   1: 6210638.435 ops/s
[info]                  ·gc.alloc.rate:                   1073.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     250.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 6129629.016 ops/s
[info]                  ·gc.alloc.rate:                   1059.781 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.288 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 6201742.713 ops/s
[info]                  ·gc.alloc.rate:                   1072.227 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 6151376.920 ops/s
[info]                  ·gc.alloc.rate:                   1063.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     256.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 6202616.680 ops/s
[info]                  ·gc.alloc.rate:                   1072.406 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.335 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     255.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6179200.753 ±(99.9%) 139851.764 ops/s [Average]
[info]   (min, avg, max) = (6129629.016, 6179200.753, 6210638.435), stdev = 36319.059
[info]   CI (99.9%): [6039348.989, 6319052.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1068.336 ±(99.9%) 24.135 MB/sec [Average]
[info]   (min, avg, max) = (1059.781, 1068.336, 1073.736), stdev = 6.268
[info]   CI (99.9%): [1044.201, 1092.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.088 ±(99.9%) 576.427 MB/sec [Average]
[info]   (min, avg, max) = (989.287, 1066.088, 1333.527), stdev = 149.696
[info]   CI (99.9%): [489.661, 1642.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   271.373 ±(99.9%) 144.333 B/op [Average]
[info]   (min, avg, max) = (250.607, 271.373, 338.286), stdev = 37.483
[info]   CI (99.9%): [127.040, 415.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.027 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.014, 0.021), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 3.674
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 241194.719 ops/s
[info] # Warmup Iteration   2: 404135.254 ops/s
[info] # Warmup Iteration   3: 413539.619 ops/s
[info] # Warmup Iteration   4: 418750.135 ops/s
[info] # Warmup Iteration   5: 420830.814 ops/s
[info] Iteration   1: 416643.620 ops/s
[info]                  ·gc.alloc.rate:                   1101.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1315.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4967.420 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 416747.256 ops/s
[info]                  ·gc.alloc.rate:                   1101.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3752.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.314 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 416160.450 ops/s
[info]                  ·gc.alloc.rate:                   1100.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3772.635 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 417866.338 ops/s
[info]                  ·gc.alloc.rate:                   1104.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.160 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5037.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 415593.429 ops/s
[info]                  ·gc.alloc.rate:                   1098.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.638 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3814.462 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   416602.219 ±(99.9%) 3240.932 ops/s [Average]
[info]   (min, avg, max) = (415593.429, 416602.219, 417866.338), stdev = 841.660
[info]   CI (99.9%): [413361.286, 419843.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1101.592 ±(99.9%) 8.633 MB/sec [Average]
[info]   (min, avg, max) = (1098.916, 1101.592, 1104.965), stdev = 2.242
[info]   CI (99.9%): [1092.959, 1110.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.637 ±(99.9%) 690.615 MB/sec [Average]
[info]   (min, avg, max) = (993.939, 1130.637, 1338.160), stdev = 179.350
[info]   CI (99.9%): [440.023, 1821.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4268.915 ±(99.9%) 2582.518 B/op [Average]
[info]   (min, avg, max) = (3752.120, 4268.915, 5037.938), stdev = 670.672
[info]   CI (99.9%): [1686.397, 6851.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 0.271 B/op [Average]
[info]   (min, avg, max) = (0.157, 0.204, 0.314), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 9.000), stdev = 3.578
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 378646.411 ops/s
[info] # Warmup Iteration   2: 618711.929 ops/s
[info] # Warmup Iteration   3: 639842.062 ops/s
[info] # Warmup Iteration   4: 624491.851 ops/s
[info] # Warmup Iteration   5: 638702.745 ops/s
[info] Iteration   1: 630018.738 ops/s
[info]                  ·gc.alloc.rate:                   2059.991 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.906 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5063.880 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   2: 626568.948 ops/s
[info]                  ·gc.alloc.rate:                   2049.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2371.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5954.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.105 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 631292.738 ops/s
[info]                  ·gc.alloc.rate:               2064.109 MB/sec
[info]                  ·gc.alloc.rate.norm:          5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      2038.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5080.194 B/op
[info]                  ·gc.count:                    6.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   4: 634158.454 ops/s
[info]                  ·gc.alloc.rate:                   2073.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5060.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 639866.411 ops/s
[info]                  ·gc.alloc.rate:                   2092.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.384 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5023.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce":
[info]   632381.058 ±(99.9%) 19227.718 ops/s [Average]
[info]   (min, avg, max) = (626568.948, 632381.058, 639866.411), stdev = 4993.377
[info]   CI (99.9%): [613153.340, 651608.776] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2067.804 ±(99.9%) 62.425 MB/sec [Average]
[info]   (min, avg, max) = (2049.226, 2067.804, 2092.302), stdev = 16.211
[info]   CI (99.9%): [2005.379, 2130.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2104.303 ±(99.9%) 576.593 MB/sec [Average]
[info]   (min, avg, max) = (2027.906, 2104.303, 2371.967), stdev = 149.739
[info]   CI (99.9%): [1527.711, 2680.896] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5236.501 ±(99.9%) 1546.839 B/op [Average]
[info]   (min, avg, max) = (5023.735, 5236.501, 5954.151), stdev = 401.709
[info]   CI (99.9%): [3689.662, 6783.340] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.296 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.114, 0.208), stdev = 0.077
[info]   CI (99.9%): [≈ 0, 0.410] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysCirce:·gc.time":
[info]   55.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.000, 18.000), stdev = 5.148
[info]   CI (99.9%): [55.000, 55.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 725230.245 ops/s
[info] # Warmup Iteration   2: 1214402.535 ops/s
[info] # Warmup Iteration   3: 1207008.777 ops/s
[info] # Warmup Iteration   4: 1210823.180 ops/s
[info] # Warmup Iteration   5: 1200406.721 ops/s
[info] Iteration   1: 1224812.558 ops/s
[info]                  ·gc.alloc.rate:                   1164.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1285.262 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1201692.756 ops/s
[info]                  ·gc.alloc.rate:                   1142.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1754.122 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 1214711.482 ops/s
[info]                  ·gc.alloc.rate:               1155.075 MB/sec
[info]                  ·gc.alloc.rate.norm:          1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1306.781 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1196370.668 ops/s
[info]                  ·gc.alloc.rate:                   1137.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1774.627 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 1214799.363 ops/s
[info]                  ·gc.alloc.rate:                   1155.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1313.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson":
[info]   1210477.366 ±(99.9%) 43831.148 ops/s [Average]
[info]   (min, avg, max) = (1196370.668, 1210477.366, 1224812.558), stdev = 11382.810
[info]   CI (99.9%): [1166646.218, 1254308.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1151.065 ±(99.9%) 41.581 MB/sec [Average]
[info]   (min, avg, max) = (1137.678, 1151.065, 1164.645), stdev = 10.798
[info]   CI (99.9%): [1109.484, 1192.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1496.000, 1496.000, 1496.000), stdev = 0.001
[info]   CI (99.9%): [1496.000, 1496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1142.673 ±(99.9%) 710.628 MB/sec [Average]
[info]   (min, avg, max) = (1000.584, 1142.673, 1349.568), stdev = 184.548
[info]   CI (99.9%): [432.046, 1853.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1486.877 ±(99.9%) 976.674 B/op [Average]
[info]   (min, avg, max) = (1285.262, 1486.877, 1774.627), stdev = 253.639
[info]   CI (99.9%): [510.203, 2463.551] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.156 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.049, 0.109), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.400, 16.000), stdev = 5.857
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2092842.461 ops/s
[info] # Warmup Iteration   2: 2328190.630 ops/s
[info] # Warmup Iteration   3: 2395738.152 ops/s
[info] # Warmup Iteration   4: 2406035.348 ops/s
[info] # Warmup Iteration   5: 2414492.531 ops/s
[info] Iteration   1: 2451931.929 ops/s
[info]                  ·gc.alloc.rate:                   1234.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     850.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2455816.619 ops/s
[info]                  ·gc.alloc.rate:                   1236.337 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2411491.446 ops/s
[info]                  ·gc.alloc.rate:                   1213.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     873.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2430280.420 ops/s
[info]                  ·gc.alloc.rate:                   1223.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     870.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2418587.365 ops/s
[info]                  ·gc.alloc.rate:                   1217.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              792.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     658.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter":
[info]   2433621.556 ±(99.9%) 75917.827 ops/s [Average]
[info]   (min, avg, max) = (2411491.446, 2433621.556, 2455816.619), stdev = 19715.619
[info]   CI (99.9%): [2357703.729, 2509539.383] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1225.123 ±(99.9%) 38.365 MB/sec [Average]
[info]   (min, avg, max) = (1213.938, 1225.123, 1236.337), stdev = 9.963
[info]   CI (99.9%): [1186.758, 1263.488] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   792.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (792.000, 792.000, 792.000), stdev = 0.001
[info]   CI (99.9%): [792.000, 792.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.018 ±(99.9%) 697.539 MB/sec [Average]
[info]   (min, avg, max) = (999.330, 1204.018, 1344.827), stdev = 181.149
[info]   CI (99.9%): [506.479, 1901.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   778.551 ±(99.9%) 456.245 B/op [Average]
[info]   (min, avg, max) = (640.173, 778.551, 873.460), stdev = 118.485
[info]   CI (99.9%): [322.306, 1234.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.032, 0.054), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 9.000), stdev = 2.702
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103253.879 ops/s
[info] # Warmup Iteration   2: 216454.422 ops/s
[info] # Warmup Iteration   3: 218169.196 ops/s
[info] # Warmup Iteration   4: 221759.626 ops/s
[info] # Warmup Iteration   5: 219315.734 ops/s
[info] Iteration   1: 220697.872 ops/s
[info]                  ·gc.alloc.rate:                   1307.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9432.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 221909.028 ops/s
[info]                  ·gc.alloc.rate:                   1316.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9406.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.735 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 217762.679 ops/s
[info]                  ·gc.alloc.rate:                   1289.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9677.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.602 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 223233.100 ops/s
[info]                  ·gc.alloc.rate:                   1322.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9477.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 218806.572 ops/s
[info]                  ·gc.alloc.rate:                   1296.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7275.955 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay":
[info]   220481.850 ±(99.9%) 8578.671 ops/s [Average]
[info]   (min, avg, max) = (217762.679, 220481.850, 223233.100), stdev = 2227.854
[info]   CI (99.9%): [211903.179, 229060.521] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1306.478 ±(99.9%) 51.976 MB/sec [Average]
[info]   (min, avg, max) = (1289.988, 1306.478, 1322.446), stdev = 13.498
[info]   CI (99.9%): [1254.503, 1358.454] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9320.002, 9320.002, 9320.002), stdev = 0.001
[info]   CI (99.9%): [9320.002, 9320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1269.582 ±(99.9%) 555.553 MB/sec [Average]
[info]   (min, avg, max) = (1011.950, 1269.582, 1344.821), stdev = 144.275
[info]   CI (99.9%): [714.029, 1825.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9053.958 ±(99.9%) 3849.126 B/op [Average]
[info]   (min, avg, max) = (7275.955, 9053.958, 9677.297), stdev = 999.606
[info]   CI (99.9%): [5204.832, 12903.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.356 ±(99.9%) 1.112 B/op [Average]
[info]   (min, avg, max) = (0.147, 0.356, 0.735), stdev = 0.289
[info]   CI (99.9%): [≈ 0, 1.469] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readArraysPlay:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 9.400, 13.000), stdev = 4.393
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 995742.835 ops/s
[info] # Warmup Iteration   2: 1515933.373 ops/s
[info] # Warmup Iteration   3: 1533439.369 ops/s
[info] # Warmup Iteration   4: 1516318.279 ops/s
[info] # Warmup Iteration   5: 1514993.717 ops/s
[info] Iteration   1: 1535597.219 ops/s
[info]                  ·gc.alloc.rate:                   991.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1021.764 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1522006.405 ops/s
[info]                  ·gc.alloc.rate:                   982.926 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1035.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1527573.650 ops/s
[info]                  ·gc.alloc.rate:                   986.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.328 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1035.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1532866.999 ops/s
[info]                  ·gc.alloc.rate:               990.424 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1032.974 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 1523053.507 ops/s
[info]                  ·gc.alloc.rate:                   983.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          673.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     695.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1528219.556 ±(99.9%) 22921.615 ops/s [Average]
[info]   (min, avg, max) = (1522006.405, 1528219.556, 1535597.219), stdev = 5952.671
[info]   CI (99.9%): [1505297.941, 1551141.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   987.022 ±(99.9%) 15.171 MB/sec [Average]
[info]   (min, avg, max) = (982.926, 987.022, 991.666), stdev = 3.940
[info]   CI (99.9%): [971.852, 1002.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   936.933 ±(99.9%) 566.700 MB/sec [Average]
[info]   (min, avg, max) = (673.753, 936.933, 1006.971), stdev = 147.170
[info]   CI (99.9%): [370.234, 1503.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   964.218 ±(99.9%) 577.827 B/op [Average]
[info]   (min, avg, max) = (695.968, 964.218, 1035.366), stdev = 150.060
[info]   CI (99.9%): [386.391, 1542.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.183 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.047
[info]   CI (99.9%): [≈ 0, 0.229] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.047 ±(99.9%) 0.187 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.128), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 2.881
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 7127762.461 ops/s
[info] # Warmup Iteration   2: 5746364.144 ops/s
[info] # Warmup Iteration   3: 6008370.683 ops/s
[info] # Warmup Iteration   4: 5959505.984 ops/s
[info] # Warmup Iteration   5: 5979419.746 ops/s
[info] Iteration   1: 6003690.923 ops/s
[info]                  ·gc.alloc.rate:                   641.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     171.143 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5895710.495 ops/s
[info]                  ·gc.alloc.rate:                   629.566 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.722 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 5983075.615 ops/s
[info]                  ·gc.alloc.rate:               638.899 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 172.691 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 5928907.990 ops/s
[info]                  ·gc.alloc.rate:                   633.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     174.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 5809118.820 ops/s
[info]                  ·gc.alloc.rate:                   620.320 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   5924100.769 ±(99.9%) 297414.516 ops/s [Average]
[info]   (min, avg, max) = (5809118.820, 5924100.769, 6003690.923), stdev = 77237.605
[info]   CI (99.9%): [5626686.253, 6221515.284] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   632.600 ±(99.9%) 31.764 MB/sec [Average]
[info]   (min, avg, max) = (620.320, 632.600, 641.100), stdev = 8.249
[info]   CI (99.9%): [600.835, 664.364] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.082 ±(99.9%) 13.230 MB/sec [Average]
[info]   (min, avg, max) = (653.091, 657.082, 661.751), stdev = 3.436
[info]   CI (99.9%): [643.852, 670.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   174.533 ±(99.9%) 11.716 B/op [Average]
[info]   (min, avg, max) = (171.143, 174.533, 179.221), stdev = 3.042
[info]   CI (99.9%): [162.817, 186.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.011), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.027] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 9.000), stdev = 2.387
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 120732.757 ops/s
[info] # Warmup Iteration   2: 236008.823 ops/s
[info] # Warmup Iteration   3: 240772.534 ops/s
[info] # Warmup Iteration   4: 241579.032 ops/s
[info] # Warmup Iteration   5: 242722.755 ops/s
[info] Iteration   1: 242745.478 ops/s
[info]                  ·gc.alloc.rate:                   1102.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6390.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.405 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 241717.637 ops/s
[info]                  ·gc.alloc.rate:                   1097.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8612.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.542 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 242599.129 ops/s
[info]                  ·gc.alloc.rate:                   1101.597 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.584 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6469.463 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 243490.947 ops/s
[info]                  ·gc.alloc.rate:                   1105.682 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6482.313 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 243474.701 ops/s
[info]                  ·gc.alloc.rate:                   1105.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8672.608 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   242805.578 ±(99.9%) 2821.307 ops/s [Average]
[info]   (min, avg, max) = (241717.637, 242805.578, 243490.947), stdev = 732.684
[info]   CI (99.9%): [239984.271, 245626.885] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1102.552 ±(99.9%) 12.806 MB/sec [Average]
[info]   (min, avg, max) = (1097.624, 1102.552, 1105.682), stdev = 3.326
[info]   CI (99.9%): [1089.746, 1115.357] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.002, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.431 ±(99.9%) 711.758 MB/sec [Average]
[info]   (min, avg, max) = (985.968, 1130.431, 1342.142), stdev = 184.841
[info]   CI (99.9%): [418.674, 1842.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7325.343 ±(99.9%) 4632.255 B/op [Average]
[info]   (min, avg, max) = (6390.201, 7325.343, 8672.608), stdev = 1202.982
[info]   CI (99.9%): [2693.088, 11957.597] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.351 ±(99.9%) 0.469 B/op [Average]
[info]   (min, avg, max) = (0.269, 0.351, 0.542), stdev = 0.122
[info]   CI (99.9%): [≈ 0, 0.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 3.701
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 315850.032 ops/s
[info] # Warmup Iteration   2: 509606.301 ops/s
[info] # Warmup Iteration   3: 519519.581 ops/s
[info] # Warmup Iteration   4: 521950.592 ops/s
[info] # Warmup Iteration   5: 515825.396 ops/s
[info] Iteration   1: 517990.949 ops/s
[info]                  ·gc.alloc.rate:                   1720.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5115.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 513181.680 ops/s
[info]                  ·gc.alloc.rate:                   1704.022 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5182.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 511574.205 ops/s
[info]                  ·gc.alloc.rate:                   1698.619 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5211.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         29.000 ms
[info] Iteration   4: 517809.954 ops/s
[info]                  ·gc.alloc.rate:                   1719.312 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5158.996 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 518912.819 ops/s
[info]                  ·gc.alloc.rate:                   1723.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.317 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5152.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce":
[info]   515893.921 ±(99.9%) 12654.310 ops/s [Average]
[info]   (min, avg, max) = (511574.205, 515893.921, 518912.819), stdev = 3286.284
[info]   CI (99.9%): [503239.611, 528548.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1712.994 ±(99.9%) 42.031 MB/sec [Average]
[info]   (min, avg, max) = (1698.619, 1712.994, 1723.011), stdev = 10.915
[info]   CI (99.9%): [1670.963, 1755.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1693.314 ±(99.9%) 23.438 MB/sec [Average]
[info]   (min, avg, max) = (1684.342, 1693.314, 1699.317), stdev = 6.087
[info]   CI (99.9%): [1669.877, 1716.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5164.142 ±(99.9%) 137.605 B/op [Average]
[info]   (min, avg, max) = (5115.681, 5164.142, 5211.749), stdev = 35.736
[info]   CI (99.9%): [5026.537, 5301.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.127 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (0.064, 0.127, 0.190), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   71.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 14.200, 29.000), stdev = 9.257
[info]   CI (99.9%): [71.000, 71.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 431402.170 ops/s
[info] # Warmup Iteration   2: 684707.217 ops/s
[info] # Warmup Iteration   3: 693135.428 ops/s
[info] # Warmup Iteration   4: 700352.463 ops/s
[info] # Warmup Iteration   5: 709072.237 ops/s
[info] Iteration   1: 700181.243 ops/s
[info]                  ·gc.alloc.rate:                   875.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2233.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 704910.288 ops/s
[info]                  ·gc.alloc.rate:                   881.794 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1485.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 693709.986 ops/s
[info]                  ·gc.alloc.rate:                   867.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2271.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 702354.397 ops/s
[info]                  ·gc.alloc.rate:                   878.594 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2252.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 704713.883 ops/s
[info]                  ·gc.alloc.rate:                   881.502 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          672.391 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1501.150 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson":
[info]   701173.959 ±(99.9%) 17706.790 ops/s [Average]
[info]   (min, avg, max) = (693709.986, 701173.959, 704910.288), stdev = 4598.397
[info]   CI (99.9%): [683467.169, 718880.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   877.118 ±(99.9%) 22.090 MB/sec [Average]
[info]   (min, avg, max) = (867.796, 877.118, 881.794), stdev = 5.737
[info]   CI (99.9%): [855.028, 899.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   867.822 ±(99.9%) 699.444 MB/sec [Average]
[info]   (min, avg, max) = (665.436, 867.822, 1005.656), stdev = 181.643
[info]   CI (99.9%): [168.378, 1567.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1948.749 ±(99.9%) 1602.527 B/op [Average]
[info]   (min, avg, max) = (1485.130, 1948.749, 2271.555), stdev = 416.171
[info]   CI (99.9%): [346.223, 3551.276] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.093 ±(99.9%) 0.179 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.093, 0.140), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.600, 17.000), stdev = 6.580
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4415825.543 ops/s
[info] # Warmup Iteration   2: 4643427.929 ops/s
[info] # Warmup Iteration   3: 4744817.795 ops/s
[info] # Warmup Iteration   4: 4771544.899 ops/s
[info] # Warmup Iteration   5: 4779802.717 ops/s
[info] Iteration   1: 4799056.573 ops/s
[info]                  ·gc.alloc.rate:               219.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83.891 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4819061.857 ops/s
[info]                  ·gc.alloc.rate:                   220.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      ≈ 10⁻⁵ MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: ≈ 10⁻⁵ B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4779262.762 ops/s
[info]                  ·gc.alloc.rate:      218.720 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4811975.829 ops/s
[info]                  ·gc.alloc.rate:                   220.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.529 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     106.433 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.207 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.722 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4836233.210 ops/s
[info]                  ·gc.alloc.rate:                   221.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     105.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter":
[info]   4809118.046 ±(99.9%) 82471.446 ops/s [Average]
[info]   (min, avg, max) = (4779262.762, 4809118.046, 4836233.210), stdev = 21417.573
[info]   CI (99.9%): [4726646.600, 4891589.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   220.088 ±(99.9%) 3.780 MB/sec [Average]
[info]   (min, avg, max) = (218.720, 220.088, 221.332), stdev = 0.982
[info]   CI (99.9%): [216.308, 223.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   232.576 ±(99.9%) 518.282 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 232.576, 325.552), stdev = 134.596
[info]   CI (99.9%): [≈ 0, 750.858] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   75.954 ±(99.9%) 169.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 75.954, 106.433), stdev = 43.919
[info]   CI (99.9%): [≈ 0, 245.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.450 ±(99.9%) 3.784 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 2.207), stdev = 0.983
[info]   CI (99.9%): [≈ 0, 4.234] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.147 ±(99.9%) 1.237 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.147, 0.722), stdev = 0.321
[info]   CI (99.9%): [≈ 0, 1.384] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 3.000), stdev = 1.304
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110289.076 ops/s
[info] # Warmup Iteration   2: 196288.040 ops/s
[info] # Warmup Iteration   3: 201199.151 ops/s
[info] # Warmup Iteration   4: 198384.054 ops/s
[info] # Warmup Iteration   5: 199645.515 ops/s
[info] Iteration   1: 200009.048 ops/s
[info]                  ·gc.alloc.rate:                   1098.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.152 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10352.824 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 200263.848 ops/s
[info]                  ·gc.alloc.rate:                   1099.816 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7808.394 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.654 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 197329.680 ops/s
[info]                  ·gc.alloc.rate:                   1083.712 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.644 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7961.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.332 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 197056.852 ops/s
[info]                  ·gc.alloc.rate:                   1082.237 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8009.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 196403.408 ops/s
[info]                  ·gc.alloc.rate:                   1078.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10759.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.334 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay":
[info]   198212.567 ±(99.9%) 6894.514 ops/s [Average]
[info]   (min, avg, max) = (196403.408, 198212.567, 200263.848), stdev = 1790.483
[info]   CI (99.9%): [191318.053, 205107.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1088.562 ±(99.9%) 37.794 MB/sec [Average]
[info]   (min, avg, max) = (1078.645, 1088.562, 1099.816), stdev = 9.815
[info]   CI (99.9%): [1050.769, 1126.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1131.057 ±(99.9%) 699.279 MB/sec [Average]
[info]   (min, avg, max) = (993.958, 1131.057, 1343.210), stdev = 181.601
[info]   CI (99.9%): [431.778, 1830.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8978.435 ±(99.9%) 5580.271 B/op [Average]
[info]   (min, avg, max) = (7808.394, 8978.435, 10759.184), stdev = 1449.179
[info]   CI (99.9%): [3398.163, 14558.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.363 ±(99.9%) 0.685 B/op [Average]
[info]   (min, avg, max) = (0.166, 0.363, 0.654), stdev = 0.178
[info]   CI (99.9%): [≈ 0, 1.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 10.000), stdev = 1.949
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3224292.441 ops/s
[info] # Warmup Iteration   2: 3690034.808 ops/s
[info] # Warmup Iteration   3: 3766811.492 ops/s
[info] # Warmup Iteration   4: 3808424.201 ops/s
[info] # Warmup Iteration   5: 3786844.332 ops/s
[info] Iteration   1: 3779182.293 ops/s
[info]                  ·gc.alloc.rate:                   1787.215 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2012.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     837.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 3795514.366 ops/s
[info]                  ·gc.alloc.rate:                   1794.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     699.152 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3739605.994 ops/s
[info]                  ·gc.alloc.rate:                   1768.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     711.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 3760029.266 ops/s
[info]                  ·gc.alloc.rate:                   1778.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     709.489 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 3757651.003 ops/s
[info]                  ·gc.alloc.rate:                   1776.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3766396.584 ±(99.9%) 82723.521 ops/s [Average]
[info]   (min, avg, max) = (3739605.994, 3766396.584, 3795514.366), stdev = 21483.036
[info]   CI (99.9%): [3683673.064, 3849120.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1781.171 ±(99.9%) 39.159 MB/sec [Average]
[info]   (min, avg, max) = (1768.509, 1781.171, 1794.967), stdev = 10.170
[info]   CI (99.9%): [1742.011, 1820.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1825.387 ±(99.9%) 706.473 MB/sec [Average]
[info]   (min, avg, max) = (1686.768, 1825.387, 2039.201), stdev = 183.469
[info]   CI (99.9%): [1118.915, 2531.860] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   762.470 ±(99.9%) 294.571 B/op [Average]
[info]   (min, avg, max) = (699.152, 762.470, 853.786), stdev = 76.499
[info]   CI (99.9%): [467.899, 1057.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.028, 0.044), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   51.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.200, 13.000), stdev = 3.114
[info]   CI (99.9%): [51.000, 51.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 142875.021 ops/s
[info] # Warmup Iteration   2: 233645.979 ops/s
[info] # Warmup Iteration   3: 245159.111 ops/s
[info] # Warmup Iteration   4: 243548.578 ops/s
[info] # Warmup Iteration   5: 246574.396 ops/s
[info] Iteration   1: 247067.223 ops/s
[info]                  ·gc.alloc.rate:                   1327.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8427.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 245657.065 ops/s
[info]                  ·gc.alloc.rate:                   1320.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8531.184 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.667 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 243103.000 ops/s
[info]                  ·gc.alloc.rate:                   1306.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.442 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8668.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.404 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 245908.199 ops/s
[info]                  ·gc.alloc.rate:                   1321.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8607.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 239864.514 ops/s
[info]                  ·gc.alloc.rate:                   1289.214 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.771 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8853.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.546 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   244320.000 ±(99.9%) 11091.892 ops/s [Average]
[info]   (min, avg, max) = (239864.514, 244320.000, 247067.223), stdev = 2880.529
[info]   CI (99.9%): [233228.108, 255411.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1313.169 ±(99.9%) 59.637 MB/sec [Average]
[info]   (min, avg, max) = (1289.214, 1313.169, 1327.915), stdev = 15.488
[info]   CI (99.9%): [1253.532, 1372.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.052 ±(99.9%) 40.470 MB/sec [Average]
[info]   (min, avg, max) = (1323.457, 1338.052, 1349.771), stdev = 10.510
[info]   CI (99.9%): [1297.582, 1378.523] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8617.680 ±(99.9%) 614.147 B/op [Average]
[info]   (min, avg, max) = (8427.614, 8617.680, 8853.196), stdev = 159.492
[info]   CI (99.9%): [8003.533, 9231.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.377 ±(99.9%) 0.929 B/op [Average]
[info]   (min, avg, max) = (0.133, 0.377, 0.667), stdev = 0.241
[info]   CI (99.9%): [≈ 0, 1.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.200, 11.000), stdev = 3.421
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 338790.137 ops/s
[info] # Warmup Iteration   2: 548420.927 ops/s
[info] # Warmup Iteration   3: 552576.218 ops/s
[info] # Warmup Iteration   4: 551465.463 ops/s
[info] # Warmup Iteration   5: 555894.187 ops/s
[info] Iteration   1: 554090.193 ops/s
[info]                  ·gc.alloc.rate:                   1941.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4791.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.414 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 561012.673 ops/s
[info]                  ·gc.alloc.rate:                   1965.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.532 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.798 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.234 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 571832.122 ops/s
[info]                  ·gc.alloc.rate:                   2003.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2036.490 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5603.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 571089.465 ops/s
[info]                  ·gc.alloc.rate:                   2000.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5617.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 564499.598 ops/s
[info]                  ·gc.alloc.rate:                   1977.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2041.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5690.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         22.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce":
[info]   564504.810 ±(99.9%) 28407.894 ops/s [Average]
[info]   (min, avg, max) = (554090.193, 564504.810, 571832.122), stdev = 7377.440
[info]   CI (99.9%): [536096.916, 592912.704] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1977.756 ±(99.9%) 99.461 MB/sec [Average]
[info]   (min, avg, max) = (1941.271, 1977.756, 2003.385), stdev = 25.830
[info]   CI (99.9%): [1878.295, 2077.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1967.514 ±(99.9%) 602.551 MB/sec [Average]
[info]   (min, avg, max) = (1687.659, 1967.514, 2041.803), stdev = 156.481
[info]   CI (99.9%): [1364.962, 2570.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5480.548 ±(99.9%) 1491.534 B/op [Average]
[info]   (min, avg, max) = (4791.902, 5480.548, 5699.798), stdev = 387.347
[info]   CI (99.9%): [3989.014, 6972.082] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.079, 0.146), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.222 ±(99.9%) 0.497 B/op [Average]
[info]   (min, avg, max) = (0.057, 0.222, 0.414), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.count":
[info]   29.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.800, 6.000), stdev = 0.447
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesCirce:·gc.time":
[info]   60.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 12.000, 22.000), stdev = 5.958
[info]   CI (99.9%): [60.000, 60.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 304897.089 ops/s
[info] # Warmup Iteration   2: 520999.825 ops/s
[info] # Warmup Iteration   3: 523715.894 ops/s
[info] # Warmup Iteration   4: 522661.565 ops/s
[info] # Warmup Iteration   5: 526240.710 ops/s
[info] Iteration   1: 525963.334 ops/s
[info]                  ·gc.alloc.rate:                   534.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1954.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 526395.697 ops/s
[info]                  ·gc.alloc.rate:               535.335 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 978.948 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 526379.236 ops/s
[info]                  ·gc.alloc.rate:                   535.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1965.819 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 528626.331 ops/s
[info]                  ·gc.alloc.rate:               537.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1965.494 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 530310.525 ops/s
[info]                  ·gc.alloc.rate:                   539.342 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     983.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.494 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   527535.025 ±(99.9%) 7203.503 ops/s [Average]
[info]   (min, avg, max) = (525963.334, 527535.025, 530310.525), stdev = 1870.727
[info]   CI (99.9%): [520331.521, 534738.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   536.508 ±(99.9%) 7.356 MB/sec [Average]
[info]   (min, avg, max) = (534.905, 536.508, 539.342), stdev = 1.910
[info]   CI (99.9%): [529.152, 543.865] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.136 ±(99.9%) 691.118 MB/sec [Average]
[info]   (min, avg, max) = (327.541, 526.136, 660.436), stdev = 179.481
[info]   CI (99.9%): [≈ 0, 1217.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1569.666 ±(99.9%) 2068.378 B/op [Average]
[info]   (min, avg, max) = (978.948, 1569.666, 1965.819), stdev = 537.151
[info]   CI (99.9%): [≈ 0, 3638.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.268 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.167), stdev = 0.070
[info]   CI (99.9%): [≈ 0, 0.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.136 ±(99.9%) 0.796 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.136, 0.494), stdev = 0.207
[info]   CI (99.9%): [≈ 0, 0.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 9.000), stdev = 3.209
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2755028.370 ops/s
[info] # Warmup Iteration   2: 2965192.963 ops/s
[info] # Warmup Iteration   3: 2978624.319 ops/s
[info] # Warmup Iteration   4: 3001052.833 ops/s
[info] # Warmup Iteration   5: 2970496.368 ops/s
[info] Iteration   1: 3007963.654 ops/s
[info]                  ·gc.alloc.rate:                   749.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     513.260 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3000375.783 ops/s
[info]                  ·gc.alloc.rate:               747.615 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 344.198 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 3005486.902 ops/s
[info]                  ·gc.alloc.rate:                   748.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3012637.813 ops/s
[info]                  ·gc.alloc.rate:               750.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 345.406 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3006348.510 ops/s
[info]                  ·gc.alloc.rate:                   749.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     521.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3006562.533 ±(99.9%) 17042.181 ops/s [Average]
[info]   (min, avg, max) = (3000375.783, 3006562.533, 3012637.813), stdev = 4425.800
[info]   CI (99.9%): [2989520.352, 3023604.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   749.153 ±(99.9%) 4.245 MB/sec [Average]
[info]   (min, avg, max) = (747.615, 749.153, 750.670), stdev = 1.102
[info]   CI (99.9%): [744.909, 753.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   790.803 ±(99.9%) 695.229 MB/sec [Average]
[info]   (min, avg, max) = (656.449, 790.803, 995.642), stdev = 180.549
[info]   CI (99.9%): [95.574, 1486.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   413.781 ±(99.9%) 363.497 B/op [Average]
[info]   (min, avg, max) = (344.198, 413.781, 521.031), stdev = 94.399
[info]   CI (99.9%): [50.284, 777.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.022), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 6.000), stdev = 1.924
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74741.614 ops/s
[info] # Warmup Iteration   2: 178200.279 ops/s
[info] # Warmup Iteration   3: 185082.979 ops/s
[info] # Warmup Iteration   4: 184030.660 ops/s
[info] # Warmup Iteration   5: 185893.130 ops/s
[info] Iteration   1: 185512.654 ops/s
[info]                  ·gc.alloc.rate:                   1308.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8406.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 185718.357 ops/s
[info]                  ·gc.alloc.rate:                   1309.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.241 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11267.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.529 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 185935.736 ops/s
[info]                  ·gc.alloc.rate:                   1311.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11322.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.705 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 182300.028 ops/s
[info]                  ·gc.alloc.rate:                   1285.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.816 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11606.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.539 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 182639.713 ops/s
[info]                  ·gc.alloc.rate:               1288.137 MB/sec
[info]                  ·gc.alloc.rate.norm:          11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11624.375 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   184421.297 ±(99.9%) 6899.203 ops/s [Average]
[info]   (min, avg, max) = (182300.028, 184421.297, 185935.736), stdev = 1791.701
[info]   CI (99.9%): [177522.094, 191320.501] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1300.712 ±(99.9%) 48.738 MB/sec [Average]
[info]   (min, avg, max) = (1285.716, 1300.712, 1311.361), stdev = 12.657
[info]   CI (99.9%): [1251.975, 1349.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   11096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11096.002, 11096.002, 11096.002), stdev = 0.001
[info]   CI (99.9%): [11096.002, 11096.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1270.790 ±(99.9%) 602.259 MB/sec [Average]
[info]   (min, avg, max) = (991.306, 1270.790, 1349.476), stdev = 156.405
[info]   CI (99.9%): [668.532, 1873.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10845.512 ±(99.9%) 5286.117 B/op [Average]
[info]   (min, avg, max) = (8406.806, 10845.512, 11624.375), stdev = 1372.788
[info]   CI (99.9%): [5559.395, 16131.629] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.425 ±(99.9%) 1.033 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.425, 0.705), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 204402.875 ops/s
[info] # Warmup Iteration   2: 459032.206 ops/s
[info] # Warmup Iteration   3: 470091.803 ops/s
[info] # Warmup Iteration   4: 470635.902 ops/s
[info] # Warmup Iteration   5: 471059.583 ops/s
[info] Iteration   1: 475025.029 ops/s
[info]                  ·gc.alloc.rate:                   1688.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5565.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 472597.065 ops/s
[info]                  ·gc.alloc.rate:                   1679.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5618.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 469650.564 ops/s
[info]                  ·gc.alloc.rate:                   1669.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5672.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 469275.872 ops/s
[info]                  ·gc.alloc.rate:                   1668.011 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5685.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 473583.349 ops/s
[info]                  ·gc.alloc.rate:                   1683.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5645.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce":
[info]   472026.376 ±(99.9%) 9617.272 ops/s [Average]
[info]   (min, avg, max) = (469275.872, 472026.376, 475025.029), stdev = 2497.575
[info]   CI (99.9%): [462409.103, 481643.648] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1677.798 ±(99.9%) 34.399 MB/sec [Average]
[info]   (min, avg, max) = (1668.011, 1677.798, 1688.556), stdev = 8.933
[info]   CI (99.9%): [1643.399, 1712.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1691.379 ±(99.9%) 28.543 MB/sec [Average]
[info]   (min, avg, max) = (1680.500, 1691.379, 1699.325), stdev = 7.412
[info]   CI (99.9%): [1662.836, 1719.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5637.452 ±(99.9%) 184.796 B/op [Average]
[info]   (min, avg, max) = (5565.322, 5637.452, 5685.912), stdev = 47.991
[info]   CI (99.9%): [5452.656, 5822.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.181 ±(99.9%) 0.558 B/op [Average]
[info]   (min, avg, max) = (0.069, 0.181, 0.419), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.400, 14.000), stdev = 3.782
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 394380.986 ops/s
[info] # Warmup Iteration   2: 846402.122 ops/s
[info] # Warmup Iteration   3: 866740.845 ops/s
[info] # Warmup Iteration   4: 868087.596 ops/s
[info] # Warmup Iteration   5: 867026.250 ops/s
[info] Iteration   1: 863900.308 ops/s
[info]                  ·gc.alloc.rate:                   1019.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1813.673 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 861881.366 ops/s
[info]                  ·gc.alloc.rate:                   1016.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1825.226 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 854990.101 ops/s
[info]                  ·gc.alloc.rate:                   1008.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1848.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 856684.352 ops/s
[info]                  ·gc.alloc.rate:               1010.629 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1851.008 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   5: 871876.435 ops/s
[info]                  ·gc.alloc.rate:                   1028.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1824.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   861866.512 ±(99.9%) 25721.243 ops/s [Average]
[info]   (min, avg, max) = (854990.101, 861866.512, 871876.435), stdev = 6679.725
[info]   CI (99.9%): [836145.269, 887587.755] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1016.761 ±(99.9%) 30.403 MB/sec [Average]
[info]   (min, avg, max) = (1008.625, 1016.761, 1028.584), stdev = 7.896
[info]   CI (99.9%): [986.358, 1047.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.847 ±(99.9%) 23.187 MB/sec [Average]
[info]   (min, avg, max) = (995.923, 1003.847, 1010.920), stdev = 6.022
[info]   CI (99.9%): [980.660, 1027.034] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1832.503 ±(99.9%) 63.138 B/op [Average]
[info]   (min, avg, max) = (1813.673, 1832.503, 1851.008), stdev = 16.397
[info]   CI (99.9%): [1769.365, 1895.641] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.262 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.167), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.308] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.083 ±(99.9%) 0.478 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.083, 0.303), stdev = 0.124
[info]   CI (99.9%): [≈ 0, 0.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 14.000), stdev = 4.266
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3338696.888 ops/s
[info] # Warmup Iteration   2: 3216447.872 ops/s
[info] # Warmup Iteration   3: 3315374.398 ops/s
[info] # Warmup Iteration   4: 3336924.957 ops/s
[info] # Warmup Iteration   5: 3314099.404 ops/s
[info] Iteration   1: 3314969.951 ops/s
[info]                  ·gc.alloc.rate:                   825.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     311.211 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3317134.043 ops/s
[info]                  ·gc.alloc.rate:                   826.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.994 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.583 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3335550.231 ops/s
[info]                  ·gc.alloc.rate:                   831.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3325790.280 ops/s
[info]                  ·gc.alloc.rate:                   828.669 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3361269.331 ops/s
[info]                  ·gc.alloc.rate:                   837.461 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.043 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     312.230 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3330942.767 ±(99.9%) 72380.047 ops/s [Average]
[info]   (min, avg, max) = (3314969.951, 3330942.767, 3361269.331), stdev = 18796.868
[info]   CI (99.9%): [3258562.720, 3403322.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   829.938 ±(99.9%) 17.945 MB/sec [Average]
[info]   (min, avg, max) = (825.973, 829.938, 837.461), stdev = 4.660
[info]   CI (99.9%): [811.992, 847.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   793.686 ±(99.9%) 697.233 MB/sec [Average]
[info]   (min, avg, max) = (655.744, 793.686, 995.936), stdev = 181.069
[info]   CI (99.9%): [96.453, 1490.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   375.054 ±(99.9%) 333.258 B/op [Average]
[info]   (min, avg, max) = (311.211, 375.054, 471.125), stdev = 86.546
[info]   CI (99.9%): [41.796, 708.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.028, 0.059), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140043.027 ops/s
[info] # Warmup Iteration   2: 252141.386 ops/s
[info] # Warmup Iteration   3: 259888.300 ops/s
[info] # Warmup Iteration   4: 260477.300 ops/s
[info] # Warmup Iteration   5: 258515.486 ops/s
[info] Iteration   1: 261260.094 ops/s
[info]                  ·gc.alloc.rate:                   1364.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.167 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7985.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 262950.652 ops/s
[info]                  ·gc.alloc.rate:                   1373.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.165 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7982.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 257043.690 ops/s
[info]                  ·gc.alloc.rate:                   1342.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8210.801 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 255202.657 ops/s
[info]                  ·gc.alloc.rate:                   1332.776 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.517 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8306.870 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.257 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 259113.891 ops/s
[info]                  ·gc.alloc.rate:                   1353.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8201.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   259114.197 ±(99.9%) 12009.813 ops/s [Average]
[info]   (min, avg, max) = (255202.657, 259114.197, 262950.652), stdev = 3118.910
[info]   CI (99.9%): [247104.384, 271124.010] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1353.193 ±(99.9%) 62.695 MB/sec [Average]
[info]   (min, avg, max) = (1332.776, 1353.193, 1373.221), stdev = 16.282
[info]   CI (99.9%): [1290.498, 1415.888] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.002, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1340.048 ±(99.9%) 38.615 MB/sec [Average]
[info]   (min, avg, max) = (1326.167, 1340.048, 1350.863), stdev = 10.028
[info]   CI (99.9%): [1301.434, 1378.663] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8137.533 ±(99.9%) 562.285 B/op [Average]
[info]   (min, avg, max) = (7982.331, 8137.533, 8306.870), stdev = 146.024
[info]   CI (99.9%): [7575.248, 8699.819] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.303 ±(99.9%) 0.421 B/op [Average]
[info]   (min, avg, max) = (0.251, 0.303, 0.498), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 12.000), stdev = 4.506
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144082.239 ops/s
[info] # Warmup Iteration   2: 644133.315 ops/s
[info] # Warmup Iteration   3: 672931.072 ops/s
[info] # Warmup Iteration   4: 675735.584 ops/s
[info] # Warmup Iteration   5: 668926.425 ops/s
[info] Iteration   1: 673648.075 ops/s
[info]                  ·gc.alloc.rate:                   873.486 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2310.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 674674.793 ops/s
[info]                  ·gc.alloc.rate:                   874.850 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.203 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.340 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 673054.311 ops/s
[info]                  ·gc.alloc.rate:                   872.726 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2335.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 664810.742 ops/s
[info]                  ·gc.alloc.rate:               862.034 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.076 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1581.000 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 674839.093 ops/s
[info]                  ·gc.alloc.rate:                   875.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.613 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2344.442 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   672205.403 ±(99.9%) 16167.795 ops/s [Average]
[info]   (min, avg, max) = (664810.742, 672205.403, 674839.093), stdev = 4198.725
[info]   CI (99.9%): [656037.608, 688373.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   871.625 ±(99.9%) 20.970 MB/sec [Average]
[info]   (min, avg, max) = (862.034, 871.625, 875.027), stdev = 5.446
[info]   CI (99.9%): [850.654, 892.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   865.066 ±(99.9%) 701.609 MB/sec [Average]
[info]   (min, avg, max) = (663.086, 865.066, 1005.613), stdev = 182.206
[info]   CI (99.9%): [163.457, 1566.675] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2023.577 ±(99.9%) 1618.292 B/op [Average]
[info]   (min, avg, max) = (1546.203, 2023.577, 2344.442), stdev = 420.265
[info]   CI (99.9%): [405.285, 3641.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.227 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.146), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.097 ±(99.9%) 0.529 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.097, 0.340), stdev = 0.137
[info]   CI (99.9%): [≈ 0, 0.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 9.000), stdev = 2.775
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2012262.932 ops/s
[info] # Warmup Iteration   2: 2629417.915 ops/s
[info] # Warmup Iteration   3: 2628359.544 ops/s
[info] # Warmup Iteration   4: 2599050.136 ops/s
[info] # Warmup Iteration   5: 2299215.393 ops/s
[info] Iteration   1: 2634181.545 ops/s
[info]                  ·gc.alloc.rate:                   1794.910 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1200.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 2648981.881 ops/s
[info]                  ·gc.alloc.rate:                   1805.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1000.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2664591.105 ops/s
[info]                  ·gc.alloc.rate:                   1815.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.382 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     998.645 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 2632839.461 ops/s
[info]                  ·gc.alloc.rate:                   1793.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2034.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1215.758 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2658126.703 ops/s
[info]                  ·gc.alloc.rate:                   1811.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.243 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1005.737 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2647744.139 ±(99.9%) 54430.567 ops/s [Average]
[info]   (min, avg, max) = (2632839.461, 2647744.139, 2664591.105), stdev = 14135.445
[info]   CI (99.9%): [2593313.572, 2702174.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1804.143 ±(99.9%) 37.081 MB/sec [Average]
[info]   (min, avg, max) = (1793.975, 1804.143, 1815.622), stdev = 9.630
[info]   CI (99.9%): [1767.062, 1841.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1824.214 ±(99.9%) 698.202 MB/sec [Average]
[info]   (min, avg, max) = (1685.346, 1824.214, 2034.552), stdev = 181.321
[info]   CI (99.9%): [1126.012, 2522.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1084.372 ±(99.9%) 436.119 B/op [Average]
[info]   (min, avg, max) = (998.645, 1084.372, 1215.758), stdev = 113.259
[info]   CI (99.9%): [648.253, 1520.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.035 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.035, 0.049), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.200, 13.000), stdev = 3.114
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118199.031 ops/s
[info] # Warmup Iteration   2: 213419.762 ops/s
[info] # Warmup Iteration   3: 217533.960 ops/s
[info] # Warmup Iteration   4: 219937.929 ops/s
[info] # Warmup Iteration   5: 218654.141 ops/s
[info] Iteration   1: 218701.823 ops/s
[info]                  ·gc.alloc.rate:                   1149.888 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.257 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7102.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 218242.660 ops/s
[info]                  ·gc.alloc.rate:                   1147.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9560.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.601 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 218352.377 ops/s
[info]                  ·gc.alloc.rate:                   1148.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7204.852 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 217760.157 ops/s
[info]                  ·gc.alloc.rate:                   1144.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.505 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9677.474 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 218324.439 ops/s
[info]                  ·gc.alloc.rate:                   1147.928 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.600 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7268.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   218276.291 ±(99.9%) 1301.139 ops/s [Average]
[info]   (min, avg, max) = (217760.157, 218276.291, 218701.823), stdev = 337.902
[info]   CI (99.9%): [216975.151, 219577.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1147.669 ±(99.9%) 6.801 MB/sec [Average]
[info]   (min, avg, max) = (1144.967, 1147.669, 1149.888), stdev = 1.766
[info]   CI (99.9%): [1140.868, 1154.470] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8272.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8272.002, 8272.002, 8272.002), stdev = 0.001
[info]   CI (99.9%): [8272.002, 8272.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.302 ±(99.9%) 705.787 MB/sec [Average]
[info]   (min, avg, max) = (987.257, 1132.302, 1339.505), stdev = 183.291
[info]   CI (99.9%): [426.514, 1838.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8162.512 ±(99.9%) 5126.673 B/op [Average]
[info]   (min, avg, max) = (7102.075, 8162.512, 9677.474), stdev = 1331.381
[info]   CI (99.9%): [3035.840, 13289.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.330 ±(99.9%) 0.755 B/op [Average]
[info]   (min, avg, max) = (0.150, 0.330, 0.601), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 1.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 12.000), stdev = 4.266
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 648204.605 ops/s
[info] # Warmup Iteration   2: 979573.130 ops/s
[info] # Warmup Iteration   3: 993317.453 ops/s
[info] # Warmup Iteration   4: 1005792.823 ops/s
[info] # Warmup Iteration   5: 1010233.285 ops/s
[info] Iteration   1: 989069.984 ops/s
[info]                  ·gc.alloc.rate:                   729.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1048.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 973435.307 ops/s
[info]                  ·gc.alloc.rate:                   717.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1606.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 993676.670 ops/s
[info]                  ·gc.alloc.rate:                   732.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.447 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1053.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 957929.693 ops/s
[info]                  ·gc.alloc.rate:               706.313 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1096.145 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 986895.613 ops/s
[info]                  ·gc.alloc.rate:               727.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.032 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1066.626 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   980201.453 ±(99.9%) 56028.396 ops/s [Average]
[info]   (min, avg, max) = (957929.693, 980201.453, 993676.670), stdev = 14550.396
[info]   CI (99.9%): [924173.058, 1036229.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   722.720 ±(99.9%) 41.286 MB/sec [Average]
[info]   (min, avg, max) = (706.313, 722.720, 732.685), stdev = 10.722
[info]   CI (99.9%): [681.433, 764.006] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.985 ±(99.9%) 566.235 MB/sec [Average]
[info]   (min, avg, max) = (659.065, 730.985, 993.948), stdev = 147.050
[info]   CI (99.9%): [164.749, 1297.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1174.213 ±(99.9%) 933.046 B/op [Average]
[info]   (min, avg, max) = (1048.349, 1174.213, 1606.397), stdev = 242.309
[info]   CI (99.9%): [241.167, 2107.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.040 ±(99.9%) 0.168 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.040, 0.101), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 14.000), stdev = 4.637
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4272350.640 ops/s
[info] # Warmup Iteration   2: 4450152.289 ops/s
[info] # Warmup Iteration   3: 4468729.757 ops/s
[info] # Warmup Iteration   4: 4476820.893 ops/s
[info] # Warmup Iteration   5: 4486162.708 ops/s
[info] Iteration   1: 4478139.630 ops/s
[info]                  ·gc.alloc.rate:               136.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.905 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 4392386.950 ops/s
[info]                  ·gc.alloc.rate:      134.018 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 4513906.196 ops/s
[info]                  ·gc.alloc.rate:               137.721 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 89.191 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4514174.678 ops/s
[info]                  ·gc.alloc.rate:                   137.727 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     89.185 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4519027.173 ops/s
[info]                  ·gc.alloc.rate:      137.875 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   4483526.925 ±(99.9%) 206090.140 ops/s [Average]
[info]   (min, avg, max) = (4392386.950, 4483526.925, 4519027.173), stdev = 53520.955
[info]   CI (99.9%): [4277436.786, 4689617.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   136.793 ±(99.9%) 6.278 MB/sec [Average]
[info]   (min, avg, max) = (134.018, 136.793, 137.875), stdev = 1.630
[info]   CI (99.9%): [130.516, 143.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   153.541 ±(99.9%) 539.718 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 153.541, 255.904), stdev = 140.163
[info]   CI (99.9%): [≈ 0, 693.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   53.656 ±(99.9%) 188.612 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.656, 89.905), stdev = 48.982
[info]   CI (99.9%): [≈ 0, 242.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.025 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.015), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.028] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 3.000), stdev = 1.342
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100290.319 ops/s
[info] # Warmup Iteration   2: 161746.335 ops/s
[info] # Warmup Iteration   3: 164885.407 ops/s
[info] # Warmup Iteration   4: 166091.794 ops/s
[info] # Warmup Iteration   5: 165417.328 ops/s
[info] Iteration   1: 165233.493 ops/s
[info]                  ·gc.alloc.rate:                   1126.728 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9403.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 163857.054 ops/s
[info]                  ·gc.alloc.rate:                   1117.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.137 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12732.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.800 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 163632.457 ops/s
[info]                  ·gc.alloc.rate:                   1113.167 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9614.232 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 165281.614 ops/s
[info]                  ·gc.alloc.rate:                   1127.063 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9556.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 165762.893 ops/s
[info]                  ·gc.alloc.rate:                   1130.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              10728.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.795 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12763.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   164753.502 ±(99.9%) 3647.215 ops/s [Average]
[info]   (min, avg, max) = (163632.457, 164753.502, 165762.893), stdev = 947.170
[info]   CI (99.9%): [161106.287, 168400.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1122.925 ±(99.9%) 28.108 MB/sec [Average]
[info]   (min, avg, max) = (1113.167, 1122.925, 1130.341), stdev = 7.300
[info]   CI (99.9%): [1094.817, 1151.033] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10728.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10728.003, 10728.003, 10728.003), stdev = 0.001
[info]   CI (99.9%): [10728.002, 10728.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.023 ±(99.9%) 715.930 MB/sec [Average]
[info]   (min, avg, max) = (987.640, 1132.023, 1344.795), stdev = 185.925
[info]   CI (99.9%): [416.093, 1847.953] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10814.058 ±(99.9%) 6805.109 B/op [Average]
[info]   (min, avg, max) = (9403.700, 10814.058, 12763.370), stdev = 1767.265
[info]   CI (99.9%): [4008.949, 17619.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.477 ±(99.9%) 1.160 B/op [Average]
[info]   (min, avg, max) = (0.198, 0.477, 0.800), stdev = 0.301
[info]   CI (99.9%): [≈ 0, 1.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.800, 14.000), stdev = 4.324
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 865796.230 ops/s
[info] # Warmup Iteration   2: 1262815.744 ops/s
[info] # Warmup Iteration   3: 1287156.471 ops/s
[info] # Warmup Iteration   4: 1306163.623 ops/s
[info] # Warmup Iteration   5: 1277540.213 ops/s
[info] Iteration   1: 1291846.925 ops/s
[info]                  ·gc.alloc.rate:                   1445.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1664.379 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2026.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1290386.068 ops/s
[info]                  ·gc.alloc.rate:                   1443.511 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1633.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1300539.045 ops/s
[info]                  ·gc.alloc.rate:                   1454.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.102 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1628.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1285280.404 ops/s
[info]                  ·gc.alloc.rate:                   1437.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2067.842 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   5: 1308764.147 ops/s
[info]                  ·gc.alloc.rate:                   1464.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1628.620 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce":
[info]   1295363.318 ±(99.9%) 35770.262 ops/s [Average]
[info]   (min, avg, max) = (1285280.404, 1295363.318, 1308764.147), stdev = 9289.424
[info]   CI (99.9%): [1259593.056, 1331133.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1449.098 ±(99.9%) 40.014 MB/sec [Average]
[info]   (min, avg, max) = (1437.824, 1449.098, 1464.089), stdev = 10.392
[info]   CI (99.9%): [1409.084, 1489.112] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1478.881 ±(99.9%) 697.003 MB/sec [Average]
[info]   (min, avg, max) = (1339.814, 1478.881, 1689.313), stdev = 181.010
[info]   CI (99.9%): [781.877, 2175.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1797.076 ±(99.9%) 881.709 B/op [Average]
[info]   (min, avg, max) = (1628.399, 1797.076, 2067.842), stdev = 228.977
[info]   CI (99.9%): [915.367, 2678.785] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (0.025, 0.071, 0.101), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 19.000), stdev = 6.580
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2569937.043 ops/s
[info] # Warmup Iteration   2: 3768391.879 ops/s
[info] # Warmup Iteration   3: 3763464.101 ops/s
[info] # Warmup Iteration   4: 3834320.189 ops/s
[info] # Warmup Iteration   5: 3848015.366 ops/s
[info] Iteration   1: 3846012.325 ops/s
[info]                  ·gc.alloc.rate:                   1056.039 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3842888.476 ops/s
[info]                  ·gc.alloc.rate:                   1055.218 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     408.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3817113.478 ops/s
[info]                  ·gc.alloc.rate:                   1048.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     413.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3844477.766 ops/s
[info]                  ·gc.alloc.rate:                   1055.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     412.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3836415.421 ops/s
[info]                  ·gc.alloc.rate:                   1053.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.460 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     552.577 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3837381.493 ±(99.9%) 45841.303 ops/s [Average]
[info]   (min, avg, max) = (3817113.478, 3837381.493, 3846012.325), stdev = 11904.841
[info]   CI (99.9%): [3791540.190, 3883222.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1053.695 ±(99.9%) 12.575 MB/sec [Average]
[info]   (min, avg, max) = (1048.132, 1053.695, 1056.039), stdev = 3.266
[info]   CI (99.9%): [1041.120, 1066.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1069.641 ±(99.9%) 598.378 MB/sec [Average]
[info]   (min, avg, max) = (992.928, 1069.641, 1347.460), stdev = 155.397
[info]   CI (99.9%): [471.263, 1668.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   438.549 ±(99.9%) 245.694 B/op [Average]
[info]   (min, avg, max) = (406.183, 438.549, 552.577), stdev = 63.806
[info]   CI (99.9%): [192.855, 684.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.012, 0.017), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10748241.978 ops/s
[info] # Warmup Iteration   2: 12077909.033 ops/s
[info] # Warmup Iteration   3: 12726279.509 ops/s
[info] # Warmup Iteration   4: 12790783.899 ops/s
[info] # Warmup Iteration   5: 12807304.258 ops/s
[info] Iteration   1: 12825448.361 ops/s
[info]                  ·gc.alloc.rate:                   391.315 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     39.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   2: 12873282.731 ops/s
[info]                  ·gc.alloc.rate:               392.763 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39.826 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 12780197.917 ops/s
[info]                  ·gc.alloc.rate:                   389.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 12827294.805 ops/s
[info]                  ·gc.alloc.rate:                   391.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     79.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 12903090.738 ops/s
[info]                  ·gc.alloc.rate:               393.680 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 39.856 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   12841862.910 ±(99.9%) 182857.857 ops/s [Average]
[info]   (min, avg, max) = (12780197.917, 12841862.910, 12903090.738), stdev = 47487.605
[info]   CI (99.9%): [12659005.053, 13024720.768] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   391.814 ±(99.9%) 5.562 MB/sec [Average]
[info]   (min, avg, max) = (389.937, 391.814, 393.680), stdev = 1.444
[info]   CI (99.9%): [386.252, 397.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.199 ±(99.9%) 560.930 MB/sec [Average]
[info]   (min, avg, max) = (325.557, 391.199, 651.783), stdev = 145.672
[info]   CI (99.9%): [≈ 0, 952.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   47.934 ±(99.9%) 68.892 B/op [Average]
[info]   (min, avg, max) = (39.826, 47.934, 79.938), stdev = 17.891
[info]   CI (99.9%): [≈ 0, 116.826] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.000, 5.000), stdev = 2.000
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 561167.810 ops/s
[info] # Warmup Iteration   2: 831167.264 ops/s
[info] # Warmup Iteration   3: 844435.695 ops/s
[info] # Warmup Iteration   4: 841309.171 ops/s
[info] # Warmup Iteration   5: 848211.277 ops/s
[info] Iteration   1: 841377.594 ops/s
[info]                  ·gc.alloc.rate:                   1262.102 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2475.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.078 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 844557.600 ops/s
[info]                  ·gc.alloc.rate:                   1266.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2482.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 846127.780 ops/s
[info]                  ·gc.alloc.rate:                   1269.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1866.735 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 842823.119 ops/s
[info]                  ·gc.alloc.rate:                   1264.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2510.329 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 870142.536 ops/s
[info]                  ·gc.alloc.rate:                   1305.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              2360.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2439.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.075 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   849005.726 ±(99.9%) 46016.652 ops/s [Average]
[info]   (min, avg, max) = (841377.594, 849005.726, 870142.536), stdev = 11950.378
[info]   CI (99.9%): [802989.074, 895022.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1273.563 ±(99.9%) 69.079 MB/sec [Average]
[info]   (min, avg, max) = (1262.102, 1273.563, 1305.290), stdev = 17.940
[info]   CI (99.9%): [1204.484, 1342.642] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2360.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2360.000, 2360.001, 2360.001), stdev = 0.001
[info]   CI (99.9%): [2360.000, 2360.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.976 ±(99.9%) 576.067 MB/sec [Average]
[info]   (min, avg, max) = (1003.965, 1270.976, 1349.474), stdev = 149.603
[info]   CI (99.9%): [694.910, 1847.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2355.030 ±(99.9%) 1055.534 B/op [Average]
[info]   (min, avg, max) = (1866.735, 2355.030, 2510.329), stdev = 274.119
[info]   CI (99.9%): [1299.496, 3410.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.125), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.100 ±(99.9%) 0.292 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.100, 0.233), stdev = 0.076
[info]   CI (99.9%): [≈ 0, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 391889.772 ops/s
[info] # Warmup Iteration   2: 682416.086 ops/s
[info] # Warmup Iteration   3: 692470.114 ops/s
[info] # Warmup Iteration   4: 700224.431 ops/s
[info] # Warmup Iteration   5: 698194.246 ops/s
[info] Iteration   1: 691084.582 ops/s
[info]                  ·gc.alloc.rate:                   1669.203 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3800.255 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.142 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 702395.597 ops/s
[info]                  ·gc.alloc.rate:                   1696.595 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3763.545 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 693948.760 ops/s
[info]                  ·gc.alloc.rate:                   1676.123 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3826.131 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 689769.554 ops/s
[info]                  ·gc.alloc.rate:                   1666.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.313 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3862.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 694490.366 ops/s
[info]                  ·gc.alloc.rate:                   1677.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.675 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3843.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce":
[info]   694337.772 ±(99.9%) 18918.678 ops/s [Average]
[info]   (min, avg, max) = (689769.554, 694337.772, 702395.597), stdev = 4913.121
[info]   CI (99.9%): [675419.093, 713256.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1677.070 ±(99.9%) 45.805 MB/sec [Average]
[info]   (min, avg, max) = (1666.031, 1677.070, 1696.595), stdev = 11.895
[info]   CI (99.9%): [1631.266, 1722.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1685.454 ±(99.9%) 42.153 MB/sec [Average]
[info]   (min, avg, max) = (1669.315, 1685.454, 1696.675), stdev = 10.947
[info]   CI (99.9%): [1643.301, 1727.607] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3819.166 ±(99.9%) 148.570 B/op [Average]
[info]   (min, avg, max) = (3763.545, 3819.166, 3862.228), stdev = 38.583
[info]   CI (99.9%): [3670.596, 3967.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.076, 0.142), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysCirce:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 12.000), stdev = 3.899
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1544398.605 ops/s
[info] # Warmup Iteration   2: 2433448.747 ops/s
[info] # Warmup Iteration   3: 2461778.917 ops/s
[info] # Warmup Iteration   4: 2448547.660 ops/s
[info] # Warmup Iteration   5: 2460664.972 ops/s
[info] Iteration   1: 2459548.258 ops/s
[info]                  ·gc.alloc.rate:                   1425.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     853.411 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2410966.011 ops/s
[info]                  ·gc.alloc.rate:                   1397.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     875.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 2446893.591 ops/s
[info]                  ·gc.alloc.rate:                   1418.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1083.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2427794.799 ops/s
[info]                  ·gc.alloc.rate:                   1407.404 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     876.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2447376.668 ops/s
[info]                  ·gc.alloc.rate:                   1418.689 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson":
[info]   2438515.866 ±(99.9%) 73692.246 ops/s [Average]
[info]   (min, avg, max) = (2410966.011, 2438515.866, 2459548.258), stdev = 19137.642
[info]   CI (99.9%): [2364823.620, 2512208.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1413.575 ±(99.9%) 42.683 MB/sec [Average]
[info]   (min, avg, max) = (1397.600, 1413.575, 1425.766), stdev = 11.085
[info]   CI (99.9%): [1370.892, 1456.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1413.857 ±(99.9%) 585.263 MB/sec [Average]
[info]   (min, avg, max) = (1334.172, 1413.857, 1685.309), stdev = 151.991
[info]   CI (99.9%): [828.594, 1999.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   912.082 ±(99.9%) 370.959 B/op [Average]
[info]   (min, avg, max) = (853.411, 912.082, 1083.605), stdev = 96.337
[info]   CI (99.9%): [541.123, 1283.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.019, 0.027), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.047] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJackson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.200, 16.000), stdev = 5.630
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4382316.705 ops/s
[info] # Warmup Iteration   2: 4384214.239 ops/s
[info] # Warmup Iteration   3: 4418991.590 ops/s
[info] # Warmup Iteration   4: 4350898.228 ops/s
[info] # Warmup Iteration   5: 4410650.685 ops/s
[info] Iteration   1: 4478205.115 ops/s
[info]                  ·gc.alloc.rate:                   1093.024 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     347.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 4443390.587 ops/s
[info]                  ·gc.alloc.rate:                   1084.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.649 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4466042.041 ops/s
[info]                  ·gc.alloc.rate:                   1090.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     352.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4465389.541 ops/s
[info]                  ·gc.alloc.rate:                   1089.898 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 4476323.383 ops/s
[info]                  ·gc.alloc.rate:                   1092.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     354.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter":
[info]   4465870.133 ±(99.9%) 53321.781 ops/s [Average]
[info]   (min, avg, max) = (4443390.587, 4465870.133, 4478205.115), stdev = 13847.497
[info]   CI (99.9%): [4412548.352, 4519191.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1090.021 ±(99.9%) 12.929 MB/sec [Average]
[info]   (min, avg, max) = (1084.581, 1090.021, 1093.024), stdev = 3.358
[info]   CI (99.9%): [1077.093, 1102.950] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.052 ±(99.9%) 587.676 MB/sec [Average]
[info]   (min, avg, max) = (989.289, 1066.052, 1338.778), stdev = 152.618
[info]   CI (99.9%): [478.376, 1653.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   375.560 ±(99.9%) 207.140 B/op [Average]
[info]   (min, avg, max) = (347.556, 375.560, 471.687), stdev = 53.794
[info]   CI (99.9%): [168.420, 582.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.019, 0.037), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.600, 8.000), stdev = 1.673
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 170482.717 ops/s
[info] # Warmup Iteration   2: 342508.458 ops/s
[info] # Warmup Iteration   3: 350535.139 ops/s
[info] # Warmup Iteration   4: 350457.162 ops/s
[info] # Warmup Iteration   5: 351517.598 ops/s
[info] Iteration   1: 352029.724 ops/s
[info]                  ·gc.alloc.rate:                   1256.610 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5902.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 344812.695 ops/s
[info]                  ·gc.alloc.rate:                   1230.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.114 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6068.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 348082.258 ops/s
[info]                  ·gc.alloc.rate:                   1242.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4534.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 344547.558 ops/s
[info]                  ·gc.alloc.rate:                   1229.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6129.861 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.190 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 347548.057 ops/s
[info]                  ·gc.alloc.rate:               1240.627 MB/sec
[info]                  ·gc.alloc.rate.norm:          5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6101.055 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay":
[info]   347404.058 ±(99.9%) 11671.999 ops/s [Average]
[info]   (min, avg, max) = (344547.558, 347404.058, 352029.724), stdev = 3031.181
[info]   CI (99.9%): [335732.059, 359076.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1240.097 ±(99.9%) 41.663 MB/sec [Average]
[info]   (min, avg, max) = (1229.903, 1240.097, 1256.610), stdev = 10.820
[info]   CI (99.9%): [1198.434, 1281.760] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1268.882 ±(99.9%) 573.196 MB/sec [Average]
[info]   (min, avg, max) = (1003.266, 1268.882, 1347.780), stdev = 148.857
[info]   CI (99.9%): [695.687, 1842.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5747.495 ±(99.9%) 2632.567 B/op [Average]
[info]   (min, avg, max) = (4534.681, 5747.495, 6129.861), stdev = 683.669
[info]   CI (99.9%): [3114.928, 8380.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.189 ±(99.9%) 0.444 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.189, 0.285), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeArraysPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 12.000), stdev = 4.583
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1914112.929 ops/s
[info] # Warmup Iteration   2: 2686370.165 ops/s
[info] # Warmup Iteration   3: 2707810.336 ops/s
[info] # Warmup Iteration   4: 2719434.617 ops/s
[info] # Warmup Iteration   5: 2708840.948 ops/s
[info] Iteration   1: 2696111.062 ops/s
[info]                  ·gc.alloc.rate:                   1151.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     775.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2711900.671 ops/s
[info]                  ·gc.alloc.rate:                   1158.415 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.350 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     582.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2704561.066 ops/s
[info]                  ·gc.alloc.rate:                   1155.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     781.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 2720339.349 ops/s
[info]                  ·gc.alloc.rate:                   1161.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.981 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2715181.680 ops/s
[info]                  ·gc.alloc.rate:                   1159.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     782.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2709618.766 ±(99.9%) 36485.862 ops/s [Average]
[info]   (min, avg, max) = (2696111.062, 2709618.766, 2720339.349), stdev = 9475.262
[info]   CI (99.9%): [2673132.904, 2746104.628] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1157.431 ±(99.9%) 15.613 MB/sec [Average]
[info]   (min, avg, max) = (1151.656, 1157.431, 1161.997), stdev = 4.055
[info]   CI (99.9%): [1141.818, 1173.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1207.464 ±(99.9%) 704.811 MB/sec [Average]
[info]   (min, avg, max) = (1003.350, 1207.464, 1350.918), stdev = 183.037
[info]   CI (99.9%): [502.654, 1912.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   701.232 ±(99.9%) 414.499 B/op [Average]
[info]   (min, avg, max) = (582.046, 701.232, 782.707), stdev = 107.644
[info]   CI (99.9%): [286.733, 1115.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.017, 0.024), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 11.000), stdev = 3.209
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4415772.425 ops/s
[info] # Warmup Iteration   2: 3746428.460 ops/s
[info] # Warmup Iteration   3: 3781226.327 ops/s
[info] # Warmup Iteration   4: 3822132.156 ops/s
[info] # Warmup Iteration   5: 3780289.869 ops/s
[info] Iteration   1: 3756234.317 ops/s
[info]                  ·gc.alloc.rate:                   687.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     273.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3775148.076 ops/s
[info]                  ·gc.alloc.rate:                   691.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     272.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3833795.719 ops/s
[info]                  ·gc.alloc.rate:                   701.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.907 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3794972.084 ops/s
[info]                  ·gc.alloc.rate:                   694.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     273.779 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 3805105.817 ops/s
[info]                  ·gc.alloc.rate:                   696.549 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     411.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3793051.203 ±(99.9%) 113661.265 ops/s [Average]
[info]   (min, avg, max) = (3756234.317, 3793051.203, 3833795.719), stdev = 29517.470
[info]   CI (99.9%): [3679389.937, 3906712.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   694.353 ±(99.9%) 20.791 MB/sec [Average]
[info]   (min, avg, max) = (687.616, 694.353, 701.810), stdev = 5.399
[info]   CI (99.9%): [673.562, 715.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.311 ±(99.9%) 581.901 MB/sec [Average]
[info]   (min, avg, max) = (653.747, 724.311, 994.601), stdev = 151.118
[info]   CI (99.9%): [142.410, 1306.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   300.347 ±(99.9%) 238.774 B/op [Average]
[info]   (min, avg, max) = (269.907, 300.347, 411.235), stdev = 62.009
[info]   CI (99.9%): [61.573, 539.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.022, 0.043), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 6.000), stdev = 2.280
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 238575.787 ops/s
[info] # Warmup Iteration   2: 499847.604 ops/s
[info] # Warmup Iteration   3: 511234.827 ops/s
[info] # Warmup Iteration   4: 509517.556 ops/s
[info] # Warmup Iteration   5: 508125.583 ops/s
[info] Iteration   1: 513285.914 ops/s
[info]                  ·gc.alloc.rate:                   1518.992 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4077.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 511225.552 ops/s
[info]                  ·gc.alloc.rate:                   1512.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1673.696 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5150.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 509713.176 ops/s
[info]                  ·gc.alloc.rate:                   1508.442 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.806 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4154.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 510738.750 ops/s
[info]                  ·gc.alloc.rate:                   1511.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5199.730 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 513126.816 ops/s
[info]                  ·gc.alloc.rate:                   1518.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4151.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   511618.042 ±(99.9%) 5969.712 ops/s [Average]
[info]   (min, avg, max) = (509713.176, 511618.042, 513285.914), stdev = 1550.315
[info]   CI (99.9%): [505648.329, 517587.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1514.100 ±(99.9%) 17.600 MB/sec [Average]
[info]   (min, avg, max) = (1508.442, 1514.100, 1518.992), stdev = 4.571
[info]   CI (99.9%): [1496.499, 1531.700] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1478.362 ±(99.9%) 712.923 MB/sec [Average]
[info]   (min, avg, max) = (1330.133, 1478.362, 1688.066), stdev = 185.144
[info]   CI (99.9%): [765.439, 2191.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4546.657 ±(99.9%) 2213.575 B/op [Average]
[info]   (min, avg, max) = (4077.114, 4546.657, 5199.730), stdev = 574.858
[info]   CI (99.9%): [2333.083, 6760.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.179 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (0.128, 0.179, 0.256), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.304
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86396.996 ops/s
[info] # Warmup Iteration   2: 1027045.776 ops/s
[info] # Warmup Iteration   3: 1037508.126 ops/s
[info] # Warmup Iteration   4: 1031379.417 ops/s
[info] # Warmup Iteration   5: 1025342.458 ops/s
[info] Iteration   1: 1036188.175 ops/s
[info]                  ·gc.alloc.rate:               1280.376 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      998.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1516.228 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1037491.419 ops/s
[info]                  ·gc.alloc.rate:                   1281.955 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2029.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1021236.127 ops/s
[info]                  ·gc.alloc.rate:                   1261.911 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.851 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2071.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 1034888.744 ops/s
[info]                  ·gc.alloc.rate:                   1278.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2050.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1037694.317 ops/s
[info]                  ·gc.alloc.rate:                   1282.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2051.023 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   1033499.756 ±(99.9%) 26753.053 ops/s [Average]
[info]   (min, avg, max) = (1021236.127, 1033499.756, 1037694.317), stdev = 6947.683
[info]   CI (99.9%): [1006746.704, 1060252.809] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1277.033 ±(99.9%) 32.982 MB/sec [Average]
[info]   (min, avg, max) = (1261.911, 1277.033, 1282.177), stdev = 8.565
[info]   CI (99.9%): [1244.051, 1310.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1276.696 ±(99.9%) 598.919 MB/sec [Average]
[info]   (min, avg, max) = (998.633, 1276.696, 1352.764), stdev = 155.537
[info]   CI (99.9%): [677.777, 1875.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1943.833 ±(99.9%) 922.278 B/op [Average]
[info]   (min, avg, max) = (1516.228, 1943.833, 2071.771), stdev = 239.513
[info]   CI (99.9%): [1021.554, 2866.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.076 ±(99.9%) 0.221 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.076, 0.126), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.297] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 17.000), stdev = 5.505
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2764613.280 ops/s
[info] # Warmup Iteration   2: 3040035.194 ops/s
[info] # Warmup Iteration   3: 3094944.411 ops/s
[info] # Warmup Iteration   4: 3055669.476 ops/s
[info] # Warmup Iteration   5: 3181573.932 ops/s
[info] Iteration   1: 3221908.103 ops/s
[info]                  ·gc.alloc.rate:                   376.828 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.449 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     317.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.249 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3250625.632 ops/s
[info]                  ·gc.alloc.rate:               380.189 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.400 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 3267923.571 ops/s
[info]                  ·gc.alloc.rate:                   382.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.226 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156.567 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 3236442.557 ops/s
[info]                  ·gc.alloc.rate:                   378.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3256380.650 ops/s
[info]                  ·gc.alloc.rate:               380.858 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.444 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3246656.103 ±(99.9%) 68866.514 ops/s [Average]
[info]   (min, avg, max) = (3221908.103, 3246656.103, 3267923.571), stdev = 17884.415
[info]   CI (99.9%): [3177789.589, 3315522.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   379.722 ±(99.9%) 8.059 MB/sec [Average]
[info]   (min, avg, max) = (376.828, 379.722, 382.212), stdev = 2.093
[info]   CI (99.9%): [371.664, 387.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   390.536 ±(99.9%) 559.484 MB/sec [Average]
[info]   (min, avg, max) = (325.226, 390.536, 650.449), stdev = 145.296
[info]   CI (99.9%): [≈ 0, 950.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   189.486 ±(99.9%) 275.799 B/op [Average]
[info]   (min, avg, max) = (156.567, 189.486, 317.606), stdev = 71.624
[info]   CI (99.9%): [≈ 0, 465.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.458 ±(99.9%) 3.856 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 2.249), stdev = 1.001
[info]   CI (99.9%): [≈ 0, 4.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.224 ±(99.9%) 1.883 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.224, 1.098), stdev = 0.489
[info]   CI (99.9%): [≈ 0, 2.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 12.000), stdev = 5.050
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109992.160 ops/s
[info] # Warmup Iteration   2: 242117.465 ops/s
[info] # Warmup Iteration   3: 238563.953 ops/s
[info] # Warmup Iteration   4: 240671.733 ops/s
[info] # Warmup Iteration   5: 239231.011 ops/s
[info] Iteration   1: 241892.483 ops/s
[info]                  ·gc.alloc.rate:                   953.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              6200.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6395.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 242266.310 ops/s
[info]                  ·gc.alloc.rate:                   954.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              6200.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6411.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.541 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 239540.786 ops/s
[info]                  ·gc.alloc.rate:                   943.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              6200.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6528.214 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 236198.501 ops/s
[info]                  ·gc.alloc.rate:                   930.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              6200.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4429.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 243224.170 ops/s
[info]                  ·gc.alloc.rate:                   958.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              6200.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6476.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   240624.450 ±(99.9%) 10861.530 ops/s [Average]
[info]   (min, avg, max) = (236198.501, 240624.450, 243224.170), stdev = 2820.705
[info]   CI (99.9%): [229762.920, 251485.980] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   948.274 ±(99.9%) 42.739 MB/sec [Average]
[info]   (min, avg, max) = (930.865, 948.274, 958.506), stdev = 11.099
[info]   CI (99.9%): [905.535, 991.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6200.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6200.002, 6200.002, 6200.002), stdev = 0.001
[info]   CI (99.9%): [6200.002, 6200.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.180 ±(99.9%) 562.645 MB/sec [Average]
[info]   (min, avg, max) = (665.085, 926.180, 1001.293), stdev = 146.117
[info]   CI (99.9%): [363.536, 1488.825] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6048.255 ±(99.9%) 3489.887 B/op [Average]
[info]   (min, avg, max) = (4429.784, 6048.255, 6528.214), stdev = 906.313
[info]   CI (99.9%): [2558.368, 9538.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.299 ±(99.9%) 0.679 B/op [Average]
[info]   (min, avg, max) = (0.135, 0.299, 0.541), stdev = 0.176
[info]   CI (99.9%): [≈ 0, 0.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 5.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 418150.149 ops/s
[info] # Warmup Iteration   2: 567855.690 ops/s
[info] # Warmup Iteration   3: 586570.077 ops/s
[info] # Warmup Iteration   4: 585749.344 ops/s
[info] # Warmup Iteration   5: 590535.602 ops/s
[info] Iteration   1: 592341.283 ops/s
[info]                  ·gc.alloc.rate:                   1517.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1665.554 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4424.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 591044.945 ops/s
[info]                  ·gc.alloc.rate:                   1514.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4466.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 526809.194 ops/s
[info]                  ·gc.alloc.rate:                   1350.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4028.178 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.124 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 599964.173 ops/s
[info]                  ·gc.alloc.rate:                   1537.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3547.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 596064.120 ops/s
[info]                  ·gc.alloc.rate:                   1527.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.715 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4472.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce":
[info]   581244.743 ±(99.9%) 117939.715 ops/s [Average]
[info]   (min, avg, max) = (526809.194, 581244.743, 599964.173), stdev = 30628.570
[info]   CI (99.9%): [463305.028, 699184.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1489.633 ±(99.9%) 302.218 MB/sec [Average]
[info]   (min, avg, max) = (1350.143, 1489.633, 1537.592), stdev = 78.485
[info]   CI (99.9%): [1187.415, 1791.851] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1548.009 ±(99.9%) 694.230 MB/sec [Average]
[info]   (min, avg, max) = (1348.863, 1548.009, 1694.715), stdev = 180.289
[info]   CI (99.9%): [853.779, 2242.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4187.844 ±(99.9%) 1552.615 B/op [Average]
[info]   (min, avg, max) = (3547.487, 4187.844, 4472.938), stdev = 403.209
[info]   CI (99.9%): [2635.229, 5740.459] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.113 ±(99.9%) 0.214 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.113, 0.166), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesCirce:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 11.000), stdev = 2.550
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1071905.361 ops/s
[info] # Warmup Iteration   2: 1595381.064 ops/s
[info] # Warmup Iteration   3: 1599710.843 ops/s
[info] # Warmup Iteration   4: 1585016.899 ops/s
[info] # Warmup Iteration   5: 1609312.420 ops/s
[info] Iteration   1: 1600766.965 ops/s
[info]                  ·gc.alloc.rate:               862.867 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      978.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 961.476 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1590087.336 ops/s
[info]                  ·gc.alloc.rate:               857.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      984.970 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 974.561 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 1604652.283 ops/s
[info]                  ·gc.alloc.rate:               864.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.413 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 647.483 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 1595895.530 ops/s
[info]                  ·gc.alloc.rate:               860.178 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      995.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 981.816 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1587717.691 ops/s
[info]                  ·gc.alloc.rate:                   855.804 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.990 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1595823.961 ±(99.9%) 27296.026 ops/s [Average]
[info]   (min, avg, max) = (1587717.691, 1595823.961, 1604652.283), stdev = 7088.691
[info]   CI (99.9%): [1568527.935, 1623119.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   860.168 ±(99.9%) 14.754 MB/sec [Average]
[info]   (min, avg, max) = (855.804, 860.168, 864.935), stdev = 3.832
[info]   CI (99.9%): [845.415, 874.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   857.341 ±(99.9%) 681.013 MB/sec [Average]
[info]   (min, avg, max) = (660.413, 857.341, 995.915), stdev = 176.857
[info]   CI (99.9%): [176.328, 1538.353] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   845.265 ±(99.9%) 672.330 B/op [Average]
[info]   (min, avg, max) = (647.483, 845.265, 981.816), stdev = 174.602
[info]   CI (99.9%): [172.935, 1517.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 7.000), stdev = 0.894
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3671847.737 ops/s
[info] # Warmup Iteration   2: 4752539.572 ops/s
[info] # Warmup Iteration   3: 4769671.430 ops/s
[info] # Warmup Iteration   4: 4767209.081 ops/s
[info] # Warmup Iteration   5: 4789952.266 ops/s
[info] Iteration   1: 4756888.930 ops/s
[info]                  ·gc.alloc.rate:                   725.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.221 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4730484.058 ops/s
[info]                  ·gc.alloc.rate:                   721.639 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4718945.895 ops/s
[info]                  ·gc.alloc.rate:                   719.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4632405.659 ops/s
[info]                  ·gc.alloc.rate:                   706.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 4765792.850 ops/s
[info]                  ·gc.alloc.rate:                   727.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4720903.479 ±(99.9%) 204097.678 ops/s [Average]
[info]   (min, avg, max) = (4632405.659, 4720903.479, 4765792.850), stdev = 53003.519
[info]   CI (99.9%): [4516805.800, 4925001.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   720.167 ±(99.9%) 31.113 MB/sec [Average]
[info]   (min, avg, max) = (706.681, 720.167, 727.021), stdev = 8.080
[info]   CI (99.9%): [689.054, 751.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.585 ±(99.9%) 575.714 MB/sec [Average]
[info]   (min, avg, max) = (653.747, 724.585, 991.955), stdev = 149.511
[info]   CI (99.9%): [148.871, 1300.300] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   241.918 ±(99.9%) 204.474 B/op [Average]
[info]   (min, avg, max) = (216.221, 241.918, 336.884), stdev = 53.101
[info]   CI (99.9%): [37.444, 446.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.051 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.019, 0.042), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 6.000, 15.000), stdev = 5.916
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 157864.206 ops/s
[info] # Warmup Iteration   2: 371880.350 ops/s
[info] # Warmup Iteration   3: 382312.910 ops/s
[info] # Warmup Iteration   4: 377018.818 ops/s
[info] # Warmup Iteration   5: 379608.340 ops/s
[info] Iteration   1: 378871.982 ops/s
[info]                  ·gc.alloc.rate:                   1297.041 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1322.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5489.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 380498.122 ops/s
[info]                  ·gc.alloc.rate:                   1302.170 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4128.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.344 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 379997.243 ops/s
[info]                  ·gc.alloc.rate:                   1300.402 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5540.284 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.172 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 378975.883 ops/s
[info]                  ·gc.alloc.rate:                   1296.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5582.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 374910.821 ops/s
[info]                  ·gc.alloc.rate:                   1282.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              5384.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.432 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5662.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   378650.810 ±(99.9%) 8473.069 ops/s [Average]
[info]   (min, avg, max) = (374910.821, 378650.810, 380498.122), stdev = 2200.429
[info]   CI (99.9%): [370177.741, 387123.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1295.906 ±(99.9%) 29.116 MB/sec [Average]
[info]   (min, avg, max) = (1282.987, 1295.906, 1302.170), stdev = 7.561
[info]   CI (99.9%): [1266.790, 1325.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5384.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5384.001, 5384.001, 5384.001), stdev = 0.001
[info]   CI (99.9%): [5384.001, 5384.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1270.717 ±(99.9%) 587.000 MB/sec [Average]
[info]   (min, avg, max) = (998.628, 1270.717, 1349.432), stdev = 152.442
[info]   CI (99.9%): [683.717, 1857.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5280.964 ±(99.9%) 2491.748 B/op [Average]
[info]   (min, avg, max) = (4128.968, 5280.964, 5662.839), stdev = 647.099
[info]   CI (99.9%): [2789.215, 7772.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.190 ±(99.9%) 0.432 B/op [Average]
[info]   (min, avg, max) = (0.086, 0.190, 0.344), stdev = 0.112
[info]   CI (99.9%): [≈ 0, 0.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146384.594 ops/s
[info] # Warmup Iteration   2: 317208.853 ops/s
[info] # Warmup Iteration   3: 329000.729 ops/s
[info] # Warmup Iteration   4: 330562.514 ops/s
[info] # Warmup Iteration   5: 325202.297 ops/s
[info] Iteration   1: 328869.848 ops/s
[info]                  ·gc.alloc.rate:                   971.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4761.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 325343.262 ops/s
[info]                  ·gc.alloc.rate:                   961.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4835.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 327510.402 ops/s
[info]                  ·gc.alloc.rate:                   967.574 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4822.831 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 328033.277 ops/s
[info]                  ·gc.alloc.rate:                   969.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          671.062 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3218.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 324938.211 ops/s
[info]                  ·gc.alloc.rate:                   959.972 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4891.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce":
[info]   326939.000 ±(99.9%) 6614.161 ops/s [Average]
[info]   (min, avg, max) = (324938.211, 326939.000, 328869.848), stdev = 1717.677
[info]   CI (99.9%): [320324.839, 333553.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   965.908 ±(99.9%) 19.548 MB/sec [Average]
[info]   (min, avg, max) = (959.972, 965.908, 971.637), stdev = 5.076
[info]   CI (99.9%): [946.360, 985.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   936.120 ±(99.9%) 570.948 MB/sec [Average]
[info]   (min, avg, max) = (671.062, 936.120, 1010.261), stdev = 148.273
[info]   CI (99.9%): [365.172, 1507.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4505.901 ±(99.9%) 2777.040 B/op [Average]
[info]   (min, avg, max) = (3218.461, 4505.901, 4891.490), stdev = 721.188
[info]   CI (99.9%): [1728.861, 7282.941] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.180 ±(99.9%) 0.321 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.180, 0.299), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.502] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 12.000), stdev = 3.715
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 132522.162 ops/s
[info] # Warmup Iteration   2: 1042247.807 ops/s
[info] # Warmup Iteration   3: 1035919.259 ops/s
[info] # Warmup Iteration   4: 1049156.029 ops/s
[info] # Warmup Iteration   5: 1050082.030 ops/s
[info] Iteration   1: 1046419.534 ops/s
[info]                  ·gc.alloc.rate:                   1085.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.823 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1994.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1045967.988 ops/s
[info]                  ·gc.alloc.rate:                   1085.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1506.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1049883.901 ops/s
[info]                  ·gc.alloc.rate:                   1089.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1506.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1048918.353 ops/s
[info]                  ·gc.alloc.rate:                   1088.086 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.942 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1511.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1006979.810 ops/s
[info]                  ·gc.alloc.rate:                   1045.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2104.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1039633.917 ±(99.9%) 70576.081 ops/s [Average]
[info]   (min, avg, max) = (1006979.810, 1039633.917, 1049883.901), stdev = 18328.384
[info]   CI (99.9%): [969057.836, 1110209.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1078.544 ±(99.9%) 72.428 MB/sec [Average]
[info]   (min, avg, max) = (1045.034, 1078.544, 1089.060), stdev = 18.809
[info]   CI (99.9%): [1006.116, 1150.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1137.841 ±(99.9%) 701.972 MB/sec [Average]
[info]   (min, avg, max) = (1001.301, 1137.841, 1347.891), stdev = 182.300
[info]   CI (99.9%): [435.869, 1839.813] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1724.806 ±(99.9%) 1152.543 B/op [Average]
[info]   (min, avg, max) = (1506.053, 1724.806, 2104.964), stdev = 299.312
[info]   CI (99.9%): [572.262, 2877.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.057 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.057, 0.094), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.483
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3155300.046 ops/s
[info] # Warmup Iteration   2: 3775209.544 ops/s
[info] # Warmup Iteration   3: 3708135.260 ops/s
[info] # Warmup Iteration   4: 3805014.577 ops/s
[info] # Warmup Iteration   5: 3811733.972 ops/s
[info] Iteration   1: 3781521.535 ops/s
[info]                  ·gc.alloc.rate:               557.642 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 271.290 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   2: 3811518.326 ops/s
[info]                  ·gc.alloc.rate:                   562.070 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.092 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     269.571 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 3846372.049 ops/s
[info]                  ·gc.alloc.rate:               567.214 MB/sec
[info]                  ·gc.alloc.rate.norm:          232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 133.702 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 3841989.478 ops/s
[info]                  ·gc.alloc.rate:                   566.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3858098.109 ops/s
[info]                  ·gc.alloc.rate:                   568.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              232.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     268.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3827899.899 ±(99.9%) 119788.095 ops/s [Average]
[info]   (min, avg, max) = (3781521.535, 3827899.899, 3858098.109), stdev = 31108.588
[info]   CI (99.9%): [3708111.804, 3947687.995] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   564.490 ±(99.9%) 17.687 MB/sec [Average]
[info]   (min, avg, max) = (557.642, 564.490, 568.945), stdev = 4.593
[info]   CI (99.9%): [546.803, 582.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   232.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (232.000, 232.000, 232.000), stdev = 0.001
[info]   CI (99.9%): [232.000, 232.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.123 ±(99.9%) 564.550 MB/sec [Average]
[info]   (min, avg, max) = (326.887, 589.123, 657.775), stdev = 146.612
[info]   CI (99.9%): [24.573, 1153.673] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   242.262 ±(99.9%) 233.729 B/op [Average]
[info]   (min, avg, max) = (133.702, 242.262, 271.290), stdev = 60.699
[info]   CI (99.9%): [8.533, 475.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.060 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.034), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.507
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103047.123 ops/s
[info] # Warmup Iteration   2: 259354.156 ops/s
[info] # Warmup Iteration   3: 263810.913 ops/s
[info] # Warmup Iteration   4: 265046.349 ops/s
[info] # Warmup Iteration   5: 266078.893 ops/s
[info] Iteration   1: 260866.561 ops/s
[info]                  ·gc.alloc.rate:               949.806 MB/sec
[info]                  ·gc.alloc.rate.norm:          5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5926.168 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 262652.125 ops/s
[info]                  ·gc.alloc.rate:                   956.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5913.863 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 263235.552 ops/s
[info]                  ·gc.alloc.rate:                   958.445 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5940.529 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.498 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 263472.469 ops/s
[info]                  ·gc.alloc.rate:               959.295 MB/sec
[info]                  ·gc.alloc.rate.norm:          5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      997.999 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5959.107 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 263016.687 ops/s
[info]                  ·gc.alloc.rate:                   957.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              5728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3998.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   262648.679 ±(99.9%) 4008.387 ops/s [Average]
[info]   (min, avg, max) = (260866.561, 262648.679, 263472.469), stdev = 1040.965
[info]   CI (99.9%): [258640.292, 266657.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   956.295 ±(99.9%) 14.599 MB/sec [Average]
[info]   (min, avg, max) = (949.806, 956.295, 959.295), stdev = 3.791
[info]   CI (99.9%): [941.696, 970.894] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5728.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5728.002, 5728.002, 5728.002), stdev = 0.001
[info]   CI (99.9%): [5728.001, 5728.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.087 ±(99.9%) 555.083 MB/sec [Average]
[info]   (min, avg, max) = (668.435, 926.087, 997.999), stdev = 144.153
[info]   CI (99.9%): [371.004, 1481.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5547.576 ±(99.9%) 3335.753 B/op [Average]
[info]   (min, avg, max) = (3998.212, 5547.576, 5959.107), stdev = 866.285
[info]   CI (99.9%): [2211.822, 8883.329] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.199 ±(99.9%) 0.871 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.199, 0.498), stdev = 0.226
[info]   CI (99.9%): [≈ 0, 1.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109784.093 ops/s
[info] # Warmup Iteration   2: 325257.470 ops/s
[info] # Warmup Iteration   3: 330007.837 ops/s
[info] # Warmup Iteration   4: 333443.853 ops/s
[info] # Warmup Iteration   5: 330347.463 ops/s
[info] Iteration   1: 333703.475 ops/s
[info]                  ·gc.alloc.rate:                   985.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4692.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 332005.453 ops/s
[info]                  ·gc.alloc.rate:                   980.882 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4738.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 329873.828 ops/s
[info]                  ·gc.alloc.rate:               974.555 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      669.040 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3190.890 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 324373.415 ops/s
[info]                  ·gc.alloc.rate:                   958.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.586 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4882.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 328873.336 ops/s
[info]                  ·gc.alloc.rate:               971.605 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4832.970 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce":
[info]   329765.901 ±(99.9%) 13669.420 ops/s [Average]
[info]   (min, avg, max) = (324373.415, 329765.901, 333703.475), stdev = 3549.905
[info]   CI (99.9%): [316096.481, 343435.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   974.251 ±(99.9%) 40.437 MB/sec [Average]
[info]   (min, avg, max) = (958.306, 974.251, 985.905), stdev = 10.501
[info]   CI (99.9%): [933.814, 1014.687] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   936.230 ±(99.9%) 575.580 MB/sec [Average]
[info]   (min, avg, max) = (669.040, 936.230, 1010.271), stdev = 149.476
[info]   CI (99.9%): [360.650, 1511.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4467.341 ±(99.9%) 2762.794 B/op [Average]
[info]   (min, avg, max) = (3190.890, 4467.341, 4882.171), stdev = 717.489
[info]   CI (99.9%): [1704.547, 7230.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.119 ±(99.9%) 0.496 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.119, 0.295), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 14.000), stdev = 4.550
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89623.156 ops/s
[info] # Warmup Iteration   2: 1022098.280 ops/s
[info] # Warmup Iteration   3: 1033949.135 ops/s
[info] # Warmup Iteration   4: 1036135.814 ops/s
[info] # Warmup Iteration   5: 1031308.881 ops/s
[info] Iteration   1: 1038170.824 ops/s
[info]                  ·gc.alloc.rate:                   1029.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2007.638 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1029721.670 ops/s
[info]                  ·gc.alloc.rate:                   1021.067 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.625 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1527.241 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1032708.248 ops/s
[info]                  ·gc.alloc.rate:                   1024.030 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1528.915 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1033095.116 ops/s
[info]                  ·gc.alloc.rate:                   1024.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1533.920 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1026341.279 ops/s
[info]                  ·gc.alloc.rate:                   1017.706 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.947 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1548.106 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   1032007.427 ±(99.9%) 16893.709 ops/s [Average]
[info]   (min, avg, max) = (1026341.279, 1032007.427, 1038170.824), stdev = 4387.243
[info]   CI (99.9%): [1015113.718, 1048901.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1023.332 ±(99.9%) 16.739 MB/sec [Average]
[info]   (min, avg, max) = (1017.706, 1023.332, 1029.424), stdev = 4.347
[info]   CI (99.9%): [1006.593, 1040.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1069.063 ±(99.9%) 550.727 MB/sec [Average]
[info]   (min, avg, max) = (999.625, 1069.063, 1324.814), stdev = 143.022
[info]   CI (99.9%): [518.336, 1619.790] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1629.164 ±(99.9%) 815.307 B/op [Average]
[info]   (min, avg, max) = (1527.241, 1629.164, 2007.638), stdev = 211.733
[info]   CI (99.9%): [813.857, 2444.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.122 B/op [Average]
[info]   (min, avg, max) = (0.032, 0.063, 0.095), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2521900.661 ops/s
[info] # Warmup Iteration   2: 2945052.712 ops/s
[info] # Warmup Iteration   3: 2954194.049 ops/s
[info] # Warmup Iteration   4: 2986590.144 ops/s
[info] # Warmup Iteration   5: 3050689.714 ops/s
[info] Iteration   1: 3028484.540 ops/s
[info]                  ·gc.alloc.rate:                   508.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     338.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3049114.770 ops/s
[info]                  ·gc.alloc.rate:                   511.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.283 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2999239.486 ops/s
[info]                  ·gc.alloc.rate:               503.276 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 171.467 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 3002777.899 ops/s
[info]                  ·gc.alloc.rate:                   503.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 3008600.514 ops/s
[info]                  ·gc.alloc.rate:               504.851 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.538 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 171.278 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   3017643.442 ±(99.9%) 80529.073 ops/s [Average]
[info]   (min, avg, max) = (2999239.486, 3017643.442, 3049114.770), stdev = 20913.144
[info]   CI (99.9%): [2937114.369, 3098172.515] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   506.373 ±(99.9%) 13.543 MB/sec [Average]
[info]   (min, avg, max) = (503.276, 506.373, 511.672), stdev = 3.517
[info]   CI (99.9%): [492.830, 519.917] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.466 ±(99.9%) 686.377 MB/sec [Average]
[info]   (min, avg, max) = (326.875, 522.466, 654.414), stdev = 178.250
[info]   CI (99.9%): [≈ 0, 1208.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   272.094 ±(99.9%) 354.168 B/op [Average]
[info]   (min, avg, max) = (171.278, 272.094, 342.869), stdev = 91.976
[info]   CI (99.9%): [≈ 0, 626.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.068 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.043), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.400, 9.000), stdev = 3.912
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 118257.260 ops/s
[info] # Warmup Iteration   2: 253583.356 ops/s
[info] # Warmup Iteration   3: 257624.903 ops/s
[info] # Warmup Iteration   4: 257857.636 ops/s
[info] # Warmup Iteration   5: 258424.370 ops/s
[info] Iteration   1: 263110.889 ops/s
[info]                  ·gc.alloc.rate:                   1018.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5883.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.374 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 259522.327 ops/s
[info]                  ·gc.alloc.rate:                   1004.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6001.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.505 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 259718.020 ops/s
[info]                  ·gc.alloc.rate:                   1005.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6029.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.378 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 258203.314 ops/s
[info]                  ·gc.alloc.rate:               999.150 MB/sec
[info]                  ·gc.alloc.rate.norm:          6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      999.908 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6092.619 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 262008.260 ops/s
[info]                  ·gc.alloc.rate:                   1013.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              6088.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.922 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6028.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   260512.562 ±(99.9%) 7685.123 ops/s [Average]
[info]   (min, avg, max) = (258203.314, 260512.562, 263110.889), stdev = 1995.802
[info]   CI (99.9%): [252827.439, 268197.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   1008.097 ±(99.9%) 29.740 MB/sec [Average]
[info]   (min, avg, max) = (999.150, 1008.097, 1018.157), stdev = 7.723
[info]   CI (99.9%): [978.357, 1037.837] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6088.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6088.002, 6088.002, 6088.002), stdev = 0.001
[info]   CI (99.9%): [6088.002, 6088.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   994.609 ±(99.9%) 30.460 MB/sec [Average]
[info]   (min, avg, max) = (983.958, 994.609, 1003.922), stdev = 7.910
[info]   CI (99.9%): [964.149, 1025.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6006.929 ±(99.9%) 295.472 B/op [Average]
[info]   (min, avg, max) = (5883.511, 6006.929, 6092.619), stdev = 76.733
[info]   CI (99.9%): [5711.456, 6302.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.301 ±(99.9%) 0.736 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.301, 0.505), stdev = 0.191
[info]   CI (99.9%): [≈ 0, 1.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 7.000), stdev = 1.871
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 381179.482 ops/s
[info] # Warmup Iteration   2: 613551.090 ops/s
[info] # Warmup Iteration   3: 630248.534 ops/s
[info] # Warmup Iteration   4: 630608.425 ops/s
[info] # Warmup Iteration   5: 631452.906 ops/s
[info] Iteration   1: 630225.224 ops/s
[info]                  ·gc.alloc.rate:               1233.787 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1320.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3296.451 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 623509.560 ops/s
[info]                  ·gc.alloc.rate:                   1220.657 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.139 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3358.773 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 632019.161 ops/s
[info]                  ·gc.alloc.rate:                   1237.300 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.591 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2498.229 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 629221.155 ops/s
[info]                  ·gc.alloc.rate:                   1231.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3360.879 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 630222.191 ops/s
[info]                  ·gc.alloc.rate:                   1233.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3367.176 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce":
[info]   629039.458 ±(99.9%) 12521.450 ops/s [Average]
[info]   (min, avg, max) = (623509.560, 629039.458, 632019.161), stdev = 3251.781
[info]   CI (99.9%): [616518.008, 641560.908] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1231.469 ±(99.9%) 24.488 MB/sec [Average]
[info]   (min, avg, max) = (1220.657, 1231.469, 1237.300), stdev = 6.359
[info]   CI (99.9%): [1206.981, 1255.957] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1269.639 ±(99.9%) 574.288 MB/sec [Average]
[info]   (min, avg, max) = (1003.591, 1269.639, 1348.820), stdev = 149.141
[info]   CI (99.9%): [695.351, 1843.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3176.302 ±(99.9%) 1463.772 B/op [Average]
[info]   (min, avg, max) = (2498.229, 3176.302, 3367.176), stdev = 380.137
[info]   CI (99.9%): [1712.530, 4640.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.063 ±(99.9%) 0.222 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.063, 0.158), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.408
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1125976.211 ops/s
[info] # Warmup Iteration   2: 1610892.145 ops/s
[info] # Warmup Iteration   3: 1616196.219 ops/s
[info] # Warmup Iteration   4: 1636232.735 ops/s
[info] # Warmup Iteration   5: 1641529.317 ops/s
[info] Iteration   1: 1631452.370 ops/s
[info]                  ·gc.alloc.rate:                   680.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     633.012 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1616289.304 ops/s
[info]                  ·gc.alloc.rate:                   673.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     641.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1637507.793 ops/s
[info]                  ·gc.alloc.rate:               682.772 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 635.793 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1622248.539 ops/s
[info]                  ·gc.alloc.rate:                   676.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.397 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     644.333 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1609309.308 ops/s
[info]                  ·gc.alloc.rate:               671.026 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.386 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 651.464 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1623361.463 ±(99.9%) 43662.741 ops/s [Average]
[info]   (min, avg, max) = (1609309.308, 1623361.463, 1637507.793), stdev = 11339.075
[info]   CI (99.9%): [1579698.722, 1667024.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   676.884 ±(99.9%) 18.178 MB/sec [Average]
[info]   (min, avg, max) = (671.026, 676.884, 682.772), stdev = 4.721
[info]   CI (99.9%): [658.706, 695.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   661.603 ±(99.9%) 15.404 MB/sec [Average]
[info]   (min, avg, max) = (656.411, 661.603, 666.386), stdev = 4.000
[info]   CI (99.9%): [646.199, 677.008] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   641.227 ±(99.9%) 28.004 B/op [Average]
[info]   (min, avg, max) = (633.012, 641.227, 651.464), stdev = 7.273
[info]   CI (99.9%): [613.223, 669.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.065 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 12.000), stdev = 4.690
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5415663.804 ops/s
[info] # Warmup Iteration   2: 6080244.867 ops/s
[info] # Warmup Iteration   3: 6192161.544 ops/s
[info] # Warmup Iteration   4: 6129384.660 ops/s
[info] # Warmup Iteration   5: 6114543.551 ops/s
[info] Iteration   1: 6146268.419 ops/s
[info]                  ·gc.alloc.rate:                   312.571 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.560 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 6160649.219 ops/s
[info]                  ·gc.alloc.rate:                   313.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     83.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 6164958.390 ops/s
[info]                  ·gc.alloc.rate:               313.508 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.904 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 83.163 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 6218557.852 ops/s
[info]                  ·gc.alloc.rate:               316.211 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82.446 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 6230285.456 ops/s
[info]                  ·gc.alloc.rate:               316.811 MB/sec
[info]                  ·gc.alloc.rate.norm:          80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 82.292 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   6184143.867 ±(99.9%) 144950.011 ops/s [Average]
[info]   (min, avg, max) = (6146268.419, 6184143.867, 6230285.456), stdev = 37643.058
[info]   CI (99.9%): [6039193.856, 6329093.878] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   314.476 ±(99.9%) 7.320 MB/sec [Average]
[info]   (min, avg, max) = (312.571, 314.476, 316.811), stdev = 1.901
[info]   CI (99.9%): [307.156, 321.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.763 ±(99.9%) 0.673 MB/sec [Average]
[info]   (min, avg, max) = (325.559, 325.763, 325.904), stdev = 0.175
[info]   CI (99.9%): [325.090, 326.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   82.874 ±(99.9%) 1.808 B/op [Average]
[info]   (min, avg, max) = (82.292, 82.874, 83.331), stdev = 0.470
[info]   CI (99.9%): [81.065, 84.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.442 ±(99.9%) 3.757 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.442, 2.187), stdev = 0.976
[info]   CI (99.9%): [≈ 0, 4.199] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.113 ±(99.9%) 0.962 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.113, 0.560), stdev = 0.250
[info]   CI (99.9%): [≈ 0, 1.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.400, 4.000), stdev = 1.517
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 100408.107 ops/s
[info] # Warmup Iteration   2: 197731.112 ops/s
[info] # Warmup Iteration   3: 199613.156 ops/s
[info] # Warmup Iteration   4: 201200.596 ops/s
[info] # Warmup Iteration   5: 199466.748 ops/s
[info] Iteration   1: 197693.029 ops/s
[info]                  ·gc.alloc.rate:                   1077.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7851.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.497 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 198405.300 ops/s
[info]                  ·gc.alloc.rate:                   1081.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10494.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.495 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 197750.248 ops/s
[info]                  ·gc.alloc.rate:                   1077.947 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7939.580 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 201945.874 ops/s
[info]                  ·gc.alloc.rate:               1100.808 MB/sec
[info]                  ·gc.alloc.rate.norm:          8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7816.167 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 200051.186 ops/s
[info]                  ·gc.alloc.rate:                   1090.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.572 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7916.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.328 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   199169.127 ±(99.9%) 7011.945 ops/s [Average]
[info]   (min, avg, max) = (197693.029, 199169.127, 201945.874), stdev = 1820.980
[info]   CI (99.9%): [192157.182, 206181.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1085.680 ±(99.9%) 38.156 MB/sec [Average]
[info]   (min, avg, max) = (1077.681, 1085.680, 1100.808), stdev = 9.909
[info]   CI (99.9%): [1047.525, 1123.836] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8576.002, 8576.002, 8576.002), stdev = 0.001
[info]   CI (99.9%): [8576.002, 8576.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1063.594 ±(99.9%) 560.223 MB/sec [Average]
[info]   (min, avg, max) = (986.670, 1063.594, 1323.500), stdev = 145.488
[info]   CI (99.9%): [503.371, 1623.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8403.734 ±(99.9%) 4505.291 B/op [Average]
[info]   (min, avg, max) = (7816.167, 8403.734, 10494.849), stdev = 1170.010
[info]   CI (99.9%): [3898.443, 12909.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.297 ±(99.9%) 0.830 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.297, 0.497), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 1.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 8.000), stdev = 2.510
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                     Mode  Cnt         Score        Error   Units
[info] CodecBenchmark.readAnyRefsCirce                                              thrpt    5   1150142.101 ± 232080.440   ops/s
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1813.036 ±    365.868  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2480.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1826.269 ±    734.882  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2499.795 ±    933.811    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.119  MB/sec
[info] CodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.063 ±      0.158    B/op
[info] CodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        27.000               counts
[info] CodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        46.000                   ms
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1797390.853 ±  23232.986   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1279.578 ±     16.508  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1120.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1280.328 ±    578.210  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1120.809 ±    511.350    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.091  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.029 ±      0.080    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        38.000                   ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6179200.753 ± 139851.764   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1068.336 ±     24.135  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1066.088 ±    576.427  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       271.373 ±    144.333    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.108  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.014 ±      0.027    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        30.000                   ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    416602.219 ±   3240.932   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1101.592 ±      8.633  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1130.637 ±    690.615  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4268.915 ±   2582.518    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.072  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.204 ±      0.271    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        23.000                   ms
[info] CodecBenchmark.readArraysCirce                                               thrpt    5    632381.058 ±  19227.718   ops/s
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2067.804 ±     62.425  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5144.001 ±      0.001    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2104.303 ±    576.593  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5236.501 ±   1546.839    B/op
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.119  MB/sec
[info] CodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.114 ±      0.296    B/op
[info] CodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        31.000               counts
[info] CodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        55.000                   ms
[info] CodecBenchmark.readArraysJackson                                             thrpt    5   1210477.366 ±  43831.148   ops/s
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1151.065 ±     41.581  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1496.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1142.673 ±    710.628  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1486.877 ±    976.674    B/op
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.037 ±      0.119  MB/sec
[info] CodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.049 ±      0.156    B/op
[info] CodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000               counts
[info] CodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        42.000                   ms
[info] CodecBenchmark.readArraysJsoniter                                            thrpt    5   2433621.556 ±  75917.827   ops/s
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1225.123 ±     38.365  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       792.000 ±      0.001    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1204.018 ±    697.539  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       778.551 ±    456.245    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.091  MB/sec
[info] CodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.032 ±      0.060    B/op
[info] CodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        18.000               counts
[info] CodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        27.000                   ms
[info] CodecBenchmark.readArraysPlay                                                thrpt    5    220481.850 ±   8578.671   ops/s
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1306.478 ±     51.976  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9320.002 ±      0.001    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1269.582 ±    555.553  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      9053.958 ±   3849.126    B/op
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.050 ±      0.156  MB/sec
[info] CodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.356 ±      1.112    B/op
[info] CodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        19.000               counts
[info] CodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        47.000                   ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1528219.556 ±  22921.615   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5       987.022 ±     15.171  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1016.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5       936.933 ±    566.700  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       964.218 ±    577.827    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.183  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.047 ±      0.187    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        14.000               counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        32.000                   ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5924100.769 ± 297414.516   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       632.600 ±     31.764  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       657.082 ±     13.230  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       174.533 ±     11.716    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.072  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±      0.019    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        10.000               counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        26.000                   ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    242805.578 ±   2821.307   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1102.552 ±     12.806  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±      0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1130.431 ±    711.758  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7325.343 ±   4632.255    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.072  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.351 ±      0.469    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        31.000                   ms
[info] CodecBenchmark.readExtractFieldsCirce                                        thrpt    5    515893.921 ±  12654.310   ops/s
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1712.994 ±     42.031  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1693.314 ±     23.438  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5164.142 ±    137.605    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±      0.057  MB/sec
[info] CodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.127 ±      0.171    B/op
[info] CodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        25.000               counts
[info] CodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        71.000                   ms
[info] CodecBenchmark.readExtractFieldsJackson                                      thrpt    5    701173.959 ±  17706.790   ops/s
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       877.118 ±     22.090  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1968.001 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       867.822 ±    699.444  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1948.749 ±   1602.527    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.093 ±      0.179    B/op
[info] CodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] CodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        38.000                   ms
[info] CodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4809118.046 ±  82471.446   ops/s
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       220.088 ±      3.780  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       232.576 ±    518.282  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        75.954 ±    169.117    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.450 ±      3.784  MB/sec
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.147 ±      1.237    B/op
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         4.000               counts
[info] CodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5         9.000                   ms
[info] CodecBenchmark.readExtractFieldsPlay                                         thrpt    5    198212.567 ±   6894.514   ops/s
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1088.562 ±     37.794  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8640.002 ±      0.001    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1131.057 ±    699.279  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8978.435 ±   5580.271    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.046 ±      0.088  MB/sec
[info] CodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.363 ±      0.685    B/op
[info] CodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        17.000               counts
[info] CodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        43.000                   ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3766396.584 ±  82723.521   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1781.171 ±     39.159  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1825.387 ±    706.473  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       762.470 ±    294.571    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.067 ±      0.105  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.028 ±      0.044    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        27.000               counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        51.000                   ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    244320.000 ±  11091.892   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1313.169 ±     59.637  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±      0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1338.052 ±     40.470  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8617.680 ±    614.147    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.143  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.377 ±      0.929    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        20.000               counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        41.000                   ms
[info] CodecBenchmark.readIterablesCirce                                            thrpt    5    564504.810 ±  28407.894   ops/s
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1977.756 ±     99.461  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5512.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1967.514 ±    602.551  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5480.548 ±   1491.534    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.079 ±      0.174  MB/sec
[info] CodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.222 ±      0.497    B/op
[info] CodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        29.000               counts
[info] CodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        60.000                   ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    527535.025 ±   7203.503   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       536.508 ±      7.356  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.136 ±    691.118  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1569.666 ±   2068.378    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±      0.268  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.136 ±      0.796    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        22.000                   ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3006562.533 ±  17042.181   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       749.153 ±      4.245  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       790.803 ±    695.229  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       413.781 ±    363.497    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.021 ±      0.080  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.011 ±      0.042    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        12.000               counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        16.000                   ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    184421.297 ±   6899.203   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1300.712 ±     48.738  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     11096.002 ±      0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1270.790 ±    602.259  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10845.512 ±   5286.117    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.122  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.425 ±      1.033    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        19.000               counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        35.000                   ms
[info] CodecBenchmark.readMapsCirce                                                 thrpt    5    472026.376 ±   9617.272   ops/s
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1677.798 ±     34.399  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1691.379 ±     28.543  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5637.452 ±    184.796    B/op
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.054 ±      0.166  MB/sec
[info] CodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.181 ±      0.558    B/op
[info] CodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        25.000               counts
[info] CodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        47.000                   ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    861866.512 ±  25721.243   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1016.761 ±     30.403  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±      0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1003.847 ±     23.187  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1832.503 ±     63.138    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.262  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.083 ±      0.478    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000               counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        39.000                   ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3330942.767 ±  72380.047   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       829.938 ±     17.945  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       793.686 ±    697.233  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       375.054 ±    333.258    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.154  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.028 ±      0.073    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        12.000               counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        21.000                   ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    259114.197 ±  12009.813   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1353.193 ±     62.695  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8216.002 ±      0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1340.048 ±     38.615  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8137.533 ±    562.285    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±      0.072  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.303 ±      0.421    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        20.000               counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        33.000                   ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    672205.403 ±  16167.795   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       871.625 ±     20.970  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       865.066 ±    701.609  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2023.577 ±   1618.292    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±      0.227  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.097 ±      0.529    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        13.000               counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        21.000                   ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2647744.139 ±  54430.567   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1804.143 ±     37.081  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1824.214 ±    698.202  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1084.372 ±    436.119    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.035 ±      0.040    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        27.000               counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        41.000                   ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    218276.291 ±   1301.139   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1147.669 ±      6.801  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8272.002 ±      0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1132.302 ±    705.787  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8162.512 ±   5126.673    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.330 ±      0.755    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        17.000               counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        39.000                   ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5    980201.453 ±  56028.396   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       722.720 ±     41.286  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       730.985 ±    566.235  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1174.213 ±    933.046    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.040 ±      0.168    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        35.000                   ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   4483526.925 ± 206090.140   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       136.793 ±      6.278  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       153.541 ±    539.718  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        53.656 ±    188.612    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.008 ±      0.072  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.003 ±      0.025    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         3.000               counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         7.000                   ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    164753.502 ±   3647.215   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1122.925 ±     28.108  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10728.003 ±      0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1132.023 ±    715.930  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10814.058 ±   6805.109    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.122  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.477 ±      1.160    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        17.000               counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        44.000                   ms
[info] CodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1295363.318 ±  35770.262   ops/s
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1449.098 ±     40.014  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1478.881 ±    697.003  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1797.076 ±    881.709    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.058 ±      0.088  MB/sec
[info] CodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.071 ±      0.107    B/op
[info] CodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        22.000               counts
[info] CodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        37.000                   ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3837381.493 ±  45841.303   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1053.695 ±     12.575  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1069.641 ±    598.378  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       438.549 ±    245.694    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.012 ±      0.018    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        26.000                   ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  12841862.910 ± 182857.857   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       391.814 ±      5.562  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       391.199 ±    560.930  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        47.934 ±     68.892    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.029 ±      0.122  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.004 ±      0.015    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         6.000               counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        10.000                   ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    849005.726 ±  46016.652   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1273.563 ±     69.079  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2360.001 ±      0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1270.976 ±    576.067  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2355.030 ±   1055.534    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.156  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.100 ±      0.292    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        19.000               counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        30.000                   ms
[info] CodecBenchmark.writeArraysCirce                                              thrpt    5    694337.772 ±  18918.678   ops/s
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1677.070 ±     45.805  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3800.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1685.454 ±     42.153  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3819.166 ±    148.570    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.033 ±      0.072  MB/sec
[info] CodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.076 ±      0.164    B/op
[info] CodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        25.000               counts
[info] CodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        41.000                   ms
[info] CodecBenchmark.writeArraysJackson                                            thrpt    5   2438515.866 ±  73692.246   ops/s
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1413.575 ±     42.683  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1413.857 ±    585.263  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       912.082 ±    370.959    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.019 ±      0.028    B/op
[info] CodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        21.000               counts
[info] CodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        46.000                   ms
[info] CodecBenchmark.writeArraysJsoniter                                           thrpt    5   4465870.133 ±  53321.781   ops/s
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1090.021 ±     12.929  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       384.000 ±      0.001    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1066.052 ±    587.676  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       375.560 ±    207.140    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±      0.122  MB/sec
[info] CodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.019 ±      0.043    B/op
[info] CodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        28.000                   ms
[info] CodecBenchmark.writeArraysPlay                                               thrpt    5    347404.058 ±  11671.999   ops/s
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1240.097 ±     41.663  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1268.882 ±    573.196  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5747.495 ±   2632.567    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.098  MB/sec
[info] CodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.189 ±      0.444    B/op
[info] CodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        19.000               counts
[info] CodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        40.000                   ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2709618.766 ±  36485.862   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1157.431 ±     15.613  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1207.464 ±    704.811  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       701.232 ±    414.499    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.044  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.017 ±      0.026    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        18.000               counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        38.000                   ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3793051.203 ± 113661.265   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       694.353 ±     20.791  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       724.311 ±    581.901  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       300.347 ±    238.774    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.054 ±      0.146  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.022 ±      0.060    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        11.000               counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        19.000                   ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    511618.042 ±   5969.712   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1514.100 ±     17.600  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1478.362 ±    712.923  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4546.657 ±   2213.575    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.067  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.179 ±      0.208    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000               counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        36.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   1033499.756 ±  26753.053   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1277.033 ±     32.982  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1276.696 ±    598.919  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1943.833 ±    922.278    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±      0.146  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.076 ±      0.221    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        19.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        37.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3246656.103 ±  68866.514   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       379.722 ±      8.059  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       390.536 ±    559.484  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       189.486 ±    275.799    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.458 ±      3.856  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.224 ±      1.883    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         6.000               counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        15.000                   ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    240624.450 ±  10861.530   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       948.274 ±     42.739  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6200.002 ±      0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       926.180 ±    562.645  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6048.255 ±   3489.887    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.299 ±      0.679    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        14.000               counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        19.000                   ms
[info] CodecBenchmark.writeIterablesCirce                                           thrpt    5    581244.743 ± 117939.715   ops/s
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1489.633 ±    302.218  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1548.009 ±    694.230  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4187.844 ±   1552.615    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.113 ±      0.214    B/op
[info] CodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        23.000               counts
[info] CodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        40.000                   ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1595823.961 ±  27296.026   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       860.168 ±     14.754  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       857.341 ±    681.013  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       845.265 ±    672.330    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.008 ±      0.072  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.008 ±      0.071    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        13.000               counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        32.000                   ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4720903.479 ± 204097.678   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       720.167 ±     31.113  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       240.000 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       724.585 ±    575.714  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       241.918 ±    204.474    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.058 ±      0.154  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.019 ±      0.051    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        11.000               counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        30.000                   ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    378650.810 ±   8473.069   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1295.906 ±     29.116  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5384.001 ±      0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1270.717 ±    587.000  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5280.964 ±   2491.748    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.046 ±      0.105  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.190 ±      0.432    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000               counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        20.000                   ms
[info] CodecBenchmark.writeMapsCirce                                                thrpt    5    326939.000 ±   6614.161   ops/s
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5       965.908 ±     19.548  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4648.001 ±      0.001    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5       936.120 ±    570.948  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4505.901 ±   2777.040    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.037 ±      0.067  MB/sec
[info] CodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.180 ±      0.321    B/op
[info] CodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        14.000               counts
[info] CodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        28.000                   ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1039633.917 ±  70576.081   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1078.544 ±     72.428  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1137.841 ±    701.972  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1724.806 ±   1152.543    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±      0.067  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.057 ±      0.102    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        17.000               counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        21.000                   ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3827899.899 ± 119788.095   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       564.490 ±     17.687  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       232.000 ±      0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.123 ±    564.550  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       242.262 ±    233.729    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.033 ±      0.146  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.014 ±      0.060    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        28.000                   ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    262648.679 ±   4008.387   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       956.295 ±     14.599  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5728.002 ±      0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.087 ±    555.083  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5547.576 ±   3335.753    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±      0.146  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.199 ±      0.871    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000               counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        11.000                   ms
[info] CodecBenchmark.writeMutableMapsCirce                                         thrpt    5    329765.901 ±  13669.420   ops/s
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       974.251 ±     40.437  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4648.001 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5       936.230 ±    575.580  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4467.341 ±   2762.794    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±      0.105  MB/sec
[info] CodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.119 ±      0.496    B/op
[info] CodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        14.000               counts
[info] CodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        34.000                   ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1032007.427 ±  16893.709   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1023.332 ±     16.739  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1069.063 ±    550.727  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1629.164 ±    815.307    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±      0.080  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.063 ±      0.122    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        16.000               counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        31.000                   ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   3017643.442 ±  80529.073   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       506.373 ±     13.543  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.466 ±    686.377  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       272.094 ±    354.168    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.025 ±      0.132  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.013 ±      0.068    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000               counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        22.000                   ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    260512.562 ±   7685.123   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5      1008.097 ±     29.740  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6088.002 ±      0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       994.609 ±     30.460  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6006.929 ±    295.472    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.050 ±      0.122  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.301 ±      0.736    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000               counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        25.000                   ms
[info] CodecBenchmark.writePrimitivesCirce                                          thrpt    5    629039.458 ±  12521.450   ops/s
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1231.469 ±     24.488  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1269.639 ±    574.288  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3176.302 ±   1463.772    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.025 ±      0.088  MB/sec
[info] CodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.063 ±      0.222    B/op
[info] CodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        19.000               counts
[info] CodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        28.000                   ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1623361.463 ±  43662.741   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       676.884 ±     18.178  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       661.603 ±     15.404  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       641.227 ±     28.004    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.017 ±      0.067  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.016 ±      0.065    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000               counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        35.000                   ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   6184143.867 ± 144950.011   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       314.476 ±      7.320  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.763 ±      0.673  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        82.874 ±      1.808    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.442 ±      3.757  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.113 ±      0.962    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5         7.000                   ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    199169.127 ±   7011.945   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1085.680 ±     38.156  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8576.002 ±      0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1063.594 ±    560.223  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8403.734 ±   4505.291    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.037 ±      0.105  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.297 ±      0.830    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        32.000                   ms
[success] Total time: 1017 s, completed Oct 25, 2017 6:16:09 PM
