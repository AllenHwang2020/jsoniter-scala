[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 13, 2017 7:16:03 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:192:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:55:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "i");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:57:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "bd");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e0(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:59:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d2(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d0(in, v2))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e0(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:61:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:63:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: List[Set[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e0(x: List[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:65:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:67:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:69:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e(x, out);
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.unreadByte();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e0(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e1(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e0(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:71:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:73:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e(x, out);
[info]       private val r: Array[String] = Array("s", "l");
[info]       private def d(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.unreadByte();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(r, req0)
[info]         }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 92 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 72 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:11:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 975225.341 ops/s
[info] # Warmup Iteration   2: 1510001.561 ops/s
[info] # Warmup Iteration   3: 1547754.019 ops/s
[info] # Warmup Iteration   4: 1536425.795 ops/s
[info] # Warmup Iteration   5: 1538216.400 ops/s
[info] Iteration   1: 1535893.772 ops/s
[info]                  ·gc.alloc.rate:                   2436.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2373.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2431.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1542420.200 ops/s
[info]                  ·gc.alloc.rate:                   2447.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2378.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2426.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.085 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 1545306.716 ops/s
[info]                  ·gc.alloc.rate:                   2451.717 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2381.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2424.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1550734.903 ops/s
[info]                  ·gc.alloc.rate:                   2460.458 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2724.477 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2763.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1546785.288 ops/s
[info]                  ·gc.alloc.rate:                   2453.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              2496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2424.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce":
[info]   1544228.176 ±(99.9%) 21332.934 ops/s [Average]
[info]   (min, avg, max) = (1535893.772, 1544228.176, 1550734.903), stdev = 5540.095
[info]   CI (99.9%): [1522895.242, 1565561.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2449.993 ±(99.9%) 34.051 MB/sec [Average]
[info]   (min, avg, max) = (2436.716, 2449.993, 2460.458), stdev = 8.843
[info]   CI (99.9%): [2415.942, 2484.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2496.000, 2496.000, 2496.000), stdev = 0.001
[info]   CI (99.9%): [2496.000, 2496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2448.445 ±(99.9%) 594.371 MB/sec [Average]
[info]   (min, avg, max) = (2373.415, 2448.445, 2724.477), stdev = 154.356
[info]   CI (99.9%): [1854.074, 3042.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2494.141 ±(99.9%) 580.623 B/op [Average]
[info]   (min, avg, max) = (2424.598, 2494.141, 2763.834), stdev = 150.786
[info]   CI (99.9%): [1913.518, 3074.764] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.093 B/op [Average]
[info]   (min, avg, max) = (0.021, 0.051, 0.085), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.400, 13.000), stdev = 2.074
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson
[info] # Run progress: 1.47% complete, ETA 00:18:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 95182.569 ops/s
[info] # Warmup Iteration   2: 208997.227 ops/s
[info] # Warmup Iteration   3: 216537.515 ops/s
[info] # Warmup Iteration   4: 217001.276 ops/s
[info] # Warmup Iteration   5: 217191.122 ops/s
[info] Iteration   1: 215356.384 ops/s
[info]                  ·gc.alloc.rate:               510.305 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      321.213 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2346.603 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 216019.011 ops/s
[info]                  ·gc.alloc.rate:                   511.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          645.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4703.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.607 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 210212.119 ops/s
[info]                  ·gc.alloc.rate:               498.123 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      649.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4862.970 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 217721.881 ops/s
[info]                  ·gc.alloc.rate:                   515.915 MB/sec
[info]                  ·gc.alloc.rate.norm:              3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2357.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.301 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 217026.552 ops/s
[info]                  ·gc.alloc.rate:               514.256 MB/sec
[info]                  ·gc.alloc.rate.norm:          3728.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4744.054 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson":
[info]   215267.189 ±(99.9%) 11430.608 ops/s [Average]
[info]   (min, avg, max) = (210212.119, 215267.189, 217721.881), stdev = 2968.493
[info]   CI (99.9%): [203836.581, 226697.797] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   510.094 ±(99.9%) 27.073 MB/sec [Average]
[info]   (min, avg, max) = (498.123, 510.094, 515.915), stdev = 7.031
[info]   CI (99.9%): [483.021, 537.166] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3728.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3728.002, 3728.002, 3728.002), stdev = 0.001
[info]   CI (99.9%): [3728.002, 3728.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   519.473 ±(99.9%) 688.261 MB/sec [Average]
[info]   (min, avg, max) = (321.213, 519.473, 654.415), stdev = 178.739
[info]   CI (99.9%): [≈ 0, 1207.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3802.779 ±(99.9%) 5105.072 B/op [Average]
[info]   (min, avg, max) = (2346.603, 3802.779, 4862.970), stdev = 1325.771
[info]   CI (99.9%): [≈ 0, 8907.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.182 ±(99.9%) 1.044 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.182, 0.607), stdev = 0.271
[info]   CI (99.9%): [≈ 0, 1.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 9.000), stdev = 3.435
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.94% complete, ETA 00:17:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 424257.035 ops/s
[info] # Warmup Iteration   2: 431343.868 ops/s
[info] # Warmup Iteration   3: 458618.627 ops/s
[info] # Warmup Iteration   4: 451074.980 ops/s
[info] # Warmup Iteration   5: 457562.431 ops/s
[info] Iteration   1: 458905.019 ops/s
[info]                  ·gc.alloc.rate:                   422.379 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2233.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 449304.853 ops/s
[info]                  ·gc.alloc.rate:               413.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1141.078 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 448393.405 ops/s
[info]                  ·gc.alloc.rate:                   412.710 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1144.565 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 453525.748 ops/s
[info]                  ·gc.alloc.rate:                   417.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1131.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 450320.715 ops/s
[info]                  ·gc.alloc.rate:                   414.480 MB/sec
[info]                  ·gc.alloc.rate.norm:              1448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2284.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter":
[info]   452089.948 ±(99.9%) 16456.502 ops/s [Average]
[info]   (min, avg, max) = (448393.405, 452089.948, 458905.019), stdev = 4273.701
[info]   CI (99.9%): [435633.446, 468546.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   416.106 ±(99.9%) 15.152 MB/sec [Average]
[info]   (min, avg, max) = (412.710, 416.106, 422.379), stdev = 3.935
[info]   CI (99.9%): [400.954, 431.257] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1448.001, 1448.001, 1448.001), stdev = 0.001
[info]   CI (99.9%): [1448.001, 1448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.707 ±(99.9%) 688.626 MB/sec [Average]
[info]   (min, avg, max) = (325.876, 456.707, 653.781), stdev = 178.834
[info]   CI (99.9%): [≈ 0, 1145.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1586.899 ±(99.9%) 2362.294 B/op [Average]
[info]   (min, avg, max) = (1131.603, 1586.899, 2284.008), stdev = 613.480
[info]   CI (99.9%): [≈ 0, 3949.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.130 ±(99.9%) 0.407 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.130, 0.286), stdev = 0.106
[info]   CI (99.9%): [≈ 0, 0.537] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.200, 6.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 4.41% complete, ETA 00:17:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1578919.217 ops/s
[info] # Warmup Iteration   2: 1736197.697 ops/s
[info] # Warmup Iteration   3: 1755167.450 ops/s
[info] # Warmup Iteration   4: 1734995.695 ops/s
[info] # Warmup Iteration   5: 1768207.379 ops/s
[info] Iteration   1: 1771261.420 ops/s
[info]                  ·gc.alloc.rate:                   1098.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1173.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1767319.292 ops/s
[info]                  ·gc.alloc.rate:                   1096.384 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     886.604 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1747617.574 ops/s
[info]                  ·gc.alloc.rate:                   1084.145 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     901.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1747242.240 ops/s
[info]                  ·gc.alloc.rate:                   1083.941 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     904.575 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1730688.844 ops/s
[info]                  ·gc.alloc.rate:                   1073.686 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1222.491 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless":
[info]   1752825.874 ±(99.9%) 63805.762 ops/s [Average]
[info]   (min, avg, max) = (1730688.844, 1752825.874, 1771261.420), stdev = 16570.154
[info]   CI (99.9%): [1689020.113, 1816631.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1087.400 ±(99.9%) 39.564 MB/sec [Average]
[info]   (min, avg, max) = (1073.686, 1087.400, 1098.842), stdev = 10.275
[info]   CI (99.9%): [1047.836, 1126.963] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1133.507 ±(99.9%) 701.545 MB/sec [Average]
[info]   (min, avg, max) = (995.961, 1133.507, 1344.847), stdev = 182.189
[info]   CI (99.9%): [431.961, 1835.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   1017.648 ±(99.9%) 637.454 B/op [Average]
[info]   (min, avg, max) = (886.604, 1017.648, 1222.491), stdev = 165.545
[info]   CI (99.9%): [380.194, 1655.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.052 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.052, 0.074), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.800, 14.000), stdev = 5.167
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 5.88% complete, ETA 00:17:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3366666.309 ops/s
[info] # Warmup Iteration   2: 3558683.635 ops/s
[info] # Warmup Iteration   3: 3541334.177 ops/s
[info] # Warmup Iteration   4: 3643014.686 ops/s
[info] # Warmup Iteration   5: 3680624.093 ops/s
[info] Iteration   1: 3671917.429 ops/s
[info]                  ·gc.alloc.rate:               522.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.622 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   2: 3639041.833 ops/s
[info]                  ·gc.alloc.rate:                   518.117 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3687688.614 ops/s
[info]                  ·gc.alloc.rate:                   525.054 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3687979.049 ops/s
[info]                  ·gc.alloc.rate:               525.095 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.866 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 3703871.627 ops/s
[info]                  ·gc.alloc.rate:               527.343 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.734 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 278.962 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3678099.710 ±(99.9%) 94663.961 ops/s [Average]
[info]   (min, avg, max) = (3639041.833, 3678099.710, 3703871.627), stdev = 24583.930
[info]   CI (99.9%): [3583435.749, 3772763.672] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   523.681 ±(99.9%) 13.482 MB/sec [Average]
[info]   (min, avg, max) = (518.117, 523.681, 527.343), stdev = 3.501
[info]   CI (99.9%): [510.199, 537.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   523.326 ±(99.9%) 690.609 MB/sec [Average]
[info]   (min, avg, max) = (325.867, 523.326, 656.734), stdev = 179.349
[info]   CI (99.9%): [≈ 0, 1213.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   223.883 ±(99.9%) 295.802 B/op [Average]
[info]   (min, avg, max) = (139.622, 223.883, 282.063), stdev = 76.819
[info]   CI (99.9%): [≈ 0, 519.685] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.045), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.600, 13.000), stdev = 5.128
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay
[info] # Run progress: 7.35% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 31019.447 ops/s
[info] # Warmup Iteration   2: 121494.944 ops/s
[info] # Warmup Iteration   3: 122569.286 ops/s
[info] # Warmup Iteration   4: 129993.998 ops/s
[info] # Warmup Iteration   5: 130599.053 ops/s
[info] Iteration   1: 128442.986 ops/s
[info]                  ·gc.alloc.rate:                   1070.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.655 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12048.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.510 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 126879.194 ops/s
[info]                  ·gc.alloc.rate:                   1057.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12274.992 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 127132.885 ops/s
[info]                  ·gc.alloc.rate:                   1059.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12316.348 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.515 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 127173.525 ops/s
[info]                  ·gc.alloc.rate:                   1059.885 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     16504.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 128811.595 ops/s
[info]                  ·gc.alloc.rate:                   1073.550 MB/sec
[info]                  ·gc.alloc.rate.norm:              13112.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12278.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay":
[info]   127688.037 ±(99.9%) 3367.649 ops/s [Average]
[info]   (min, avg, max) = (126879.194, 127688.037, 128811.595), stdev = 874.568
[info]   CI (99.9%): [124320.389, 131055.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1064.197 ±(99.9%) 28.058 MB/sec [Average]
[info]   (min, avg, max) = (1057.466, 1064.197, 1073.550), stdev = 7.287
[info]   CI (99.9%): [1036.139, 1092.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13112.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13112.003, 13112.003, 13112.004), stdev = 0.001
[info]   CI (99.9%): [13112.003, 13112.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   1061.669 ±(99.9%) 587.329 MB/sec [Average]
[info]   (min, avg, max) = (983.655, 1061.669, 1334.149), stdev = 152.527
[info]   CI (99.9%): [474.340, 1648.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   13084.576 ±(99.9%) 7373.907 B/op [Average]
[info]   (min, avg, max) = (12048.282, 13084.576, 16504.958), stdev = 1914.980
[info]   CI (99.9%): [5710.669, 20458.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.565 ±(99.9%) 1.093 B/op [Average]
[info]   (min, avg, max) = (0.258, 0.565, 1.033), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.658] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.missingReqFieldPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 16.000), stdev = 6.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 8.82% complete, ETA 00:16:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 633271.594 ops/s
[info] # Warmup Iteration   2: 1107586.505 ops/s
[info] # Warmup Iteration   3: 1138773.934 ops/s
[info] # Warmup Iteration   4: 1141387.300 ops/s
[info] # Warmup Iteration   5: 1137807.609 ops/s
[info] Iteration   1: 1146203.200 ops/s
[info]                  ·gc.alloc.rate:                   1795.187 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2021.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2775.121 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.114 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1131419.400 ops/s
[info]                  ·gc.alloc.rate:                   1772.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2351.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   3: 1141280.748 ops/s
[info]                  ·gc.alloc.rate:                   1787.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.357 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2337.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1134240.871 ops/s
[info]                  ·gc.alloc.rate:                   1776.424 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2355.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1145166.152 ops/s
[info]                  ·gc.alloc.rate:                   1793.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.196 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2801.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.057 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1139662.074 ±(99.9%) 25326.030 ops/s [Average]
[info]   (min, avg, max) = (1131419.400, 1139662.074, 1146203.200), stdev = 6577.089
[info]   CI (99.9%): [1114336.045, 1164988.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1784.932 ±(99.9%) 39.691 MB/sec [Average]
[info]   (min, avg, max) = (1772.018, 1784.932, 1795.187), stdev = 10.308
[info]   CI (99.9%): [1745.241, 1824.622] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.172 ±(99.9%) 708.248 MB/sec [Average]
[info]   (min, avg, max) = (1691.396, 1829.172, 2039.196), stdev = 183.930
[info]   CI (99.9%): [1120.923, 2537.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2524.159 ±(99.9%) 929.573 B/op [Average]
[info]   (min, avg, max) = (2337.006, 2524.159, 2801.483), stdev = 241.407
[info]   CI (99.9%): [1594.586, 3453.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.069 ±(99.9%) 0.126 B/op [Average]
[info]   (min, avg, max) = (0.029, 0.069, 0.114), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 15.000), stdev = 3.209
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 10.29% complete, ETA 00:16:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1234953.060 ops/s
[info] # Warmup Iteration   2: 1817378.063 ops/s
[info] # Warmup Iteration   3: 1854441.271 ops/s
[info] # Warmup Iteration   4: 1855713.739 ops/s
[info] # Warmup Iteration   5: 1858523.674 ops/s
[info] Iteration   1: 1844761.397 ops/s
[info]                  ·gc.alloc.rate:                   1294.570 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1129.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1849301.756 ops/s
[info]                  ·gc.alloc.rate:                   1297.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.231 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1135.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1834320.967 ops/s
[info]                  ·gc.alloc.rate:                   1287.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.533 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1150.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1838105.883 ops/s
[info]                  ·gc.alloc.rate:               1289.813 MB/sec
[info]                  ·gc.alloc.rate.norm:          1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1347.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1153.341 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1849121.845 ops/s
[info]                  ·gc.alloc.rate:                   1297.590 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1150.448 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1843122.370 ±(99.9%) 25794.626 ops/s [Average]
[info]   (min, avg, max) = (1834320.967, 1843122.370, 1849301.756), stdev = 6698.783
[info]   CI (99.9%): [1817327.743, 1868916.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1293.393 ±(99.9%) 18.149 MB/sec [Average]
[info]   (min, avg, max) = (1287.232, 1293.393, 1297.762), stdev = 4.713
[info]   CI (99.9%): [1275.244, 1311.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1339.928 ±(99.9%) 42.536 MB/sec [Average]
[info]   (min, avg, max) = (1324.238, 1339.928, 1352.183), stdev = 11.046
[info]   CI (99.9%): [1297.393, 1382.464] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1143.737 ±(99.9%) 41.664 B/op [Average]
[info]   (min, avg, max) = (1129.301, 1143.737, 1153.341), stdev = 10.820
[info]   CI (99.9%): [1102.074, 1185.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.035), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.168
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 11.76% complete, ETA 00:16:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5877811.248 ops/s
[info] # Warmup Iteration   2: 6294585.241 ops/s
[info] # Warmup Iteration   3: 6506577.738 ops/s
[info] # Warmup Iteration   4: 6449714.802 ops/s
[info] # Warmup Iteration   5: 6566343.186 ops/s
[info] Iteration   1: 6578665.147 ops/s
[info]                  ·gc.alloc.rate:                   836.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     235.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 6591396.305 ops/s
[info]                  ·gc.alloc.rate:                   837.924 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.759 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     156.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6555638.934 ops/s
[info]                  ·gc.alloc.rate:                   833.393 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     238.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 6518007.239 ops/s
[info]                  ·gc.alloc.rate:                   828.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6538525.750 ops/s
[info]                  ·gc.alloc.rate:                   831.185 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.246 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6556446.675 ±(99.9%) 114139.923 ops/s [Average]
[info]   (min, avg, max) = (6518007.239, 6556446.675, 6591396.305), stdev = 29641.776
[info]   CI (99.9%): [6442306.752, 6670586.598] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   833.491 ±(99.9%) 14.455 MB/sec [Average]
[info]   (min, avg, max) = (828.646, 833.491, 837.924), stdev = 3.754
[info]   CI (99.9%): [819.035, 847.946] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.199 ±(99.9%) 697.914 MB/sec [Average]
[info]   (min, avg, max) = (657.759, 859.199, 999.246), stdev = 181.246
[info]   CI (99.9%): [161.285, 1557.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   206.168 ±(99.9%) 167.415 B/op [Average]
[info]   (min, avg, max) = (156.997, 206.168, 240.439), stdev = 43.477
[info]   CI (99.9%): [38.753, 373.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.013, 0.025), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.000, 7.000), stdev = 2.236
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 13.24% complete, ETA 00:15:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 237951.819 ops/s
[info] # Warmup Iteration   2: 400772.128 ops/s
[info] # Warmup Iteration   3: 408369.476 ops/s
[info] # Warmup Iteration   4: 410837.501 ops/s
[info] # Warmup Iteration   5: 411791.122 ops/s
[info] Iteration   1: 410559.793 ops/s
[info]                  ·gc.alloc.rate:                   1098.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5043.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 405224.690 ops/s
[info]                  ·gc.alloc.rate:                   1083.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3858.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 406770.156 ops/s
[info]                  ·gc.alloc.rate:                   1087.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3862.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.242 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 406659.513 ops/s
[info]                  ·gc.alloc.rate:                   1088.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5166.933 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.161 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 402647.952 ops/s
[info]                  ·gc.alloc.rate:                   1076.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3939.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   406372.421 ±(99.9%) 11054.040 ops/s [Average]
[info]   (min, avg, max) = (402647.952, 406372.421, 410559.793), stdev = 2870.699
[info]   CI (99.9%): [395318.381, 417426.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1087.047 ±(99.9%) 29.755 MB/sec [Average]
[info]   (min, avg, max) = (1076.897, 1087.047, 1098.130), stdev = 7.727
[info]   CI (99.9%): [1057.291, 1116.802] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4208.001, 4208.001, 4208.001), stdev = 0.001
[info]   CI (99.9%): [4208.001, 4208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.670 ±(99.9%) 688.521 MB/sec [Average]
[info]   (min, avg, max) = (993.923, 1130.670, 1336.444), stdev = 178.807
[info]   CI (99.9%): [442.149, 1819.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4374.273 ±(99.9%) 2577.854 B/op [Average]
[info]   (min, avg, max) = (3858.911, 4374.273, 5166.933), stdev = 669.461
[info]   CI (99.9%): [1796.419, 6952.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.226 ±(99.9%) 0.259 B/op [Average]
[info]   (min, avg, max) = (0.161, 0.226, 0.323), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.485] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 13.000), stdev = 4.561
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 14.71% complete, ETA 00:15:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 375902.473 ops/s
[info] # Warmup Iteration   2: 605100.519 ops/s
[info] # Warmup Iteration   3: 614578.489 ops/s
[info] # Warmup Iteration   4: 633261.162 ops/s
[info] # Warmup Iteration   5: 641440.118 ops/s
[info] Iteration   1: 639428.237 ops/s
[info]                  ·gc.alloc.rate:                   2077.636 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.859 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4989.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 633588.095 ops/s
[info]                  ·gc.alloc.rate:                   2058.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5050.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 623348.077 ops/s
[info]                  ·gc.alloc.rate:                   2025.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5143.459 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.158 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 640987.773 ops/s
[info]                  ·gc.alloc.rate:                   2082.700 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.159 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5005.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.204 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 624477.531 ops/s
[info]                  ·gc.alloc.rate:                   2029.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              5112.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2042.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5145.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   632365.943 ±(99.9%) 31592.565 ops/s [Average]
[info]   (min, avg, max) = (623348.077, 632365.943, 640987.773), stdev = 8204.489
[info]   CI (99.9%): [600773.377, 663958.508] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2054.718 ±(99.9%) 102.648 MB/sec [Average]
[info]   (min, avg, max) = (2025.364, 2054.718, 2082.700), stdev = 26.657
[info]   CI (99.9%): [1952.070, 2157.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5112.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5112.001, 5112.001, 5112.001), stdev = 0.001
[info]   CI (99.9%): [5112.001, 5112.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2036.250 ±(99.9%) 21.561 MB/sec [Average]
[info]   (min, avg, max) = (2027.859, 2036.250, 2042.471), stdev = 5.599
[info]   CI (99.9%): [2014.689, 2057.811] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5066.816 ±(99.9%) 286.511 B/op [Average]
[info]   (min, avg, max) = (4989.526, 5066.816, 5145.675), stdev = 74.406
[info]   CI (99.9%): [4780.305, 5353.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.135 ±(99.9%) 0.226 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.135, 0.204), stdev = 0.059
[info]   CI (99.9%): [≈ 0, 0.361] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 9.800, 12.000), stdev = 3.033
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 16.18% complete, ETA 00:15:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 778682.789 ops/s
[info] # Warmup Iteration   2: 1195799.134 ops/s
[info] # Warmup Iteration   3: 1189601.117 ops/s
[info] # Warmup Iteration   4: 1201369.768 ops/s
[info] # Warmup Iteration   5: 1201061.269 ops/s
[info] Iteration   1: 1196787.473 ops/s
[info]                  ·gc.alloc.rate:                   1138.038 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1316.202 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1214697.742 ops/s
[info]                  ·gc.alloc.rate:                   1155.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1736.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1209949.527 ops/s
[info]                  ·gc.alloc.rate:                   1150.598 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.023 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1311.926 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 1194465.995 ops/s
[info]                  ·gc.alloc.rate:                   1135.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1332.884 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1172128.497 ops/s
[info]                  ·gc.alloc.rate:                   1114.545 MB/sec
[info]                  ·gc.alloc.rate.norm:              1496.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1814.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1197605.847 ±(99.9%) 63975.267 ops/s [Average]
[info]   (min, avg, max) = (1172128.497, 1197605.847, 1214697.742), stdev = 16614.174
[info]   CI (99.9%): [1133630.580, 1261581.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1138.810 ±(99.9%) 60.929 MB/sec [Average]
[info]   (min, avg, max) = (1114.545, 1138.810, 1155.061), stdev = 15.823
[info]   CI (99.9%): [1077.881, 1199.738] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1496.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1496.000, 1496.000, 1496.000), stdev = 0.001
[info]   CI (99.9%): [1496.000, 1496.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1142.911 ±(99.9%) 714.746 MB/sec [Average]
[info]   (min, avg, max) = (1001.262, 1142.911, 1351.779), stdev = 185.617
[info]   CI (99.9%): [428.164, 1857.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1502.330 ±(99.9%) 965.956 B/op [Average]
[info]   (min, avg, max) = (1311.926, 1502.330, 1814.429), stdev = 250.856
[info]   CI (99.9%): [536.373, 2468.286] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.091 B/op [Average]
[info]   (min, avg, max) = (0.027, 0.049, 0.084), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.808
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 17.65% complete, ETA 00:15:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2339575.603 ops/s
[info] # Warmup Iteration   2: 2701036.978 ops/s
[info] # Warmup Iteration   3: 2709625.003 ops/s
[info] # Warmup Iteration   4: 2727554.652 ops/s
[info] # Warmup Iteration   5: 2700569.626 ops/s
[info] Iteration   1: 2719034.591 ops/s
[info]                  ·gc.alloc.rate:                   1133.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     573.942 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2700371.736 ops/s
[info]                  ·gc.alloc.rate:                   1125.971 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.476 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 2752968.030 ops/s
[info]                  ·gc.alloc.rate:                   1147.894 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     572.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 2746528.978 ops/s
[info]                  ·gc.alloc.rate:                   1145.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     576.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2698055.713 ops/s
[info]                  ·gc.alloc.rate:                   1124.960 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.117 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     784.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2723391.810 ±(99.9%) 98189.689 ops/s [Average]
[info]   (min, avg, max) = (2698055.713, 2723391.810, 2752968.030), stdev = 25499.550
[info]   CI (99.9%): [2625202.121, 2821581.498] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1135.564 ±(99.9%) 40.984 MB/sec [Average]
[info]   (min, avg, max) = (1124.960, 1135.564, 1147.894), stdev = 10.643
[info]   CI (99.9%): [1094.580, 1176.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.151 ±(99.9%) 712.970 MB/sec [Average]
[info]   (min, avg, max) = (991.946, 1135.151, 1346.117), stdev = 185.156
[info]   CI (99.9%): [422.181, 1848.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   656.493 ±(99.9%) 433.577 B/op [Average]
[info]   (min, avg, max) = (572.603, 656.493, 784.964), stdev = 112.599
[info]   CI (99.9%): [222.916, 1090.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.031, 0.061), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.103] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 13.000), stdev = 4.438
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 19.12% complete, ETA 00:14:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111316.111 ops/s
[info] # Warmup Iteration   2: 216708.000 ops/s
[info] # Warmup Iteration   3: 227153.209 ops/s
[info] # Warmup Iteration   4: 224746.716 ops/s
[info] # Warmup Iteration   5: 226581.818 ops/s
[info] Iteration   1: 226252.100 ops/s
[info]                  ·gc.alloc.rate:                   1340.311 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9202.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 227195.773 ops/s
[info]                  ·gc.alloc.rate:                   1345.892 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9224.711 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 227430.836 ops/s
[info]                  ·gc.alloc.rate:                   1347.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9268.031 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.576 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 228917.324 ops/s
[info]                  ·gc.alloc.rate:               1356.077 MB/sec
[info]                  ·gc.alloc.rate.norm:          9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9251.387 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 225950.770 ops/s
[info]                  ·gc.alloc.rate:                   1338.409 MB/sec
[info]                  ·gc.alloc.rate.norm:              9320.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.038 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9400.981 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   227149.361 ±(99.9%) 4494.204 ops/s [Average]
[info]   (min, avg, max) = (225950.770, 227149.361, 228917.324), stdev = 1167.130
[info]   CI (99.9%): [222655.157, 231643.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1345.596 ±(99.9%) 26.706 MB/sec [Average]
[info]   (min, avg, max) = (1338.409, 1345.596, 1356.077), stdev = 6.936
[info]   CI (99.9%): [1318.890, 1372.302] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9320.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9320.002, 9320.002, 9320.002), stdev = 0.001
[info]   CI (99.9%): [9320.002, 9320.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1338.303 ±(99.9%) 41.231 MB/sec [Average]
[info]   (min, avg, max) = (1323.473, 1338.303, 1350.038), stdev = 10.707
[info]   CI (99.9%): [1297.072, 1379.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9269.605 ±(99.9%) 298.626 B/op [Average]
[info]   (min, avg, max) = (9202.913, 9269.605, 9400.981), stdev = 77.552
[info]   CI (99.9%): [8970.978, 9568.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.231 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.146), stdev = 0.060
[info]   CI (99.9%): [≈ 0, 0.285] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.375 ±(99.9%) 1.599 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.375, 1.009), stdev = 0.415
[info]   CI (99.9%): [≈ 0, 1.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.000, 16.000), stdev = 6.442
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 20.59% complete, ETA 00:14:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1122173.973 ops/s
[info] # Warmup Iteration   2: 1762919.428 ops/s
[info] # Warmup Iteration   3: 1761559.529 ops/s
[info] # Warmup Iteration   4: 1742948.498 ops/s
[info] # Warmup Iteration   5: 1750082.906 ops/s
[info] Iteration   1: 1736949.205 ops/s
[info]                  ·gc.alloc.rate:                   1121.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     905.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1772353.933 ops/s
[info]                  ·gc.alloc.rate:                   1144.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1189.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1739868.496 ops/s
[info]                  ·gc.alloc.rate:               1123.592 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 912.324 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 1746367.825 ops/s
[info]                  ·gc.alloc.rate:                   1127.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     911.643 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1739983.460 ops/s
[info]                  ·gc.alloc.rate:               1123.644 MB/sec
[info]                  ·gc.alloc.rate.norm:          1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1351.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1222.308 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1747104.584 ±(99.9%) 55942.963 ops/s [Average]
[info]   (min, avg, max) = (1736949.205, 1747104.584, 1772353.933), stdev = 14528.210
[info]   CI (99.9%): [1691161.621, 1803047.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1128.261 ±(99.9%) 36.207 MB/sec [Average]
[info]   (min, avg, max) = (1121.694, 1128.261, 1144.606), stdev = 9.403
[info]   CI (99.9%): [1092.055, 1164.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1142.493 ±(99.9%) 715.158 MB/sec [Average]
[info]   (min, avg, max) = (999.927, 1142.493, 1351.810), stdev = 185.724
[info]   CI (99.9%): [427.335, 1857.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1028.259 ±(99.9%) 625.810 B/op [Average]
[info]   (min, avg, max) = (905.707, 1028.259, 1222.308), stdev = 162.521
[info]   CI (99.9%): [402.449, 1654.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.055), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.550
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 22.06% complete, ETA 00:14:14
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5359945.507 ops/s
[info] # Warmup Iteration   2: 3624467.240 ops/s
[info] # Warmup Iteration   3: 3652813.366 ops/s
[info] # Warmup Iteration   4: 3645425.346 ops/s
[info] # Warmup Iteration   5: 3690275.911 ops/s
[info] Iteration   1: 3692975.321 ops/s
[info]                  ·gc.alloc.rate:                   488.254 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3688224.250 ops/s
[info]                  ·gc.alloc.rate:               487.625 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.147 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3677649.033 ops/s
[info]                  ·gc.alloc.rate:                   486.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.788 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279.663 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3616435.663 ops/s
[info]                  ·gc.alloc.rate:               478.143 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142.630 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 3513462.729 ops/s
[info]                  ·gc.alloc.rate:               464.507 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 146.819 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   3637749.399 ±(99.9%) 292566.881 ops/s [Average]
[info]   (min, avg, max) = (3513462.729, 3637749.399, 3692975.321), stdev = 75978.690
[info]   CI (99.9%): [3345182.518, 3930316.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   480.957 ±(99.9%) 38.714 MB/sec [Average]
[info]   (min, avg, max) = (464.507, 480.957, 488.254), stdev = 10.054
[info]   CI (99.9%): [442.243, 519.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.566 ±(99.9%) 686.765 MB/sec [Average]
[info]   (min, avg, max) = (326.208, 457.566, 653.788), stdev = 178.351
[info]   CI (99.9%): [≈ 0, 1144.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   197.210 ±(99.9%) 286.750 B/op [Average]
[info]   (min, avg, max) = (139.147, 197.210, 279.663), stdev = 74.468
[info]   CI (99.9%): [≈ 0, 483.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.036), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.079] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.140
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 23.53% complete, ETA 00:13:58
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 138604.186 ops/s
[info] # Warmup Iteration   2: 260961.856 ops/s
[info] # Warmup Iteration   3: 274168.396 ops/s
[info] # Warmup Iteration   4: 274144.360 ops/s
[info] # Warmup Iteration   5: 277642.166 ops/s
[info] Iteration   1: 274997.654 ops/s
[info]                  ·gc.alloc.rate:                   1290.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.474 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7571.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 279112.800 ops/s
[info]                  ·gc.alloc.rate:                   1308.513 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5628.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.587 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 274135.042 ops/s
[info]                  ·gc.alloc.rate:                   1286.664 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.164 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7679.550 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.239 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 276305.158 ops/s
[info]                  ·gc.alloc.rate:                   1296.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7657.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.356 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 277312.044 ops/s
[info]                  ·gc.alloc.rate:                   1301.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7655.799 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   276372.540 ±(99.9%) 7529.201 ops/s [Average]
[info]   (min, avg, max) = (274135.042, 276372.540, 279112.800), stdev = 1955.309
[info]   CI (99.9%): [268843.339, 283901.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1296.810 ±(99.9%) 33.278 MB/sec [Average]
[info]   (min, avg, max) = (1286.664, 1296.810, 1308.513), stdev = 8.642
[info]   CI (99.9%): [1263.532, 1330.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7384.002, 7384.002, 7384.002), stdev = 0.001
[info]   CI (99.9%): [7384.001, 7384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.641 ±(99.9%) 589.225 MB/sec [Average]
[info]   (min, avg, max) = (997.468, 1270.641, 1349.310), stdev = 153.020
[info]   CI (99.9%): [681.415, 1859.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7238.609 ±(99.9%) 3468.940 B/op [Average]
[info]   (min, avg, max) = (5628.761, 7238.609, 7679.550), stdev = 900.873
[info]   CI (99.9%): [3769.669, 10707.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.121 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.308 ±(99.9%) 0.683 B/op [Average]
[info]   (min, avg, max) = (0.118, 0.308, 0.587), stdev = 0.177
[info]   CI (99.9%): [≈ 0, 0.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.800, 17.000), stdev = 6.221
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 25.00% complete, ETA 00:13:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 361410.040 ops/s
[info] # Warmup Iteration   2: 550805.362 ops/s
[info] # Warmup Iteration   3: 560751.468 ops/s
[info] # Warmup Iteration   4: 555790.339 ops/s
[info] # Warmup Iteration   5: 556496.525 ops/s
[info] Iteration   1: 563841.615 ops/s
[info]                  ·gc.alloc.rate:                   1872.216 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4706.354 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 559783.780 ops/s
[info]                  ·gc.alloc.rate:                   1858.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5708.677 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 560597.712 ops/s
[info]                  ·gc.alloc.rate:                   1861.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.919 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 565330.586 ops/s
[info]                  ·gc.alloc.rate:                   1877.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5674.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 562019.142 ops/s
[info]                  ·gc.alloc.rate:                   1866.182 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4757.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   562314.567 ±(99.9%) 8795.159 ops/s [Average]
[info]   (min, avg, max) = (559783.780, 562314.567, 565330.586), stdev = 2284.075
[info]   CI (99.9%): [553519.408, 571109.726] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1867.136 ±(99.9%) 29.265 MB/sec [Average]
[info]   (min, avg, max) = (1858.746, 1867.136, 1877.168), stdev = 7.600
[info]   CI (99.9%): [1837.871, 1896.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.527 ±(99.9%) 719.677 MB/sec [Average]
[info]   (min, avg, max) = (1686.698, 1830.527, 2039.151), stdev = 186.898
[info]   CI (99.9%): [1110.849, 2550.204] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5121.472 ±(99.9%) 2006.766 B/op [Average]
[info]   (min, avg, max) = (4706.354, 5121.472, 5708.677), stdev = 521.151
[info]   CI (99.9%): [3114.706, 7128.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.151 ±(99.9%) 0.339 B/op [Average]
[info]   (min, avg, max) = (0.058, 0.151, 0.291), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.400, 9.000), stdev = 1.517
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 26.47% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 411120.717 ops/s
[info] # Warmup Iteration   2: 680065.682 ops/s
[info] # Warmup Iteration   3: 683033.166 ops/s
[info] # Warmup Iteration   4: 685468.048 ops/s
[info] # Warmup Iteration   5: 693673.885 ops/s
[info] Iteration   1: 692668.494 ops/s
[info]                  ·gc.alloc.rate:                   866.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 692614.481 ops/s
[info]                  ·gc.alloc.rate:                   866.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2266.795 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 690517.636 ops/s
[info]                  ·gc.alloc.rate:               863.843 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2282.239 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 694278.541 ops/s
[info]                  ·gc.alloc.rate:               868.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1519.185 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 693404.982 ops/s
[info]                  ·gc.alloc.rate:               867.399 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2287.675 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   692696.827 ±(99.9%) 5363.244 ops/s [Average]
[info]   (min, avg, max) = (690517.636, 692696.827, 694278.541), stdev = 1392.817
[info]   CI (99.9%): [687333.583, 698060.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   866.520 ±(99.9%) 6.611 MB/sec [Average]
[info]   (min, avg, max) = (863.843, 866.520, 868.479), stdev = 1.717
[info]   CI (99.9%): [859.909, 873.131] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   868.037 ±(99.9%) 710.150 MB/sec [Average]
[info]   (min, avg, max) = (661.742, 868.037, 1008.296), stdev = 184.424
[info]   CI (99.9%): [157.887, 1578.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1971.780 ±(99.9%) 1619.788 B/op [Average]
[info]   (min, avg, max) = (1503.006, 1971.780, 2287.675), stdev = 420.654
[info]   CI (99.9%): [351.991, 3591.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.200 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.038, 0.095), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.800, 10.000), stdev = 2.775
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 27.94% complete, ETA 00:13:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4164149.656 ops/s
[info] # Warmup Iteration   2: 4433185.253 ops/s
[info] # Warmup Iteration   3: 4422583.618 ops/s
[info] # Warmup Iteration   4: 4398660.303 ops/s
[info] # Warmup Iteration   5: 4444119.971 ops/s
[info] Iteration   1: 4439397.314 ops/s
[info]                  ·gc.alloc.rate:      203.166 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4450873.304 ops/s
[info]                  ·gc.alloc.rate:               203.691 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 90.454 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   3: 4375828.389 ops/s
[info]                  ·gc.alloc.rate:                   200.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     92.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4332516.780 ops/s
[info]                  ·gc.alloc.rate:                   198.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.213 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.794 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 4333444.972 ops/s
[info]                  ·gc.alloc.rate:      198.317 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4386412.152 ±(99.9%) 217696.937 ops/s [Average]
[info]   (min, avg, max) = (4332516.780, 4386412.152, 4450873.304), stdev = 56535.203
[info]   CI (99.9%): [4168715.215, 4604109.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   200.742 ±(99.9%) 9.959 MB/sec [Average]
[info]   (min, avg, max) = (198.278, 200.742, 203.691), stdev = 2.586
[info]   CI (99.9%): [190.783, 210.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.468 ±(99.9%) 598.769 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.468, 325.542), stdev = 155.498
[info]   CI (99.9%): [≈ 0, 766.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   60.135 ±(99.9%) 215.606 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 60.135, 118.213), stdev = 55.992
[info]   CI (99.9%): [≈ 0, 275.741] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.444 ±(99.9%) 3.753 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.444, 2.187), stdev = 0.975
[info]   CI (99.9%): [≈ 0, 4.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.161 ±(99.9%) 1.363 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.161, 0.794), stdev = 0.354
[info]   CI (99.9%): [≈ 0, 1.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.800, 4.000), stdev = 1.789
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 29.41% complete, ETA 00:12:53
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96113.819 ops/s
[info] # Warmup Iteration   2: 213124.602 ops/s
[info] # Warmup Iteration   3: 217286.413 ops/s
[info] # Warmup Iteration   4: 215553.116 ops/s
[info] # Warmup Iteration   5: 215126.537 ops/s
[info] Iteration   1: 216060.033 ops/s
[info]                  ·gc.alloc.rate:                   1186.562 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.523 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9608.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 215819.815 ops/s
[info]                  ·gc.alloc.rate:                   1185.205 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7255.228 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.759 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 213779.742 ops/s
[info]                  ·gc.alloc.rate:                   1174.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9823.427 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.766 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 216931.844 ops/s
[info]                  ·gc.alloc.rate:                   1191.354 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7292.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 213641.321 ops/s
[info]                  ·gc.alloc.rate:                   1173.253 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9913.292 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.307 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   215246.551 ±(99.9%) 5632.641 ops/s [Average]
[info]   (min, avg, max) = (213641.321, 215246.551, 216931.844), stdev = 1462.779
[info]   CI (99.9%): [209613.910, 220879.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1182.079 ±(99.9%) 30.970 MB/sec [Average]
[info]   (min, avg, max) = (1173.253, 1182.079, 1191.354), stdev = 8.043
[info]   CI (99.9%): [1151.108, 1213.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.266 ±(99.9%) 703.595 MB/sec [Average]
[info]   (min, avg, max) = (995.247, 1200.266, 1346.157), stdev = 182.721
[info]   CI (99.9%): [496.671, 1903.861] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8778.566 ±(99.9%) 5306.305 B/op [Average]
[info]   (min, avg, max) = (7255.228, 8778.566, 9913.292), stdev = 1378.031
[info]   CI (99.9%): [3472.261, 14084.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.164 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.427 ±(99.9%) 1.205 B/op [Average]
[info]   (min, avg, max) = (0.151, 0.427, 0.766), stdev = 0.313
[info]   CI (99.9%): [≈ 0, 1.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 12.000), stdev = 3.286
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.88% complete, ETA 00:12:37
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3035529.453 ops/s
[info] # Warmup Iteration   2: 3301652.522 ops/s
[info] # Warmup Iteration   3: 3335642.700 ops/s
[info] # Warmup Iteration   4: 3331617.366 ops/s
[info] # Warmup Iteration   5: 3384670.882 ops/s
[info] Iteration   1: 3359918.523 ops/s
[info]                  ·gc.alloc.rate:                   1008.001 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     462.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3316424.688 ops/s
[info]                  ·gc.alloc.rate:                   994.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     471.195 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 3340538.223 ops/s
[info]                  ·gc.alloc.rate:                   1002.177 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     470.001 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3315762.357 ops/s
[info]                  ·gc.alloc.rate:                   994.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 3373233.744 ops/s
[info]                  ·gc.alloc.rate:                   1012.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     469.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3341175.507 ±(99.9%) 98884.891 ops/s [Average]
[info]   (min, avg, max) = (3315762.357, 3341175.507, 3373233.744), stdev = 25680.092
[info]   CI (99.9%): [3242290.616, 3440060.398] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1002.393 ±(99.9%) 29.668 MB/sec [Average]
[info]   (min, avg, max) = (994.779, 1002.393, 1012.034), stdev = 7.705
[info]   CI (99.9%): [972.726, 1032.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   997.467 ±(99.9%) 27.660 MB/sec [Average]
[info]   (min, avg, max) = (987.925, 997.467, 1006.288), stdev = 7.183
[info]   CI (99.9%): [969.807, 1025.127] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   469.700 ±(99.9%) 17.772 B/op [Average]
[info]   (min, avg, max) = (462.599, 469.700, 475.385), stdev = 4.615
[info]   CI (99.9%): [451.928, 487.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.027, 0.039), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 3.493
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 32.35% complete, ETA 00:12:21
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145641.129 ops/s
[info] # Warmup Iteration   2: 231772.543 ops/s
[info] # Warmup Iteration   3: 243087.310 ops/s
[info] # Warmup Iteration   4: 243915.713 ops/s
[info] # Warmup Iteration   5: 238848.549 ops/s
[info] Iteration   1: 241468.706 ops/s
[info]                  ·gc.alloc.rate:                   1297.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8622.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 240942.775 ops/s
[info]                  ·gc.alloc.rate:                   1295.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.833 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8702.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.680 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 242706.632 ops/s
[info]                  ·gc.alloc.rate:                   1304.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.794 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8685.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 239486.558 ops/s
[info]                  ·gc.alloc.rate:                   1287.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8843.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 242250.493 ops/s
[info]                  ·gc.alloc.rate:                   1302.061 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.174 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8768.465 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.270 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   241371.033 ±(99.9%) 4833.083 ops/s [Average]
[info]   (min, avg, max) = (239486.558, 241371.033, 242706.632), stdev = 1255.136
[info]   CI (99.9%): [236537.950, 246204.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1297.295 ±(99.9%) 26.133 MB/sec [Average]
[info]   (min, avg, max) = (1287.060, 1297.295, 1304.468), stdev = 6.787
[info]   CI (99.9%): [1271.163, 1323.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.445 ±(99.9%) 40.945 MB/sec [Average]
[info]   (min, avg, max) = (1323.453, 1338.445, 1350.174), stdev = 10.633
[info]   CI (99.9%): [1297.500, 1379.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8724.423 ±(99.9%) 324.125 B/op [Average]
[info]   (min, avg, max) = (8622.929, 8724.423, 8843.053), stdev = 84.174
[info]   CI (99.9%): [8400.298, 9048.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.326 ±(99.9%) 0.794 B/op [Average]
[info]   (min, avg, max) = (0.137, 0.326, 0.680), stdev = 0.206
[info]   CI (99.9%): [≈ 0, 1.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 12.000), stdev = 3.701
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 33.82% complete, ETA 00:12:05
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 340953.428 ops/s
[info] # Warmup Iteration   2: 543704.474 ops/s
[info] # Warmup Iteration   3: 529868.597 ops/s
[info] # Warmup Iteration   4: 538979.221 ops/s
[info] # Warmup Iteration   5: 537369.415 ops/s
[info] Iteration   1: 539842.768 ops/s
[info]                  ·gc.alloc.rate:                   1896.810 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.512 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5900.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 542400.333 ops/s
[info]                  ·gc.alloc.rate:                   1911.555 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2020.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5842.972 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.041 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 550707.896 ops/s
[info]                  ·gc.alloc.rate:                   1935.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.651 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4846.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 540237.851 ops/s
[info]                  ·gc.alloc.rate:                   1898.198 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.189 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5938.598 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.121 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 544324.465 ops/s
[info]                  ·gc.alloc.rate:                   1912.516 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4915.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   543502.663 ±(99.9%) 16988.683 ops/s [Average]
[info]   (min, avg, max) = (539842.768, 543502.663, 550707.896), stdev = 4411.907
[info]   CI (99.9%): [526513.979, 560491.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1910.825 ±(99.9%) 59.215 MB/sec [Average]
[info]   (min, avg, max) = (1896.810, 1910.825, 1935.047), stdev = 15.378
[info]   CI (99.9%): [1851.610, 1970.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5528.001, 5528.001, 5528.001), stdev = 0.001
[info]   CI (99.9%): [5528.001, 5528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1896.289 ±(99.9%) 695.313 MB/sec [Average]
[info]   (min, avg, max) = (1696.651, 1896.289, 2039.189), stdev = 180.571
[info]   CI (99.9%): [1200.976, 2591.602] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5488.848 ±(99.9%) 2141.850 B/op [Average]
[info]   (min, avg, max) = (4846.956, 5488.848, 5938.598), stdev = 556.232
[info]   CI (99.9%): [3346.998, 7630.698] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.120 ±(99.9%) 0.284 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.120, 0.241), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 13.000), stdev = 3.962
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 35.29% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 288272.504 ops/s
[info] # Warmup Iteration   2: 528926.925 ops/s
[info] # Warmup Iteration   3: 534537.417 ops/s
[info] # Warmup Iteration   4: 534100.065 ops/s
[info] # Warmup Iteration   5: 534372.484 ops/s
[info] Iteration   1: 532524.499 ops/s
[info]                  ·gc.alloc.rate:                   541.588 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1930.367 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.123 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 532209.655 ops/s
[info]                  ·gc.alloc.rate:                   541.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.418 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1940.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 540460.571 ops/s
[info]                  ·gc.alloc.rate:               549.663 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 957.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 532258.766 ops/s
[info]                  ·gc.alloc.rate:               541.301 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1952.072 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 531304.796 ops/s
[info]                  ·gc.alloc.rate:                   540.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.069 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1963.492 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   533751.657 ±(99.9%) 14549.763 ops/s [Average]
[info]   (min, avg, max) = (531304.796, 533751.657, 540460.571), stdev = 3778.527
[info]   CI (99.9%): [519201.894, 548301.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   542.826 ±(99.9%) 14.831 MB/sec [Average]
[info]   (min, avg, max) = (540.318, 542.826, 549.663), stdev = 3.852
[info]   CI (99.9%): [527.994, 557.657] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   592.440 ±(99.9%) 567.492 MB/sec [Average]
[info]   (min, avg, max) = (328.889, 592.440, 663.069), stdev = 147.376
[info]   CI (99.9%): [24.949, 1159.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1748.741 ±(99.9%) 1704.186 B/op [Average]
[info]   (min, avg, max) = (957.357, 1748.741, 1963.492), stdev = 442.572
[info]   CI (99.9%): [44.555, 3452.927] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.492 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.308), stdev = 0.128
[info]   CI (99.9%): [≈ 0, 0.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 1.643
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 36.76% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2592671.164 ops/s
[info] # Warmup Iteration   2: 2437976.762 ops/s
[info] # Warmup Iteration   3: 2446149.839 ops/s
[info] # Warmup Iteration   4: 2441879.377 ops/s
[info] # Warmup Iteration   5: 2479654.181 ops/s
[info] Iteration   1: 2423104.288 ops/s
[info]                  ·gc.alloc.rate:                   653.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 2444556.403 ops/s
[info]                  ·gc.alloc.rate:                   658.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.656 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2440704.398 ops/s
[info]                  ·gc.alloc.rate:               657.783 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 423.334 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2460513.203 ops/s
[info]                  ·gc.alloc.rate:                   663.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     421.422 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 2474096.412 ops/s
[info]                  ·gc.alloc.rate:               666.768 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      661.729 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 420.796 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2448594.941 ±(99.9%) 75080.493 ops/s [Average]
[info]   (min, avg, max) = (2423104.288, 2448594.941, 2474096.412), stdev = 19498.166
[info]   CI (99.9%): [2373514.448, 2523675.434] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   659.888 ±(99.9%) 20.243 MB/sec [Average]
[info]   (min, avg, max) = (653.027, 659.888, 666.768), stdev = 5.257
[info]   CI (99.9%): [639.645, 680.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.058 ±(99.9%) 13.292 MB/sec [Average]
[info]   (min, avg, max) = (653.072, 657.058, 661.729), stdev = 3.452
[info]   CI (99.9%): [643.765, 670.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   422.190 ±(99.9%) 5.412 B/op [Average]
[info]   (min, avg, max) = (420.796, 422.190, 424.029), stdev = 1.405
[info]   CI (99.9%): [416.778, 427.601] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.078 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.041), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.000, 9.000), stdev = 3.162
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 38.24% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68452.617 ops/s
[info] # Warmup Iteration   2: 175478.669 ops/s
[info] # Warmup Iteration   3: 182413.667 ops/s
[info] # Warmup Iteration   4: 180494.443 ops/s
[info] # Warmup Iteration   5: 180386.258 ops/s
[info] Iteration   1: 179685.605 ops/s
[info]                  ·gc.alloc.rate:                   1267.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11564.812 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.729 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 182686.237 ops/s
[info]                  ·gc.alloc.rate:                   1288.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11460.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.897 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 182074.295 ops/s
[info]                  ·gc.alloc.rate:                   1284.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11562.805 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.360 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 180147.800 ops/s
[info]                  ·gc.alloc.rate:                   1270.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8805.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.727 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 179776.445 ops/s
[info]                  ·gc.alloc.rate:                   1267.944 MB/sec
[info]                  ·gc.alloc.rate.norm:              11096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11800.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.364 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   180874.076 ±(99.9%) 5400.926 ops/s [Average]
[info]   (min, avg, max) = (179685.605, 180874.076, 182686.237), stdev = 1402.603
[info]   CI (99.9%): [175473.151, 186275.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1275.703 ±(99.9%) 38.115 MB/sec [Average]
[info]   (min, avg, max) = (1267.347, 1275.703, 1288.514), stdev = 9.898
[info]   CI (99.9%): [1237.588, 1313.818] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   11096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11096.002, 11096.002, 11096.003), stdev = 0.001
[info]   CI (99.9%): [11096.002, 11096.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.334 ±(99.9%) 563.367 MB/sec [Average]
[info]   (min, avg, max) = (1008.238, 1269.334, 1348.473), stdev = 146.305
[info]   CI (99.9%): [705.967, 1832.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11038.878 ±(99.9%) 4832.283 B/op [Average]
[info]   (min, avg, max) = (8805.108, 11038.878, 11800.723), stdev = 1254.929
[info]   CI (99.9%): [6206.595, 15871.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.071, 0.104), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.616 ±(99.9%) 0.929 B/op [Average]
[info]   (min, avg, max) = (0.360, 0.616, 0.897), stdev = 0.241
[info]   CI (99.9%): [≈ 0, 1.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 15.000), stdev = 5.413
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 39.71% complete, ETA 00:11:00
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 228811.421 ops/s
[info] # Warmup Iteration   2: 473127.712 ops/s
[info] # Warmup Iteration   3: 470959.840 ops/s
[info] # Warmup Iteration   4: 479821.820 ops/s
[info] # Warmup Iteration   5: 466003.107 ops/s
[info] Iteration   1: 472501.808 ops/s
[info]                  ·gc.alloc.rate:                   1679.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1681.698 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5599.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 470666.738 ops/s
[info]                  ·gc.alloc.rate:                   1672.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5646.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.139 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 468112.153 ops/s
[info]                  ·gc.alloc.rate:                   1663.782 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4553.378 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 472015.540 ops/s
[info]                  ·gc.alloc.rate:                   1677.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.010 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5652.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.208 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 473542.037 ops/s
[info]                  ·gc.alloc.rate:                   1683.221 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5645.659 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   471367.655 ±(99.9%) 8059.623 ops/s [Average]
[info]   (min, avg, max) = (468112.153, 471367.655, 473542.037), stdev = 2093.058
[info]   CI (99.9%): [463308.032, 479427.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1675.440 ±(99.9%) 28.830 MB/sec [Average]
[info]   (min, avg, max) = (1663.782, 1675.440, 1683.221), stdev = 7.487
[info]   CI (99.9%): [1646.610, 1704.270] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1624.249 ±(99.9%) 580.675 MB/sec [Average]
[info]   (min, avg, max) = (1354.762, 1624.249, 1699.372), stdev = 150.799
[info]   CI (99.9%): [1043.574, 2204.924] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5419.644 ±(99.9%) 1866.528 B/op [Average]
[info]   (min, avg, max) = (4553.378, 5419.644, 5652.850), stdev = 484.731
[info]   CI (99.9%): [3553.116, 7286.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.223 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.153, 0.208), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 9.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 41.18% complete, ETA 00:10:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 160009.535 ops/s
[info] # Warmup Iteration   2: 893373.940 ops/s
[info] # Warmup Iteration   3: 901371.510 ops/s
[info] # Warmup Iteration   4: 906094.109 ops/s
[info] # Warmup Iteration   5: 921904.737 ops/s
[info] Iteration   1: 911496.641 ops/s
[info]                  ·gc.alloc.rate:                   1075.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2289.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.146 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 896955.560 ops/s
[info]                  ·gc.alloc.rate:                   1058.166 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1755.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 901126.812 ops/s
[info]                  ·gc.alloc.rate:               1063.082 MB/sec
[info]                  ·gc.alloc.rate.norm:          1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1004.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1753.915 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 918714.513 ops/s
[info]                  ·gc.alloc.rate:                   1083.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1726.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 920952.529 ops/s
[info]                  ·gc.alloc.rate:                   1086.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1727.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   909849.211 ±(99.9%) 40702.132 ops/s [Average]
[info]   (min, avg, max) = (896955.560, 909849.211, 920952.529), stdev = 10570.215
[info]   CI (99.9%): [869147.079, 950551.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1073.379 ±(99.9%) 48.033 MB/sec [Average]
[info]   (min, avg, max) = (1058.166, 1073.379, 1086.467), stdev = 12.474
[info]   CI (99.9%): [1025.347, 1121.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.072 ±(99.9%) 551.515 MB/sec [Average]
[info]   (min, avg, max) = (1000.626, 1070.072, 1326.191), stdev = 143.227
[info]   CI (99.9%): [518.557, 1621.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1850.212 ±(99.9%) 946.060 B/op [Average]
[info]   (min, avg, max) = (1726.030, 1850.212, 2289.000), stdev = 245.689
[info]   CI (99.9%): [904.152, 2796.272] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.223 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.146), stdev = 0.058
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.384 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.252), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 9.200, 12.000), stdev = 2.775
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 42.65% complete, ETA 00:10:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2446993.179 ops/s
[info] # Warmup Iteration   2: 3215599.012 ops/s
[info] # Warmup Iteration   3: 3202423.851 ops/s
[info] # Warmup Iteration   4: 3184861.560 ops/s
[info] # Warmup Iteration   5: 3178304.291 ops/s
[info] Iteration   1: 3208762.427 ops/s
[info]                  ·gc.alloc.rate:               799.532 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 321.185 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3210441.620 ops/s
[info]                  ·gc.alloc.rate:                   799.908 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3196186.445 ops/s
[info]                  ·gc.alloc.rate:                   796.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.072 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3200044.857 ops/s
[info]                  ·gc.alloc.rate:                   797.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     325.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3201181.103 ops/s
[info]                  ·gc.alloc.rate:                   797.586 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490.456 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3203323.291 ±(99.9%) 23305.661 ops/s [Average]
[info]   (min, avg, max) = (3196186.445, 3203323.291, 3210441.620), stdev = 6052.406
[info]   CI (99.9%): [3180017.630, 3226628.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   798.156 ±(99.9%) 5.782 MB/sec [Average]
[info]   (min, avg, max) = (796.399, 798.156, 799.908), stdev = 1.501
[info]   CI (99.9%): [792.374, 803.938] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.495 ±(99.9%) 701.336 MB/sec [Average]
[info]   (min, avg, max) = (655.096, 792.495, 997.909), stdev = 182.135
[info]   CI (99.9%): [91.159, 1493.832] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   389.176 ±(99.9%) 343.433 B/op [Average]
[info]   (min, avg, max) = (321.185, 389.176, 490.456), stdev = 89.189
[info]   CI (99.9%): [45.743, 732.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.041), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 44.12% complete, ETA 00:10:12
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 147508.763 ops/s
[info] # Warmup Iteration   2: 244533.518 ops/s
[info] # Warmup Iteration   3: 249588.359 ops/s
[info] # Warmup Iteration   4: 251135.408 ops/s
[info] # Warmup Iteration   5: 253409.955 ops/s
[info] Iteration   1: 254673.350 ops/s
[info]                  ·gc.alloc.rate:                   1310.532 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.827 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8178.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 254280.226 ops/s
[info]                  ·gc.alloc.rate:                   1308.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8246.212 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 250684.819 ops/s
[info]                  ·gc.alloc.rate:                   1290.085 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.860 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8408.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.392 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 257014.854 ops/s
[info]                  ·gc.alloc.rate:                   1322.491 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.007 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8239.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 253352.980 ops/s
[info]                  ·gc.alloc.rate:                   1303.775 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8384.172 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   254001.246 ±(99.9%) 8829.302 ops/s [Average]
[info]   (min, avg, max) = (250684.819, 254001.246, 257014.854), stdev = 2292.942
[info]   CI (99.9%): [245171.944, 262830.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1307.088 ±(99.9%) 45.207 MB/sec [Average]
[info]   (min, avg, max) = (1290.085, 1307.088, 1322.491), stdev = 11.740
[info]   CI (99.9%): [1261.881, 1352.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.001, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.543 ±(99.9%) 40.479 MB/sec [Average]
[info]   (min, avg, max) = (1323.827, 1338.543, 1350.182), stdev = 10.512
[info]   CI (99.9%): [1298.064, 1379.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8291.370 ±(99.9%) 384.117 B/op [Average]
[info]   (min, avg, max) = (8178.138, 8291.370, 8408.365), stdev = 99.754
[info]   CI (99.9%): [7907.253, 8675.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.233 ±(99.9%) 0.550 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.233, 0.392), stdev = 0.143
[info]   CI (99.9%): [≈ 0, 0.783] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 11.000), stdev = 3.271
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 45.59% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 46794.645 ops/s
[info] # Warmup Iteration   2: 612484.597 ops/s
[info] # Warmup Iteration   3: 672555.984 ops/s
[info] # Warmup Iteration   4: 673972.545 ops/s
[info] # Warmup Iteration   5: 674217.702 ops/s
[info] Iteration   1: 679088.353 ops/s
[info]                  ·gc.alloc.rate:                   880.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2288.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 677759.042 ops/s
[info]                  ·gc.alloc.rate:                   878.853 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.300 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2305.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 681259.290 ops/s
[info]                  ·gc.alloc.rate:               883.351 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      665.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1537.456 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 675056.536 ops/s
[info]                  ·gc.alloc.rate:                   875.318 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2334.352 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.146 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 665909.068 ops/s
[info]                  ·gc.alloc.rate:                   863.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.568 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2375.838 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   675814.458 ±(99.9%) 23010.392 ops/s [Average]
[info]   (min, avg, max) = (665909.068, 675814.458, 681259.290), stdev = 5975.726
[info]   CI (99.9%): [652804.066, 698824.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   876.298 ±(99.9%) 29.887 MB/sec [Average]
[info]   (min, avg, max) = (863.426, 876.298, 883.351), stdev = 7.761
[info]   CI (99.9%): [846.412, 906.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   930.837 ±(99.9%) 571.255 MB/sec [Average]
[info]   (min, avg, max) = (665.742, 930.837, 1005.568), stdev = 148.353
[info]   CI (99.9%): [359.582, 1502.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2168.431 ±(99.9%) 1364.140 B/op [Average]
[info]   (min, avg, max) = (1537.456, 2168.431, 2375.838), stdev = 354.263
[info]   CI (99.9%): [804.291, 3532.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.257 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.167), stdev = 0.067
[info]   CI (99.9%): [≈ 0, 0.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.126 ±(99.9%) 0.597 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.126, 0.387), stdev = 0.155
[info]   CI (99.9%): [≈ 0, 0.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 10.000), stdev = 2.588
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 47.06% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2085138.239 ops/s
[info] # Warmup Iteration   2: 2287093.884 ops/s
[info] # Warmup Iteration   3: 2313988.456 ops/s
[info] # Warmup Iteration   4: 2298780.494 ops/s
[info] # Warmup Iteration   5: 2295821.878 ops/s
[info] Iteration   1: 2320530.533 ops/s
[info]                  ·gc.alloc.rate:                   1097.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     895.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 2340166.895 ops/s
[info]                  ·gc.alloc.rate:                   1106.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     669.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2304887.621 ops/s
[info]                  ·gc.alloc.rate:                   1089.976 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     683.461 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2333625.429 ops/s
[info]                  ·gc.alloc.rate:                   1103.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.521 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     903.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 2334868.429 ops/s
[info]                  ·gc.alloc.rate:                   1104.172 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     679.854 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2326815.781 ±(99.9%) 54789.442 ops/s [Average]
[info]   (min, avg, max) = (2304887.621, 2326815.781, 2340166.895), stdev = 14228.644
[info]   CI (99.9%): [2272026.339, 2381605.224] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1100.363 ±(99.9%) 25.955 MB/sec [Average]
[info]   (min, avg, max) = (1089.976, 1100.363, 1106.674), stdev = 6.740
[info]   CI (99.9%): [1074.408, 1126.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1133.515 ±(99.9%) 693.798 MB/sec [Average]
[info]   (min, avg, max) = (995.964, 1133.515, 1340.521), stdev = 180.177
[info]   CI (99.9%): [439.717, 1827.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   766.419 ±(99.9%) 468.711 B/op [Average]
[info]   (min, avg, max) = (669.572, 766.419, 903.709), stdev = 121.723
[info]   CI (99.9%): [297.709, 1235.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.046 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.031, 0.043), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 9.000), stdev = 2.915
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 48.53% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123003.247 ops/s
[info] # Warmup Iteration   2: 216655.707 ops/s
[info] # Warmup Iteration   3: 225854.225 ops/s
[info] # Warmup Iteration   4: 224708.251 ops/s
[info] # Warmup Iteration   5: 223980.431 ops/s
[info] Iteration   1: 226945.904 ops/s
[info]                  ·gc.alloc.rate:                   1193.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9142.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 224578.930 ops/s
[info]                  ·gc.alloc.rate:                   1180.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9306.266 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.729 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 226026.527 ops/s
[info]                  ·gc.alloc.rate:                   1188.417 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6971.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.580 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 227264.610 ops/s
[info]                  ·gc.alloc.rate:               1194.872 MB/sec
[info]                  ·gc.alloc.rate.norm:          8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9286.496 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 228636.707 ops/s
[info]                  ·gc.alloc.rate:                   1202.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              8272.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6951.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.287 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   226690.536 ±(99.9%) 5802.265 ops/s [Average]
[info]   (min, avg, max) = (224578.930, 226690.536, 228636.707), stdev = 1506.830
[info]   CI (99.9%): [220888.271, 232492.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1191.910 ±(99.9%) 30.464 MB/sec [Average]
[info]   (min, avg, max) = (1180.837, 1191.910, 1202.153), stdev = 7.911
[info]   CI (99.9%): [1161.446, 1222.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8272.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8272.002, 8272.002, 8272.002), stdev = 0.001
[info]   CI (99.9%): [8272.002, 8272.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.123 ±(99.9%) 683.370 MB/sec [Average]
[info]   (min, avg, max) = (1001.607, 1200.123, 1341.414), stdev = 177.469
[info]   CI (99.9%): [516.753, 1883.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8331.731 ±(99.9%) 4822.047 B/op [Average]
[info]   (min, avg, max) = (6951.713, 8331.731, 9306.266), stdev = 1252.270
[info]   CI (99.9%): [3509.684, 13153.779] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.377 ±(99.9%) 1.095 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.377, 0.729), stdev = 0.284
[info]   CI (99.9%): [≈ 0, 1.472] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 10.000), stdev = 3.435
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce
[info] # Run progress: 50.00% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 63627.648 ops/s
[info] # Warmup Iteration   2: 420724.045 ops/s
[info] # Warmup Iteration   3: 435599.641 ops/s
[info] # Warmup Iteration   4: 434594.923 ops/s
[info] # Warmup Iteration   5: 434971.667 ops/s
[info] Iteration   1: 437801.306 ops/s
[info]                  ·gc.alloc.rate:                   1295.667 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.488 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4791.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.150 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 441079.894 ops/s
[info]                  ·gc.alloc.rate:                   1305.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.814 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4782.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.223 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 442085.303 ops/s
[info]                  ·gc.alloc.rate:               1308.298 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1346.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4790.520 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 434887.124 ops/s
[info]                  ·gc.alloc.rate:                   1287.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3664.419 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 436790.612 ops/s
[info]                  ·gc.alloc.rate:               1292.693 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1353.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4875.110 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce":
[info]   438528.848 ±(99.9%) 11546.980 ops/s [Average]
[info]   (min, avg, max) = (434887.124, 438528.848, 442085.303), stdev = 2998.714
[info]   CI (99.9%): [426981.867, 450075.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1297.811 ±(99.9%) 34.119 MB/sec [Average]
[info]   (min, avg, max) = (1287.031, 1297.811, 1308.298), stdev = 8.861
[info]   CI (99.9%): [1263.692, 1331.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1277.372 ±(99.9%) 569.921 MB/sec [Average]
[info]   (min, avg, max) = (1012.934, 1277.372, 1353.527), stdev = 148.007
[info]   CI (99.9%): [707.451, 1847.293] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4580.880 ±(99.9%) 1978.104 B/op [Average]
[info]   (min, avg, max) = (3664.419, 4580.880, 4875.110), stdev = 513.707
[info]   CI (99.9%): [2602.776, 6558.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.105 ±(99.9%) 0.385 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.105, 0.223), stdev = 0.100
[info]   CI (99.9%): [≈ 0, 0.490] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 11.000), stdev = 3.742
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 51.47% complete, ETA 00:08:51
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 632504.084 ops/s
[info] # Warmup Iteration   2: 1000260.954 ops/s
[info] # Warmup Iteration   3: 1006900.879 ops/s
[info] # Warmup Iteration   4: 1001305.998 ops/s
[info] # Warmup Iteration   5: 1002690.240 ops/s
[info] Iteration   1: 1010721.991 ops/s
[info]                  ·gc.alloc.rate:                   776.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1004584.744 ops/s
[info]                  ·gc.alloc.rate:                   771.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1038.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1001240.725 ops/s
[info]                  ·gc.alloc.rate:                   768.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1569.159 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1003489.023 ops/s
[info]                  ·gc.alloc.rate:                   770.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1047.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1010675.089 ops/s
[info]                  ·gc.alloc.rate:               775.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      670.392 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1043.606 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   1006142.315 ±(99.9%) 16675.004 ops/s [Average]
[info]   (min, avg, max) = (1001240.725, 1006142.315, 1010721.991), stdev = 4330.445
[info]   CI (99.9%): [989467.311, 1022817.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   772.544 ±(99.9%) 12.770 MB/sec [Average]
[info]   (min, avg, max) = (768.783, 772.544, 776.065), stdev = 3.316
[info]   CI (99.9%): [759.774, 785.314] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.000), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   732.185 ±(99.9%) 573.745 MB/sec [Average]
[info]   (min, avg, max) = (660.407, 732.185, 998.628), stdev = 149.000
[info]   CI (99.9%): [158.439, 1305.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1145.419 ±(99.9%) 912.583 B/op [Average]
[info]   (min, avg, max) = (1027.970, 1145.419, 1569.159), stdev = 236.995
[info]   CI (99.9%): [232.836, 2058.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.143 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.098), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   9.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 52.94% complete, ETA 00:08:35
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3081498.793 ops/s
[info] # Warmup Iteration   2: 3376213.273 ops/s
[info] # Warmup Iteration   3: 3312863.260 ops/s
[info] # Warmup Iteration   4: 3365089.655 ops/s
[info] # Warmup Iteration   5: 3337912.697 ops/s
[info] Iteration   1: 3334474.734 ops/s
[info]                  ·gc.alloc.rate:      101.738 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3326415.264 ops/s
[info]                  ·gc.alloc.rate:               101.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 121.035 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3326380.849 ops/s
[info]                  ·gc.alloc.rate:      101.488 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 3339000.531 ops/s
[info]                  ·gc.alloc.rate:      101.873 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3325029.764 ops/s
[info]                  ·gc.alloc.rate:                   101.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   3330260.228 ±(99.9%) 23685.846 ops/s [Average]
[info]   (min, avg, max) = (3325029.764, 3330260.228, 3339000.531), stdev = 6151.139
[info]   CI (99.9%): [3306574.382, 3353946.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   101.608 ±(99.9%) 0.722 MB/sec [Average]
[info]   (min, avg, max) = (101.447, 101.608, 101.873), stdev = 0.188
[info]   CI (99.9%): [100.886, 102.330] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.365 ±(99.9%) 539.742 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.365, 255.917), stdev = 140.169
[info]   CI (99.9%): [≈ 0, 642.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   48.424 ±(99.9%) 255.325 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.424, 121.084), stdev = 66.307
[info]   CI (99.9%): [≈ 0, 303.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.643
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 54.41% complete, ETA 00:08:19
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 92303.793 ops/s
[info] # Warmup Iteration   2: 159493.141 ops/s
[info] # Warmup Iteration   3: 165548.354 ops/s
[info] # Warmup Iteration   4: 164121.727 ops/s
[info] # Warmup Iteration   5: 164661.168 ops/s
[info] Iteration   1: 163662.282 ops/s
[info]                  ·gc.alloc.rate:                   1085.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12661.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.600 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 165437.077 ops/s
[info]                  ·gc.alloc.rate:                   1096.957 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9452.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 164750.416 ops/s
[info]                  ·gc.alloc.rate:                   1092.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9536.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 163917.255 ops/s
[info]                  ·gc.alloc.rate:                   1086.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9629.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 164599.148 ops/s
[info]                  ·gc.alloc.rate:                   1091.437 MB/sec
[info]                  ·gc.alloc.rate.norm:              10432.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.163 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12838.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   164473.236 ±(99.9%) 2714.932 ops/s [Average]
[info]   (min, avg, max) = (163662.282, 164473.236, 165437.077), stdev = 705.059
[info]   CI (99.9%): [161758.304, 167188.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1090.622 ±(99.9%) 17.793 MB/sec [Average]
[info]   (min, avg, max) = (1085.348, 1090.622, 1096.957), stdev = 4.621
[info]   CI (99.9%): [1072.829, 1108.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10432.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10432.003, 10432.003, 10432.003), stdev = 0.001
[info]   CI (99.9%): [10432.002, 10432.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.252 ±(99.9%) 700.387 MB/sec [Average]
[info]   (min, avg, max) = (993.915, 1131.252, 1343.163), stdev = 181.888
[info]   CI (99.9%): [430.865, 1831.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10823.330 ±(99.9%) 6779.592 B/op [Average]
[info]   (min, avg, max) = (9452.083, 10823.330, 12838.003), stdev = 1760.639
[info]   CI (99.9%): [4043.737, 17602.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.478 ±(99.9%) 0.423 B/op [Average]
[info]   (min, avg, max) = (0.396, 0.478, 0.600), stdev = 0.110
[info]   CI (99.9%): [0.055, 0.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 6.000), stdev = 0.837
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 55.88% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 867386.110 ops/s
[info] # Warmup Iteration   2: 1258449.868 ops/s
[info] # Warmup Iteration   3: 1268793.594 ops/s
[info] # Warmup Iteration   4: 1283159.764 ops/s
[info] # Warmup Iteration   5: 1284807.744 ops/s
[info] Iteration   1: 1289052.678 ops/s
[info]                  ·gc.alloc.rate:                   1442.071 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.808 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1631.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1263602.490 ops/s
[info]                  ·gc.alloc.rate:               1413.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1680.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2092.117 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     11.000 ms
[info] Iteration   3: 1276733.608 ops/s
[info]                  ·gc.alloc.rate:                   1428.297 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1663.279 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1264216.185 ops/s
[info]                  ·gc.alloc.rate:                   1414.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1684.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.104 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1285474.150 ops/s
[info]                  ·gc.alloc.rate:               1438.034 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1659.787 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1275815.822 ±(99.9%) 45278.114 ops/s [Average]
[info]   (min, avg, max) = (1263602.490, 1275815.822, 1289052.678), stdev = 11758.582
[info]   CI (99.9%): [1230537.708, 1321093.937] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1427.245 ±(99.9%) 50.689 MB/sec [Average]
[info]   (min, avg, max) = (1413.589, 1427.245, 1442.071), stdev = 13.164
[info]   CI (99.9%): [1376.556, 1477.934] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1415.308 ±(99.9%) 571.211 MB/sec [Average]
[info]   (min, avg, max) = (1336.808, 1415.308, 1680.337), stdev = 148.342
[info]   CI (99.9%): [844.097, 1986.519] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1746.210 ±(99.9%) 748.101 B/op [Average]
[info]   (min, avg, max) = (1631.530, 1746.210, 2092.117), stdev = 194.279
[info]   CI (99.9%): [998.110, 2494.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.031, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 11.000), stdev = 3.347
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 57.35% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2422115.482 ops/s
[info] # Warmup Iteration   2: 3902758.891 ops/s
[info] # Warmup Iteration   3: 3957551.935 ops/s
[info] # Warmup Iteration   4: 3963156.051 ops/s
[info] # Warmup Iteration   5: 3970593.970 ops/s
[info] Iteration   1: 3987844.539 ops/s
[info]                  ·gc.alloc.rate:               1095.016 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 391.858 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 3926266.215 ops/s
[info]                  ·gc.alloc.rate:                   1078.107 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     534.057 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 3895999.773 ops/s
[info]                  ·gc.alloc.rate:                   1069.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     405.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3926913.503 ops/s
[info]                  ·gc.alloc.rate:                   1078.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     403.811 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 3985373.240 ops/s
[info]                  ·gc.alloc.rate:               1094.339 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 399.210 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3944479.454 ±(99.9%) 155741.727 ops/s [Average]
[info]   (min, avg, max) = (3895999.773, 3944479.454, 3987844.539), stdev = 40445.632
[info]   CI (99.9%): [3788737.727, 4100221.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1083.116 ±(99.9%) 42.724 MB/sec [Average]
[info]   (min, avg, max) = (1069.834, 1083.116, 1095.016), stdev = 11.095
[info]   CI (99.9%): [1040.391, 1125.840] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.114 ±(99.9%) 566.059 MB/sec [Average]
[info]   (min, avg, max) = (993.265, 1070.114, 1332.801), stdev = 147.004
[info]   CI (99.9%): [504.055, 1636.173] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   426.976 ±(99.9%) 231.435 B/op [Average]
[info]   (min, avg, max) = (391.858, 426.976, 534.057), stdev = 60.103
[info]   CI (99.9%): [195.541, 658.411] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.005 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.005, 0.008), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 4.207
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 58.82% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13412911.289 ops/s
[info] # Warmup Iteration   2: 15717961.908 ops/s
[info] # Warmup Iteration   3: 15304771.976 ops/s
[info] # Warmup Iteration   4: 15329430.741 ops/s
[info] # Warmup Iteration   5: 16050222.963 ops/s
[info] Iteration   1: 16151686.095 ops/s
[info]                  ·gc.alloc.rate:                   492.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 16239738.497 ops/s
[info]                  ·gc.alloc.rate:               495.477 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 31.602 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 16222657.045 ops/s
[info]                  ·gc.alloc.rate:                   494.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     63.334 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15857437.064 ops/s
[info]                  ·gc.alloc.rate:               483.811 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 32.429 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 15708726.906 ops/s
[info]                  ·gc.alloc.rate:               479.263 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 65.675 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   16036049.121 ±(99.9%) 920790.917 ops/s [Average]
[info]   (min, avg, max) = (15708726.906, 16036049.121, 16239738.497), stdev = 239126.477
[info]   CI (99.9%): [15115258.204, 16956840.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   489.260 ±(99.9%) 28.114 MB/sec [Average]
[info]   (min, avg, max) = (479.263, 489.260, 495.477), stdev = 7.301
[info]   CI (99.9%): [461.146, 517.373] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.728 ±(99.9%) 689.659 MB/sec [Average]
[info]   (min, avg, max) = (326.207, 522.728, 655.738), stdev = 179.102
[info]   CI (99.9%): [≈ 0, 1212.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   51.305 ±(99.9%) 67.907 B/op [Average]
[info]   (min, avg, max) = (31.602, 51.305, 65.675), stdev = 17.635
[info]   CI (99.9%): [≈ 0, 119.212] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.156 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.041
[info]   CI (99.9%): [≈ 0, 0.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.008), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 60.29% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 650816.209 ops/s
[info] # Warmup Iteration   2: 917537.141 ops/s
[info] # Warmup Iteration   3: 914528.436 ops/s
[info] # Warmup Iteration   4: 918183.954 ops/s
[info] # Warmup Iteration   5: 910948.495 ops/s
[info] Iteration   1: 917701.287 ops/s
[info]                  ·gc.alloc.rate:                   1357.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2277.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 912474.084 ops/s
[info]                  ·gc.alloc.rate:                   1350.193 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2304.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 925567.309 ops/s
[info]                  ·gc.alloc.rate:                   1369.572 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2283.089 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 926229.568 ops/s
[info]                  ·gc.alloc.rate:                   1370.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2290.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 921812.814 ops/s
[info]                  ·gc.alloc.rate:                   1364.016 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2307.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   920757.013 ±(99.9%) 22132.569 ops/s [Average]
[info]   (min, avg, max) = (912474.084, 920757.013, 926229.568), stdev = 5747.758
[info]   CI (99.9%): [898624.443, 942889.582] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1362.453 ±(99.9%) 32.760 MB/sec [Average]
[info]   (min, avg, max) = (1350.193, 1362.453, 1370.554), stdev = 8.508
[info]   CI (99.9%): [1329.694, 1395.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.000, 2328.000, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1341.679 ±(99.9%) 36.153 MB/sec [Average]
[info]   (min, avg, max) = (1328.458, 1341.679, 1351.801), stdev = 9.389
[info]   CI (99.9%): [1305.526, 1377.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2292.524 ±(99.9%) 50.001 B/op [Average]
[info]   (min, avg, max) = (2277.472, 2292.524, 2307.154), stdev = 12.985
[info]   CI (99.9%): [2242.523, 2342.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.085 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (0.071, 0.085, 0.108), stdev = 0.020
[info]   CI (99.9%): [0.009, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 13.000), stdev = 4.324
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 61.76% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 399237.845 ops/s
[info] # Warmup Iteration   2: 666439.830 ops/s
[info] # Warmup Iteration   3: 667785.468 ops/s
[info] # Warmup Iteration   4: 669902.477 ops/s
[info] # Warmup Iteration   5: 663858.755 ops/s
[info] Iteration   1: 665135.798 ops/s
[info]                  ·gc.alloc.rate:                   1606.538 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.005 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3978.506 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 664394.178 ops/s
[info]                  ·gc.alloc.rate:                   1604.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.027 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3997.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 664529.174 ops/s
[info]                  ·gc.alloc.rate:               1605.029 MB/sec
[info]                  ·gc.alloc.rate.norm:          3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3205.955 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     14.000 ms
[info] Iteration   4: 661141.763 ops/s
[info]                  ·gc.alloc.rate:                   1596.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.354 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4036.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 668891.664 ops/s
[info]                  ·gc.alloc.rate:                   1615.565 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3996.210 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.049 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   664818.515 ±(99.9%) 10628.318 ops/s [Average]
[info]   (min, avg, max) = (661141.763, 664818.515, 668891.664), stdev = 2760.140
[info]   CI (99.9%): [654190.197, 675446.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1605.764 ±(99.9%) 25.591 MB/sec [Average]
[info]   (min, avg, max) = (1596.902, 1605.764, 1615.565), stdev = 6.646
[info]   CI (99.9%): [1580.173, 1631.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1623.897 ±(99.9%) 581.300 MB/sec [Average]
[info]   (min, avg, max) = (1354.118, 1623.897, 1698.983), stdev = 150.962
[info]   CI (99.9%): [1042.598, 2205.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3842.886 ±(99.9%) 1373.488 B/op [Average]
[info]   (min, avg, max) = (3205.955, 3842.886, 4036.656), stdev = 356.690
[info]   CI (99.9%): [2469.398, 5216.374] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.301 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.099, 0.197), stdev = 0.078
[info]   CI (99.9%): [≈ 0, 0.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   53.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 10.600, 16.000), stdev = 4.980
[info]   CI (99.9%): [53.000, 53.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 63.24% complete, ETA 00:06:42
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1173650.507 ops/s
[info] # Warmup Iteration   2: 1825017.729 ops/s
[info] # Warmup Iteration   3: 1864518.161 ops/s
[info] # Warmup Iteration   4: 1849328.464 ops/s
[info] # Warmup Iteration   5: 1805823.019 ops/s
[info] Iteration   1: 1818280.777 ops/s
[info]                  ·gc.alloc.rate:                   1054.064 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     860.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1863295.380 ops/s
[info]                  ·gc.alloc.rate:                   1080.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.968 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     844.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1842474.351 ops/s
[info]                  ·gc.alloc.rate:                   1068.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1144.083 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 1803680.931 ops/s
[info]                  ·gc.alloc.rate:                   1045.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.905 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     880.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1813194.107 ops/s
[info]                  ·gc.alloc.rate:                   1051.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     878.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   1828185.109 ±(99.9%) 93535.665 ops/s [Average]
[info]   (min, avg, max) = (1803680.931, 1828185.109, 1863295.380), stdev = 24290.915
[info]   CI (99.9%): [1734649.444, 1921720.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1059.768 ±(99.9%) 54.202 MB/sec [Average]
[info]   (min, avg, max) = (1045.557, 1059.768, 1080.126), stdev = 14.076
[info]   CI (99.9%): [1005.567, 1113.970] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1071.117 ±(99.9%) 578.999 MB/sec [Average]
[info]   (min, avg, max) = (994.620, 1071.117, 1339.803), stdev = 150.364
[info]   CI (99.9%): [492.118, 1650.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   921.469 ±(99.9%) 482.465 B/op [Average]
[info]   (min, avg, max) = (844.319, 921.469, 1144.083), stdev = 125.295
[info]   CI (99.9%): [439.004, 1403.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.025, 0.036), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 10.000), stdev = 2.449
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 64.71% complete, ETA 00:06:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3941771.296 ops/s
[info] # Warmup Iteration   2: 4306070.164 ops/s
[info] # Warmup Iteration   3: 4434217.860 ops/s
[info] # Warmup Iteration   4: 4422628.413 ops/s
[info] # Warmup Iteration   5: 4461385.530 ops/s
[info] Iteration   1: 4450217.826 ops/s
[info]                  ·gc.alloc.rate:                   1221.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1325.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     468.597 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 4402002.805 ops/s
[info]                  ·gc.alloc.rate:                   1208.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     357.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 4394460.534 ops/s
[info]                  ·gc.alloc.rate:                   1206.702 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     479.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4393930.766 ops/s
[info]                  ·gc.alloc.rate:                   1206.507 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     481.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4380785.651 ops/s
[info]                  ·gc.alloc.rate:                   1202.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     363.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   4404279.516 ±(99.9%) 103161.734 ops/s [Average]
[info]   (min, avg, max) = (4380785.651, 4404279.516, 4450217.826), stdev = 26790.775
[info]   CI (99.9%): [4301117.782, 4507441.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1209.367 ±(99.9%) 28.311 MB/sec [Average]
[info]   (min, avg, max) = (1202.902, 1209.367, 1221.967), stdev = 7.352
[info]   CI (99.9%): [1181.056, 1237.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1204.140 ±(99.9%) 697.963 MB/sec [Average]
[info]   (min, avg, max) = (999.319, 1204.140, 1344.783), stdev = 181.259
[info]   CI (99.9%): [506.177, 1902.102] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   430.020 ±(99.9%) 245.801 B/op [Average]
[info]   (min, avg, max) = (357.149, 430.020, 481.511), stdev = 63.834
[info]   CI (99.9%): [184.219, 675.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.075, 0.125), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.044 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.027, 0.045), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 12.000), stdev = 3.347
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 66.18% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 162940.423 ops/s
[info] # Warmup Iteration   2: 328984.234 ops/s
[info] # Warmup Iteration   3: 336536.647 ops/s
[info] # Warmup Iteration   4: 334591.074 ops/s
[info] # Warmup Iteration   5: 337073.519 ops/s
[info] Iteration   1: 338271.244 ops/s
[info]                  ·gc.alloc.rate:                   1207.518 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6133.655 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 337165.568 ops/s
[info]                  ·gc.alloc.rate:                   1203.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.469 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6198.860 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.389 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 333758.426 ops/s
[info]                  ·gc.alloc.rate:                   1191.391 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4721.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 338654.304 ops/s
[info]                  ·gc.alloc.rate:                   1208.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6231.886 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.290 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 330580.035 ops/s
[info]                  ·gc.alloc.rate:                   1180.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4808.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   335685.915 ±(99.9%) 13265.155 ops/s [Average]
[info]   (min, avg, max) = (330580.035, 335685.915, 338654.304), stdev = 3444.919
[info]   CI (99.9%): [322420.761, 348951.070] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1198.294 ±(99.9%) 47.371 MB/sec [Average]
[info]   (min, avg, max) = (1180.076, 1198.294, 1208.925), stdev = 12.302
[info]   CI (99.9%): [1150.923, 1245.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1200.143 ±(99.9%) 683.381 MB/sec [Average]
[info]   (min, avg, max) = (1001.619, 1200.143, 1341.503), stdev = 177.472
[info]   CI (99.9%): [516.763, 1883.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5618.782 ±(99.9%) 3007.424 B/op [Average]
[info]   (min, avg, max) = (4721.447, 5618.782, 6231.886), stdev = 781.018
[info]   CI (99.9%): [2611.358, 8626.206] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.234 ±(99.9%) 0.501 B/op [Average]
[info]   (min, avg, max) = (0.097, 0.234, 0.389), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.735] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 12.000), stdev = 3.647
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 67.65% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1893621.861 ops/s
[info] # Warmup Iteration   2: 2750185.573 ops/s
[info] # Warmup Iteration   3: 2749787.220 ops/s
[info] # Warmup Iteration   4: 2781914.562 ops/s
[info] # Warmup Iteration   5: 2763362.924 ops/s
[info] Iteration   1: 2776377.889 ops/s
[info]                  ·gc.alloc.rate:                   1185.887 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.289 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     565.128 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2762120.912 ops/s
[info]                  ·gc.alloc.rate:                   1179.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.132 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     762.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 2732117.047 ops/s
[info]                  ·gc.alloc.rate:                   1166.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.234 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     580.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2692680.554 ops/s
[info]                  ·gc.alloc.rate:                   1150.125 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     788.062 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   5: 2761769.566 ops/s
[info]                  ·gc.alloc.rate:                   1179.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     577.789 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2745013.194 ±(99.9%) 128611.073 ops/s [Average]
[info]   (min, avg, max) = (2692680.554, 2745013.194, 2776377.889), stdev = 33399.887
[info]   CI (99.9%): [2616402.120, 2873624.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1172.490 ±(99.9%) 54.964 MB/sec [Average]
[info]   (min, avg, max) = (1150.125, 1172.490, 1185.887), stdev = 14.274
[info]   CI (99.9%): [1117.526, 1227.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1141.339 ±(99.9%) 710.974 MB/sec [Average]
[info]   (min, avg, max) = (997.289, 1141.339, 1348.764), stdev = 184.638
[info]   CI (99.9%): [430.366, 1852.313] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   654.750 ±(99.9%) 425.181 B/op [Average]
[info]   (min, avg, max) = (565.128, 654.750, 788.062), stdev = 110.418
[info]   CI (99.9%): [229.570, 1079.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.042 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.019, 0.037), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 15.000), stdev = 4.658
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 69.12% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3786290.593 ops/s
[info] # Warmup Iteration   2: 4221596.949 ops/s
[info] # Warmup Iteration   3: 4257387.263 ops/s
[info] # Warmup Iteration   4: 4282831.974 ops/s
[info] # Warmup Iteration   5: 4246869.769 ops/s
[info] Iteration   1: 4252270.540 ops/s
[info]                  ·gc.alloc.rate:               778.422 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 242.248 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4215862.707 ops/s
[info]                  ·gc.alloc.rate:                   771.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 4224886.365 ops/s
[info]                  ·gc.alloc.rate:                   773.419 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     368.396 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4209000.002 ops/s
[info]                  ·gc.alloc.rate:                   770.527 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     247.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4254521.335 ops/s
[info]                  ·gc.alloc.rate:                   778.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.389 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   4231308.190 ±(99.9%) 80673.708 ops/s [Average]
[info]   (min, avg, max) = (4209000.002, 4231308.190, 4254521.335), stdev = 20950.706
[info]   CI (99.9%): [4150634.482, 4311981.897] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   774.588 ±(99.9%) 14.707 MB/sec [Average]
[info]   (min, avg, max) = (770.527, 774.588, 778.808), stdev = 3.819
[info]   CI (99.9%): [759.881, 789.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   725.670 ±(99.9%) 567.748 MB/sec [Average]
[info]   (min, avg, max) = (654.760, 725.670, 989.322), stdev = 147.442
[info]   CI (99.9%): [157.922, 1293.417] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   269.854 ±(99.9%) 212.259 B/op [Average]
[info]   (min, avg, max) = (242.248, 269.854, 368.396), stdev = 55.123
[info]   CI (99.9%): [57.595, 482.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.023), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 7.000), stdev = 2.550
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 70.59% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 296357.064 ops/s
[info] # Warmup Iteration   2: 484159.377 ops/s
[info] # Warmup Iteration   3: 482607.136 ops/s
[info] # Warmup Iteration   4: 486532.679 ops/s
[info] # Warmup Iteration   5: 488927.137 ops/s
[info] Iteration   1: 489415.284 ops/s
[info]                  ·gc.alloc.rate:                   1448.484 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5341.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.268 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 488048.778 ops/s
[info]                  ·gc.alloc.rate:                   1444.423 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4313.713 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.269 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 486658.814 ops/s
[info]                  ·gc.alloc.rate:                   1440.285 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4347.568 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 479414.703 ops/s
[info]                  ·gc.alloc.rate:               1418.885 MB/sec
[info]                  ·gc.alloc.rate.norm:          4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.557 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4428.505 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 479391.633 ops/s
[info]                  ·gc.alloc.rate:                   1418.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5551.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   484585.842 ±(99.9%) 18600.359 ops/s [Average]
[info]   (min, avg, max) = (479391.633, 484585.842, 489415.284), stdev = 4830.454
[info]   CI (99.9%): [465985.484, 503186.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1434.159 ±(99.9%) 55.123 MB/sec [Average]
[info]   (min, avg, max) = (1418.721, 1434.159, 1448.484), stdev = 14.315
[info]   CI (99.9%): [1379.037, 1489.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1477.229 ±(99.9%) 702.654 MB/sec [Average]
[info]   (min, avg, max) = (1338.235, 1477.229, 1691.661), stdev = 182.477
[info]   CI (99.9%): [774.575, 2179.884] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4796.655 ±(99.9%) 2308.561 B/op [Average]
[info]   (min, avg, max) = (4313.713, 4796.655, 5551.741), stdev = 599.526
[info]   CI (99.9%): [2488.093, 7105.216] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.148 ±(99.9%) 0.461 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.148, 0.269), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.609] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 9.000), stdev = 1.924
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 72.06% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 75877.880 ops/s
[info] # Warmup Iteration   2: 925616.507 ops/s
[info] # Warmup Iteration   3: 945979.047 ops/s
[info] # Warmup Iteration   4: 937878.716 ops/s
[info] # Warmup Iteration   5: 940700.923 ops/s
[info] Iteration   1: 946764.844 ops/s
[info]                  ·gc.alloc.rate:                   1189.108 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2208.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.173 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 935543.764 ops/s
[info]                  ·gc.alloc.rate:                   1174.975 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1684.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 945763.424 ops/s
[info]                  ·gc.alloc.rate:               1187.859 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1341.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2232.086 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 944684.548 ops/s
[info]                  ·gc.alloc.rate:                   1186.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.142 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2243.537 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 944269.873 ops/s
[info]                  ·gc.alloc.rate:               1185.992 MB/sec
[info]                  ·gc.alloc.rate.norm:          1976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1012.960 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1687.709 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   943405.290 ±(99.9%) 17331.641 ops/s [Average]
[info]   (min, avg, max) = (935543.764, 943405.290, 946764.844), stdev = 4500.972
[info]   CI (99.9%): [926073.650, 960736.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1184.886 ±(99.9%) 21.844 MB/sec [Average]
[info]   (min, avg, max) = (1174.975, 1184.886, 1189.108), stdev = 5.673
[info]   CI (99.9%): [1163.042, 1206.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1976.000, 1976.000, 1976.000), stdev = 0.001
[info]   CI (99.9%): [1976.000, 1976.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1206.460 ±(99.9%) 700.831 MB/sec [Average]
[info]   (min, avg, max) = (1001.575, 1206.460, 1347.142), stdev = 182.004
[info]   CI (99.9%): [505.629, 1907.292] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2011.178 ±(99.9%) 1143.940 B/op [Average]
[info]   (min, avg, max) = (1684.388, 2011.178, 2243.537), stdev = 297.078
[info]   CI (99.9%): [867.238, 3155.118] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.276 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.173), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 6.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 73.53% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2008657.347 ops/s
[info] # Warmup Iteration   2: 2237320.841 ops/s
[info] # Warmup Iteration   3: 2226198.179 ops/s
[info] # Warmup Iteration   4: 2263581.103 ops/s
[info] # Warmup Iteration   5: 2274625.814 ops/s
[info] Iteration   1: 2261253.360 ops/s
[info]                  ·gc.alloc.rate:               436.930 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 226.731 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 2279258.209 ops/s
[info]                  ·gc.alloc.rate:                   440.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.866 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     224.928 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2239575.324 ops/s
[info]                  ·gc.alloc.rate:                   432.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458.319 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2264231.825 ops/s
[info]                  ·gc.alloc.rate:               437.529 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 227.119 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 2292948.131 ops/s
[info]                  ·gc.alloc.rate:               443.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 224.284 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2267453.370 ±(99.9%) 77381.202 ops/s [Average]
[info]   (min, avg, max) = (2239575.324, 2267453.370, 2292948.131), stdev = 20095.652
[info]   CI (99.9%): [2190072.168, 2344834.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   438.142 ±(99.9%) 14.981 MB/sec [Average]
[info]   (min, avg, max) = (432.747, 438.142, 443.081), stdev = 3.890
[info]   CI (99.9%): [423.161, 453.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.587 ±(99.9%) 561.468 MB/sec [Average]
[info]   (min, avg, max) = (325.866, 391.587, 652.421), stdev = 145.812
[info]   CI (99.9%): [≈ 0, 953.055] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   272.276 ±(99.9%) 400.496 B/op [Average]
[info]   (min, avg, max) = (224.284, 272.276, 458.319), stdev = 104.008
[info]   CI (99.9%): [≈ 0, 672.773] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.012 ±(99.9%) 0.073 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.00% complete, ETA 00:04:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 112197.383 ops/s
[info] # Warmup Iteration   2: 242593.139 ops/s
[info] # Warmup Iteration   3: 247208.039 ops/s
[info] # Warmup Iteration   4: 249417.418 ops/s
[info] # Warmup Iteration   5: 248202.533 ops/s
[info] Iteration   1: 248646.595 ops/s
[info]                  ·gc.alloc.rate:               974.763 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6225.862 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 249160.107 ops/s
[info]                  ·gc.alloc.rate:                   976.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.954 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6238.168 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 246228.542 ops/s
[info]                  ·gc.alloc.rate:                   965.340 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6350.813 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 249055.909 ops/s
[info]                  ·gc.alloc.rate:                   976.439 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6308.101 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 251298.773 ops/s
[info]                  ·gc.alloc.rate:                   985.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6281.059 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   248877.985 ±(99.9%) 6953.732 ops/s [Average]
[info]   (min, avg, max) = (246228.542, 248877.985, 251298.773), stdev = 1805.862
[info]   CI (99.9%): [241924.254, 255831.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   975.717 ±(99.9%) 27.252 MB/sec [Average]
[info]   (min, avg, max) = (965.340, 975.717, 985.202), stdev = 7.077
[info]   CI (99.9%): [948.465, 1002.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.538 ±(99.9%) 30.102 MB/sec [Average]
[info]   (min, avg, max) = (983.907, 993.538, 1003.261), stdev = 7.817
[info]   CI (99.9%): [963.436, 1023.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6280.800 ±(99.9%) 197.126 B/op [Average]
[info]   (min, avg, max) = (6225.862, 6280.800, 6350.813), stdev = 51.193
[info]   CI (99.9%): [6083.675, 6477.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.211 ±(99.9%) 0.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.211, 0.394), stdev = 0.150
[info]   CI (99.9%): [≈ 0, 0.788] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 13.000), stdev = 4.506
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 76.47% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 382062.604 ops/s
[info] # Warmup Iteration   2: 565873.541 ops/s
[info] # Warmup Iteration   3: 594777.143 ops/s
[info] # Warmup Iteration   4: 590254.478 ops/s
[info] # Warmup Iteration   5: 596513.296 ops/s
[info] Iteration   1: 593426.736 ops/s
[info]                  ·gc.alloc.rate:                   1520.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.620 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4442.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 595527.017 ops/s
[info]                  ·gc.alloc.rate:                   1526.241 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3559.687 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.110 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 588127.203 ops/s
[info]                  ·gc.alloc.rate:                   1507.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4522.536 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 591781.746 ops/s
[info]                  ·gc.alloc.rate:                   1516.651 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3603.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 571594.607 ops/s
[info]                  ·gc.alloc.rate:               1464.907 MB/sec
[info]                  ·gc.alloc.rate.norm:          4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1357.180 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3735.494 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   588091.462 ±(99.9%) 37010.194 ops/s [Average]
[info]   (min, avg, max) = (571594.607, 588091.462, 595527.017), stdev = 9611.430
[info]   CI (99.9%): [551081.268, 625101.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1507.182 ±(99.9%) 94.833 MB/sec [Average]
[info]   (min, avg, max) = (1464.907, 1507.182, 1526.241), stdev = 24.628
[info]   CI (99.9%): [1412.349, 1602.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1485.274 ±(99.9%) 695.984 MB/sec [Average]
[info]   (min, avg, max) = (1347.455, 1485.274, 1690.667), stdev = 180.745
[info]   CI (99.9%): [789.289, 2181.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3972.711 ±(99.9%) 1812.400 B/op [Average]
[info]   (min, avg, max) = (3559.687, 3972.711, 4522.536), stdev = 470.675
[info]   CI (99.9%): [2160.311, 5785.111] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.066 ±(99.9%) 0.178 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.066, 0.111), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 9.800, 19.000), stdev = 5.975
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 77.94% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 852039.384 ops/s
[info] # Warmup Iteration   2: 1239685.501 ops/s
[info] # Warmup Iteration   3: 1269502.835 ops/s
[info] # Warmup Iteration   4: 1267320.041 ops/s
[info] # Warmup Iteration   5: 1271746.605 ops/s
[info] Iteration   1: 1267228.479 ops/s
[info]                  ·gc.alloc.rate:               779.692 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      652.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 809.968 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1263192.990 ops/s
[info]                  ·gc.alloc.rate:                   777.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.694 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1226.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1238359.477 ops/s
[info]                  ·gc.alloc.rate:               761.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.430 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839.030 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1257564.542 ops/s
[info]                  ·gc.alloc.rate:               773.684 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      662.996 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 829.512 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 1270989.198 ops/s
[info]                  ·gc.alloc.rate:                   782.005 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1236.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1259466.937 ±(99.9%) 49313.485 ops/s [Average]
[info]   (min, avg, max) = (1238359.477, 1259466.937, 1270989.198), stdev = 12806.556
[info]   CI (99.9%): [1210153.452, 1308780.422] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   774.927 ±(99.9%) 30.350 MB/sec [Average]
[info]   (min, avg, max) = (761.947, 774.927, 782.005), stdev = 7.882
[info]   CI (99.9%): [744.577, 805.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   791.956 ±(99.9%) 703.540 MB/sec [Average]
[info]   (min, avg, max) = (652.402, 791.956, 999.259), stdev = 182.707
[info]   CI (99.9%): [88.416, 1495.496] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   988.340 ±(99.9%) 856.151 B/op [Average]
[info]   (min, avg, max) = (809.968, 988.340, 1236.927), stdev = 222.340
[info]   CI (99.9%): [132.189, 1844.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.089 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.052), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.41% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4195430.093 ops/s
[info] # Warmup Iteration   2: 4738139.024 ops/s
[info] # Warmup Iteration   3: 4927556.264 ops/s
[info] # Warmup Iteration   4: 4973157.038 ops/s
[info] # Warmup Iteration   5: 4952596.561 ops/s
[info] Iteration   1: 4870630.507 ops/s
[info]                  ·gc.alloc.rate:               743.014 MB/sec
[info]                  ·gc.alloc.rate.norm:          240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.167 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   2: 4866639.940 ops/s
[info]                  ·gc.alloc.rate:                   742.408 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     318.297 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 4914722.246 ops/s
[info]                  ·gc.alloc.rate:                   749.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.113 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 4910519.070 ops/s
[info]                  ·gc.alloc.rate:                   749.153 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4962396.817 ops/s
[info]                  ·gc.alloc.rate:                   757.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4904981.716 ±(99.9%) 150028.562 ops/s [Average]
[info]   (min, avg, max) = (4866639.940, 4904981.716, 4962396.817), stdev = 38961.941
[info]   CI (99.9%): [4754953.154, 5055010.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   748.274 ±(99.9%) 22.923 MB/sec [Average]
[info]   (min, avg, max) = (742.408, 748.274, 757.031), stdev = 5.953
[info]   CI (99.9%): [725.351, 771.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.606 ±(99.9%) 559.862 MB/sec [Average]
[info]   (min, avg, max) = (653.750, 724.606, 984.608), stdev = 145.394
[info]   CI (99.9%): [164.744, 1284.467] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   232.578 ±(99.9%) 184.529 B/op [Average]
[info]   (min, avg, max) = (210.429, 232.578, 318.297), stdev = 47.922
[info]   CI (99.9%): [48.050, 417.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.049 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.015, 0.033), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 3.899
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 80.88% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 219119.889 ops/s
[info] # Warmup Iteration   2: 380281.264 ops/s
[info] # Warmup Iteration   3: 381883.378 ops/s
[info] # Warmup Iteration   4: 384348.321 ops/s
[info] # Warmup Iteration   5: 383597.075 ops/s
[info] Iteration   1: 389865.274 ops/s
[info]                  ·gc.alloc.rate:                   1350.089 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5351.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.336 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 385865.196 ops/s
[info]                  ·gc.alloc.rate:                   1336.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5442.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 377969.289 ops/s
[info]                  ·gc.alloc.rate:                   1308.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5583.699 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 386675.450 ops/s
[info]                  ·gc.alloc.rate:                   1338.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.481 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5482.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 386713.375 ops/s
[info]                  ·gc.alloc.rate:                   1339.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.855 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5495.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   385417.717 ±(99.9%) 17082.359 ops/s [Average]
[info]   (min, avg, max) = (377969.289, 385417.717, 389865.274), stdev = 4436.234
[info]   CI (99.9%): [368335.357, 402500.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1334.657 ±(99.9%) 59.209 MB/sec [Average]
[info]   (min, avg, max) = (1308.845, 1334.657, 1350.089), stdev = 15.376
[info]   CI (99.9%): [1275.447, 1393.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1340.165 ±(99.9%) 38.172 MB/sec [Average]
[info]   (min, avg, max) = (1326.184, 1340.165, 1350.855), stdev = 9.913
[info]   CI (99.9%): [1301.993, 1378.336] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5471.180 ±(99.9%) 325.179 B/op [Average]
[info]   (min, avg, max) = (5351.538, 5471.180, 5583.699), stdev = 84.448
[info]   CI (99.9%): [5146.000, 5796.359] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.079 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.079, 0.125), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.184] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.323 ±(99.9%) 0.423 B/op [Average]
[info]   (min, avg, max) = (0.254, 0.323, 0.509), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.746] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 11.000), stdev = 3.271
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 82.35% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 110541.233 ops/s
[info] # Warmup Iteration   2: 320367.988 ops/s
[info] # Warmup Iteration   3: 332022.599 ops/s
[info] # Warmup Iteration   4: 330961.645 ops/s
[info] # Warmup Iteration   5: 331973.615 ops/s
[info] Iteration   1: 332760.246 ops/s
[info]                  ·gc.alloc.rate:                   994.905 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.602 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4626.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 330226.122 ops/s
[info]                  ·gc.alloc.rate:                   987.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4698.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 325993.582 ops/s
[info]                  ·gc.alloc.rate:                   974.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          992.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4791.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 327622.628 ops/s
[info]                  ·gc.alloc.rate:                   979.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.601 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4795.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 325554.424 ops/s
[info]                  ·gc.alloc.rate:                   973.375 MB/sec
[info]                  ·gc.alloc.rate.norm:              4704.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.255 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4848.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   328431.400 ±(99.9%) 11684.975 ops/s [Average]
[info]   (min, avg, max) = (325554.424, 328431.400, 332760.246), stdev = 3034.551
[info]   CI (99.9%): [316746.425, 340116.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   981.988 ±(99.9%) 34.911 MB/sec [Average]
[info]   (min, avg, max) = (973.375, 981.988, 994.905), stdev = 9.066
[info]   CI (99.9%): [947.077, 1016.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4704.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4704.001, 4704.001, 4704.001), stdev = 0.001
[info]   CI (99.9%): [4704.001, 4704.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   991.930 ±(99.9%) 37.706 MB/sec [Average]
[info]   (min, avg, max) = (978.602, 991.930, 1003.255), stdev = 9.792
[info]   CI (99.9%): [954.224, 1029.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4752.263 ±(99.9%) 340.372 B/op [Average]
[info]   (min, avg, max) = (4626.919, 4752.263, 4848.406), stdev = 88.393
[info]   CI (99.9%): [4411.891, 5092.635] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.219 ±(99.9%) 0.412 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.219, 0.394), stdev = 0.107
[info]   CI (99.9%): [≈ 0, 0.631] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 14.000), stdev = 3.847
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 83.82% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96500.307 ops/s
[info] # Warmup Iteration   2: 984093.531 ops/s
[info] # Warmup Iteration   3: 999826.404 ops/s
[info] # Warmup Iteration   4: 992547.491 ops/s
[info] # Warmup Iteration   5: 998780.498 ops/s
[info] Iteration   1: 991094.693 ops/s
[info]                  ·gc.alloc.rate:                   1028.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1578.851 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 991384.904 ops/s
[info]                  ·gc.alloc.rate:                   1028.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1586.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 987634.602 ops/s
[info]                  ·gc.alloc.rate:                   1024.497 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1599.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 998629.644 ops/s
[info]                  ·gc.alloc.rate:                   1035.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.603 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1587.426 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1002566.846 ops/s
[info]                  ·gc.alloc.rate:                   1039.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.283 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1585.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   994262.138 ±(99.9%) 23602.178 ops/s [Average]
[info]   (min, avg, max) = (987634.602, 994262.138, 1002566.846), stdev = 6129.411
[info]   CI (99.9%): [970659.960, 1017864.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1031.370 ±(99.9%) 24.476 MB/sec [Average]
[info]   (min, avg, max) = (1024.497, 1031.370, 1039.985), stdev = 6.356
[info]   CI (99.9%): [1006.894, 1055.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1003.280 ±(99.9%) 23.925 MB/sec [Average]
[info]   (min, avg, max) = (994.609, 1003.280, 1010.283), stdev = 6.213
[info]   CI (99.9%): [979.354, 1027.205] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1587.564 ±(99.9%) 28.436 B/op [Average]
[info]   (min, avg, max) = (1578.851, 1587.564, 1599.269), stdev = 7.385
[info]   CI (99.9%): [1559.129, 1616.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.114 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.046, 0.099), stdev = 0.030
[info]   CI (99.9%): [≈ 0, 0.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 11.000), stdev = 4.324
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 85.29% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2098533.752 ops/s
[info] # Warmup Iteration   2: 2350950.615 ops/s
[info] # Warmup Iteration   3: 2389463.038 ops/s
[info] # Warmup Iteration   4: 2409104.941 ops/s
[info] # Warmup Iteration   5: 2405292.736 ops/s
[info] Iteration   1: 2409998.827 ops/s
[info]                  ·gc.alloc.rate:               575.991 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.949 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 2399579.191 ops/s
[info]                  ·gc.alloc.rate:                   573.487 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.098 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 2397613.965 ops/s
[info]                  ·gc.alloc.rate:                   573.037 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.120 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     429.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2350539.263 ops/s
[info]                  ·gc.alloc.rate:               561.789 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.107 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 439.796 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   5: 2386288.411 ops/s
[info]                  ·gc.alloc.rate:                   570.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.888 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.828 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2388803.931 ±(99.9%) 88511.622 ops/s [Average]
[info]   (min, avg, max) = (2350539.263, 2388803.931, 2409998.827), stdev = 22986.187
[info]   CI (99.9%): [2300292.309, 2477315.554] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   570.925 ±(99.9%) 21.137 MB/sec [Average]
[info]   (min, avg, max) = (561.789, 570.925, 575.991), stdev = 5.489
[info]   CI (99.9%): [549.788, 592.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   376.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (376.000, 376.000, 376.000), stdev = 0.001
[info]   CI (99.9%): [376.000, 376.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   524.085 ±(99.9%) 690.876 MB/sec [Average]
[info]   (min, avg, max) = (326.214, 524.085, 657.107), stdev = 179.418
[info]   CI (99.9%): [≈ 0, 1214.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   345.526 ±(99.9%) 459.555 B/op [Average]
[info]   (min, avg, max) = (212.949, 345.526, 439.796), stdev = 119.345
[info]   CI (99.9%): [≈ 0, 805.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.080 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.019, 0.041), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.099] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 4.400, 13.000), stdev = 5.030
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 86.76% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97926.778 ops/s
[info] # Warmup Iteration   2: 245376.333 ops/s
[info] # Warmup Iteration   3: 251508.326 ops/s
[info] # Warmup Iteration   4: 254724.330 ops/s
[info] # Warmup Iteration   5: 252554.952 ops/s
[info] Iteration   1: 255447.974 ops/s
[info]                  ·gc.alloc.rate:               941.742 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4034.626 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 252366.283 ops/s
[info]                  ·gc.alloc.rate:                   930.366 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.596 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6156.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.779 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 256291.530 ops/s
[info]                  ·gc.alloc.rate:                   944.930 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.707 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6087.120 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.511 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 257634.685 ops/s
[info]                  ·gc.alloc.rate:                   949.821 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.623 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6091.900 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 256415.347 ops/s
[info]                  ·gc.alloc.rate:                   945.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6145.605 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.383 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   255631.164 ±(99.9%) 7642.856 ops/s [Average]
[info]   (min, avg, max) = (252366.283, 255631.164, 257634.685), stdev = 1984.826
[info]   CI (99.9%): [247988.308, 263274.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   942.440 ±(99.9%) 28.253 MB/sec [Average]
[info]   (min, avg, max) = (930.366, 942.440, 949.821), stdev = 7.337
[info]   CI (99.9%): [914.186, 970.693] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.739 ±(99.9%) 585.094 MB/sec [Average]
[info]   (min, avg, max) = (655.099, 926.739, 1001.668), stdev = 151.947
[info]   CI (99.9%): [341.645, 1511.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5703.206 ±(99.9%) 3593.745 B/op [Average]
[info]   (min, avg, max) = (4034.626, 5703.206, 6156.780), stdev = 933.284
[info]   CI (99.9%): [2109.461, 9296.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.067, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.411 ±(99.9%) 1.082 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.411, 0.779), stdev = 0.281
[info]   CI (99.9%): [≈ 0, 1.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.800, 6.000), stdev = 1.924
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 88.24% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141982.072 ops/s
[info] # Warmup Iteration   2: 326982.172 ops/s
[info] # Warmup Iteration   3: 334417.855 ops/s
[info] # Warmup Iteration   4: 340691.922 ops/s
[info] # Warmup Iteration   5: 335600.490 ops/s
[info] Iteration   1: 336172.248 ops/s
[info]                  ·gc.alloc.rate:                   986.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          980.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4589.142 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.487 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 334650.319 ops/s
[info]                  ·gc.alloc.rate:                   981.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.015 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4644.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 333353.359 ops/s
[info]                  ·gc.alloc.rate:                   978.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.375 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4687.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 340190.691 ops/s
[info]                  ·gc.alloc.rate:                   998.115 MB/sec
[info]                  ·gc.alloc.rate.norm:              4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4624.484 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 339097.944 ops/s
[info]                  ·gc.alloc.rate:               994.656 MB/sec
[info]                  ·gc.alloc.rate.norm:          4616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.693 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4657.940 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   336692.912 ±(99.9%) 11162.638 ops/s [Average]
[info]   (min, avg, max) = (333353.359, 336692.912, 340190.691), stdev = 2898.902
[info]   CI (99.9%): [325530.274, 347855.550] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   987.842 ±(99.9%) 32.405 MB/sec [Average]
[info]   (min, avg, max) = (978.137, 987.842, 998.115), stdev = 8.416
[info]   CI (99.9%): [955.437, 1020.248] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4616.001, 4616.001, 4616.001), stdev = 0.001
[info]   CI (99.9%): [4616.001, 4616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   993.134 ±(99.9%) 35.521 MB/sec [Average]
[info]   (min, avg, max) = (980.637, 993.134, 1003.693), stdev = 9.225
[info]   CI (99.9%): [957.613, 1028.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4640.820 ±(99.9%) 142.299 B/op [Average]
[info]   (min, avg, max) = (4589.142, 4640.820, 4687.911), stdev = 36.955
[info]   CI (99.9%): [4498.521, 4783.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.176 ±(99.9%) 0.722 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.176, 0.487), stdev = 0.188
[info]   CI (99.9%): [≈ 0, 0.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 13.000), stdev = 4.506
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 89.71% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89523.915 ops/s
[info] # Warmup Iteration   2: 753211.697 ops/s
[info] # Warmup Iteration   3: 1009695.096 ops/s
[info] # Warmup Iteration   4: 1002328.475 ops/s
[info] # Warmup Iteration   5: 1008326.202 ops/s
[info] Iteration   1: 999465.657 ops/s
[info]                  ·gc.alloc.rate:                   991.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1559.878 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1012306.205 ops/s
[info]                  ·gc.alloc.rate:                   1003.789 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1548.911 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 1016439.408 ops/s
[info]                  ·gc.alloc.rate:               1007.845 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.263 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1549.813 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1017060.277 ops/s
[info]                  ·gc.alloc.rate:                   1008.489 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1555.015 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1014337.749 ops/s
[info]                  ·gc.alloc.rate:                   1005.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1564.363 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1011921.859 ±(99.9%) 27764.237 ops/s [Average]
[info]   (min, avg, max) = (999465.657, 1011921.859, 1017060.277), stdev = 7210.284
[info]   CI (99.9%): [984157.622, 1039686.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1003.400 ±(99.9%) 27.452 MB/sec [Average]
[info]   (min, avg, max) = (991.081, 1003.400, 1008.489), stdev = 7.129
[info]   CI (99.9%): [975.948, 1030.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1000.559 ±(99.9%) 26.818 MB/sec [Average]
[info]   (min, avg, max) = (991.004, 1000.559, 1008.609), stdev = 6.965
[info]   CI (99.9%): [973.741, 1027.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1555.596 ±(99.9%) 25.373 B/op [Average]
[info]   (min, avg, max) = (1548.911, 1555.596, 1564.363), stdev = 6.589
[info]   CI (99.9%): [1530.223, 1580.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.045 ±(99.9%) 0.142 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.045, 0.097), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.400, 9.000), stdev = 2.966
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 91.18% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1822295.454 ops/s
[info] # Warmup Iteration   2: 2011783.994 ops/s
[info] # Warmup Iteration   3: 2051387.812 ops/s
[info] # Warmup Iteration   4: 2056239.805 ops/s
[info] # Warmup Iteration   5: 2056187.015 ops/s
[info] Iteration   1: 2051742.670 ops/s
[info]                  ·gc.alloc.rate:                   500.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.757 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2043153.081 ops/s
[info]                  ·gc.alloc.rate:                   498.696 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502.374 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2067833.109 ops/s
[info]                  ·gc.alloc.rate:               504.706 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 248.699 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 2068168.906 ops/s
[info]                  ·gc.alloc.rate:                   504.799 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     498.076 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 2073309.428 ops/s
[info]                  ·gc.alloc.rate:               506.040 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 248.801 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   2060841.439 ±(99.9%) 49225.464 ops/s [Average]
[info]   (min, avg, max) = (2043153.081, 2060841.439, 2073309.428), stdev = 12783.697
[info]   CI (99.9%): [2011615.975, 2110066.903] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   503.004 ±(99.9%) 12.000 MB/sec [Average]
[info]   (min, avg, max) = (498.696, 503.004, 506.040), stdev = 3.116
[info]   CI (99.9%): [491.004, 515.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.735 ±(99.9%) 686.736 MB/sec [Average]
[info]   (min, avg, max) = (326.875, 522.735, 654.761), stdev = 178.343
[info]   CI (99.9%): [≈ 0, 1209.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   399.541 ±(99.9%) 530.085 B/op [Average]
[info]   (min, avg, max) = (248.699, 399.541, 502.374), stdev = 137.661
[info]   CI (99.9%): [≈ 0, 929.626] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.110 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.064), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.280
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 92.65% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113868.560 ops/s
[info] # Warmup Iteration   2: 247313.278 ops/s
[info] # Warmup Iteration   3: 254066.250 ops/s
[info] # Warmup Iteration   4: 255067.347 ops/s
[info] # Warmup Iteration   5: 255824.155 ops/s
[info] Iteration   1: 254658.288 ops/s
[info]                  ·gc.alloc.rate:                   980.272 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6076.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 254838.300 ops/s
[info]                  ·gc.alloc.rate:                   980.969 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.621 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6097.066 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 251418.007 ops/s
[info]                  ·gc.alloc.rate:                   967.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.948 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6219.656 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.391 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 252373.466 ops/s
[info]                  ·gc.alloc.rate:                   971.471 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.606 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6225.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 253586.958 ops/s
[info]                  ·gc.alloc.rate:                   976.142 MB/sec
[info]                  ·gc.alloc.rate.norm:              6056.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6224.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   253375.004 ±(99.9%) 5667.741 ops/s [Average]
[info]   (min, avg, max) = (251418.007, 253375.004, 254838.300), stdev = 1471.894
[info]   CI (99.9%): [247707.263, 259042.745] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   975.330 ±(99.9%) 21.829 MB/sec [Average]
[info]   (min, avg, max) = (967.795, 975.330, 980.969), stdev = 5.669
[info]   CI (99.9%): [953.500, 997.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6056.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6056.002, 6056.002, 6056.002), stdev = 0.001
[info]   CI (99.9%): [6056.001, 6056.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.412 ±(99.9%) 30.668 MB/sec [Average]
[info]   (min, avg, max) = (983.622, 993.412, 1003.265), stdev = 7.964
[info]   CI (99.9%): [962.745, 1024.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6168.569 ±(99.9%) 288.592 B/op [Average]
[info]   (min, avg, max) = (6076.697, 6168.569, 6225.154), stdev = 74.946
[info]   CI (99.9%): [5879.977, 6457.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.285 ±(99.9%) 0.648 B/op [Average]
[info]   (min, avg, max) = (0.129, 0.285, 0.514), stdev = 0.168
[info]   CI (99.9%): [≈ 0, 0.932] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 6.000), stdev = 1.483
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 94.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 365263.948 ops/s
[info] # Warmup Iteration   2: 607825.082 ops/s
[info] # Warmup Iteration   3: 637477.731 ops/s
[info] # Warmup Iteration   4: 643308.419 ops/s
[info] # Warmup Iteration   5: 630649.656 ops/s
[info] Iteration   1: 644076.821 ops/s
[info]                  ·gc.alloc.rate:                   1260.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.222 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3254.051 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 638103.476 ops/s
[info]                  ·gc.alloc.rate:                   1249.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3303.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 637246.170 ops/s
[info]                  ·gc.alloc.rate:               1247.521 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.911 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2490.898 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 635190.615 ops/s
[info]                  ·gc.alloc.rate:                   1243.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3344.056 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 627340.370 ops/s
[info]                  ·gc.alloc.rate:                   1228.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1353.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3394.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   636391.491 ±(99.9%) 23270.968 ops/s [Average]
[info]   (min, avg, max) = (627340.370, 636391.491, 644076.821), stdev = 6043.396
[info]   CI (99.9%): [613120.523, 659662.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1245.880 ±(99.9%) 45.615 MB/sec [Average]
[info]   (min, avg, max) = (1228.154, 1245.880, 1260.965), stdev = 11.846
[info]   CI (99.9%): [1200.264, 1291.495] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1276.920 ±(99.9%) 577.820 MB/sec [Average]
[info]   (min, avg, max) = (1008.911, 1276.920, 1353.493), stdev = 150.058
[info]   CI (99.9%): [699.100, 1854.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3157.345 ±(99.9%) 1448.291 B/op [Average]
[info]   (min, avg, max) = (2490.898, 3157.345, 3394.331), stdev = 376.117
[info]   CI (99.9%): [1709.053, 4605.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.062 ±(99.9%) 0.216 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.062, 0.154), stdev = 0.056
[info]   CI (99.9%): [≈ 0, 0.278] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.600, 11.000), stdev = 2.881
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.59% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1150680.392 ops/s
[info] # Warmup Iteration   2: 1574112.650 ops/s
[info] # Warmup Iteration   3: 1573407.088 ops/s
[info] # Warmup Iteration   4: 1568512.461 ops/s
[info] # Warmup Iteration   5: 1580683.123 ops/s
[info] Iteration   1: 1589010.330 ops/s
[info]                  ·gc.alloc.rate:               711.076 MB/sec
[info]                  ·gc.alloc.rate.norm:          704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 647.279 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 1599785.848 ops/s
[info]                  ·gc.alloc.rate:                   715.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     646.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1582915.073 ops/s
[info]                  ·gc.alloc.rate:                   708.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     656.380 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1575476.450 ops/s
[info]                  ·gc.alloc.rate:                   705.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     993.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1587117.185 ops/s
[info]                  ·gc.alloc.rate:                   710.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     659.932 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1586860.977 ±(99.9%) 34274.800 ops/s [Average]
[info]   (min, avg, max) = (1575476.450, 1586860.977, 1599785.848), stdev = 8901.057
[info]   CI (99.9%): [1552586.177, 1621135.777] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   710.099 ±(99.9%) 15.323 MB/sec [Average]
[info]   (min, avg, max) = (705.029, 710.099, 715.884), stdev = 3.979
[info]   CI (99.9%): [694.776, 725.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (704.000, 704.000, 704.000), stdev = 0.001
[info]   CI (99.9%): [704.000, 704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   726.586 ±(99.9%) 578.529 MB/sec [Average]
[info]   (min, avg, max) = (653.785, 726.586, 995.235), stdev = 150.242
[info]   CI (99.9%): [148.057, 1305.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   720.846 ±(99.9%) 587.926 B/op [Average]
[info]   (min, avg, max) = (646.855, 720.846, 993.783), stdev = 152.682
[info]   CI (99.9%): [132.920, 1308.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 10.000), stdev = 3.536
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 97.06% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3726379.389 ops/s
[info] # Warmup Iteration   2: 4251579.487 ops/s
[info] # Warmup Iteration   3: 4333309.861 ops/s
[info] # Warmup Iteration   4: 4336210.030 ops/s
[info] # Warmup Iteration   5: 4354661.810 ops/s
[info] Iteration   1: 4334905.790 ops/s
[info]                  ·gc.alloc.rate:                   352.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4345002.461 ops/s
[info]                  ·gc.alloc.rate:               353.509 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 117.994 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 4319427.167 ops/s
[info]                  ·gc.alloc.rate:                   351.447 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 4323868.610 ops/s
[info]                  ·gc.alloc.rate:                   351.802 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 4297981.440 ops/s
[info]                  ·gc.alloc.rate:               349.679 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 119.410 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   4324237.094 ±(99.9%) 68278.446 ops/s [Average]
[info]   (min, avg, max) = (4297981.440, 4324237.094, 4345002.461), stdev = 17731.696
[info]   CI (99.9%): [4255958.648, 4392515.540] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   351.824 ±(99.9%) 5.555 MB/sec [Average]
[info]   (min, avg, max) = (349.679, 351.824, 353.509), stdev = 1.443
[info]   CI (99.9%): [346.269, 357.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.950 ±(99.9%) 1.085 MB/sec [Average]
[info]   (min, avg, max) = (325.541, 325.950, 326.221), stdev = 0.282
[info]   CI (99.9%): [324.865, 327.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   118.588 ±(99.9%) 2.147 B/op [Average]
[info]   (min, avg, max) = (117.994, 118.588, 119.410), stdev = 0.558
[info]   CI (99.9%): [116.441, 120.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.015), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.53% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91337.540 ops/s
[info] # Warmup Iteration   2: 211986.912 ops/s
[info] # Warmup Iteration   3: 214235.331 ops/s
[info] # Warmup Iteration   4: 216564.164 ops/s
[info] # Warmup Iteration   5: 215524.739 ops/s
[info] Iteration   1: 213495.674 ops/s
[info]                  ·gc.alloc.rate:                   1098.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7280.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 211825.385 ops/s
[info]                  ·gc.alloc.rate:                   1090.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9834.839 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.928 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 211979.359 ops/s
[info]                  ·gc.alloc.rate:                   1090.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7411.611 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.464 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 216881.332 ops/s
[info]                  ·gc.alloc.rate:               1116.081 MB/sec
[info]                  ·gc.alloc.rate.norm:          8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7277.649 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 215970.555 ops/s
[info]                  ·gc.alloc.rate:                   1111.388 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.149 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9784.282 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   214030.461 ±(99.9%) 8874.628 ops/s [Average]
[info]   (min, avg, max) = (211825.385, 214030.461, 216881.332), stdev = 2304.713
[info]   CI (99.9%): [205155.832, 222905.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1101.412 ±(99.9%) 45.649 MB/sec [Average]
[info]   (min, avg, max) = (1090.091, 1101.412, 1116.081), stdev = 11.855
[info]   CI (99.9%): [1055.763, 1147.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.002, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.445 ±(99.9%) 711.682 MB/sec [Average]
[info]   (min, avg, max) = (987.963, 1131.445, 1343.149), stdev = 184.822
[info]   CI (99.9%): [419.763, 1843.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8317.738 ±(99.9%) 5248.561 B/op [Average]
[info]   (min, avg, max) = (7277.649, 8317.738, 9834.839), stdev = 1363.035
[info]   CI (99.9%): [3069.177, 13566.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.191 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.339 ±(99.9%) 1.424 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.339, 0.928), stdev = 0.370
[info]   CI (99.9%): [≈ 0, 1.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 11.000), stdev = 3.564
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:18:15
[info] Benchmark                                                                                    Mode  Cnt         Score        Error   Units
[info] JsonCodecBenchmark.missingReqFieldCirce                                                     thrpt    5   1544228.176 ±  21332.934   ops/s
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2449.993 ±     34.051  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2496.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2448.445 ±    594.371  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2494.141 ±    580.623    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.051 ±      0.093    B/op
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        36.000               counts
[info] JsonCodecBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        52.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJackson                                                   thrpt    5    215267.189 ±  11430.608   ops/s
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       510.094 ±     27.073  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3728.002 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       519.473 ±    688.261  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3802.779 ±   5105.072    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.025 ±      0.143  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.182 ±      1.044    B/op
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         8.000               counts
[info] JsonCodecBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5        18.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniter                                                  thrpt    5    452089.948 ±  16456.502   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       416.106 ±     15.152  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1448.001 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       456.707 ±    688.626  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1586.899 ±   2362.294    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.130 ±      0.407    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        11.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1752825.874 ±  63805.762   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1087.400 ±     39.564  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1133.507 ±    701.545  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5      1017.648 ±    637.454    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.052 ±      0.059    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        17.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3678099.710 ±  94663.961   ops/s
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       523.681 ±     13.482  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       523.326 ±    690.609  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       223.883 ±    295.802    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.029 ±      0.176  MB/sec
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.013 ±      0.076    B/op
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000               counts
[info] JsonCodecBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.missingReqFieldPlay                                                      thrpt    5    127688.037 ±   3367.649   ops/s
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1064.197 ±     28.058  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13112.003 ±      0.001    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1061.669 ±    587.329  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     13084.576 ±   7373.907    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.565 ±      1.093    B/op
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.readAnyRefsCirce                                                         thrpt    5   1139662.074 ±  25326.030   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1784.932 ±     39.691  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2464.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1829.172 ±    708.248  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2524.159 ±    929.573    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.069 ±      0.126    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        52.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                                       thrpt    5   1843122.370 ±  25794.626   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1293.393 ±     18.149  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1339.928 ±     42.536  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1143.737 ±     41.664    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.021 ±      0.057    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6556446.675 ± 114139.923   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       833.491 ±     14.455  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       859.199 ±    697.914  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       206.168 ±    167.415    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.013 ±      0.026    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        15.000                   ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                                          thrpt    5    406372.421 ±  11054.040   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1087.047 ±     29.755  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4208.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1130.670 ±    688.521  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4374.273 ±   2577.854    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.226 ±      0.259    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readArraysCirce                                                          thrpt    5    632365.943 ±  31592.565   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2054.718 ±    102.648  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5112.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2036.250 ±     21.561  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5066.816 ±    286.511    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.135 ±      0.226    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                                thrpt    5        30.000               counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        49.000                   ms
[info] JsonCodecBenchmark.readArraysJackson                                                        thrpt    5   1197605.847 ±  63975.267   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1138.810 ±     60.929  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1496.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1142.911 ±    714.746  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1502.330 ±    965.956    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.049 ±      0.091    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                               thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.readArraysJsoniter                                                       thrpt    5   2723391.810 ±  98189.689   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5      1135.564 ±     40.984  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5      1135.151 ±    712.970  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       656.493 ±    433.577    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.031 ±      0.071    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readArraysPlay                                                           thrpt    5    227149.361 ±   4494.204   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1345.596 ±     26.706  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9320.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1338.303 ±     41.231  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9269.605 ±    298.626    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.054 ±      0.231  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.375 ±      1.599    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        40.000                   ms
[info] JsonCodecBenchmark.readBitSetsJackson                                                       thrpt    5   1747104.584 ±  55942.963   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1128.261 ±     36.207  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1142.493 ±    715.158  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1028.259 ±    625.810    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.029 ±      0.108  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.026 ±      0.096    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                                      thrpt    5   3637749.399 ± 292566.881   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       480.957 ±     38.714  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       457.566 ±    686.765  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       197.210 ±    286.750    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.012 ±      0.067    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5         8.000                   ms
[info] JsonCodecBenchmark.readBitSetsPlay                                                          thrpt    5    276372.540 ±   7529.201   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1296.810 ±     33.278  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7384.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1270.641 ±    589.225  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7238.609 ±   3468.940    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±      0.121  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.308 ±      0.683    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        44.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                                   thrpt    5    562314.567 ±   8795.159   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1867.136 ±     29.265  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1830.527 ±    719.677  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5121.472 ±   2006.766    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.151 ±      0.339    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        32.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                                 thrpt    5    692696.827 ±   5363.244   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       866.520 ±      6.611  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1968.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       868.037 ±    710.150  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      1971.780 ±   1619.788    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.038 ±      0.200    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4386412.152 ± 217696.937   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       200.742 ±      9.959  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       167.468 ±    598.769  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        60.135 ±    215.606    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.444 ±      3.753  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.161 ±      1.363    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5         9.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                                    thrpt    5    215246.551 ±   5632.641   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5      1182.079 ±     30.970  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8640.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1200.266 ±    703.595  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8778.566 ±   5306.305    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.058 ±      0.164  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.427 ±      1.205    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        42.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3341175.507 ±  98884.891   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5      1002.393 ±     29.668  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       997.467 ±     27.660  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       469.700 ±     17.772    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.027 ±      0.041    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        15.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    241371.033 ±   4833.083   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1297.295 ±     26.133  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1338.445 ±     40.945  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8724.423 ±    324.125    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.326 ±      0.794    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.readIterablesCirce                                                       thrpt    5    543502.663 ±  16988.683   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1910.825 ±     59.215  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5528.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1896.289 ±    695.313  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5488.848 ±   2141.850    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.120 ±      0.284    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        28.000               counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readIterablesJackson                                                     thrpt    5    533751.657 ±  14549.763   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       542.826 ±     14.831  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       592.440 ±    567.492  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1748.741 ±   1704.186    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.033 ±      0.166  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.099 ±      0.492    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         9.000               counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                                    thrpt    5   2448594.941 ±  75080.493   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       659.888 ±     20.243  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       424.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       657.058 ±     13.292  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       422.190 ±      5.412    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.021 ±      0.078    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        10.000               counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.readIterablesPlay                                                        thrpt    5    180874.076 ±   5400.926   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1275.703 ±     38.115  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     11096.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1269.334 ±    563.367  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     11038.878 ±   4832.283    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.071 ±      0.108  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.616 ±      0.929    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.readMapsCirce                                                            thrpt    5    471367.655 ±   8059.623   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1675.440 ±     28.830  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1624.249 ±    580.675  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5419.644 ±   1866.528    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.153 ±      0.223    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readMapsJackson                                                          thrpt    5    909849.211 ±  40702.132   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1073.379 ±     48.033  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1070.072 ±    551.515  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1850.212 ±    946.060    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±      0.223  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.079 ±      0.384    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                                thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        46.000                   ms
[info] JsonCodecBenchmark.readMapsJsoniter                                                         thrpt    5   3203323.291 ±  23305.661   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       798.156 ±      5.782  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       792.495 ±    701.336  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       389.176 ±    343.433    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.018 ±      0.058    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        19.000                   ms
[info] JsonCodecBenchmark.readMapsPlay                                                             thrpt    5    254001.246 ±   8829.302   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1307.088 ±     45.207  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8096.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1338.543 ±     40.479  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8291.370 ±    384.117    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.037 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.233 ±      0.550    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        39.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                                   thrpt    5    675814.458 ±  23010.392   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       876.298 ±     29.887  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       930.837 ±    571.255  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      2168.431 ±   1364.140    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.054 ±      0.257  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.126 ±      0.597    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        14.000               counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2326815.781 ±  54789.442   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1100.363 ±     25.955  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1133.515 ±    693.798  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       766.419 ±    468.711    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.031 ±      0.046    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                                      thrpt    5    226690.536 ±   5802.265   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1191.910 ±     30.464  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8272.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1200.123 ±    683.370  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8331.731 ±   4822.047    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.156  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.377 ±      1.095    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.readPrimitivesCirce                                                      thrpt    5    438528.848 ±  11546.980   ops/s
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1297.811 ±     34.119  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1277.372 ±    569.921  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4580.880 ±   1978.104    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.029 ±      0.108  MB/sec
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.105 ±      0.385    B/op
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                                    thrpt    5   1006142.315 ±  16675.004   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       772.544 ±     12.770  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       732.185 ±    573.745  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1145.419 ±    912.583    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.046 ±      0.143    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5         9.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3330260.228 ±  23685.846   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       101.608 ±      0.722  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.365 ±    539.742  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        48.424 ±    255.325    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.002 ±      0.017    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         6.000                   ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                                       thrpt    5    164473.236 ±   2714.932   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1090.622 ±     17.793  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10432.003 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1131.252 ±    700.387  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10823.330 ±   6779.592    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.478 ±      0.423    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                                        thrpt    5   1275815.822 ±  45278.114   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1427.245 ±     50.689  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1760.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1415.308 ±    571.211  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1746.210 ±    748.101    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.025 ±      0.132  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.031 ±      0.164    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        21.000               counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                                      thrpt    5   3944479.454 ± 155741.727   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1083.116 ±     42.724  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1070.114 ±    566.059  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       426.976 ±    231.435    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.012 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.005 ±      0.018    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  16036049.121 ± 920790.917   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       489.260 ±     28.114  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       522.728 ±    689.659  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        51.305 ±     67.907    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±      0.156  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±      0.015    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        10.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                                         thrpt    5    920757.013 ±  22132.569   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1362.453 ±     32.760  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2328.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1341.679 ±     36.153  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2292.524 ±     50.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.085 ±      0.076    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        20.000               counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeArraysCirce                                                         thrpt    5    664818.515 ±  10628.318   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1605.764 ±     25.591  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3800.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1623.897 ±    581.300  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3842.886 ±   1373.488    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.099 ±      0.301    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        24.000               counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        53.000                   ms
[info] JsonCodecBenchmark.writeArraysJackson                                                       thrpt    5   1828185.109 ±  93535.665   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1059.768 ±     54.202  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1071.117 ±    578.999  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       921.469 ±    482.465    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.025 ±      0.039    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                                      thrpt    5   4404279.516 ± 103161.734   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1209.367 ±     28.311  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1204.140 ±    697.963  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       430.020 ±    245.801    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.075 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.027 ±      0.044    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.writeArraysPlay                                                          thrpt    5    335685.915 ±  13265.155   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1198.294 ±     47.371  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1200.143 ±    683.381  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5618.782 ±   3007.424    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.108  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.234 ±      0.501    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                                      thrpt    5   2745013.194 ± 128611.073   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1172.490 ±     54.964  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       672.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1141.339 ±    710.974  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       654.750 ±    425.181    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.019 ±      0.042    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4231308.190 ±  80673.708   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       774.588 ±     14.707  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       725.670 ±    567.748  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       269.854 ±    212.259    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.014 ±      0.039    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        15.000                   ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                                         thrpt    5    484585.842 ±  18600.359   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1434.159 ±     55.123  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1477.229 ±    702.654  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4796.655 ±   2308.561    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.143  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.148 ±      0.461    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    943405.290 ±  17331.641   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1184.886 ±     21.844  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1976.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1206.460 ±    700.831  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      2011.178 ±   1143.940    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±      0.166  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.055 ±      0.276    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2267453.370 ±  77381.202   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       438.142 ±     14.981  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       391.587 ±    561.468  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       272.276 ±    400.496    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.017 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.012 ±      0.073    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         6.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5         5.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    248877.985 ±   6953.732   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       975.717 ±     27.252  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       993.538 ±     30.102  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6280.800 ±    197.126    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.211 ±      0.578    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeIterablesCirce                                                      thrpt    5    588091.462 ±  37010.194   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1507.182 ±     94.833  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4032.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1485.274 ±    695.984  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3972.711 ±   1812.400    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.066 ±      0.178    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        49.000                   ms
[info] JsonCodecBenchmark.writeIterablesJackson                                                    thrpt    5   1259466.937 ±  49313.485   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       774.927 ±     30.350  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       968.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       791.956 ±    703.540  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       988.340 ±    856.151    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.012 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.016 ±      0.089    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        14.000                   ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                                   thrpt    5   4904981.716 ± 150028.562   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       748.274 ±     22.923  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       724.606 ±    559.862  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       232.578 ±    184.529    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.015 ±      0.049    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeIterablesPlay                                                       thrpt    5    385417.717 ±  17082.359   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1334.657 ±     59.209  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1340.165 ±     38.172  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5471.180 ±    325.179    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.079 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.323 ±      0.423    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        20.000               counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.writeMapsCirce                                                           thrpt    5    328431.400 ±  11684.975   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5       981.988 ±     34.911  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4704.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5       991.930 ±     37.706  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4752.263 ±    340.372    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.046 ±      0.088  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.219 ±      0.412    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        42.000                   ms
[info] JsonCodecBenchmark.writeMapsJackson                                                         thrpt    5    994262.138 ±  23602.178   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1031.370 ±     24.476  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      1632.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1003.280 ±     23.925  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      1587.564 ±     28.436    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.046 ±      0.114    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                                        thrpt    5   2388803.931 ±  88511.622   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       570.925 ±     21.137  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       376.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       524.085 ±    690.876  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       345.526 ±    459.555    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.019 ±      0.080    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        22.000                   ms
[info] JsonCodecBenchmark.writeMapsPlay                                                            thrpt    5    255631.164 ±   7642.856   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       942.440 ±     28.253  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       926.739 ±    585.094  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5703.206 ±   3593.745    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.067 ±      0.174  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.411 ±      1.082    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        19.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                                    thrpt    5    336692.912 ±  11162.638   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5       987.842 ±     32.405  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5       993.134 ±     35.521  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4640.820 ±    142.299    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.154  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.176 ±      0.722    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                                  thrpt    5   1011921.859 ±  27764.237   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1003.400 ±     27.452  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      1560.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1000.559 ±     26.818  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1555.596 ±     25.373    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.045 ±      0.142    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2060841.439 ±  49225.464   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       503.004 ±     12.000  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       522.735 ±    686.736  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       399.541 ±    530.085    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.029 ±      0.110    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        11.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                                     thrpt    5    253375.004 ±   5667.741   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       975.330 ±     21.829  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      6056.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       993.412 ±     30.668  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6168.569 ±    288.592    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.285 ±      0.648    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                                     thrpt    5    636391.491 ±  23270.968   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1245.880 ±     45.615  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3080.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1276.920 ±    577.820  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      3157.345 ±   1448.291    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.062 ±      0.216    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                                   thrpt    5   1586860.977 ±  34274.800   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       710.099 ±     15.323  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       704.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       726.586 ±    578.529  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       720.846 ±    587.926    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.017 ±      0.036    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4324237.094 ±  68278.446   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       351.824 ±      5.555  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       325.950 ±      1.085  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       118.588 ±      2.147    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.021 ±      0.080  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.008 ±      0.029    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         5.000               counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        10.000                   ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                                      thrpt    5    214030.461 ±   8874.628   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1101.412 ±     45.649  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      8096.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1131.445 ±    711.682  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8317.738 ±   5248.561    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.046 ±      0.191  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.339 ±      1.424    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        29.000                   ms
[success] Total time: 1137 s, completed Nov 13, 2017 7:35:01 PM
