[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 19, 2017 4:36:10 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 2 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:44:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 3L;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460327L => {
[info]                     req0.&=(-2L);
[info]                     _s = CodecBase.readString(in)
[info]                   }
[info]                   case -6783600876201295968L => {
[info]                     req0.&=(-3L);
[info]                     _bd = d0(in)
[info]                   }
[info]                   case 1264338770762899922L => _os = Option(CodecBase.readString(in))
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             if (x.s.ne(null))
[info]               out.writeVal(x.s)
[info]             else
[info]               out.writeNull()
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bd");
[info]             if (x.bd.ne(null))
[info]               out.writeRaw(x.bd.toString)
[info]             else
[info]               out.writeNull()
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isDefined))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("os");
[info]               if (x.os.get.ne(null))
[info]                 out.writeVal(x.os.get)
[info]               else
[info]                 out.writeNull()
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): scala.math.BigDecimal = {
[info]         val x = in.readBigDecimal();
[info]         if (x.ne(null))
[info]           BigDecimal(x)
[info]         else
[info]           null
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: Codec[AnyRefs] = materialize[AnyRefs]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:46:49: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case -6783600876201295945L => _bs = d0(in)
[info]                   case -8348953845359796749L => _mbs = d1(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): scala.collection.immutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, BitSet.empty)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.BitSet = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           BitSet.empty
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, BitSet.empty)
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: Codec[BitSets] = materialize[BitSets]
[info]                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:48:53: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460344L => _l = d0(in)
[info]                   case 2830859626721460327L => _s = d1(in)
[info]                   case 2873926700155739113L => _ls = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): List[String] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[String]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(CodecBase.readString(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, List.empty[String])
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.Set[Int] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           Set.empty[Int]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, Set.empty[Int])
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def d2(in: JsonIterator): List[Set[Int]] = nextToken(in) match {
[info]         case '[' => if (nextToken(in).==(']'))
[info]           List.empty[scala.collection.immutable.Set[Int]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, List.empty[scala.collection.immutable.Set[Int]])
[info]         case _ => decodeError(in, "expect [ or n")
[info]       };
[info]       private def e0(out: JsonStream, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           if (x.ne(null))
[info]             out.writeVal(x)
[info]           else
[info]             out.writeNull()
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = writeSep(out, first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: Codec[Iterables] = materialize[Iterables]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:50:43: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in)
[info]                   case 4483514629548578302L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): scala.collection.immutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, HashMap.empty[String, Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.HashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, HashMap.empty[Long, Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: Codec[Maps] = materialize[Maps]
[info]                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:52:57: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in)
[info]                   case 4483514629548578302L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): scala.collection.mutable.HashMap[String,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           HashMap.empty[String, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(this.readObjectFieldAsString(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, HashMap.empty[String, Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.mutable.OpenHashMap[Long,Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           OpenHashMap.empty[Long, Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, OpenHashMap.empty[Long, Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsInt(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: Codec[MutableMaps] = materialize[MutableMaps]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:54:63: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460345L => _m = d0(in)
[info]                   case 4483514629548578302L => _mm = d2(in)
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.nonEmpty))
[info]             {
[info]               first = writeSep(out, first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonIterator): scala.collection.immutable.IntMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           IntMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsInt(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, IntMap.empty[Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d1(in: JsonIterator): scala.collection.immutable.LongMap[Double] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[Double]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(readObjectFieldAsLong(in), in.readDouble())
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, LongMap.empty[Double])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def d2(in: JsonIterator): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = nextToken(in) match {
[info]         case '{' => if (nextToken(in).==('}'))
[info]           LongMap.empty[scala.collection.immutable.LongMap[Double]]
[info]         else
[info]           {
[info]             unreadByte(in);
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(readObjectFieldAsLong(in), d1(in))
[info]              while (nextToken(in).==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => CodecBase.parseNull(in, LongMap.empty[scala.collection.immutable.LongMap[Double]])
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       private def e0(out: JsonStream, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonStream, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonStream, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = writeSep(out, first);
[info]           writeObjectField(out, kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: Codec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/CodecBenchmark.scala:56:55: Generated codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.jsoniter.CodegenAccess._;
[info]   import com.jsoniter.CodecBase;
[info]   import com.jsoniter.JsonIterator;
[info]   import com.jsoniter.output.JsonStream;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.Codec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def decode(in: JsonIterator): AnyRef = nextToken(in) match {
[info]         case '{' => {
[info]           var req0: Long = 255L;
[info]           var _b: Byte = 0;
[info]           var _s: Short = 0;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0;
[info]           var _dbl: Double = 0;
[info]           var _f: Float = 0;
[info]           if (nextToken(in).!=('}'))
[info]             {
[info]               unreadByte(in);
[info]               do 
[info]                 (CodecBase.readObjectFieldAsHash(in) match {
[info]                   case 2830859626721460342L => {
[info]                     req0.&=(-2L);
[info]                     _b = toByte(in, in.readInt())
[info]                   }
[info]                   case 2830859626721460327L => {
[info]                     req0.&=(-3L);
[info]                     _s = toShort(in, in.readInt())
[info]                   }
[info]                   case 2830859626721460349L => {
[info]                     req0.&=(-5L);
[info]                     _i = in.readInt()
[info]                   }
[info]                   case 2830859626721460344L => {
[info]                     req0.&=(-9L);
[info]                     _l = in.readLong()
[info]                   }
[info]                   case -6783600876201295960L => {
[info]                     req0.&=(-17L);
[info]                     _bl = in.readBoolean()
[info]                   }
[info]                   case -5174012946808456747L => {
[info]                     req0.&=(-33L);
[info]                     _ch = toChar(in, in.readInt())
[info]                   }
[info]                   case 4538095422755341545L => {
[info]                     req0.&=(-65L);
[info]                     _dbl = in.readDouble()
[info]                   }
[info]                   case 2830859626721460338L => {
[info]                     req0.&=(-129L);
[info]                     _f = in.readFloat()
[info]                   }
[info]                   case _ => in.skip()
[info]                 })
[info]                while (nextToken(in).==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             reqFieldError(in, reqFields, req0)
[info]         }
[info]         case 'n' => CodecBase.parseNull(in, null)
[info]         case _ => decodeError(in, "expect { or n")
[info]       };
[info]       override def encode(obj: AnyRef, out: JsonStream): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = writeSep(out, first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: Codec[Primitives] = materialize[Primitives]
[info]                                                       ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
Processing 32 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 45 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*CodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson
[info] # Run progress: 0.00% complete, ETA 00:06:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1223076.282 ops/s
[info] # Warmup Iteration   2: 1825851.127 ops/s
[info] # Warmup Iteration   3: 1820353.009 ops/s
[info] # Warmup Iteration   4: 1840760.922 ops/s
[info] # Warmup Iteration   5: 1845761.205 ops/s
[info] Iteration   1: 1841057.837 ops/s
[info]                  ·gc.alloc.rate:                   1291.942 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1140.075 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1847126.771 ops/s
[info]                  ·gc.alloc.rate:                   1296.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.453 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1142.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1833100.519 ops/s
[info]                  ·gc.alloc.rate:                   1286.356 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1156.458 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1827852.775 ops/s
[info]                  ·gc.alloc.rate:                   1282.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1013.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     872.694 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 1832332.824 ops/s
[info]                  ·gc.alloc.rate:                   1285.824 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1162.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson":
[info]   1836294.145 ±(99.9%) 29651.620 ops/s [Average]
[info]   (min, avg, max) = (1827852.775, 1836294.145, 1847126.771), stdev = 7700.432
[info]   CI (99.9%): [1806642.525, 1865945.765] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1288.599 ±(99.9%) 20.779 MB/sec [Average]
[info]   (min, avg, max) = (1282.684, 1288.599, 1296.188), stdev = 5.396
[info]   CI (99.9%): [1267.820, 1309.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1278.241 ±(99.9%) 569.640 MB/sec [Average]
[info]   (min, avg, max) = (1013.940, 1278.241, 1354.179), stdev = 147.934
[info]   CI (99.9%): [708.601, 1847.882] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1094.894 ±(99.9%) 479.679 B/op [Average]
[info]   (min, avg, max) = (872.694, 1094.894, 1162.689), stdev = 124.571
[info]   CI (99.9%): [615.215, 1574.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.025, 0.054), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.087] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.800, 11.000), stdev = 2.588
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 2.44% complete, ETA 00:10:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6153469.718 ops/s
[info] # Warmup Iteration   2: 6524071.145 ops/s
[info] # Warmup Iteration   3: 6734566.540 ops/s
[info] # Warmup Iteration   4: 6667037.052 ops/s
[info] # Warmup Iteration   5: 6745821.669 ops/s
[info] Iteration   1: 6725173.579 ops/s
[info]                  ·gc.alloc.rate:                   1162.708 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 6712337.537 ops/s
[info]                  ·gc.alloc.rate:                   1160.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     233.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6709028.549 ops/s
[info]                  ·gc.alloc.rate:                   1159.859 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     313.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 6711762.527 ops/s
[info]                  ·gc.alloc.rate:                   1160.414 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.936 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     236.025 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 6730792.933 ops/s
[info]                  ·gc.alloc.rate:                   1163.660 MB/sec
[info]                  ·gc.alloc.rate.norm:              272.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.458 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter":
[info]   6717819.025 ±(99.9%) 36854.309 ops/s [Average]
[info]   (min, avg, max) = (6709028.549, 6717819.025, 6730792.933), stdev = 9570.947
[info]   CI (99.9%): [6680964.716, 6754673.334] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   1161.428 ±(99.9%) 6.378 MB/sec [Average]
[info]   (min, avg, max) = (1159.859, 1161.428, 1163.660), stdev = 1.656
[info]   CI (99.9%): [1155.050, 1167.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   272.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (272.000, 272.000, 272.000), stdev = 0.001
[info]   CI (99.9%): [272.000, 272.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1202.586 ±(99.9%) 704.393 MB/sec [Average]
[info]   (min, avg, max) = (997.952, 1202.586, 1347.458), stdev = 182.929
[info]   CI (99.9%): [498.193, 1906.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   281.613 ±(99.9%) 164.179 B/op [Average]
[info]   (min, avg, max) = (233.902, 281.613, 314.962), stdev = 42.637
[info]   CI (99.9%): [117.434, 445.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.016 B/op [Average]
[info]   (min, avg, max) = (0.005, 0.011, 0.015), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.026] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 4.000), stdev = 0.837
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.88% complete, ETA 00:10:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 232808.080 ops/s
[info] # Warmup Iteration   2: 390199.895 ops/s
[info] # Warmup Iteration   3: 397993.904 ops/s
[info] # Warmup Iteration   4: 396678.614 ops/s
[info] # Warmup Iteration   5: 397822.808 ops/s
[info] Iteration   1: 398316.354 ops/s
[info]                  ·gc.alloc.rate:                   1065.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3896.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.247 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 391330.441 ops/s
[info]                  ·gc.alloc.rate:                   1046.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.277 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3985.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.251 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 392947.503 ops/s
[info]                  ·gc.alloc.rate:                   1051.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.787 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5328.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.334 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 401122.336 ops/s
[info]                  ·gc.alloc.rate:               1072.891 MB/sec
[info]                  ·gc.alloc.rate.norm:          4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3934.921 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 399748.003 ops/s
[info]                  ·gc.alloc.rate:                   1069.213 MB/sec
[info]                  ·gc.alloc.rate.norm:              4208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3961.646 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.164 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay":
[info]   396692.928 ±(99.9%) 16603.948 ops/s [Average]
[info]   (min, avg, max) = (391330.441, 396692.928, 401122.336), stdev = 4311.993
[info]   CI (99.9%): [380088.979, 413296.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1061.044 ±(99.9%) 44.386 MB/sec [Average]
[info]   (min, avg, max) = (1046.723, 1061.044, 1072.891), stdev = 11.527
[info]   CI (99.9%): [1016.658, 1105.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4208.001, 4208.001, 4208.001), stdev = 0.001
[info]   CI (99.9%): [4208.001, 4208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1063.713 ±(99.9%) 575.773 MB/sec [Average]
[info]   (min, avg, max) = (986.619, 1063.713, 1330.787), stdev = 149.527
[info]   CI (99.9%): [487.939, 1639.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4221.343 ±(99.9%) 2385.772 B/op [Average]
[info]   (min, avg, max) = (3896.922, 4221.343, 5328.125), stdev = 619.577
[info]   CI (99.9%): [1835.571, 6607.115] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.199 ±(99.9%) 0.487 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.199, 0.334), stdev = 0.126
[info]   CI (99.9%): [≈ 0, 0.686] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.033
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson
[info] # Run progress: 7.32% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1043899.419 ops/s
[info] # Warmup Iteration   2: 1588637.959 ops/s
[info] # Warmup Iteration   3: 1608736.838 ops/s
[info] # Warmup Iteration   4: 1624167.437 ops/s
[info] # Warmup Iteration   5: 1589627.750 ops/s
[info] Iteration   1: 1598513.608 ops/s
[info]                  ·gc.alloc.rate:               1016.028 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      982.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 967.432 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1617426.199 ops/s
[info]                  ·gc.alloc.rate:                   1028.059 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     964.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1585867.497 ops/s
[info]                  ·gc.alloc.rate:               1008.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      996.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 988.686 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   4: 1607380.634 ops/s
[info]                  ·gc.alloc.rate:               1021.678 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.916 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 980.658 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 1612678.647 ops/s
[info]                  ·gc.alloc.rate:               1025.030 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 981.355 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson":
[info]   1604373.317 ±(99.9%) 48140.817 ops/s [Average]
[info]   (min, avg, max) = (1585867.497, 1604373.317, 1617426.199), stdev = 12502.017
[info]   CI (99.9%): [1556232.500, 1652514.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1019.766 ±(99.9%) 30.545 MB/sec [Average]
[info]   (min, avg, max) = (1008.036, 1019.766, 1028.059), stdev = 7.932
[info]   CI (99.9%): [989.221, 1050.311] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   995.743 ±(99.9%) 34.764 MB/sec [Average]
[info]   (min, avg, max) = (982.937, 995.743, 1005.918), stdev = 9.028
[info]   CI (99.9%): [960.980, 1030.507] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   976.478 ±(99.9%) 39.524 B/op [Average]
[info]   (min, avg, max) = (964.259, 976.478, 988.686), stdev = 10.264
[info]   CI (99.9%): [936.954, 1016.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJackson:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.408
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 9.76% complete, ETA 00:09:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6174926.165 ops/s
[info] # Warmup Iteration   2: 5350179.085 ops/s
[info] # Warmup Iteration   3: 5429788.123 ops/s
[info] # Warmup Iteration   4: 5432348.176 ops/s
[info] # Warmup Iteration   5: 5468009.198 ops/s
[info] Iteration   1: 5476748.299 ops/s
[info]                  ·gc.alloc.rate:                   584.830 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5474804.179 ops/s
[info]                  ·gc.alloc.rate:                   584.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     187.867 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4533006.237 ops/s
[info]                  ·gc.alloc.rate:               484.053 MB/sec
[info]                  ·gc.alloc.rate.norm:          168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 113.793 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 3858360.668 ops/s
[info]                  ·gc.alloc.rate:                   412.027 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     133.690 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 3824719.923 ops/s
[info]                  ·gc.alloc.rate:                   408.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     270.559 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter":
[info]   4633527.861 ±(99.9%) 3154195.459 ops/s [Average]
[info]   (min, avg, max) = (3824719.923, 4633527.861, 5476748.299), stdev = 819134.544
[info]   CI (99.9%): [1479332.402, 7787723.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   494.780 ±(99.9%) 336.852 MB/sec [Average]
[info]   (min, avg, max) = (408.369, 494.780, 584.830), stdev = 87.480
[info]   CI (99.9%): [157.928, 831.633] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.917 ±(99.9%) 689.161 MB/sec [Average]
[info]   (min, avg, max) = (327.867, 523.917, 657.666), stdev = 178.973
[info]   CI (99.9%): [≈ 0, 1213.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   178.665 ±(99.9%) 234.518 B/op [Average]
[info]   (min, avg, max) = (113.793, 178.665, 270.559), stdev = 60.904
[info]   CI (99.9%): [≈ 0, 413.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.036 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.024), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.000, 7.000), stdev = 2.550
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay
[info] # Run progress: 12.20% complete, ETA 00:09:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 121059.078 ops/s
[info] # Warmup Iteration   2: 247030.595 ops/s
[info] # Warmup Iteration   3: 256934.780 ops/s
[info] # Warmup Iteration   4: 261288.230 ops/s
[info] # Warmup Iteration   5: 256510.973 ops/s
[info] Iteration   1: 258870.624 ops/s
[info]                  ·gc.alloc.rate:                   1175.533 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8011.013 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 257369.104 ops/s
[info]                  ·gc.alloc.rate:                   1168.693 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.307 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6084.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.509 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 257572.125 ops/s
[info]                  ·gc.alloc.rate:                   1169.583 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.123 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8149.038 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 256488.212 ops/s
[info]                  ·gc.alloc.rate:                   1164.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6165.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 254560.148 ops/s
[info]                  ·gc.alloc.rate:                   1155.862 MB/sec
[info]                  ·gc.alloc.rate.norm:              7144.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.569 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6233.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.386 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay":
[info]   256972.043 ±(99.9%) 6141.051 ops/s [Average]
[info]   (min, avg, max) = (254560.148, 256972.043, 258870.624), stdev = 1594.812
[info]   CI (99.9%): [250830.991, 263113.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1166.875 ±(99.9%) 28.006 MB/sec [Average]
[info]   (min, avg, max) = (1155.862, 1166.875, 1175.533), stdev = 7.273
[info]   CI (99.9%): [1138.869, 1194.881] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7144.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7144.002, 7144.002, 7144.002), stdev = 0.001
[info]   CI (99.9%): [7144.001, 7144.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.290 ±(99.9%) 682.088 MB/sec [Average]
[info]   (min, avg, max) = (995.307, 1132.290, 1334.123), stdev = 177.136
[info]   CI (99.9%): [450.202, 1814.377] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6928.752 ±(99.9%) 4056.372 B/op [Average]
[info]   (min, avg, max) = (6084.127, 6928.752, 8149.038), stdev = 1053.427
[info]   CI (99.9%): [2872.381, 10985.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.015
[info]   CI (99.9%): [0.006, 0.119] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.382 ±(99.9%) 0.346 B/op [Average]
[info]   (min, avg, max) = (0.255, 0.382, 0.509), stdev = 0.090
[info]   CI (99.9%): [0.037, 0.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readBitSetsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.800, 10.000), stdev = 1.483
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 14.63% complete, ETA 00:09:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2994099.096 ops/s
[info] # Warmup Iteration   2: 3494393.788 ops/s
[info] # Warmup Iteration   3: 3563825.335 ops/s
[info] # Warmup Iteration   4: 3593743.191 ops/s
[info] # Warmup Iteration   5: 3614944.727 ops/s
[info] Iteration   1: 3570978.929 ops/s
[info]                  ·gc.alloc.rate:                   1688.749 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     737.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3529653.186 ops/s
[info]                  ·gc.alloc.rate:                   1669.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     750.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 3564698.341 ops/s
[info]                  ·gc.alloc.rate:                   1685.741 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     746.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3585075.690 ops/s
[info]                  ·gc.alloc.rate:                   1695.398 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     743.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3546115.860 ops/s
[info]                  ·gc.alloc.rate:                   1676.868 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     753.351 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3559304.401 ±(99.9%) 83539.467 ops/s [Average]
[info]   (min, avg, max) = (3529653.186, 3559304.401, 3585075.690), stdev = 21694.934
[info]   CI (99.9%): [3475764.935, 3642843.868] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1683.192 ±(99.9%) 39.552 MB/sec [Average]
[info]   (min, avg, max) = (1669.204, 1683.192, 1695.398), stdev = 10.271
[info]   CI (99.9%): [1643.641, 1722.744] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1688.257 ±(99.9%) 36.005 MB/sec [Average]
[info]   (min, avg, max) = (1674.653, 1688.257, 1697.944), stdev = 9.350
[info]   CI (99.9%): [1652.252, 1724.262] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   746.260 ±(99.9%) 23.192 B/op [Average]
[info]   (min, avg, max) = (737.790, 746.260, 753.351), stdev = 6.023
[info]   CI (99.9%): [723.068, 769.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.009, 0.028, 0.046), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.000, 5.000), stdev = 0.001
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 13.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 17.07% complete, ETA 00:09:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140927.942 ops/s
[info] # Warmup Iteration   2: 234535.258 ops/s
[info] # Warmup Iteration   3: 243271.614 ops/s
[info] # Warmup Iteration   4: 240748.098 ops/s
[info] # Warmup Iteration   5: 239743.019 ops/s
[info] Iteration   1: 241522.040 ops/s
[info]                  ·gc.alloc.rate:                   1298.131 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.483 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8621.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.136 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 239222.232 ops/s
[info]                  ·gc.alloc.rate:                   1285.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8765.269 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.548 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 241295.749 ops/s
[info]                  ·gc.alloc.rate:                   1296.902 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8735.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 242313.619 ops/s
[info]                  ·gc.alloc.rate:                   1302.385 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8739.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.135 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 240977.028 ops/s
[info]                  ·gc.alloc.rate:                   1296.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8796.021 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.271 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay":
[info]   241066.134 ±(99.9%) 4400.828 ops/s [Average]
[info]   (min, avg, max) = (239222.232, 241066.134, 242313.619), stdev = 1142.881
[info]   CI (99.9%): [236665.306, 245466.961] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1295.889 ±(99.9%) 23.490 MB/sec [Average]
[info]   (min, avg, max) = (1285.863, 1295.889, 1302.385), stdev = 6.100
[info]   CI (99.9%): [1272.399, 1319.379] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.110 ±(99.9%) 39.057 MB/sec [Average]
[info]   (min, avg, max) = (1323.483, 1338.110, 1348.282), stdev = 10.143
[info]   CI (99.9%): [1299.053, 1377.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8731.587 ±(99.9%) 255.200 B/op [Average]
[info]   (min, avg, max) = (8621.144, 8731.587, 8796.021), stdev = 66.275
[info]   CI (99.9%): [8476.387, 8986.786] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.299 ±(99.9%) 0.689 B/op [Average]
[info]   (min, avg, max) = (0.135, 0.299, 0.548), stdev = 0.179
[info]   CI (99.9%): [≈ 0, 0.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.033
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson
[info] # Run progress: 19.51% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 295446.124 ops/s
[info] # Warmup Iteration   2: 515045.547 ops/s
[info] # Warmup Iteration   3: 529119.415 ops/s
[info] # Warmup Iteration   4: 531740.086 ops/s
[info] # Warmup Iteration   5: 449176.974 ops/s
[info] Iteration   1: 366230.863 ops/s
[info]                  ·gc.alloc.rate:               372.456 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1398.445 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 365792.482 ops/s
[info]                  ·gc.alloc.rate:               372.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.546 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1408.710 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   3: 502591.526 ops/s
[info]                  ·gc.alloc.rate:                   511.137 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.428 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2054.804 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 531029.781 ops/s
[info]                  ·gc.alloc.rate:                   540.055 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.870 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     974.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.062 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 527173.569 ops/s
[info]                  ·gc.alloc.rate:               536.144 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.435 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1970.918 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson":
[info]   458563.644 ±(99.9%) 328034.118 ops/s [Average]
[info]   (min, avg, max) = (365792.482, 458563.644, 531029.781), stdev = 85189.419
[info]   CI (99.9%): [130529.527, 786597.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   466.363 ±(99.9%) 333.604 MB/sec [Average]
[info]   (min, avg, max) = (372.024, 466.363, 540.055), stdev = 86.636
[info]   CI (99.9%): [132.759, 799.967] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.000, 1600.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   459.763 ±(99.9%) 698.384 MB/sec [Average]
[info]   (min, avg, max) = (325.537, 459.763, 660.435), stdev = 181.368
[info]   CI (99.9%): [≈ 0, 1158.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1561.442 ±(99.9%) 1728.153 B/op [Average]
[info]   (min, avg, max) = (974.331, 1561.442, 2054.804), stdev = 448.796
[info]   CI (99.9%): [≈ 0, 3289.595] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.134 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.065), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJackson:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.789
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter
[info] # Run progress: 21.95% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2970277.921 ops/s
[info] # Warmup Iteration   2: 3080012.809 ops/s
[info] # Warmup Iteration   3: 2244672.960 ops/s
[info] # Warmup Iteration   4: 2248288.703 ops/s
[info] # Warmup Iteration   5: 2526902.704 ops/s
[info] Iteration   1: 3244154.624 ops/s
[info]                  ·gc.alloc.rate:                   874.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     317.043 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3233483.876 ops/s
[info]                  ·gc.alloc.rate:                   871.469 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     479.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3217847.547 ops/s
[info]                  ·gc.alloc.rate:                   867.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     483.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3234388.852 ops/s
[info]                  ·gc.alloc.rate:                   871.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     322.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3199854.144 ops/s
[info]                  ·gc.alloc.rate:                   862.395 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     490.632 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter":
[info]   3225945.809 ±(99.9%) 66862.338 ops/s [Average]
[info]   (min, avg, max) = (3199854.144, 3225945.809, 3244154.624), stdev = 17363.937
[info]   CI (99.9%): [3159083.471, 3292808.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   869.416 ±(99.9%) 18.007 MB/sec [Average]
[info]   (min, avg, max) = (862.395, 869.416, 874.299), stdev = 4.676
[info]   CI (99.9%): [851.410, 887.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   857.870 ±(99.9%) 701.435 MB/sec [Average]
[info]   (min, avg, max) = (653.751, 857.870, 997.920), stdev = 182.161
[info]   CI (99.9%): [156.434, 1559.305] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   418.654 ±(99.9%) 347.965 B/op [Average]
[info]   (min, avg, max) = (317.043, 418.654, 490.632), stdev = 90.365
[info]   CI (99.9%): [70.690, 766.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.020, 0.030), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.800, 8.000), stdev = 1.643
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay
[info] # Run progress: 24.39% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 37801.551 ops/s
[info] # Warmup Iteration   2: 157870.405 ops/s
[info] # Warmup Iteration   3: 162433.766 ops/s
[info] # Warmup Iteration   4: 165659.714 ops/s
[info] # Warmup Iteration   5: 165102.185 ops/s
[info] Iteration   1: 165436.376 ops/s
[info]                  ·gc.alloc.rate:                   1133.104 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.587 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9382.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.594 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 164235.748 ops/s
[info]                  ·gc.alloc.rate:                   1124.978 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9495.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.598 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 162853.293 ops/s
[info]                  ·gc.alloc.rate:                   1115.506 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12856.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.604 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 163279.604 ops/s
[info]                  ·gc.alloc.rate:               1118.428 MB/sec
[info]                  ·gc.alloc.rate.norm:          10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 9667.062 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 162462.637 ops/s
[info]                  ·gc.alloc.rate:                   1112.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9747.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.605 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay":
[info]   163653.532 ±(99.9%) 4603.067 ops/s [Average]
[info]   (min, avg, max) = (162462.637, 163653.532, 165436.376), stdev = 1195.402
[info]   CI (99.9%): [159050.464, 168256.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1120.968 ±(99.9%) 31.399 MB/sec [Average]
[info]   (min, avg, max) = (1112.825, 1120.968, 1133.104), stdev = 8.154
[info]   CI (99.9%): [1089.569, 1152.368] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10776.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10776.003, 10776.003, 10776.003), stdev = 0.001
[info]   CI (99.9%): [10776.002, 10776.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1063.759 ±(99.9%) 575.908 MB/sec [Average]
[info]   (min, avg, max) = (986.587, 1063.759, 1330.893), stdev = 149.562
[info]   CI (99.9%): [487.851, 1639.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10230.011 ±(99.9%) 5680.823 B/op [Average]
[info]   (min, avg, max) = (9382.600, 10230.011, 12856.681), stdev = 1475.292
[info]   CI (99.9%): [4549.188, 15910.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.480 ±(99.9%) 1.034 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.480, 0.605), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.514] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readIterablesPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.200, 12.000), stdev = 3.564
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson
[info] # Run progress: 26.83% complete, ETA 00:08:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386975.406 ops/s
[info] # Warmup Iteration   2: 860261.390 ops/s
[info] # Warmup Iteration   3: 872294.985 ops/s
[info] # Warmup Iteration   4: 861210.865 ops/s
[info] # Warmup Iteration   5: 862116.531 ops/s
[info] Iteration   1: 859171.546 ops/s
[info]                  ·gc.alloc.rate:                   1013.617 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          996.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1823.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.191 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 868465.391 ops/s
[info]                  ·gc.alloc.rate:                   1024.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1812.681 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 873491.674 ops/s
[info]                  ·gc.alloc.rate:                   1030.428 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.250 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1810.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 867412.544 ops/s
[info]                  ·gc.alloc.rate:                   1023.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.926 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1828.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 865364.075 ops/s
[info]                  ·gc.alloc.rate:                   1020.860 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1837.962 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson":
[info]   866781.046 ±(99.9%) 20025.258 ops/s [Average]
[info]   (min, avg, max) = (859171.546, 866781.046, 873491.674), stdev = 5200.496
[info]   CI (99.9%): [846755.787, 886806.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1022.557 ±(99.9%) 23.533 MB/sec [Average]
[info]   (min, avg, max) = (1013.617, 1022.557, 1030.428), stdev = 6.111
[info]   CI (99.9%): [999.023, 1046.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1004.158 ±(99.9%) 22.782 MB/sec [Average]
[info]   (min, avg, max) = (996.004, 1004.158, 1010.939), stdev = 5.916
[info]   CI (99.9%): [981.376, 1026.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1822.634 ±(99.9%) 43.439 B/op [Average]
[info]   (min, avg, max) = (1810.650, 1822.634, 1837.962), stdev = 11.281
[info]   CI (99.9%): [1779.195, 1866.074] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.068 ±(99.9%) 0.263 B/op [Average]
[info]   (min, avg, max) = (0.038, 0.068, 0.191), stdev = 0.068
[info]   CI (99.9%): [≈ 0, 0.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 11.000), stdev = 3.421
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter
[info] # Run progress: 29.27% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3588710.559 ops/s
[info] # Warmup Iteration   2: 3350589.889 ops/s
[info] # Warmup Iteration   3: 3374612.768 ops/s
[info] # Warmup Iteration   4: 3431089.335 ops/s
[info] # Warmup Iteration   5: 3324517.089 ops/s
[info] Iteration   1: 3434879.301 ops/s
[info]                  ·gc.alloc.rate:                   855.836 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     450.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3418325.497 ops/s
[info]                  ·gc.alloc.rate:                   851.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.082 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     303.336 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.038 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3424244.647 ops/s
[info]                  ·gc.alloc.rate:                   853.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     456.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3438122.597 ops/s
[info]                  ·gc.alloc.rate:                   856.652 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     304.033 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3433682.889 ops/s
[info]                  ·gc.alloc.rate:                   855.525 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     458.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter":
[info]   3429850.986 ±(99.9%) 31791.429 ops/s [Average]
[info]   (min, avg, max) = (3418325.497, 3429850.986, 3438122.597), stdev = 8256.133
[info]   CI (99.9%): [3398059.558, 3461642.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   854.580 ±(99.9%) 7.919 MB/sec [Average]
[info]   (min, avg, max) = (851.729, 854.580, 856.652), stdev = 2.057
[info]   CI (99.9%): [846.660, 862.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   860.523 ±(99.9%) 699.129 MB/sec [Average]
[info]   (min, avg, max) = (659.082, 860.523, 1001.271), stdev = 181.562
[info]   CI (99.9%): [161.394, 1559.653] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   394.699 ±(99.9%) 320.115 B/op [Average]
[info]   (min, avg, max) = (303.336, 394.699, 458.781), stdev = 83.133
[info]   CI (99.9%): [74.584, 714.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.027 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.027, 0.038), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 7.000), stdev = 1.304
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay
[info] # Run progress: 31.71% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145540.911 ops/s
[info] # Warmup Iteration   2: 253580.799 ops/s
[info] # Warmup Iteration   3: 259450.559 ops/s
[info] # Warmup Iteration   4: 256986.849 ops/s
[info] # Warmup Iteration   5: 259499.955 ops/s
[info] Iteration   1: 258839.356 ops/s
[info]                  ·gc.alloc.rate:                   1332.020 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.182 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8060.517 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 254299.351 ops/s
[info]                  ·gc.alloc.rate:                   1308.641 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8254.134 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.387 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 252693.502 ops/s
[info]                  ·gc.alloc.rate:                   1300.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6261.010 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.259 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 257463.777 ops/s
[info]                  ·gc.alloc.rate:                   1324.917 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8225.946 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 258114.726 ops/s
[info]                  ·gc.alloc.rate:                   1328.259 MB/sec
[info]                  ·gc.alloc.rate.norm:              8096.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8229.223 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.254 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay":
[info]   256282.142 ±(99.9%) 10206.706 ops/s [Average]
[info]   (min, avg, max) = (252693.502, 256282.142, 258839.356), stdev = 2650.649
[info]   CI (99.9%): [246075.436, 266488.848] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1318.847 ±(99.9%) 52.496 MB/sec [Average]
[info]   (min, avg, max) = (1300.399, 1318.847, 1332.020), stdev = 13.633
[info]   CI (99.9%): [1266.352, 1371.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8096.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8096.002, 8096.002, 8096.002), stdev = 0.001
[info]   CI (99.9%): [8096.001, 8096.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.468 ±(99.9%) 575.496 MB/sec [Average]
[info]   (min, avg, max) = (1005.659, 1272.468, 1350.115), stdev = 149.454
[info]   CI (99.9%): [696.972, 1847.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7806.166 ±(99.9%) 3339.237 B/op [Average]
[info]   (min, avg, max) = (6261.010, 7806.166, 8254.134), stdev = 867.189
[info]   CI (99.9%): [4466.928, 11145.403] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 0.272 B/op [Average]
[info]   (min, avg, max) = (0.253, 0.307, 0.387), stdev = 0.071
[info]   CI (99.9%): [0.035, 0.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMapsPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.200, 10.000), stdev = 1.643
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson
[info] # Run progress: 34.15% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 41102.126 ops/s
[info] # Warmup Iteration   2: 593765.495 ops/s
[info] # Warmup Iteration   3: 653058.221 ops/s
[info] # Warmup Iteration   4: 665489.681 ops/s
[info] # Warmup Iteration   5: 662166.872 ops/s
[info] Iteration   1: 661841.089 ops/s
[info]                  ·gc.alloc.rate:                   838.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.773 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1563.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 661488.171 ops/s
[info]                  ·gc.alloc.rate:                   837.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2359.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 668391.104 ops/s
[info]                  ·gc.alloc.rate:                   846.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2347.487 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.147 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 655900.859 ops/s
[info]                  ·gc.alloc.rate:               830.464 MB/sec
[info]                  ·gc.alloc.rate.norm:          1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1601.682 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 661392.771 ops/s
[info]                  ·gc.alloc.rate:                   837.403 MB/sec
[info]                  ·gc.alloc.rate.norm:              1992.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.712 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1593.099 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson":
[info]   661802.799 ±(99.9%) 17059.183 ops/s [Average]
[info]   (min, avg, max) = (655900.859, 661802.799, 668391.104), stdev = 4430.216
[info]   CI (99.9%): [644743.616, 678861.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   837.937 ±(99.9%) 21.567 MB/sec [Average]
[info]   (min, avg, max) = (830.464, 837.937, 846.255), stdev = 5.601
[info]   CI (99.9%): [816.370, 859.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1992.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1992.001, 1992.001, 1992.001), stdev = 0.001
[info]   CI (99.9%): [1992.001, 1992.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   796.893 ±(99.9%) 695.293 MB/sec [Average]
[info]   (min, avg, max) = (657.773, 796.893, 997.275), stdev = 180.566
[info]   CI (99.9%): [101.599, 1492.186] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1893.018 ±(99.9%) 1619.235 B/op [Average]
[info]   (min, avg, max) = (1563.547, 1893.018, 2359.273), stdev = 420.510
[info]   CI (99.9%): [273.783, 3512.252] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.109 ±(99.9%) 0.248 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.109, 0.149), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 36.59% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2078515.952 ops/s
[info] # Warmup Iteration   2: 2654871.372 ops/s
[info] # Warmup Iteration   3: 2681645.552 ops/s
[info] # Warmup Iteration   4: 2699893.796 ops/s
[info] # Warmup Iteration   5: 2698539.532 ops/s
[info] Iteration   1: 2726437.604 ops/s
[info]                  ·gc.alloc.rate:                   1705.284 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2008.306 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1158.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 2722716.710 ops/s
[info]                  ·gc.alloc.rate:                   1702.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.372 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     972.709 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2733476.907 ops/s
[info]                  ·gc.alloc.rate:                   1709.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.631 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     973.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2714189.019 ops/s
[info]                  ·gc.alloc.rate:                   1697.618 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     982.320 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2113957.281 ops/s
[info]                  ·gc.alloc.rate:                   1322.169 MB/sec
[info]                  ·gc.alloc.rate.norm:              984.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1358.135 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1010.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter":
[info]   2602155.504 ±(99.9%) 1051224.681 ops/s [Average]
[info]   (min, avg, max) = (2113957.281, 2602155.504, 2733476.907), stdev = 272999.711
[info]   CI (99.9%): [1550930.824, 3653380.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1627.523 ±(99.9%) 657.509 MB/sec [Average]
[info]   (min, avg, max) = (1322.169, 1627.523, 1709.631), stdev = 170.753
[info]   CI (99.9%): [970.014, 2285.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   984.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (984.000, 984.000, 984.000), stdev = 0.001
[info]   CI (99.9%): [984.000, 984.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1687.033 ±(99.9%) 885.388 MB/sec [Average]
[info]   (min, avg, max) = (1358.135, 1687.033, 2008.306), stdev = 229.933
[info]   CI (99.9%): [801.645, 2572.421] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1019.543 ±(99.9%) 305.779 B/op [Average]
[info]   (min, avg, max) = (972.709, 1019.543, 1158.853), stdev = 79.410
[info]   CI (99.9%): [713.764, 1325.321] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (0.015, 0.037, 0.060), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   25.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 0.707
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.400, 10.000), stdev = 2.302
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay
[info] # Run progress: 39.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 81061.920 ops/s
[info] # Warmup Iteration   2: 215574.863 ops/s
[info] # Warmup Iteration   3: 224199.783 ops/s
[info] # Warmup Iteration   4: 222152.634 ops/s
[info] # Warmup Iteration   5: 224533.002 ops/s
[info] Iteration   1: 225258.570 ops/s
[info]                  ·gc.alloc.rate:                   1200.452 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.331 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6895.556 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.291 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 222639.052 ops/s
[info]                  ·gc.alloc.rate:                   1186.505 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.238 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9371.368 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.883 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 224294.846 ops/s
[info]                  ·gc.alloc.rate:                   1195.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.915 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9362.912 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.438 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 220518.009 ops/s
[info]                  ·gc.alloc.rate:               1175.202 MB/sec
[info]                  ·gc.alloc.rate.norm:          8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.327 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7172.095 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 219398.134 ops/s
[info]                  ·gc.alloc.rate:                   1169.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              8384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9650.762 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay":
[info]   222421.722 ±(99.9%) 9504.491 ops/s [Average]
[info]   (min, avg, max) = (219398.134, 222421.722, 225258.570), stdev = 2468.286
[info]   CI (99.9%): [212917.231, 231926.213] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1185.346 ±(99.9%) 50.659 MB/sec [Average]
[info]   (min, avg, max) = (1169.226, 1185.346, 1200.452), stdev = 13.156
[info]   CI (99.9%): [1134.687, 1236.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8384.002, 8384.002, 8384.002), stdev = 0.001
[info]   CI (99.9%): [8384.002, 8384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1199.939 ±(99.9%) 716.641 MB/sec [Average]
[info]   (min, avg, max) = (987.331, 1199.939, 1345.887), stdev = 186.109
[info]   CI (99.9%): [483.299, 1916.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8490.539 ±(99.9%) 5153.708 B/op [Average]
[info]   (min, avg, max) = (6895.556, 8490.539, 9650.762), stdev = 1338.402
[info]   CI (99.9%): [3336.830, 13644.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.382 ±(99.9%) 1.241 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.382, 0.883), stdev = 0.322
[info]   CI (99.9%): [≈ 0, 1.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 14.000), stdev = 4.219
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson
[info] # Run progress: 41.46% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 650146.549 ops/s
[info] # Warmup Iteration   2: 965166.485 ops/s
[info] # Warmup Iteration   3: 987611.282 ops/s
[info] # Warmup Iteration   4: 992607.208 ops/s
[info] # Warmup Iteration   5: 994799.906 ops/s
[info] Iteration   1: 993149.168 ops/s
[info]                  ·gc.alloc.rate:                   732.276 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1044.077 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1010304.334 ops/s
[info]                  ·gc.alloc.rate:                   744.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1547.788 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1023408.492 ops/s
[info]                  ·gc.alloc.rate:                   754.587 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1022.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 1010271.967 ops/s
[info]                  ·gc.alloc.rate:               744.898 MB/sec
[info]                  ·gc.alloc.rate.norm:          1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1039.310 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1007223.647 ops/s
[info]                  ·gc.alloc.rate:                   742.628 MB/sec
[info]                  ·gc.alloc.rate.norm:              1160.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.047 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1045.065 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson":
[info]   1008871.522 ±(99.9%) 41528.334 ops/s [Average]
[info]   (min, avg, max) = (993149.168, 1008871.522, 1023408.492), stdev = 10784.776
[info]   CI (99.9%): [967343.188, 1050399.855] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   743.862 ±(99.9%) 30.623 MB/sec [Average]
[info]   (min, avg, max) = (732.276, 743.862, 754.587), stdev = 7.953
[info]   CI (99.9%): [713.239, 774.484] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1160.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1160.000, 1160.000, 1160.000), stdev = 0.001
[info]   CI (99.9%): [1160.000, 1160.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   730.979 ±(99.9%) 566.238 MB/sec [Average]
[info]   (min, avg, max) = (659.097, 730.979, 993.944), stdev = 147.050
[info]   CI (99.9%): [164.741, 1297.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1139.830 ±(99.9%) 878.826 B/op [Average]
[info]   (min, avg, max) = (1022.913, 1139.830, 1547.788), stdev = 228.228
[info]   CI (99.9%): [261.005, 2018.656] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.039 ±(99.9%) 0.137 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.039, 0.097), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 7.000), stdev = 2.302
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 43.90% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4744815.554 ops/s
[info] # Warmup Iteration   2: 4799528.266 ops/s
[info] # Warmup Iteration   3: 5025889.395 ops/s
[info] # Warmup Iteration   4: 5003540.402 ops/s
[info] # Warmup Iteration   5: 4975341.586 ops/s
[info] Iteration   1: 4017669.194 ops/s
[info]                  ·gc.alloc.rate:      122.580 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3460660.284 ops/s
[info]                  ·gc.alloc.rate:               105.590 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 116.335 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 3512255.398 ops/s
[info]                  ·gc.alloc.rate:      107.158 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 4097915.417 ops/s
[info]                  ·gc.alloc.rate:                   125.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     98.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 5000573.740 ops/s
[info]                  ·gc.alloc.rate:      152.566 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter":
[info]   4017814.807 ±(99.9%) 2387898.159 ops/s [Average]
[info]   (min, avg, max) = (3460660.284, 4017814.807, 5000573.740), stdev = 620129.569
[info]   CI (99.9%): [1629916.648, 6405712.966] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   122.584 ±(99.9%) 72.848 MB/sec [Average]
[info]   (min, avg, max) = (105.590, 122.584, 152.566), stdev = 18.918
[info]   CI (99.9%): [49.736, 195.432] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.361 ±(99.9%) 539.723 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.361, 255.912), stdev = 140.164
[info]   CI (99.9%): [≈ 0, 642.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   42.916 ±(99.9%) 227.618 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 42.916, 116.335), stdev = 59.112
[info]   CI (99.9%): [≈ 0, 270.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.054 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.012), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay
[info] # Run progress: 46.34% complete, ETA 00:05:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 90853.071 ops/s
[info] # Warmup Iteration   2: 164479.579 ops/s
[info] # Warmup Iteration   3: 165815.448 ops/s
[info] # Warmup Iteration   4: 167864.198 ops/s
[info] # Warmup Iteration   5: 168508.987 ops/s
[info] Iteration   1: 167239.932 ops/s
[info]                  ·gc.alloc.rate:                   1166.751 MB/sec
[info]                  ·gc.alloc.rate.norm:              10976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12403.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.588 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 166935.242 ops/s
[info]                  ·gc.alloc.rate:                   1164.602 MB/sec
[info]                  ·gc.alloc.rate.norm:              10976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9380.118 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 167099.528 ops/s
[info]                  ·gc.alloc.rate:                   1165.778 MB/sec
[info]                  ·gc.alloc.rate.norm:              10976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.832 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12567.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.784 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 165269.445 ops/s
[info]                  ·gc.alloc.rate:                   1153.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              10976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9572.763 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 165847.959 ops/s
[info]                  ·gc.alloc.rate:                   1157.043 MB/sec
[info]                  ·gc.alloc.rate.norm:              10976.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.143 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12769.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay":
[info]   166478.421 ±(99.9%) 3353.303 ops/s [Average]
[info]   (min, avg, max) = (165269.445, 166478.421, 167239.932), stdev = 870.842
[info]   CI (99.9%): [163125.118, 169831.724] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1161.438 ±(99.9%) 23.367 MB/sec [Average]
[info]   (min, avg, max) = (1153.017, 1161.438, 1166.751), stdev = 6.068
[info]   CI (99.9%): [1138.071, 1184.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10976.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10976.003, 10976.003, 10976.003), stdev = 0.001
[info]   CI (99.9%): [10976.002, 10976.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1200.063 ±(99.9%) 702.867 MB/sec [Average]
[info]   (min, avg, max) = (995.272, 1200.063, 1346.143), stdev = 182.532
[info]   CI (99.9%): [497.196, 1902.930] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11338.722 ±(99.9%) 6570.489 B/op [Average]
[info]   (min, avg, max) = (9380.118, 11338.722, 12769.858), stdev = 1706.335
[info]   CI (99.9%): [4768.233, 17909.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.472 ±(99.9%) 0.857 B/op [Average]
[info]   (min, avg, max) = (0.198, 0.472, 0.784), stdev = 0.223
[info]   CI (99.9%): [≈ 0, 1.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 9.000), stdev = 2.408
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 48.78% complete, ETA 00:05:39
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2662605.193 ops/s
[info] # Warmup Iteration   2: 3848394.129 ops/s
[info] # Warmup Iteration   3: 3824078.233 ops/s
[info] # Warmup Iteration   4: 3864080.574 ops/s
[info] # Warmup Iteration   5: 3843080.340 ops/s
[info] Iteration   1: 3865507.929 ops/s
[info]                  ·gc.alloc.rate:                   1061.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3863068.643 ops/s
[info]                  ·gc.alloc.rate:                   1060.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     406.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3865081.612 ops/s
[info]                  ·gc.alloc.rate:                   1061.327 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     544.953 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3879904.436 ops/s
[info]                  ·gc.alloc.rate:               1065.362 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 408.714 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 3880099.666 ops/s
[info]                  ·gc.alloc.rate:                   1065.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     410.048 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson":
[info]   3870732.457 ±(99.9%) 32777.531 ops/s [Average]
[info]   (min, avg, max) = (3863068.643, 3870732.457, 3880099.666), stdev = 8512.221
[info]   CI (99.9%): [3837954.926, 3903509.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1062.854 ±(99.9%) 8.922 MB/sec [Average]
[info]   (min, avg, max) = (1060.755, 1062.854, 1065.390), stdev = 2.317
[info]   CI (99.9%): [1053.932, 1071.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.114 ±(99.9%) 579.066 MB/sec [Average]
[info]   (min, avg, max) = (993.278, 1070.114, 1338.826), stdev = 150.382
[info]   CI (99.9%): [491.048, 1649.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   434.988 ±(99.9%) 236.855 B/op [Average]
[info]   (min, avg, max) = (404.261, 434.988, 544.953), stdev = 61.510
[info]   CI (99.9%): [198.133, 671.843] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.017), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 9.000), stdev = 2.739
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 51.22% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 10404349.860 ops/s
[info] # Warmup Iteration   2: 12143870.541 ops/s
[info] # Warmup Iteration   3: 12228327.063 ops/s
[info] # Warmup Iteration   4: 12118772.744 ops/s
[info] # Warmup Iteration   5: 12503149.963 ops/s
[info] Iteration   1: 12596148.568 ops/s
[info]                  ·gc.alloc.rate:                   384.308 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     40.660 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 12619753.433 ops/s
[info]                  ·gc.alloc.rate:               385.036 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 40.626 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 12448202.270 ops/s
[info]                  ·gc.alloc.rate:                   379.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.881 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   4: 12372897.601 ops/s
[info]                  ·gc.alloc.rate:               377.492 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41.478 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 12387221.923 ops/s
[info]                  ·gc.alloc.rate:                   377.936 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     41.431 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.003 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter":
[info]   12484844.759 ±(99.9%) 447379.308 ops/s [Average]
[info]   (min, avg, max) = (12372897.601, 12484844.759, 12619753.433), stdev = 116182.986
[info]   CI (99.9%): [12037465.451, 12932224.067] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   380.913 ±(99.9%) 13.661 MB/sec [Average]
[info]   (min, avg, max) = (377.492, 380.913, 385.036), stdev = 3.548
[info]   CI (99.9%): [367.252, 394.574] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.943 ±(99.9%) 1.069 MB/sec [Average]
[info]   (min, avg, max) = (325.541, 325.943, 326.211), stdev = 0.278
[info]   CI (99.9%): [324.874, 327.012] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   41.076 ±(99.9%) 1.583 B/op [Average]
[info]   (min, avg, max) = (40.626, 41.076, 41.478), stdev = 0.411
[info]   CI (99.9%): [39.493, 42.659] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.002 ±(99.9%) 0.008 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.002, 0.005), stdev = 0.002
[info]   CI (99.9%): [≈ 0, 0.011] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   4.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 53.66% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 647411.946 ops/s
[info] # Warmup Iteration   2: 995528.425 ops/s
[info] # Warmup Iteration   3: 1010717.214 ops/s
[info] # Warmup Iteration   4: 992299.367 ops/s
[info] # Warmup Iteration   5: 1008487.456 ops/s
[info] Iteration   1: 995923.417 ops/s
[info]                  ·gc.alloc.rate:                   1524.325 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.796 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2105.439 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 985968.111 ops/s
[info]                  ·gc.alloc.rate:                   1509.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.705 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2673.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 986337.621 ops/s
[info]                  ·gc.alloc.rate:                   1509.635 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2149.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 976527.300 ops/s
[info]                  ·gc.alloc.rate:                   1494.645 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2721.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 988823.880 ops/s
[info]                  ·gc.alloc.rate:                   1513.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              2408.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.464 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2156.593 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay":
[info]   986716.066 ±(99.9%) 26798.089 ops/s [Average]
[info]   (min, avg, max) = (976527.300, 986716.066, 995923.417), stdev = 6959.379
[info]   CI (99.9%): [959917.977, 1013514.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1510.243 ±(99.9%) 41.009 MB/sec [Average]
[info]   (min, avg, max) = (1494.645, 1510.243, 1524.325), stdev = 10.650
[info]   CI (99.9%): [1469.234, 1551.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2408.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2408.000, 2408.000, 2408.000), stdev = 0.001
[info]   CI (99.9%): [2408.000, 2408.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1480.146 ±(99.9%) 712.249 MB/sec [Average]
[info]   (min, avg, max) = (1332.796, 1480.146, 1689.305), stdev = 184.969
[info]   CI (99.9%): [767.897, 2192.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2361.351 ±(99.9%) 1186.513 B/op [Average]
[info]   (min, avg, max) = (2105.439, 2361.351, 2721.614), stdev = 308.134
[info]   CI (99.9%): [1174.838, 3547.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.125), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.221] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.106 ±(99.9%) 0.247 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.106, 0.199), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson
[info] # Run progress: 56.10% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1710646.509 ops/s
[info] # Warmup Iteration   2: 2624728.194 ops/s
[info] # Warmup Iteration   3: 2634804.493 ops/s
[info] # Warmup Iteration   4: 2678407.662 ops/s
[info] # Warmup Iteration   5: 2659873.357 ops/s
[info] Iteration   1: 2678213.282 ops/s
[info]                  ·gc.alloc.rate:                   1143.995 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     585.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2645733.544 ops/s
[info]                  ·gc.alloc.rate:                   1130.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 2706470.943 ops/s
[info]                  ·gc.alloc.rate:                   1156.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     585.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2676111.372 ops/s
[info]                  ·gc.alloc.rate:                   1143.079 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     792.160 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2652676.051 ops/s
[info]                  ·gc.alloc.rate:                   1133.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.918 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     600.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson":
[info]   2671841.038 ±(99.9%) 92474.991 ops/s [Average]
[info]   (min, avg, max) = (2645733.544, 2671841.038, 2706470.943), stdev = 24015.461
[info]   CI (99.9%): [2579366.048, 2764316.029] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1141.262 ±(99.9%) 39.529 MB/sec [Average]
[info]   (min, avg, max) = (1130.121, 1141.262, 1156.066), stdev = 10.266
[info]   CI (99.9%): [1101.732, 1180.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1139.831 ±(99.9%) 710.569 MB/sec [Average]
[info]   (min, avg, max) = (995.964, 1139.831, 1347.471), stdev = 184.533
[info]   CI (99.9%): [429.262, 1850.401] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   671.523 ±(99.9%) 428.925 B/op [Average]
[info]   (min, avg, max) = (585.044, 671.523, 794.522), stdev = 111.390
[info]   CI (99.9%): [242.598, 1100.448] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.021 B/op [Average]
[info]   (min, avg, max) = (0.012, 0.015, 0.024), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.036] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 10.000), stdev = 2.793
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 58.54% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3502561.941 ops/s
[info] # Warmup Iteration   2: 3566959.758 ops/s
[info] # Warmup Iteration   3: 3618302.274 ops/s
[info] # Warmup Iteration   4: 3612806.834 ops/s
[info] # Warmup Iteration   5: 3642835.071 ops/s
[info] Iteration   1: 3639808.047 ops/s
[info]                  ·gc.alloc.rate:                   666.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.061 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     282.285 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3639177.025 ops/s
[info]                  ·gc.alloc.rate:                   666.200 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.774 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     283.061 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 3634570.126 ops/s
[info]                  ·gc.alloc.rate:               665.330 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 284.272 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 3591281.450 ops/s
[info]                  ·gc.alloc.rate:                   657.416 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     288.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3575957.836 ops/s
[info]                  ·gc.alloc.rate:                   654.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     291.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter":
[info]   3616158.897 ±(99.9%) 116527.359 ops/s [Average]
[info]   (min, avg, max) = (3575957.836, 3616158.897, 3639808.047), stdev = 30261.785
[info]   CI (99.9%): [3499631.538, 3732686.256] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   661.968 ±(99.9%) 21.323 MB/sec [Average]
[info]   (min, avg, max) = (654.612, 661.968, 666.282), stdev = 5.538
[info]   CI (99.9%): [640.645, 683.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   657.074 ±(99.9%) 13.245 MB/sec [Average]
[info]   (min, avg, max) = (653.061, 657.074, 661.744), stdev = 3.440
[info]   CI (99.9%): [643.829, 670.318] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   285.896 ±(99.9%) 14.813 B/op [Average]
[info]   (min, avg, max) = (282.285, 285.896, 291.138), stdev = 3.847
[info]   CI (99.9%): [271.083, 300.710] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.018, 0.036), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   19.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.800, 5.000), stdev = 1.304
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay
[info] # Run progress: 60.98% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 285454.369 ops/s
[info] # Warmup Iteration   2: 469177.387 ops/s
[info] # Warmup Iteration   3: 469807.368 ops/s
[info] # Warmup Iteration   4: 466146.580 ops/s
[info] # Warmup Iteration   5: 461744.407 ops/s
[info] Iteration   1: 442674.870 ops/s
[info]                  ·gc.alloc.rate:                   1310.099 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.294 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3537.206 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 464493.058 ops/s
[info]                  ·gc.alloc.rate:                   1374.622 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1669.690 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5655.430 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.353 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 470222.472 ops/s
[info]                  ·gc.alloc.rate:                   1391.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.184 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4493.958 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 471189.804 ops/s
[info]                  ·gc.alloc.rate:                   1394.455 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.482 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4502.499 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.070 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 470417.369 ops/s
[info]                  ·gc.alloc.rate:                   1392.199 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.819 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4520.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.209 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay":
[info]   463799.514 ±(99.9%) 46622.948 ops/s [Average]
[info]   (min, avg, max) = (442674.870, 463799.514, 471189.804), stdev = 12107.832
[info]   CI (99.9%): [417176.566, 510422.463] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1372.598 ±(99.9%) 137.950 MB/sec [Average]
[info]   (min, avg, max) = (1310.099, 1372.598, 1394.455), stdev = 35.825
[info]   CI (99.9%): [1234.648, 1510.549] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1341.694 ±(99.9%) 918.774 MB/sec [Average]
[info]   (min, avg, max) = (995.294, 1341.694, 1669.690), stdev = 238.603
[info]   CI (99.9%): [422.920, 2260.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4542.009 ±(99.9%) 2890.323 B/op [Average]
[info]   (min, avg, max) = (3537.206, 4542.009, 5655.430), stdev = 750.608
[info]   CI (99.9%): [1651.686, 7432.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.212 ±(99.9%) 0.425 B/op [Average]
[info]   (min, avg, max) = (0.070, 0.212, 0.353), stdev = 0.110
[info]   CI (99.9%): [≈ 0, 0.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 4.000, 5.000), stdev = 0.707
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.400, 14.000), stdev = 4.450
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 63.41% complete, ETA 00:04:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 97960.061 ops/s
[info] # Warmup Iteration   2: 992446.829 ops/s
[info] # Warmup Iteration   3: 992106.184 ops/s
[info] # Warmup Iteration   4: 993875.812 ops/s
[info] # Warmup Iteration   5: 990724.838 ops/s
[info] Iteration   1: 994710.378 ops/s
[info]                  ·gc.alloc.rate:                   1229.126 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.822 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2104.844 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 987395.738 ops/s
[info]                  ·gc.alloc.rate:                   1220.026 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1598.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 988812.225 ops/s
[info]                  ·gc.alloc.rate:                   1221.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.472 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2137.601 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 988371.003 ops/s
[info]                  ·gc.alloc.rate:                   1221.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.778 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2146.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.133 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 984150.789 ops/s
[info]                  ·gc.alloc.rate:                   1216.076 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1621.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson":
[info]   988688.027 ±(99.9%) 14743.639 ops/s [Average]
[info]   (min, avg, max) = (984150.789, 988688.027, 994710.378), stdev = 3828.876
[info]   CI (99.9%): [973944.388, 1003431.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1221.658 ±(99.9%) 18.241 MB/sec [Average]
[info]   (min, avg, max) = (1216.076, 1221.658, 1229.126), stdev = 4.737
[info]   CI (99.9%): [1203.417, 1239.900] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1208.115 ±(99.9%) 701.402 MB/sec [Average]
[info]   (min, avg, max) = (1003.224, 1208.115, 1348.778), stdev = 182.152
[info]   CI (99.9%): [506.714, 1909.517] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1921.875 ±(99.9%) 1098.450 B/op [Average]
[info]   (min, avg, max) = (1598.547, 1921.875, 2146.969), stdev = 285.264
[info]   CI (99.9%): [823.425, 3020.324] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.158] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.171 B/op [Average]
[info]   (min, avg, max) = (0.033, 0.079, 0.133), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 9.000), stdev = 2.608
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 65.85% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2755471.369 ops/s
[info] # Warmup Iteration   2: 3221854.647 ops/s
[info] # Warmup Iteration   3: 3175263.981 ops/s
[info] # Warmup Iteration   4: 3209692.005 ops/s
[info] # Warmup Iteration   5: 3188715.566 ops/s
[info] Iteration   1: 3247793.342 ops/s
[info]                  ·gc.alloc.rate:                   379.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.543 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     157.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3257548.188 ops/s
[info]                  ·gc.alloc.rate:               380.996 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.388 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 3247285.089 ops/s
[info]                  ·gc.alloc.rate:               379.798 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.894 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.885 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 3204309.846 ops/s
[info]                  ·gc.alloc.rate:                   374.773 MB/sec
[info]                  ·gc.alloc.rate.norm:              184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.229 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     160.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 3257596.238 ops/s
[info]                  ·gc.alloc.rate:               380.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          184.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.197 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 157.539 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   3242906.541 ±(99.9%) 85301.160 ops/s [Average]
[info]   (min, avg, max) = (3204309.846, 3242906.541, 3257596.238), stdev = 22152.440
[info]   CI (99.9%): [3157605.381, 3328207.701] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   379.279 ±(99.9%) 9.960 MB/sec [Average]
[info]   (min, avg, max) = (374.773, 379.279, 380.996), stdev = 2.586
[info]   CI (99.9%): [369.320, 389.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   184.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (184.000, 184.000, 184.000), stdev = 0.001
[info]   CI (99.9%): [184.000, 184.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.951 ±(99.9%) 1.074 MB/sec [Average]
[info]   (min, avg, max) = (325.543, 325.951, 326.229), stdev = 0.279
[info]   CI (99.9%): [324.877, 327.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   158.135 ±(99.9%) 4.431 B/op [Average]
[info]   (min, avg, max) = (157.388, 158.135, 160.167), stdev = 1.151
[info]   CI (99.9%): [153.704, 162.566] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.012 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.012, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.006 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.020), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 7.000), stdev = 2.739
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 68.29% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108524.761 ops/s
[info] # Warmup Iteration   2: 227460.798 ops/s
[info] # Warmup Iteration   3: 230559.285 ops/s
[info] # Warmup Iteration   4: 233439.343 ops/s
[info] # Warmup Iteration   5: 231840.739 ops/s
[info] Iteration   1: 229139.863 ops/s
[info]                  ·gc.alloc.rate:                   898.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6737.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.286 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 232714.646 ops/s
[info]                  ·gc.alloc.rate:                   912.362 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6674.624 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.704 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 234559.070 ops/s
[info]                  ·gc.alloc.rate:                   919.593 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6648.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.419 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 234646.440 ops/s
[info]                  ·gc.alloc.rate:                   919.937 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6688.703 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.279 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 233147.826 ops/s
[info]                  ·gc.alloc.rate:                   914.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4503.675 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay":
[info]   232841.569 ±(99.9%) 8614.583 ops/s [Average]
[info]   (min, avg, max) = (229139.863, 232841.569, 234646.440), stdev = 2237.180
[info]   CI (99.9%): [224226.986, 241456.153] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   912.850 ±(99.9%) 33.811 MB/sec [Average]
[info]   (min, avg, max) = (898.322, 912.850, 919.937), stdev = 8.780
[info]   CI (99.9%): [879.039, 946.660] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   924.973 ±(99.9%) 554.922 MB/sec [Average]
[info]   (min, avg, max) = (667.398, 924.973, 997.598), stdev = 144.111
[info]   CI (99.9%): [370.051, 1479.895] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6250.698 ±(99.9%) 3762.647 B/op [Average]
[info]   (min, avg, max) = (4503.675, 6250.698, 6737.538), stdev = 977.147
[info]   CI (99.9%): [2488.051, 10013.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.366 ±(99.9%) 0.821 B/op [Average]
[info]   (min, avg, max) = (0.141, 0.366, 0.704), stdev = 0.213
[info]   CI (99.9%): [≈ 0, 1.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.800, 11.000), stdev = 4.147
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson
[info] # Run progress: 70.73% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 987471.215 ops/s
[info] # Warmup Iteration   2: 1589815.249 ops/s
[info] # Warmup Iteration   3: 1603171.992 ops/s
[info] # Warmup Iteration   4: 1591184.213 ops/s
[info] # Warmup Iteration   5: 1573836.100 ops/s
[info] Iteration   1: 1582196.219 ops/s
[info]                  ·gc.alloc.rate:               852.818 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      987.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 982.364 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 1590384.647 ops/s
[info]                  ·gc.alloc.rate:                   857.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1327523.507 ops/s
[info]                  ·gc.alloc.rate:               715.554 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.427 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 787.411 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1111708.972 ops/s
[info]                  ·gc.alloc.rate:                   599.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     943.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1114526.378 ops/s
[info]                  ·gc.alloc.rate:               600.762 MB/sec
[info]                  ·gc.alloc.rate.norm:          848.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.756 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 943.976 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson":
[info]   1345267.945 ±(99.9%) 911886.497 ops/s [Average]
[info]   (min, avg, max) = (1111708.972, 1345267.945, 1590384.647), stdev = 236814.027
[info]   CI (99.9%): [433381.447, 2257154.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   725.120 ±(99.9%) 491.497 MB/sec [Average]
[info]   (min, avg, max) = (599.226, 725.120, 857.240), stdev = 127.640
[info]   CI (99.9%): [233.623, 1216.617] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   848.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (848.000, 848.000, 848.000), stdev = 0.001
[info]   CI (99.9%): [848.000, 848.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   729.927 ±(99.9%) 555.494 MB/sec [Average]
[info]   (min, avg, max) = (661.769, 729.927, 987.944), stdev = 144.260
[info]   CI (99.9%): [174.433, 1285.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   862.385 ±(99.9%) 532.234 B/op [Average]
[info]   (min, avg, max) = (654.636, 862.385, 982.364), stdev = 138.219
[info]   CI (99.9%): [330.151, 1394.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.029), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 9.000), stdev = 3.114
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 73.17% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3674596.406 ops/s
[info] # Warmup Iteration   2: 4352299.304 ops/s
[info] # Warmup Iteration   3: 4336620.616 ops/s
[info] # Warmup Iteration   4: 4314938.357 ops/s
[info] # Warmup Iteration   5: 4349227.906 ops/s
[info] Iteration   1: 4384365.417 ops/s
[info]                  ·gc.alloc.rate:                   735.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.585 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 4402472.505 ops/s
[info]                  ·gc.alloc.rate:                   738.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.338 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4322381.078 ops/s
[info]                  ·gc.alloc.rate:                   725.291 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     359.603 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 4435766.380 ops/s
[info]                  ·gc.alloc.rate:                   744.343 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     234.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4333890.715 ops/s
[info]                  ·gc.alloc.rate:                   727.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter":
[info]   4375775.219 ±(99.9%) 182557.907 ops/s [Average]
[info]   (min, avg, max) = (4322381.078, 4375775.219, 4435766.380), stdev = 47409.709
[info]   CI (99.9%): [4193217.311, 4558333.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   734.278 ±(99.9%) 30.662 MB/sec [Average]
[info]   (min, avg, max) = (725.291, 734.278, 744.343), stdev = 7.963
[info]   CI (99.9%): [703.616, 764.940] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.595 ±(99.9%) 567.095 MB/sec [Average]
[info]   (min, avg, max) = (653.755, 724.595, 987.941), stdev = 147.273
[info]   CI (99.9%): [157.499, 1291.690] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   260.837 ±(99.9%) 212.870 B/op [Average]
[info]   (min, avg, max) = (234.338, 260.837, 359.603), stdev = 55.282
[info]   CI (99.9%): [47.967, 473.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.015, 0.030), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.400, 14.000), stdev = 5.550
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay
[info] # Run progress: 75.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 193003.007 ops/s
[info] # Warmup Iteration   2: 359634.826 ops/s
[info] # Warmup Iteration   3: 366312.191 ops/s
[info] # Warmup Iteration   4: 361506.600 ops/s
[info] # Warmup Iteration   5: 364141.358 ops/s
[info] Iteration   1: 370906.782 ops/s
[info]                  ·gc.alloc.rate:                   1265.541 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1321.487 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5605.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 368909.443 ops/s
[info]                  ·gc.alloc.rate:                   1258.757 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5675.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.355 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 369329.064 ops/s
[info]                  ·gc.alloc.rate:                   1260.134 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.151 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5700.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 371635.384 ops/s
[info]                  ·gc.alloc.rate:               1267.988 MB/sec
[info]                  ·gc.alloc.rate.norm:          5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.240 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4268.364 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 369323.599 ops/s
[info]                  ·gc.alloc.rate:                   1260.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              5368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5744.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay":
[info]   370020.854 ±(99.9%) 4552.704 ops/s [Average]
[info]   (min, avg, max) = (368909.443, 370020.854, 371635.384), stdev = 1182.323
[info]   CI (99.9%): [365468.151, 374573.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1262.509 ±(99.9%) 15.475 MB/sec [Average]
[info]   (min, avg, max) = (1258.757, 1262.509, 1267.988), stdev = 4.019
[info]   CI (99.9%): [1247.035, 1277.984] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5368.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5368.001, 5368.001, 5368.001), stdev = 0.001
[info]   CI (99.9%): [5368.001, 5368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.437 ±(99.9%) 563.534 MB/sec [Average]
[info]   (min, avg, max) = (1008.240, 1269.437, 1348.466), stdev = 146.348
[info]   CI (99.9%): [705.903, 1832.971] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5398.747 ±(99.9%) 2440.947 B/op [Average]
[info]   (min, avg, max) = (4268.364, 5398.747, 5744.311), stdev = 633.906
[info]   CI (99.9%): [2957.799, 7839.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.231 ±(99.9%) 0.518 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.231, 0.355), stdev = 0.135
[info]   CI (99.9%): [≈ 0, 0.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeIterablesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.000, 10.000), stdev = 2.000
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson
[info] # Run progress: 78.05% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96853.045 ops/s
[info] # Warmup Iteration   2: 1021965.512 ops/s
[info] # Warmup Iteration   3: 1033742.898 ops/s
[info] # Warmup Iteration   4: 1030360.890 ops/s
[info] # Warmup Iteration   5: 1030105.832 ops/s
[info] Iteration   1: 1014560.007 ops/s
[info]                  ·gc.alloc.rate:                   1052.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1541.331 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.129 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1032932.679 ops/s
[info]                  ·gc.alloc.rate:                   1071.503 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.617 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1522.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1025315.784 ops/s
[info]                  ·gc.alloc.rate:                   1063.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2054.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1027571.870 ops/s
[info]                  ·gc.alloc.rate:                   1065.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1543.174 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1026380.443 ops/s
[info]                  ·gc.alloc.rate:               1064.722 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1550.101 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson":
[info]   1025352.157 ±(99.9%) 25825.209 ops/s [Average]
[info]   (min, avg, max) = (1014560.007, 1025352.157, 1032932.679), stdev = 6706.725
[info]   CI (99.9%): [999526.948, 1051177.365] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1063.640 ±(99.9%) 26.816 MB/sec [Average]
[info]   (min, avg, max) = (1052.433, 1063.640, 1071.503), stdev = 6.964
[info]   CI (99.9%): [1036.824, 1090.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.386 ±(99.9%) 579.054 MB/sec [Average]
[info]   (min, avg, max) = (993.963, 1070.386, 1339.115), stdev = 150.379
[info]   CI (99.9%): [491.332, 1649.440] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1642.382 ±(99.9%) 888.619 B/op [Average]
[info]   (min, avg, max) = (1522.511, 1642.382, 2054.794), stdev = 230.772
[info]   CI (99.9%): [753.763, 2531.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.184 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.129), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.242] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter
[info] # Run progress: 80.49% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3181977.634 ops/s
[info] # Warmup Iteration   2: 3804374.986 ops/s
[info] # Warmup Iteration   3: 3838861.137 ops/s
[info] # Warmup Iteration   4: 3864267.427 ops/s
[info] # Warmup Iteration   5: 3856239.185 ops/s
[info] Iteration   1: 3878937.289 ops/s
[info]                  ·gc.alloc.rate:                   631.178 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3883888.554 ops/s
[info]                  ·gc.alloc.rate:                   631.985 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3875991.757 ops/s
[info]                  ·gc.alloc.rate:                   630.723 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.173 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3884806.736 ops/s
[info]                  ·gc.alloc.rate:                   632.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     266.376 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3921684.529 ops/s
[info]                  ·gc.alloc.rate:                   638.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              256.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.411 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     264.936 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter":
[info]   3889061.773 ±(99.9%) 71585.797 ops/s [Average]
[info]   (min, avg, max) = (3875991.757, 3889061.773, 3921684.529), stdev = 18590.604
[info]   CI (99.9%): [3817475.976, 3960647.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   632.830 ±(99.9%) 11.635 MB/sec [Average]
[info]   (min, avg, max) = (630.723, 632.830, 638.136), stdev = 3.022
[info]   CI (99.9%): [621.195, 644.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   256.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (256.000, 256.000, 256.000), stdev = 0.001
[info]   CI (99.9%): [256.000, 256.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.025 ±(99.9%) 12.240 MB/sec [Average]
[info]   (min, avg, max) = (652.416, 656.025, 660.411), stdev = 3.179
[info]   CI (99.9%): [643.785, 668.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   265.384 ±(99.9%) 3.173 B/op [Average]
[info]   (min, avg, max) = (264.614, 265.384, 266.376), stdev = 0.824
[info]   CI (99.9%): [262.211, 268.557] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.037 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.020, 0.034), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.057] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 5.000), stdev = 1.483
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay
[info] # Run progress: 82.93% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 111934.185 ops/s
[info] # Warmup Iteration   2: 255347.485 ops/s
[info] # Warmup Iteration   3: 253472.755 ops/s
[info] # Warmup Iteration   4: 257527.671 ops/s
[info] # Warmup Iteration   5: 260159.059 ops/s
[info] Iteration   1: 255549.154 ops/s
[info]                  ·gc.alloc.rate:                   942.135 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6055.678 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 257619.679 ops/s
[info]                  ·gc.alloc.rate:                   949.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.662 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6031.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.382 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 258544.167 ops/s
[info]                  ·gc.alloc.rate:                   953.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.006 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6048.370 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 257157.584 ops/s
[info]                  ·gc.alloc.rate:                   948.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.466 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4070.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 258881.174 ops/s
[info]                  ·gc.alloc.rate:                   954.422 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6087.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.253 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay":
[info]   257550.352 ±(99.9%) 5065.691 ops/s [Average]
[info]   (min, avg, max) = (255549.154, 257550.352, 258881.174), stdev = 1315.544
[info]   CI (99.9%): [252484.661, 262616.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   949.524 ±(99.9%) 18.674 MB/sec [Average]
[info]   (min, avg, max) = (942.135, 949.524, 954.422), stdev = 4.850
[info]   CI (99.9%): [930.850, 968.198] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.493 ±(99.9%) 562.492 MB/sec [Average]
[info]   (min, avg, max) = (665.466, 926.493, 1001.664), stdev = 146.077
[info]   CI (99.9%): [364.001, 1488.985] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5658.702 ±(99.9%) 3418.644 B/op [Average]
[info]   (min, avg, max) = (4070.948, 5658.702, 6087.095), stdev = 887.811
[info]   CI (99.9%): [2240.059, 9077.346] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.203 ±(99.9%) 0.437 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.203, 0.382), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.640] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 8.000), stdev = 2.074
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 85.37% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 83402.894 ops/s
[info] # Warmup Iteration   2: 908866.075 ops/s
[info] # Warmup Iteration   3: 744472.743 ops/s
[info] # Warmup Iteration   4: 747955.675 ops/s
[info] # Warmup Iteration   5: 739349.784 ops/s
[info] Iteration   1: 1063704.738 ops/s
[info]                  ·gc.alloc.rate:                   1054.711 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1464.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1070305.787 ops/s
[info]                  ·gc.alloc.rate:                   1061.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1462.968 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1052202.228 ops/s
[info]                  ·gc.alloc.rate:                   1043.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.921 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1495.147 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1069297.439 ops/s
[info]                  ·gc.alloc.rate:                   1060.372 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.041 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1477.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.061 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1061745.183 ops/s
[info]                  ·gc.alloc.rate:                   1052.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1494.064 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson":
[info]   1063451.075 ±(99.9%) 27945.570 ops/s [Average]
[info]   (min, avg, max) = (1052202.228, 1063451.075, 1070305.787), stdev = 7257.376
[info]   CI (99.9%): [1035505.504, 1091396.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1054.492 ±(99.9%) 27.840 MB/sec [Average]
[info]   (min, avg, max) = (1043.293, 1054.492, 1061.287), stdev = 7.230
[info]   CI (99.9%): [1026.652, 1082.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   999.496 ±(99.9%) 27.723 MB/sec [Average]
[info]   (min, avg, max) = (989.946, 999.496, 1008.297), stdev = 7.200
[info]   CI (99.9%): [971.773, 1027.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1478.702 ±(99.9%) 59.859 B/op [Average]
[info]   (min, avg, max) = (1462.968, 1478.702, 1495.147), stdev = 15.545
[info]   CI (99.9%): [1418.844, 1538.561] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.139 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.104), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.061 ±(99.9%) 0.204 B/op [Average]
[info]   (min, avg, max) = (0.031, 0.061, 0.153), stdev = 0.053
[info]   CI (99.9%): [≈ 0, 0.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 9.000), stdev = 2.828
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 87.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2524746.986 ops/s
[info] # Warmup Iteration   2: 2946389.823 ops/s
[info] # Warmup Iteration   3: 2899981.681 ops/s
[info] # Warmup Iteration   4: 2946256.158 ops/s
[info] # Warmup Iteration   5: 2980458.209 ops/s
[info] Iteration   1: 2986978.503 ops/s
[info]                  ·gc.alloc.rate:                   501.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 3029556.848 ops/s
[info]                  ·gc.alloc.rate:               508.379 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.874 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 169.226 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2950735.956 ops/s
[info]                  ·gc.alloc.rate:                   495.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     348.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 2977957.225 ops/s
[info]                  ·gc.alloc.rate:                   499.701 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3021975.165 ops/s
[info]                  ·gc.alloc.rate:               507.092 MB/sec
[info]                  ·gc.alloc.rate.norm:          264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 170.693 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter":
[info]   2993440.739 ±(99.9%) 125127.931 ops/s [Average]
[info]   (min, avg, max) = (2950735.956, 2993440.739, 3029556.848), stdev = 32495.326
[info]   CI (99.9%): [2868312.808, 3118568.670] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   502.309 ±(99.9%) 21.006 MB/sec [Average]
[info]   (min, avg, max) = (495.143, 502.309, 508.379), stdev = 5.455
[info]   CI (99.9%): [481.302, 523.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.585 ±(99.9%) 687.979 MB/sec [Average]
[info]   (min, avg, max) = (325.874, 522.585, 654.702), stdev = 178.666
[info]   CI (99.9%): [≈ 0, 1210.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   275.422 ±(99.9%) 370.778 B/op [Average]
[info]   (min, avg, max) = (169.226, 275.422, 348.026), stdev = 96.290
[info]   CI (99.9%): [≈ 0, 646.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.020 ±(99.9%) 0.076 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.020, 0.044), stdev = 0.020
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.000, 14.000), stdev = 5.431
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 90.24% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 113079.810 ops/s
[info] # Warmup Iteration   2: 250039.678 ops/s
[info] # Warmup Iteration   3: 254963.626 ops/s
[info] # Warmup Iteration   4: 255479.102 ops/s
[info] # Warmup Iteration   5: 259149.147 ops/s
[info] Iteration   1: 259800.371 ops/s
[info]                  ·gc.alloc.rate:                   986.841 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.293 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5954.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 254901.648 ops/s
[info]                  ·gc.alloc.rate:                   968.267 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6093.503 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.514 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 254262.183 ops/s
[info]                  ·gc.alloc.rate:                   965.817 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.969 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6150.193 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 256943.920 ops/s
[info]                  ·gc.alloc.rate:                   976.010 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6110.464 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 260104.276 ops/s
[info]                  ·gc.alloc.rate:                   987.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6068.321 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay":
[info]   257202.480 ±(99.9%) 10399.499 ops/s [Average]
[info]   (min, avg, max) = (254262.183, 257202.480, 260104.276), stdev = 2700.717
[info]   CI (99.9%): [246802.981, 267601.978] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   976.984 ±(99.9%) 39.446 MB/sec [Average]
[info]   (min, avg, max) = (965.817, 976.984, 987.983), stdev = 10.244
[info]   CI (99.9%): [937.537, 1016.430] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   5976.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5976.002, 5976.002, 5976.002), stdev = 0.001
[info]   CI (99.9%): [5976.001, 5976.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.157 ±(99.9%) 30.874 MB/sec [Average]
[info]   (min, avg, max) = (983.293, 993.157, 1003.245), stdev = 8.018
[info]   CI (99.9%): [962.283, 1024.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6075.399 ±(99.9%) 284.363 B/op [Average]
[info]   (min, avg, max) = (5954.516, 6075.399, 6150.193), stdev = 73.848
[info]   CI (99.9%): [5791.036, 6359.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.256 ±(99.9%) 0.610 B/op [Average]
[info]   (min, avg, max) = (0.126, 0.256, 0.514), stdev = 0.158
[info]   CI (99.9%): [≈ 0, 0.866] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 12.000), stdev = 4.615
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson
[info] # Run progress: 92.68% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1128023.104 ops/s
[info] # Warmup Iteration   2: 1418389.805 ops/s
[info] # Warmup Iteration   3: 1126342.053 ops/s
[info] # Warmup Iteration   4: 1118862.601 ops/s
[info] # Warmup Iteration   5: 1424067.368 ops/s
[info] Iteration   1: 1621274.598 ops/s
[info]                  ·gc.alloc.rate:               676.039 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.118 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 631.817 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1626470.969 ops/s
[info]                  ·gc.alloc.rate:                   678.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     632.372 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1582133.807 ops/s
[info]                  ·gc.alloc.rate:               659.736 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 654.073 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   4: 1623064.721 ops/s
[info]                  ·gc.alloc.rate:                   676.839 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.499 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.163 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 1626804.165 ops/s
[info]                  ·gc.alloc.rate:               678.352 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.119 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 641.269 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson":
[info]   1615949.652 ±(99.9%) 73339.585 ops/s [Average]
[info]   (min, avg, max) = (1582133.807, 1615949.652, 1626804.165), stdev = 19046.057
[info]   CI (99.9%): [1542610.067, 1689289.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   673.836 ±(99.9%) 30.576 MB/sec [Average]
[info]   (min, avg, max) = (659.736, 673.836, 678.352), stdev = 7.941
[info]   CI (99.9%): [643.259, 704.412] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   657.264 ±(99.9%) 18.757 MB/sec [Average]
[info]   (min, avg, max) = (651.118, 657.264, 663.119), stdev = 4.871
[info]   CI (99.9%): [638.506, 676.021] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   639.939 ±(99.9%) 34.699 B/op [Average]
[info]   (min, avg, max) = (631.817, 639.939, 654.073), stdev = 9.011
[info]   CI (99.9%): [605.240, 674.638] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.020), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 9.000), stdev = 2.864
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 95.12% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5391356.601 ops/s
[info] # Warmup Iteration   2: 5937700.324 ops/s
[info] # Warmup Iteration   3: 6043821.060 ops/s
[info] # Warmup Iteration   4: 6051560.979 ops/s
[info] # Warmup Iteration   5: 5980338.788 ops/s
[info] Iteration   1: 6030112.767 ops/s
[info]                  ·gc.alloc.rate:                   306.625 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     84.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.176 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.568 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5951068.886 ops/s
[info]                  ·gc.alloc.rate:      302.612 MB/sec
[info]                  ·gc.alloc.rate.norm: 80.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 5946759.603 ops/s
[info]                  ·gc.alloc.rate:                   302.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.547 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 5930441.030 ops/s
[info]                  ·gc.alloc.rate:                   301.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5914557.899 ops/s
[info]                  ·gc.alloc.rate:                   300.750 MB/sec
[info]                  ·gc.alloc.rate.norm:              80.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     86.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter":
[info]   5954588.037 ±(99.9%) 171808.892 ops/s [Average]
[info]   (min, avg, max) = (5914557.899, 5954588.037, 6030112.767), stdev = 44618.224
[info]   CI (99.9%): [5782779.145, 6126396.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   302.787 ±(99.9%) 8.735 MB/sec [Average]
[info]   (min, avg, max) = (300.750, 302.787, 306.625), stdev = 2.269
[info]   CI (99.9%): [294.051, 311.522] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   80.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (80.000, 80.000, 80.000), stdev = 0.001
[info]   CI (99.9%): [80.000, 80.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   260.567 ±(99.9%) 560.891 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 260.567, 325.876), stdev = 145.662
[info]   CI (99.9%): [≈ 0, 821.458] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   68.839 ±(99.9%) 148.204 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 68.839, 86.684), stdev = 38.488
[info]   CI (99.9%): [≈ 0, 217.044] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.721 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.176), stdev = 0.966
[info]   CI (99.9%): [≈ 0, 4.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.117 ±(99.9%) 0.971 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.117, 0.568), stdev = 0.252
[info]   CI (99.9%): [≈ 0, 1.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 5.000), stdev = 1.817
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay
[info] # Run progress: 97.56% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82847.345 ops/s
[info] # Warmup Iteration   2: 200364.076 ops/s
[info] # Warmup Iteration   3: 204331.837 ops/s
[info] # Warmup Iteration   4: 204382.113 ops/s
[info] # Warmup Iteration   5: 199056.233 ops/s
[info] Iteration   1: 201361.822 ops/s
[info]                  ·gc.alloc.rate:                   1089.438 MB/sec
[info]                  ·gc.alloc.rate.norm:              8512.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.624 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7716.511 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.651 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 202083.610 ops/s
[info]                  ·gc.alloc.rate:                   1093.663 MB/sec
[info]                  ·gc.alloc.rate.norm:              8512.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.058 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10297.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.810 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 205886.275 ops/s
[info]                  ·gc.alloc.rate:                   1113.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              8512.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7630.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.159 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 202676.487 ops/s
[info]                  ·gc.alloc.rate:               1096.563 MB/sec
[info]                  ·gc.alloc.rate.norm:          8512.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7787.902 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 204762.784 ops/s
[info]                  ·gc.alloc.rate:                   1107.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              8512.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7734.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.160 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay":
[info]   203354.196 ±(99.9%) 7315.914 ops/s [Average]
[info]   (min, avg, max) = (201361.822, 203354.196, 205886.275), stdev = 1899.920
[info]   CI (99.9%): [196038.282, 210670.110] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1100.301 ±(99.9%) 39.452 MB/sec [Average]
[info]   (min, avg, max) = (1089.438, 1100.301, 1113.945), stdev = 10.245
[info]   CI (99.9%): [1060.849, 1139.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8512.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8512.002, 8512.002, 8512.002), stdev = 0.001
[info]   CI (99.9%): [8512.002, 8512.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1063.852 ±(99.9%) 558.647 MB/sec [Average]
[info]   (min, avg, max) = (987.624, 1063.852, 1323.058), stdev = 145.079
[info]   CI (99.9%): [505.205, 1622.499] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8233.380 ±(99.9%) 4448.241 B/op [Average]
[info]   (min, avg, max) = (7630.850, 8233.380, 10297.385), stdev = 1155.194
[info]   CI (99.9%): [3785.139, 12681.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.356 ±(99.9%) 1.357 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.356, 0.810), stdev = 0.352
[info]   CI (99.9%): [≈ 0, 1.713] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.CodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:11:01
[info] Benchmark                                                                     Mode  Cnt         Score         Error   Units
[info] CodecBenchmark.readAnyRefsJackson                                            thrpt    5   1836294.145 ±   29651.620   ops/s
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1288.599 ±      20.779  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1278.241 ±     569.640  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1094.894 ±     479.679    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±       0.072  MB/sec
[info] CodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.025 ±       0.062    B/op
[info] CodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        19.000                counts
[info] CodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        39.000                    ms
[info] CodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6717819.025 ±   36854.309   ops/s
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5      1161.428 ±       6.378  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       272.000 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1202.586 ±     704.393  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       281.613 ±     164.179    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.067  MB/sec
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.011 ±       0.016    B/op
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        18.000                counts
[info] CodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        14.000                    ms
[info] CodecBenchmark.readAnyRefsPlay                                               thrpt    5    396692.928 ±   16603.948   ops/s
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1061.044 ±      44.386  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4208.001 ±       0.001    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1063.713 ±     575.773  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4221.343 ±    2385.772    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.050 ±       0.122  MB/sec
[info] CodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.199 ±       0.487    B/op
[info] CodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        16.000                counts
[info] CodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        29.000                    ms
[info] CodecBenchmark.readBitSetsJackson                                            thrpt    5   1604373.317 ±   48140.817   ops/s
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1019.766 ±      30.545  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1000.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5       995.743 ±      34.764  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       976.478 ±      39.524    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.004 ±       0.036  MB/sec
[info] CodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.004 ±       0.035    B/op
[info] CodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        15.000                counts
[info] CodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        23.000                    ms
[info] CodecBenchmark.readBitSetsJsoniter                                           thrpt    5   4633527.861 ± 3154195.459   ops/s
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       494.780 ±     336.852  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       523.917 ±     689.161  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       178.665 ±     234.518    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±       0.127  MB/sec
[info] CodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.014 ±       0.036    B/op
[info] CodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5         8.000                counts
[info] CodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        15.000                    ms
[info] CodecBenchmark.readBitSetsPlay                                               thrpt    5    256972.043 ±    6141.051   ops/s
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1166.875 ±      28.006  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7144.002 ±       0.001    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.290 ±     682.088  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      6928.752 ±    4056.372    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.062 ±       0.057  MB/sec
[info] CodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.382 ±       0.346    B/op
[info] CodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000                counts
[info] CodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        39.000                    ms
[info] CodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3559304.401 ±   83539.467   ops/s
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1683.192 ±      39.552  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1688.257 ±      36.005  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       746.260 ±      23.192    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.062 ±       0.127  MB/sec
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.028 ±       0.057    B/op
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        25.000                counts
[info] CodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        36.000                    ms
[info] CodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    241066.134 ±    4400.828   ops/s
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1295.889 ±      23.490  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±       0.001    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1338.110 ±      39.057  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8731.587 ±     255.200    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±       0.105  MB/sec
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.299 ±       0.689    B/op
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        20.000                counts
[info] CodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        36.000                    ms
[info] CodecBenchmark.readIterablesJackson                                          thrpt    5    458563.644 ±  328034.118   ops/s
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       466.363 ±     333.604  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       459.763 ±     698.384  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1561.442 ±    1728.153    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.008 ±       0.044  MB/sec
[info] CodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.025 ±       0.134    B/op
[info] CodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         7.000                counts
[info] CodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        14.000                    ms
[info] CodecBenchmark.readIterablesJsoniter                                         thrpt    5   3225945.809 ±   66862.338   ops/s
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       869.416 ±      18.007  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       424.000 ±       0.001    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       857.870 ±     701.435  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       418.654 ±     347.965    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±       0.057  MB/sec
[info] CodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.020 ±       0.028    B/op
[info] CodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        13.000                counts
[info] CodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        29.000                    ms
[info] CodecBenchmark.readIterablesPlay                                             thrpt    5    163653.532 ±    4603.067   ops/s
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1120.968 ±      31.399  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10776.003 ±       0.001    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1063.759 ±     575.908  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10230.011 ±    5680.823    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±       0.108  MB/sec
[info] CodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.480 ±       1.034    B/op
[info] CodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        16.000                counts
[info] CodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        41.000                    ms
[info] CodecBenchmark.readMapsJackson                                               thrpt    5    866781.046 ±   20025.258   ops/s
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1022.557 ±      23.533  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±       0.001    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1004.158 ±      22.782  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1822.634 ±      43.439    B/op
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.037 ±       0.143  MB/sec
[info] CodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.068 ±       0.263    B/op
[info] CodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        15.000                counts
[info] CodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        36.000                    ms
[info] CodecBenchmark.readMapsJsoniter                                              thrpt    5   3429850.986 ±   31791.429   ops/s
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       854.580 ±       7.919  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±       0.001    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       860.523 ±     699.129  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       394.699 ±     320.115    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±       0.067  MB/sec
[info] CodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.027 ±       0.031    B/op
[info] CodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        13.000                counts
[info] CodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        24.000                    ms
[info] CodecBenchmark.readMapsPlay                                                  thrpt    5    256282.142 ±   10206.706   ops/s
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1318.847 ±      52.496  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8096.002 ±       0.001    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1272.468 ±     575.496  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      7806.166 ±    3339.237    B/op
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.050 ±       0.044  MB/sec
[info] CodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.307 ±       0.272    B/op
[info] CodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        19.000                counts
[info] CodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        36.000                    ms
[info] CodecBenchmark.readMutableMapsJackson                                        thrpt    5    661802.799 ±   17059.183   ops/s
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       837.937 ±      21.567  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      1992.001 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       796.893 ±     695.293  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      1893.018 ±    1619.235    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.046 ±       0.105  MB/sec
[info] CodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.109 ±       0.248    B/op
[info] CodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        12.000                counts
[info] CodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        13.000                    ms
[info] CodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2602155.504 ± 1051224.681   ops/s
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1627.523 ±     657.509  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5       984.000 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1687.033 ±     885.388  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1019.543 ±     305.779    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.062 ±       0.127  MB/sec
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.037 ±       0.069    B/op
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        25.000                counts
[info] CodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        32.000                    ms
[info] CodecBenchmark.readMutableMapsPlay                                           thrpt    5    222421.722 ±    9504.491   ops/s
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1185.346 ±      50.659  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8384.002 ±       0.001    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1199.939 ±     716.641  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8490.539 ±    5153.708    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.054 ±       0.176  MB/sec
[info] CodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.382 ±       1.241    B/op
[info] CodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        18.000                counts
[info] CodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        37.000                    ms
[info] CodecBenchmark.readPrimitivesJackson                                         thrpt    5   1008871.522 ±   41528.334   ops/s
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       743.862 ±      30.623  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1160.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       730.979 ±     566.238  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1139.830 ±     878.826    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.025 ±       0.088  MB/sec
[info] CodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.039 ±       0.137    B/op
[info] CodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000                counts
[info] CodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        17.000                    ms
[info] CodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   4017814.807 ± 2387898.159   ops/s
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5       122.584 ±      72.848  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       102.361 ±     539.723  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        42.916 ±     227.618    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.006 ±       0.054  MB/sec
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.002 ±       0.021    B/op
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         2.000                counts
[info] CodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         5.000                    ms
[info] CodecBenchmark.readPrimitivesPlay                                            thrpt    5    166478.421 ±    3353.303   ops/s
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1161.438 ±      23.367  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10976.003 ±       0.001    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1200.063 ±     702.867  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     11338.722 ±    6570.489    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±       0.091  MB/sec
[info] CodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.472 ±       0.857    B/op
[info] CodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        18.000                counts
[info] CodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        32.000                    ms
[info] CodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3870732.457 ±   32777.531   ops/s
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1062.854 ±       8.922  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1070.114 ±     579.066  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       434.988 ±     236.855    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.021 ±       0.057  MB/sec
[info] CodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.008 ±       0.023    B/op
[info] CodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000                counts
[info] CodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        25.000                    ms
[info] CodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  12484844.759 ±  447379.308   ops/s
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       380.913 ±      13.661  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       325.943 ±       1.069  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        41.076 ±       1.583    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.017 ±       0.067  MB/sec
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.002 ±       0.008    B/op
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         5.000                counts
[info] CodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5         4.000                    ms
[info] CodecBenchmark.writeAnyRefsPlay                                              thrpt    5    986716.066 ±   26798.089   ops/s
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1510.243 ±      41.009  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2408.000 ±       0.001    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1480.146 ±     712.249  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2361.351 ±    1186.513    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.067 ±       0.154  MB/sec
[info] CodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.106 ±       0.247    B/op
[info] CodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        22.000                counts
[info] CodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        35.000                    ms
[info] CodecBenchmark.writeBitSetsJackson                                           thrpt    5   2671841.038 ±   92474.991   ops/s
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1141.262 ±      39.529  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1139.831 ±     710.569  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       671.523 ±     428.925    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.025 ±       0.036  MB/sec
[info] CodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.015 ±       0.021    B/op
[info] CodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000                counts
[info] CodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        27.000                    ms
[info] CodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   3616158.897 ±  116527.359   ops/s
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       661.968 ±      21.323  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       657.074 ±      13.245  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       285.896 ±      14.813    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±       0.113  MB/sec
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.018 ±       0.050    B/op
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        10.000                counts
[info] CodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        19.000                    ms
[info] CodecBenchmark.writeBitSetsPlay                                              thrpt    5    463799.514 ±   46622.948   ops/s
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1372.598 ±     137.950  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±       0.001    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1341.694 ±     918.774  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4542.009 ±    2890.323    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.062 ±       0.127  MB/sec
[info] CodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.212 ±       0.425    B/op
[info] CodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        20.000                counts
[info] CodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        37.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5    988688.027 ±   14743.639   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1221.658 ±      18.241  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1208.115 ±     701.402  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1921.875 ±    1098.450    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.050 ±       0.108  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.079 ±       0.171    B/op
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        18.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        33.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   3242906.541 ±   85301.160   ops/s
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       379.279 ±       9.960  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       184.000 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       325.951 ±       1.074  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       158.135 ±       4.431    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.012 ±       0.072  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.006 ±       0.035    B/op
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         5.000                counts
[info] CodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        15.000                    ms
[info] CodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    232841.569 ±    8614.583   ops/s
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       912.850 ±      33.811  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±       0.001    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       924.973 ±     554.922  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6250.698 ±    3762.647    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.054 ±       0.122  MB/sec
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.366 ±       0.821    B/op
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        14.000                counts
[info] CodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        29.000                    ms
[info] CodecBenchmark.writeIterablesJackson                                         thrpt    5   1345267.945 ±  911886.497   ops/s
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       725.120 ±     491.497  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       848.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       729.927 ±     555.494  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       862.385 ±     532.234    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.008 ±       0.044  MB/sec
[info] CodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.010 ±       0.054    B/op
[info] CodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        11.000                counts
[info] CodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        24.000                    ms
[info] CodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4375775.219 ±  182557.907   ops/s
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       734.278 ±      30.662  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       724.595 ±     567.095  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       260.837 ±     212.870    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.042 ±       0.098  MB/sec
[info] CodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.015 ±       0.035    B/op
[info] CodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        11.000                counts
[info] CodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        27.000                    ms
[info] CodecBenchmark.writeIterablesPlay                                            thrpt    5    370020.854 ±    4552.704   ops/s
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1262.509 ±      15.475  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5368.001 ±       0.001    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1269.437 ±     563.534  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5398.747 ±    2440.947    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.054 ±       0.122  MB/sec
[info] CodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.231 ±       0.518    B/op
[info] CodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        19.000                counts
[info] CodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        35.000                    ms
[info] CodecBenchmark.writeMapsJackson                                              thrpt    5   1025352.157 ±   25825.209   ops/s
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1063.640 ±      26.816  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1070.386 ±     579.054  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1642.382 ±     888.619    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±       0.119  MB/sec
[info] CodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.058 ±       0.184    B/op
[info] CodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000                counts
[info] CodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        31.000                    ms
[info] CodecBenchmark.writeMapsJsoniter                                             thrpt    5   3889061.773 ±   71585.797   ops/s
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       632.830 ±      11.635  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       256.000 ±       0.001    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       656.025 ±      12.240  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       265.384 ±       3.173    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±       0.091  MB/sec
[info] CodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.020 ±       0.037    B/op
[info] CodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5        10.000                counts
[info] CodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        14.000                    ms
[info] CodecBenchmark.writeMapsPlay                                                 thrpt    5    257550.352 ±    5065.691   ops/s
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       949.524 ±      18.674  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5800.002 ±       0.001    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       926.493 ±     562.492  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5658.702 ±    3418.644    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.033 ±       0.072  MB/sec
[info] CodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.203 ±       0.437    B/op
[info] CodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        14.000                counts
[info] CodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        28.000                    ms
[info] CodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1063451.075 ±   27945.570   ops/s
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1054.492 ±      27.840  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5       999.496 ±      27.723  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1478.702 ±      59.859    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.042 ±       0.139  MB/sec
[info] CodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.061 ±       0.204    B/op
[info] CodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        15.000                counts
[info] CodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        35.000                    ms
[info] CodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   2993440.739 ±  125127.931   ops/s
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       502.309 ±      21.006  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       264.000 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.585 ±     687.979  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       275.422 ±     370.778    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.037 ±       0.143  MB/sec
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.020 ±       0.076    B/op
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000                counts
[info] CodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        25.000                    ms
[info] CodecBenchmark.writeMutableMapsPlay                                          thrpt    5    257202.480 ±   10399.499   ops/s
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       976.984 ±      39.446  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      5976.002 ±       0.001    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       993.157 ±      30.874  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      6075.399 ±     284.363    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±       0.098  MB/sec
[info] CodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.256 ±       0.610    B/op
[info] CodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        15.000                counts
[info] CodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        28.000                    ms
[info] CodecBenchmark.writePrimitivesJackson                                        thrpt    5   1615949.652 ±   73339.585   ops/s
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       673.836 ±      30.576  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       657.264 ±      18.757  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       639.939 ±      34.699    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.008 ±       0.044  MB/sec
[info] CodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.008 ±       0.043    B/op
[info] CodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000                counts
[info] CodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        26.000                    ms
[info] CodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   5954588.037 ±  171808.892   ops/s
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       302.787 ±       8.735  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5        80.000 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       260.567 ±     560.891  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5        68.839 ±     148.204    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.448 ±       3.721  MB/sec
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.117 ±       0.971    B/op
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         4.000                counts
[info] CodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        13.000                    ms
[info] CodecBenchmark.writePrimitivesPlay                                           thrpt    5    203354.196 ±    7315.914   ops/s
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1100.301 ±      39.452  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8512.002 ±       0.001    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1063.852 ±     558.647  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8233.380 ±    4448.241    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.046 ±       0.174  MB/sec
[info] CodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.356 ±       1.357    B/op
[info] CodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000                counts
[info] CodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        36.000                    ms
[success] Total time: 687 s, completed Oct 19, 2017 4:47:37 PM
