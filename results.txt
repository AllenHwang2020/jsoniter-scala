[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Nov 21, 2017 8:32:04 AM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 4 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:208:7: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]     s.getBytes(0, len, buf, pos)
[warn]       ^
[warn] one warning found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:60:81: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MissingReqFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MissingReqFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "i");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields): com.github.plokhotnyuk.jsoniter_scala.MissingReqFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _i: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.MissingReqFields(s = _s, i = _i)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MissingReqFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val missingReqFieldCodec: JsonCodec[MissingReqFields] = make[MissingReqFields](CodecMakerConfig())
[info]                                                                                 ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:62:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.AnyRefs = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "bd");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.AnyRefs): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isCharBufEqualsTo(l, "bd"))
[info]                       {
[info]                         _bd = in.readBigDecimal(_bd);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isCharBufEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           {
[info]             val v = x.os;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "os");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get)
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = make[AnyRefs](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:64:52: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Arrays = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = e0(x, out);
[info]       private val v0: Array[Array[Int]] = new Array[Array[Int]](0);
[info]       private val v1: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]       private val v2: Array[Int] = new Array[Int](0);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Arrays): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _aa: Array[Array[Int]] = v0;
[info]           var _a: Array[BigInt] = v1;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isCharBufEqualsTo(l, "aa"))
[info]                       _aa = d1(in, _aa)
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isCharBufEqualsTo(l, "a"))
[info]                       _a = d3(in, _a)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               x.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               x.+=(d2(in, v2))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.aa;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "aa");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.a;
[info]             if (v.ne(null).&&(v.length.>(0)))
[info]               {
[info]                 c = out.writeObjectField(c, "a");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: Array[BigInt], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: Array[Array[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             e2(x(i), out);
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: Array[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         while (i.<(l)) 
[info]           {
[info]             out.writeComma(i.!=(0));
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = make[Arrays](CodecMakerConfig())
[info]                                                    ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:66:55: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.BitSets = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.BitSets): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isCharBufEqualsTo(l, "bs"))
[info]                       _bs = d1(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isCharBufEqualsTo(l, "mbs"))
[info]                       _mbs = d2(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               BitSet.empty;
[info]             do 
[info]               x.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = BitSet.newBuilder;
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.bs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "bs");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mbs;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mbs");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.BitSet, out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = make[BitSets](CodecMakerConfig())
[info]                                                       ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:68:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Iterables = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Iterables): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       _l = d1(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       _s = d2(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isCharBufEqualsTo(l, "ls"))
[info]                       _ls = d3(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               x.+=(d2(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Set.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = List.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.l;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "l");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.s;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "s");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.ls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "ls");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e3(x: List[Set[Int]], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e2(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(x: scala.collection.immutable.Set[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: List[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = make[Iterables](CodecMakerConfig())
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:70:46: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Maps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Maps): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), d3(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[Long, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = HashMap.empty[String, Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.HashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = make[Maps](CodecMakerConfig())
[info]                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:72:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.MutableMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.MutableMaps): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsInt(), d3(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               OpenHashMap.empty[Long, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               HashMap.empty[String, Double];
[info]             do 
[info]               x.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.mutable.OpenHashMap[Long,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.mutable.HashMap[String,Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = make[MutableMaps](CodecMakerConfig())
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:74:76: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = e0(x, out);
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isCharBufEqualsTo(l, "m"))
[info]                       _m = d1(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isCharBufEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = if (default.isEmpty)
[info]               default
[info]             else
[info]               LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               x.update(in.readObjectFieldAsLong(), d3(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = LongMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             var x = IntMap.empty[Double];
[info]             do 
[info]               x = x.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==('}'))
[info]               x
[info]             else
[info]               in.objectEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.m;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "m");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.mm;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "mm");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           e3(kv._2, out)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e3(x: scala.collection.immutable.LongMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(x: scala.collection.immutable.IntMap[Double], out: JsonWriter): Unit = {
[info]         out.writeObjectStart();
[info]         var c = false;
[info]         x.foreach(((kv) => {
[info]           c = out.writeObjectField(c, kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = make[IntAndLongMaps](CodecMakerConfig())
[info]                                                                            ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:76:64: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.Primitives = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.Primitives): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isCharBufEqualsTo(l, "b"))
[info]                       {
[info]                         _b = in.readByte();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readShort();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isCharBufEqualsTo(l, "i"))
[info]                       {
[info]                         _i = in.readInt();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isCharBufEqualsTo(l, "bl"))
[info]                       {
[info]                         _bl = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isCharBufEqualsTo(l, "ch"))
[info]                       {
[info]                         _ch = in.readChar();
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isCharBufEqualsTo(l, "dbl"))
[info]                       {
[info]                         _dbl = in.readDouble();
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isCharBufEqualsTo(l, "f"))
[info]                       {
[info]                         _f = in.readFloat();
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = make[Primitives](CodecMakerConfig())
[info]                                                                ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:78:73: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.ExtractFields = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("s", "l");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.ExtractFields): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isCharBufEqualsTo(l, "s"))
[info]                       {
[info]                         _s = in.readString(_s);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isCharBufEqualsTo(l, "l"))
[info]                       {
[info]                         _l = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = make[ExtractFields](CodecMakerConfig())
[info]                                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:460:62: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix] {
[info]       def nullValue: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = null;
[info]       def decode(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = d0(in, default);
[info]       def encode(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("status");
[info]       private val r1: Array[String] = Array("distance", "duration", "status");
[info]       private val r2: Array[String] = Array("text", "value");
[info]       private def d0(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 1;
[info]           var _destination_addresses: Seq[String] = Seq.empty[String];
[info]           var _origin_addresses: Seq[String] = Seq.empty[String];
[info]           var _rows: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]           var _status: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -553105946 => if (in.isCharBufEqualsTo(l, "destination_addresses"))
[info]                       _destination_addresses = d1(in, _destination_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case 14144516 => if (in.isCharBufEqualsTo(l, "origin_addresses"))
[info]                       _origin_addresses = d1(in, _origin_addresses)
[info]                     else
[info]                       in.skip()
[info]                     case -11755678 => if (in.isCharBufEqualsTo(l, "rows"))
[info]                       _rows = d2(in, _rows)
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix(destination_addresses = _destination_addresses, origin_addresses = _origin_addresses, rows = _rows, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows];
[info]             do 
[info]               x.+=(d3(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _elements: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1690673754 => if (in.isCharBufEqualsTo(l, "elements"))
[info]                       _elements = d4(in, _elements)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows(elements = _elements)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements]): Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 7;
[info]           var _distance: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _duration: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = null;
[info]           var _status: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1882203379 => if (in.isCharBufEqualsTo(l, "distance"))
[info]                       {
[info]                         _distance = d6(in, _distance);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -739937554 => if (in.isCharBufEqualsTo(l, "duration"))
[info]                       {
[info]                         _duration = d6(in, _duration);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -270730887 => if (in.isCharBufEqualsTo(l, "status"))
[info]                       {
[info]                         _status = in.readString(_status);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements(distance = _distance, duration = _duration, status = _status)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d6(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value): com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _text: String = null;
[info]           var _value: Int = 0;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -854843732 => if (in.isCharBufEqualsTo(l, "value"))
[info]                       {
[info]                         _value = in.readInt();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value(text = _text, value = _value)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: Seq[String]): Seq[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.DistanceMatrix, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.destination_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "destination_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.origin_addresses;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "origin_addresses");
[info]                 e1(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.rows;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "rows");
[info]                 e2(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e2(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e3(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Rows, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.elements;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "elements");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Elements, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "distance");
[info]             e6(x.distance, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "duration");
[info]             e6(x.duration, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "status");
[info]             out.writeVal(x.status)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: com.github.plokhotnyuk.jsoniter_scala.GoogleMapsAPI.Value, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "value");
[info]             out.writeVal(x.value)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e1(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[DistanceMatrix] = make[DistanceMatrix](CodecMakerConfig())
[info]                                                              ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:602:54: Generated JSON codec for type 'Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala._;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends JsonCodec[Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]] {
[info]       def nullValue: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]       def decode(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = d0(in, default);
[info]       def encode(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = e0(x, out);
[info]       private val r0: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "retweeted_status", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "lang");
[info]       private val r1: Array[String] = Array("screen_name", "name", "id", "id_str");
[info]       private val r2: Array[String] = Array("url", "expanded_url", "display_url");
[info]       private val r3: Array[String] = Array("id", "id_str", "name", "screen_name", "location", "description", "url", "entities", "protected", "followers_count", "friends_count", "listed_count", "created_at", "favourites_count", "utc_offset", "time_zone", "geo_enabled", "verified", "statuses_count", "lang", "contributors_enabled", "is_translator", "is_translation_enabled", "profile_background_color", "profile_background_image_url", "profile_background_image_url_https", "profile_background_tile", "profile_image_url", "profile_image_url_https", "profile_banner_url", "profile_link_color", "profile_sidebar_border_color", "profile_sidebar_fill_color", "profile_text_color", "profile_use_background_image", "has_extended_profile", "default_profile", "default_profile_image", "following", "follow_request_sent", "notifications", "translator_type");
[info]       private val r4: Array[String] = Array("url", "description");
[info]       private val r5: Array[String] = Array("created_at", "id", "id_str", "text", "truncated", "entities", "source", "user", "is_quote_status", "retweet_count", "favorite_count", "favorited", "retweeted", "lang");
[info]       private def d0(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet];
[info]             do 
[info]               x.+=(d1(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d1(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 32767;
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _retweeted_status: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = null;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Option[Boolean] = None;
[info]           var _lang: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -350359215 => if (in.isCharBufEqualsTo(l, "retweeted_status"))
[info]                       {
[info]                         _retweeted_status = d12(in, _retweeted_status);
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       _possibly_sensitive = Option(in.readBoolean())
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, retweeted_status = _retweeted_status, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r0, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d12(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 16383;
[info]           var _created_at: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _text: String = null;
[info]           var _truncated: Boolean = false;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = null;
[info]           var _source: String = null;
[info]           var _in_reply_to_status_id: Option[String] = None;
[info]           var _in_reply_to_status_id_str: Option[String] = None;
[info]           var _in_reply_to_user_id: Option[String] = None;
[info]           var _in_reply_to_user_id_str: Option[String] = None;
[info]           var _in_reply_to_screen_name: Option[String] = None;
[info]           var _user: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = null;
[info]           var _geo: Option[String] = None;
[info]           var _coordinates: Option[String] = None;
[info]           var _place: Option[String] = None;
[info]           var _contributors: Option[String] = None;
[info]           var _is_quote_status: Boolean = false;
[info]           var _retweet_count: Int = 0;
[info]           var _favorite_count: Int = 0;
[info]           var _favorited: Boolean = false;
[info]           var _retweeted: Boolean = false;
[info]           var _possibly_sensitive: Option[Boolean] = None;
[info]           var _lang: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1749161762 => if (in.isCharBufEqualsTo(l, "text"))
[info]                       {
[info]                         _text = in.readString(_text);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -957169247 => if (in.isCharBufEqualsTo(l, "truncated"))
[info]                       {
[info]                         _truncated = in.readBoolean();
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d2(in, _entities);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1722056278 => if (in.isCharBufEqualsTo(l, "source"))
[info]                       {
[info]                         _source = in.readString(_source);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -56041286 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id"))
[info]                       _in_reply_to_status_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -685957369 => if (in.isCharBufEqualsTo(l, "in_reply_to_status_id_str"))
[info]                       _in_reply_to_status_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1195124586 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id"))
[info]                       _in_reply_to_user_id = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1480131160 => if (in.isCharBufEqualsTo(l, "in_reply_to_user_id_str"))
[info]                       _in_reply_to_user_id_str = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -836182436 => if (in.isCharBufEqualsTo(l, "in_reply_to_screen_name"))
[info]                       _in_reply_to_screen_name = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1249433185 => if (in.isCharBufEqualsTo(l, "user"))
[info]                       {
[info]                         _user = d9(in, _user);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -779037686 => if (in.isCharBufEqualsTo(l, "geo"))
[info]                       _geo = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -1764808365 => if (in.isCharBufEqualsTo(l, "coordinates"))
[info]                       _coordinates = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case -232934172 => if (in.isCharBufEqualsTo(l, "place"))
[info]                       _place = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 2116377836 => if (in.isCharBufEqualsTo(l, "contributors"))
[info]                       _contributors = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case 1834482941 => if (in.isCharBufEqualsTo(l, "is_quote_status"))
[info]                       {
[info]                         _is_quote_status = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1363420571 => if (in.isCharBufEqualsTo(l, "retweet_count"))
[info]                       {
[info]                         _retweet_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1279943733 => if (in.isCharBufEqualsTo(l, "favorite_count"))
[info]                       {
[info]                         _favorite_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -941232733 => if (in.isCharBufEqualsTo(l, "favorited"))
[info]                       {
[info]                         _favorited = in.readBoolean();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -41089286 => if (in.isCharBufEqualsTo(l, "retweeted"))
[info]                       {
[info]                         _retweeted = in.readBoolean();
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -724879728 => if (in.isCharBufEqualsTo(l, "possibly_sensitive"))
[info]                       _possibly_sensitive = Option(in.readBoolean())
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus(created_at = _created_at, id = _id, id_str = _id_str, text = _text, truncated = _truncated, entities = _entities, source = _source, in_reply_to_status_id = _in_reply_to_status_id, in_reply_to_status_id_str = _in_reply_to_status_id_str, in_reply_to_user_id = _in_reply_to_user_id, in_reply_to_user_id_str = _in_reply_to_user_id_str, in_reply_to_screen_name = _in_reply_to_screen_name, user = _user, geo = _geo, coordinates = _coordinates, place = _place, contributors = _contributors, is_quote_status = _is_quote_status, retweet_count = _retweet_count, favorite_count = _favorite_count, favorited = _favorited, retweeted = _retweeted, possibly_sensitive = _possibly_sensitive, lang = _lang)
[info]           else
[info]             in.requiredObjectFieldError(r5, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d9(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = -1;
[info]           var req1 = 1023;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _name: String = null;
[info]           var _screen_name: String = null;
[info]           var _location: String = null;
[info]           var _description: String = null;
[info]           var _url: String = null;
[info]           var _entities: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = null;
[info]           var _protected: Boolean = false;
[info]           var _followers_count: Int = 0;
[info]           var _friends_count: Int = 0;
[info]           var _listed_count: Int = 0;
[info]           var _created_at: String = null;
[info]           var _favourites_count: Int = 0;
[info]           var _utc_offset: Int = 0;
[info]           var _time_zone: String = null;
[info]           var _geo_enabled: Boolean = false;
[info]           var _verified: Boolean = false;
[info]           var _statuses_count: Int = 0;
[info]           var _lang: String = null;
[info]           var _contributors_enabled: Boolean = false;
[info]           var _is_translator: Boolean = false;
[info]           var _is_translation_enabled: Boolean = false;
[info]           var _profile_background_color: String = null;
[info]           var _profile_background_image_url: String = null;
[info]           var _profile_background_image_url_https: String = null;
[info]           var _profile_background_tile: Boolean = false;
[info]           var _profile_image_url: String = null;
[info]           var _profile_image_url_https: String = null;
[info]           var _profile_banner_url: String = null;
[info]           var _profile_link_color: String = null;
[info]           var _profile_sidebar_border_color: String = null;
[info]           var _profile_sidebar_fill_color: String = null;
[info]           var _profile_text_color: String = null;
[info]           var _profile_use_background_image: Boolean = false;
[info]           var _has_extended_profile: Boolean = false;
[info]           var _default_profile: Boolean = false;
[info]           var _default_profile_image: Boolean = false;
[info]           var _following: Boolean = false;
[info]           var _follow_request_sent: Boolean = false;
[info]           var _notifications: Boolean = false;
[info]           var _translator_type: String = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1994874891 => if (in.isCharBufEqualsTo(l, "location"))
[info]                       {
[info]                         _location = in.readString(_location);
[info]                         req0.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = in.readString(_description);
[info]                         req0.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1962218059 => if (in.isCharBufEqualsTo(l, "entities"))
[info]                       {
[info]                         _entities = d10(in, _entities);
[info]                         req0.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -422319283 => if (in.isCharBufEqualsTo(l, "protected"))
[info]                       {
[info]                         _protected = in.readBoolean();
[info]                         req0.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1231204836 => if (in.isCharBufEqualsTo(l, "followers_count"))
[info]                       {
[info]                         _followers_count = in.readInt();
[info]                         req0.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1565337738 => if (in.isCharBufEqualsTo(l, "friends_count"))
[info]                       {
[info]                         _friends_count = in.readInt();
[info]                         req0.&=(-1025)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -903425777 => if (in.isCharBufEqualsTo(l, "listed_count"))
[info]                       {
[info]                         _listed_count = in.readInt();
[info]                         req0.&=(-2049)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -165119785 => if (in.isCharBufEqualsTo(l, "created_at"))
[info]                       {
[info]                         _created_at = in.readString(_created_at);
[info]                         req0.&=(-4097)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1481771385 => if (in.isCharBufEqualsTo(l, "favourites_count"))
[info]                       {
[info]                         _favourites_count = in.readInt();
[info]                         req0.&=(-8193)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1617333980 => if (in.isCharBufEqualsTo(l, "utc_offset"))
[info]                       {
[info]                         _utc_offset = in.readInt();
[info]                         req0.&=(-16385)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1034472816 => if (in.isCharBufEqualsTo(l, "time_zone"))
[info]                       {
[info]                         _time_zone = in.readString(_time_zone);
[info]                         req0.&=(-32769)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1096575944 => if (in.isCharBufEqualsTo(l, "geo_enabled"))
[info]                       {
[info]                         _geo_enabled = in.readBoolean();
[info]                         req0.&=(-65537)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1766340764 => if (in.isCharBufEqualsTo(l, "verified"))
[info]                       {
[info]                         _verified = in.readBoolean();
[info]                         req0.&=(-131073)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 656981833 => if (in.isCharBufEqualsTo(l, "statuses_count"))
[info]                       {
[info]                         _statuses_count = in.readInt();
[info]                         req0.&=(-262145)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1733553572 => if (in.isCharBufEqualsTo(l, "lang"))
[info]                       {
[info]                         _lang = in.readString(_lang);
[info]                         req0.&=(-524289)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1692587979 => if (in.isCharBufEqualsTo(l, "contributors_enabled"))
[info]                       {
[info]                         _contributors_enabled = in.readBoolean();
[info]                         req0.&=(-1048577)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -761280539 => if (in.isCharBufEqualsTo(l, "is_translator"))
[info]                       {
[info]                         _is_translator = in.readBoolean();
[info]                         req0.&=(-2097153)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1523152584 => if (in.isCharBufEqualsTo(l, "is_translation_enabled"))
[info]                       {
[info]                         _is_translation_enabled = in.readBoolean();
[info]                         req0.&=(-4194305)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1042811670 => if (in.isCharBufEqualsTo(l, "profile_background_color"))
[info]                       {
[info]                         _profile_background_color = in.readString(_profile_background_color);
[info]                         req0.&=(-8388609)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1322051899 => if (in.isCharBufEqualsTo(l, "profile_background_image_url"))
[info]                       {
[info]                         _profile_background_image_url = in.readString(_profile_background_image_url);
[info]                         req0.&=(-16777217)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 430342393 => if (in.isCharBufEqualsTo(l, "profile_background_image_url_https"))
[info]                       {
[info]                         _profile_background_image_url_https = in.readString(_profile_background_image_url_https);
[info]                         req0.&=(-33554433)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1547487212 => if (in.isCharBufEqualsTo(l, "profile_background_tile"))
[info]                       {
[info]                         _profile_background_tile = in.readBoolean();
[info]                         req0.&=(-67108865)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -738485249 => if (in.isCharBufEqualsTo(l, "profile_image_url"))
[info]                       {
[info]                         _profile_image_url = in.readString(_profile_image_url);
[info]                         req0.&=(-134217729)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -869817957 => if (in.isCharBufEqualsTo(l, "profile_image_url_https"))
[info]                       {
[info]                         _profile_image_url_https = in.readString(_profile_image_url_https);
[info]                         req0.&=(-268435457)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1479864213 => if (in.isCharBufEqualsTo(l, "profile_banner_url"))
[info]                       {
[info]                         _profile_banner_url = in.readString(_profile_banner_url);
[info]                         req0.&=(-536870913)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 892046337 => if (in.isCharBufEqualsTo(l, "profile_link_color"))
[info]                       {
[info]                         _profile_link_color = in.readString(_profile_link_color);
[info]                         req0.&=(-1073741825)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1815398146 => if (in.isCharBufEqualsTo(l, "profile_sidebar_border_color"))
[info]                       {
[info]                         _profile_sidebar_border_color = in.readString(_profile_sidebar_border_color);
[info]                         req0.&=(2147483647)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1854913126 => if (in.isCharBufEqualsTo(l, "profile_sidebar_fill_color"))
[info]                       {
[info]                         _profile_sidebar_fill_color = in.readString(_profile_sidebar_fill_color);
[info]                         req1.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1700955824 => if (in.isCharBufEqualsTo(l, "profile_text_color"))
[info]                       {
[info]                         _profile_text_color = in.readString(_profile_text_color);
[info]                         req1.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 2002464660 => if (in.isCharBufEqualsTo(l, "profile_use_background_image"))
[info]                       {
[info]                         _profile_use_background_image = in.readBoolean();
[info]                         req1.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 196017265 => if (in.isCharBufEqualsTo(l, "has_extended_profile"))
[info]                       {
[info]                         _has_extended_profile = in.readBoolean();
[info]                         req1.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1725122937 => if (in.isCharBufEqualsTo(l, "default_profile"))
[info]                       {
[info]                         _default_profile = in.readBoolean();
[info]                         req1.&=(-17)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1346866717 => if (in.isCharBufEqualsTo(l, "default_profile_image"))
[info]                       {
[info]                         _default_profile_image = in.readBoolean();
[info]                         req1.&=(-33)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1251129302 => if (in.isCharBufEqualsTo(l, "following"))
[info]                       {
[info]                         _following = in.readBoolean();
[info]                         req1.&=(-65)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1343246339 => if (in.isCharBufEqualsTo(l, "follow_request_sent"))
[info]                       {
[info]                         _follow_request_sent = in.readBoolean();
[info]                         req1.&=(-129)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 929396071 => if (in.isCharBufEqualsTo(l, "notifications"))
[info]                       {
[info]                         _notifications = in.readBoolean();
[info]                         req1.&=(-257)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 356376530 => if (in.isCharBufEqualsTo(l, "translator_type"))
[info]                       {
[info]                         _translator_type = in.readString(_translator_type);
[info]                         req1.&=(-513)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0).&&(req1.==(0)))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User(id = _id, id_str = _id_str, name = _name, screen_name = _screen_name, location = _location, description = _description, url = _url, entities = _entities, `protected` = _protected, followers_count = _followers_count, friends_count = _friends_count, listed_count = _listed_count, created_at = _created_at, favourites_count = _favourites_count, utc_offset = _utc_offset, time_zone = _time_zone, geo_enabled = _geo_enabled, verified = _verified, statuses_count = _statuses_count, lang = _lang, contributors_enabled = _contributors_enabled, is_translator = _is_translator, is_translation_enabled = _is_translation_enabled, profile_background_color = _profile_background_color, profile_background_image_url = _profile_background_image_url, profile_background_image_url_https = _profile_background_image_url_https, profile_background_tile = _profile_background_tile, profile_image_url = _profile_image_url, profile_image_url_https = _profile_image_url_https, profile_banner_url = _profile_banner_url, profile_link_color = _profile_link_color, profile_sidebar_border_color = _profile_sidebar_border_color, profile_sidebar_fill_color = _profile_sidebar_fill_color, profile_text_color = _profile_text_color, profile_use_background_image = _profile_use_background_image, has_extended_profile = _has_extended_profile, default_profile = _default_profile, default_profile_image = _default_profile_image, following = _following, follow_request_sent = _follow_request_sent, notifications = _notifications, translator_type = _translator_type)
[info]           else
[info]             in.requiredObjectFieldError(r3, req0, req1)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d10(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _url: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           var _description: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = null;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = d11(in, _url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -626201443 => if (in.isCharBufEqualsTo(l, "description"))
[info]                       {
[info]                         _description = d11(in, _description);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities(url = _url, description = _description)
[info]           else
[info]             in.requiredObjectFieldError(r4, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d11(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url(urls = _urls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d2(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _hashtags: Seq[String] = Seq.empty[String];
[info]           var _symbols: Seq[String] = Seq.empty[String];
[info]           var _user_mentions: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]           var _urls: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = Seq.empty[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -1567327321 => if (in.isCharBufEqualsTo(l, "hashtags"))
[info]                       _hashtags = d3(in, _hashtags)
[info]                     else
[info]                       in.skip()
[info]                     case -2118257363 => if (in.isCharBufEqualsTo(l, "symbols"))
[info]                       _symbols = d3(in, _symbols)
[info]                     else
[info]                       in.skip()
[info]                     case -560369018 => if (in.isCharBufEqualsTo(l, "user_mentions"))
[info]                       _user_mentions = d4(in, _user_mentions)
[info]                     else
[info]                       in.skip()
[info]                     case -1327041850 => if (in.isCharBufEqualsTo(l, "urls"))
[info]                       _urls = d7(in, _urls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities(hashtags = _hashtags, symbols = _symbols, user_mentions = _user_mentions, urls = _urls)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d7(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls];
[info]             do 
[info]               x.+=(d8(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d8(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 7;
[info]           var _url: String = null;
[info]           var _expanded_url: String = null;
[info]           var _display_url: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case -64069972 => if (in.isCharBufEqualsTo(l, "url"))
[info]                       {
[info]                         _url = in.readString(_url);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1125392404 => if (in.isCharBufEqualsTo(l, "expanded_url"))
[info]                       {
[info]                         _expanded_url = in.readString(_expanded_url);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -758822041 => if (in.isCharBufEqualsTo(l, "display_url"))
[info]                       {
[info]                         _display_url = in.readString(_display_url);
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls(url = _url, expanded_url = _expanded_url, display_url = _display_url, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r2, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d4(in: JsonReader, default: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions]): Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions];
[info]             do 
[info]               x.+=(d5(in, null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d5(in: JsonReader, default: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions): com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 15;
[info]           var _screen_name: String = null;
[info]           var _name: String = null;
[info]           var _id: Long = 0L;
[info]           var _id_str: String = null;
[info]           var _indices: Seq[Int] = Seq.empty[Int];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.rollbackToken();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsCharBuf();
[info]                   ((in.charBufToHashCode(l): @switch) match {
[info]                     case 985531917 => if (in.isCharBufEqualsTo(l, "screen_name"))
[info]                       {
[info]                         _screen_name = in.readString(_screen_name);
[info]                         req0.&=(-2)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1198843867 => if (in.isCharBufEqualsTo(l, "name"))
[info]                       {
[info]                         _name = in.readString(_name);
[info]                         req0.&=(-3)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1500338773 => if (in.isCharBufEqualsTo(l, "id"))
[info]                       {
[info]                         _id = in.readLong();
[info]                         req0.&=(-5)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1434111844 => if (in.isCharBufEqualsTo(l, "id_str"))
[info]                       {
[info]                         _id_str = in.readString(_id_str);
[info]                         req0.&=(-9)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1070335372 => if (in.isCharBufEqualsTo(l, "indices"))
[info]                       _indices = d6(in, _indices)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) ;
[info]               in.rollbackToken();
[info]               if (in.nextToken().!=('}'))
[info]                 in.objectEndError()
[info]               else
[info]                 ()
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions(screen_name = _screen_name, name = _name, id = _id, id_str = _id_str, indices = _indices)
[info]           else
[info]             in.requiredObjectFieldError(r1, req0)
[info]         }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.objectStartError()
[info]       };
[info]       private def d6(in: JsonReader, default: Seq[Int]): Seq[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[Int];
[info]             do 
[info]               x.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def d3(in: JsonReader, default: Seq[String]): Seq[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.rollbackToken();
[info]             val x = Seq.newBuilder[String];
[info]             do 
[info]               x.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             in.rollbackToken();
[info]             if (in.nextToken().==(']'))
[info]               x.result()
[info]             else
[info]               in.arrayEndError()
[info]           }
[info]         case 'n' => {
[info]           in.rollbackToken();
[info]           in.readNull(default)
[info]         }
[info]         case _ => in.arrayStartError()
[info]       };
[info]       private def e0(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e1(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Tweet, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted_status");
[info]             e13(x.retweeted_status, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             val v = x.possibly_sensitive;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "possibly_sensitive");
[info]                 e14(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e13(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.RetweetedStatus, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "text");
[info]             out.writeVal(x.text)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "truncated");
[info]             out.writeVal(x.truncated)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e2(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "source");
[info]             out.writeVal(x.source)
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_status_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_status_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_user_id_str;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_user_id_str");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.in_reply_to_screen_name;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "in_reply_to_screen_name");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "user");
[info]             e10(x.user, out)
[info]           };
[info]           {
[info]             val v = x.geo;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "geo");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.coordinates;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "coordinates");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.place;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "place");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.contributors;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "contributors");
[info]                 e9(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_quote_status");
[info]             out.writeVal(x.is_quote_status)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweet_count");
[info]             out.writeVal(x.retweet_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorite_count");
[info]             out.writeVal(x.favorite_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favorited");
[info]             out.writeVal(x.favorited)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "retweeted");
[info]             out.writeVal(x.retweeted)
[info]           };
[info]           {
[info]             val v = x.possibly_sensitive;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "possibly_sensitive");
[info]                 e14(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e14(x: Option[Boolean], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e10(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.User, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "location");
[info]             out.writeVal(x.location)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             out.writeVal(x.description)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "entities");
[info]             e11(x.entities, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "protected");
[info]             out.writeVal(x.`protected`)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "followers_count");
[info]             out.writeVal(x.followers_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "friends_count");
[info]             out.writeVal(x.friends_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "listed_count");
[info]             out.writeVal(x.listed_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "created_at");
[info]             out.writeVal(x.created_at)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "favourites_count");
[info]             out.writeVal(x.favourites_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "utc_offset");
[info]             out.writeVal(x.utc_offset)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "time_zone");
[info]             out.writeVal(x.time_zone)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "geo_enabled");
[info]             out.writeVal(x.geo_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "verified");
[info]             out.writeVal(x.verified)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "statuses_count");
[info]             out.writeVal(x.statuses_count)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "lang");
[info]             out.writeVal(x.lang)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "contributors_enabled");
[info]             out.writeVal(x.contributors_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translator");
[info]             out.writeVal(x.is_translator)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "is_translation_enabled");
[info]             out.writeVal(x.is_translation_enabled)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_color");
[info]             out.writeVal(x.profile_background_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url");
[info]             out.writeVal(x.profile_background_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_image_url_https");
[info]             out.writeVal(x.profile_background_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_background_tile");
[info]             out.writeVal(x.profile_background_tile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url");
[info]             out.writeVal(x.profile_image_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_image_url_https");
[info]             out.writeVal(x.profile_image_url_https)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_banner_url");
[info]             out.writeVal(x.profile_banner_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_link_color");
[info]             out.writeVal(x.profile_link_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_border_color");
[info]             out.writeVal(x.profile_sidebar_border_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_sidebar_fill_color");
[info]             out.writeVal(x.profile_sidebar_fill_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_text_color");
[info]             out.writeVal(x.profile_text_color)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "profile_use_background_image");
[info]             out.writeVal(x.profile_use_background_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "has_extended_profile");
[info]             out.writeVal(x.has_extended_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile");
[info]             out.writeVal(x.default_profile)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "default_profile_image");
[info]             out.writeVal(x.default_profile_image)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "following");
[info]             out.writeVal(x.following)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "follow_request_sent");
[info]             out.writeVal(x.follow_request_sent)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "notifications");
[info]             out.writeVal(x.notifications)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "translator_type");
[info]             out.writeVal(x.translator_type)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e11(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserEntities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             e12(x.url, out)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "description");
[info]             e12(x.description, out)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e12(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Url, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e9(x: Option[String], out: JsonWriter): Unit = if (x.isEmpty)
[info]         out.writeNull()
[info]       else
[info]         out.writeVal(x.get);
[info]       private def e2(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Entities, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             val v = x.hashtags;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "hashtags");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.symbols;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "symbols");
[info]                 e3(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.user_mentions;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "user_mentions");
[info]                 e4(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           {
[info]             val v = x.urls;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "urls");
[info]                 e7(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e7(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e8(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e8(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.Urls, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "url");
[info]             out.writeVal(x.url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "expanded_url");
[info]             out.writeVal(x.expanded_url)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "display_url");
[info]             out.writeVal(x.display_url)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e4(x: Seq[com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           e5(x, out)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e5(x: com.github.plokhotnyuk.jsoniter_scala.TwitterAPI.UserMentions, out: JsonWriter): Unit = if (x.!=(null))
[info]         {
[info]           out.writeObjectStart();
[info]           var c = false;
[info]           {
[info]             c = out.writeObjectField(c, "screen_name");
[info]             out.writeVal(x.screen_name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "name");
[info]             out.writeVal(x.name)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id");
[info]             out.writeVal(x.id)
[info]           };
[info]           {
[info]             c = out.writeObjectField(c, "id_str");
[info]             out.writeVal(x.id_str)
[info]           };
[info]           {
[info]             val v = x.indices;
[info]             if (v.ne(null).&&(v.isEmpty.`unary_!`))
[info]               {
[info]                 c = out.writeObjectField(c, "indices");
[info]                 e6(v, out)
[info]               }
[info]             else
[info]               ()
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def e6(x: Seq[Int], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e3(x: Seq[String], out: JsonWriter): Unit = {
[info]         out.writeArrayStart();
[info]         var c = false;
[info]         x.foreach(((x) => {
[info]           c = out.writeComma(c);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val codec: JsonCodec[Seq[Tweet]] = make[Seq[Tweet]](CodecMakerConfig())
[info]                                                      ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:455:23: local val format3 in value format is never used
[warn]     implicit lazy val format3 = Json.format[Value]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:456:23: local val format2 in value format is never used
[warn]     implicit lazy val format2 = Json.format[Elements]
[warn]                       ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecMakerBenchmark.scala:457:23: local val format1 in value format is never used
[warn]     implicit lazy val format1 = Json.format[Rows]
[warn]                       ^
[warn] three warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 215 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 86 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecMakerBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce
[info] # Run progress: 0.00% complete, ETA 00:13:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 608842.863 ops/s
[info] # Warmup Iteration   2: 1458093.859 ops/s
[info] # Warmup Iteration   3: 1526512.407 ops/s
[info] # Warmup Iteration   4: 1526625.156 ops/s
[info] # Warmup Iteration   5: 1522862.887 ops/s
[info] Iteration   1: 1521749.906 ops/s
[info]                  ·gc.alloc.rate:                   2445.294 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2371.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2452.045 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.086 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1528605.696 ops/s
[info]                  ·gc.alloc.rate:                   2456.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2377.724 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2447.207 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1516699.490 ops/s
[info]                  ·gc.alloc.rate:                   2436.990 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2720.834 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2822.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        8.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1528980.013 ops/s
[info]                  ·gc.alloc.rate:                   2456.896 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.798 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2452.786 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1474425.820 ops/s
[info]                  ·gc.alloc.rate:                   2369.179 MB/sec
[info]                  ·gc.alloc.rate.norm:              2528.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2383.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2543.417 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         21.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce":
[info]   1514092.185 ±(99.9%) 87621.160 ops/s [Average]
[info]   (min, avg, max) = (1474425.820, 1514092.185, 1528980.013), stdev = 22754.937
[info]   CI (99.9%): [1426471.025, 1601713.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate":
[info]   2432.917 ±(99.9%) 140.832 MB/sec [Average]
[info]   (min, avg, max) = (2369.179, 2432.917, 2456.896), stdev = 36.574
[info]   CI (99.9%): [2292.084, 2573.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm":
[info]   2528.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2528.000, 2528.000, 2528.000), stdev = 0.001
[info]   CI (99.9%): [2528.000, 2528.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space":
[info]   2447.561 ±(99.9%) 588.547 MB/sec [Average]
[info]   (min, avg, max) = (2371.824, 2447.561, 2720.834), stdev = 152.844
[info]   CI (99.9%): [1859.014, 3036.108] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2543.580 ±(99.9%) 619.929 B/op [Average]
[info]   (min, avg, max) = (2447.207, 2543.580, 2822.445), stdev = 160.994
[info]   CI (99.9%): [1923.651, 3163.509] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.135 B/op [Average]
[info]   (min, avg, max) = (0.022, 0.065, 0.111), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count":
[info]   36.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (7.000, 7.200, 8.000), stdev = 0.447
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time":
[info]   56.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 11.200, 21.000), stdev = 6.535
[info]   CI (99.9%): [56.000, 56.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson
[info] # Run progress: 1.22% complete, ETA 00:22:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 77016.489 ops/s
[info] # Warmup Iteration   2: 148851.687 ops/s
[info] # Warmup Iteration   3: 149099.901 ops/s
[info] # Warmup Iteration   4: 202423.969 ops/s
[info] # Warmup Iteration   5: 210365.826 ops/s
[info] Iteration   1: 214339.632 ops/s
[info]                  ·gc.alloc.rate:               504.655 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.896 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2377.291 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 213365.759 ops/s
[info]                  ·gc.alloc.rate:                   502.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.126 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4815.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.461 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 212984.721 ops/s
[info]                  ·gc.alloc.rate:               501.460 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2424.410 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 215898.464 ops/s
[info]                  ·gc.alloc.rate:                   508.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.754 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4793.141 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 212201.223 ops/s
[info]                  ·gc.alloc.rate:               499.606 MB/sec
[info]                  ·gc.alloc.rate.norm:          3704.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      329.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2443.248 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson":
[info]   213757.959 ±(99.9%) 5477.956 ops/s [Average]
[info]   (min, avg, max) = (212201.223, 213757.959, 215898.464), stdev = 1422.608
[info]   CI (99.9%): [208280.004, 219235.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate":
[info]   503.275 ±(99.9%) 12.869 MB/sec [Average]
[info]   (min, avg, max) = (499.606, 503.275, 508.293), stdev = 3.342
[info]   CI (99.9%): [490.406, 516.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm":
[info]   3704.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3704.002, 3704.002, 3704.002), stdev = 0.001
[info]   CI (99.9%): [3704.002, 3704.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space":
[info]   458.510 ±(99.9%) 692.310 MB/sec [Average]
[info]   (min, avg, max) = (323.896, 458.510, 657.754), stdev = 179.791
[info]   CI (99.9%): [≈ 0, 1150.820] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3370.741 ±(99.9%) 5040.379 B/op [Average]
[info]   (min, avg, max) = (2377.291, 3370.741, 4815.617), stdev = 1308.970
[info]   CI (99.9%): [≈ 0, 8411.120] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.153 ±(99.9%) 0.834 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.153, 0.461), stdev = 0.217
[info]   CI (99.9%): [≈ 0, 0.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 3.000), stdev = 0.894
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter
[info] # Run progress: 2.44% complete, ETA 00:21:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 429595.854 ops/s
[info] # Warmup Iteration   2: 442653.410 ops/s
[info] # Warmup Iteration   3: 446495.012 ops/s
[info] # Warmup Iteration   4: 455114.130 ops/s
[info] # Warmup Iteration   5: 453265.422 ops/s
[info] Iteration   1: 452178.793 ops/s
[info]                  ·gc.alloc.rate:                   420.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2266.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 444862.591 ops/s
[info]                  ·gc.alloc.rate:               413.973 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1152.444 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 447906.963 ops/s
[info]                  ·gc.alloc.rate:                   416.796 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1145.825 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 449896.354 ops/s
[info]                  ·gc.alloc.rate:               418.652 MB/sec
[info]                  ·gc.alloc.rate.norm:          1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.203 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1140.711 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 446803.440 ops/s
[info]                  ·gc.alloc.rate:                   415.769 MB/sec
[info]                  ·gc.alloc.rate.norm:              1464.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2301.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter":
[info]   448329.628 ±(99.9%) 10856.997 ops/s [Average]
[info]   (min, avg, max) = (444862.591, 448329.628, 452178.793), stdev = 2819.528
[info]   CI (99.9%): [437472.631, 459186.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate":
[info]   417.194 ±(99.9%) 10.104 MB/sec [Average]
[info]   (min, avg, max) = (413.973, 417.194, 420.779), stdev = 2.624
[info]   CI (99.9%): [407.090, 427.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm":
[info]   1464.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1464.001, 1464.001, 1464.001), stdev = 0.001
[info]   CI (99.9%): [1464.001, 1464.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.696 ±(99.9%) 688.619 MB/sec [Average]
[info]   (min, avg, max) = (325.875, 456.696, 653.753), stdev = 178.832
[info]   CI (99.9%): [≈ 0, 1145.315] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1601.497 ±(99.9%) 2400.517 B/op [Average]
[info]   (min, avg, max) = (1140.711, 1601.497, 2301.984), stdev = 623.407
[info]   CI (99.9%): [≈ 0, 4002.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.102 ±(99.9%) 0.578 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.102, 0.362), stdev = 0.150
[info]   CI (99.9%): [≈ 0, 0.680] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time":
[info]   11.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.200, 5.000), stdev = 2.168
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless
[info] # Run progress: 3.66% complete, ETA 00:21:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1646458.374 ops/s
[info] # Warmup Iteration   2: 1766156.149 ops/s
[info] # Warmup Iteration   3: 1781178.157 ops/s
[info] # Warmup Iteration   4: 1805459.358 ops/s
[info] # Warmup Iteration   5: 1810194.605 ops/s
[info] Iteration   1: 1788459.923 ops/s
[info]                  ·gc.alloc.rate:                   1109.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     872.634 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 1798564.906 ops/s
[info]                  ·gc.alloc.rate:                   1115.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     871.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.109 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1806854.545 ops/s
[info]                  ·gc.alloc.rate:                   1120.961 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.566 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1162.853 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.073 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1835254.171 ops/s
[info]                  ·gc.alloc.rate:                   1138.582 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.326 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     862.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1816986.979 ops/s
[info]                  ·gc.alloc.rate:                   1127.251 MB/sec
[info]                  ·gc.alloc.rate.norm:              976.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1165.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless":
[info]   1809224.105 ±(99.9%) 69102.999 ops/s [Average]
[info]   (min, avg, max) = (1788459.923, 1809224.105, 1835254.171), stdev = 17945.829
[info]   CI (99.9%): [1740121.106, 1878327.104] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate":
[info]   1122.406 ±(99.9%) 42.994 MB/sec [Average]
[info]   (min, avg, max) = (1109.467, 1122.406, 1138.582), stdev = 11.165
[info]   CI (99.9%): [1079.412, 1165.400] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm":
[info]   976.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (976.000, 976.000, 976.000), stdev = 0.001
[info]   CI (99.9%): [976.000, 976.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space":
[info]   1135.204 ±(99.9%) 723.464 MB/sec [Average]
[info]   (min, avg, max) = (991.965, 1135.204, 1346.227), stdev = 187.881
[info]   CI (99.9%): [411.740, 1858.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm":
[info]   986.978 ±(99.9%) 623.229 B/op [Average]
[info]   (min, avg, max) = (862.630, 986.978, 1165.595), stdev = 161.851
[info]   CI (99.9%): [363.749, 1610.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.125), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm":
[info]   0.051 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.051, 0.109), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 13.000), stdev = 4.450
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump
[info] # Run progress: 4.88% complete, ETA 00:21:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3449874.833 ops/s
[info] # Warmup Iteration   2: 3666293.996 ops/s
[info] # Warmup Iteration   3: 3661063.618 ops/s
[info] # Warmup Iteration   4: 3703031.543 ops/s
[info] # Warmup Iteration   5: 3695155.891 ops/s
[info] Iteration   1: 3680622.384 ops/s
[info]                  ·gc.alloc.rate:                   524.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.080 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 3660511.783 ops/s
[info]                  ·gc.alloc.rate:               521.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 140.202 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 3660855.146 ops/s
[info]                  ·gc.alloc.rate:                   521.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 3690893.134 ops/s
[info]                  ·gc.alloc.rate:               525.507 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 139.755 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 3679960.088 ops/s
[info]                  ·gc.alloc.rate:               523.942 MB/sec
[info]                  ·gc.alloc.rate.norm:          224.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 280.771 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump":
[info]   3674568.507 ±(99.9%) 51584.968 ops/s [Average]
[info]   (min, avg, max) = (3660511.783, 3674568.507, 3690893.134), stdev = 13396.452
[info]   CI (99.9%): [3622983.539, 3726153.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate":
[info]   523.184 ±(99.9%) 7.331 MB/sec [Average]
[info]   (min, avg, max) = (521.188, 523.184, 525.507), stdev = 1.904
[info]   CI (99.9%): [515.853, 530.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm":
[info]   224.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (224.000, 224.000, 224.000), stdev = 0.001
[info]   CI (99.9%): [224.000, 224.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space":
[info]   523.328 ±(99.9%) 690.012 MB/sec [Average]
[info]   (min, avg, max) = (326.212, 523.328, 656.730), stdev = 179.194
[info]   CI (99.9%): [≈ 0, 1213.339] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm":
[info]   224.080 ±(99.9%) 295.649 B/op [Average]
[info]   (min, avg, max) = (139.755, 224.080, 280.947), stdev = 76.779
[info]   CI (99.9%): [≈ 0, 519.729] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm":
[info]   0.011 ±(99.9%) 0.062 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.011, 0.036), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.400, 10.000), stdev = 4.099
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay
[info] # Run progress: 6.10% complete, ETA 00:20:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 33844.138 ops/s
[info] # Warmup Iteration   2: 120210.645 ops/s
[info] # Warmup Iteration   3: 120857.198 ops/s
[info] # Warmup Iteration   4: 126173.002 ops/s
[info] # Warmup Iteration   5: 124145.453 ops/s
[info] Iteration   1: 123982.032 ops/s
[info]                  ·gc.alloc.rate:                   1034.529 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12485.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 122029.196 ops/s
[info]                  ·gc.alloc.rate:                   1018.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.955 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12762.994 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.342 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 123922.315 ops/s
[info]                  ·gc.alloc.rate:                   1034.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12635.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.793 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 123265.884 ops/s
[info]                  ·gc.alloc.rate:                   1028.608 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.946 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12762.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.532 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 122532.914 ops/s
[info]                  ·gc.alloc.rate:                   1022.449 MB/sec
[info]                  ·gc.alloc.rate.norm:              13128.004 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.920 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12890.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.535 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay":
[info]   123146.468 ±(99.9%) 3300.740 ops/s [Average]
[info]   (min, avg, max) = (122029.196, 123146.468, 123982.032), stdev = 857.192
[info]   CI (99.9%): [119845.728, 126447.209] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate":
[info]   1027.581 ±(99.9%) 27.519 MB/sec [Average]
[info]   (min, avg, max) = (1018.266, 1027.581, 1034.529), stdev = 7.147
[info]   CI (99.9%): [1000.062, 1055.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm":
[info]   13128.004 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (13128.003, 13128.004, 13128.004), stdev = 0.001
[info]   CI (99.9%): [13128.003, 13128.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space":
[info]   994.605 ±(99.9%) 30.527 MB/sec [Average]
[info]   (min, avg, max) = (983.927, 994.605, 1003.920), stdev = 7.928
[info]   CI (99.9%): [964.078, 1025.132] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm":
[info]   12707.377 ±(99.9%) 589.286 B/op [Average]
[info]   (min, avg, max) = (12485.866, 12707.377, 12890.084), stdev = 153.036
[info]   CI (99.9%): [12118.091, 13296.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.693 ±(99.9%) 1.572 B/op [Average]
[info]   (min, avg, max) = (0.264, 0.693, 1.342), stdev = 0.408
[info]   CI (99.9%): [≈ 0, 2.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.400, 18.000), stdev = 6.269
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce
[info] # Run progress: 7.32% complete, ETA 00:20:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 762948.359 ops/s
[info] # Warmup Iteration   2: 1178152.863 ops/s
[info] # Warmup Iteration   3: 1172560.313 ops/s
[info] # Warmup Iteration   4: 1192519.897 ops/s
[info] # Warmup Iteration   5: 1201349.554 ops/s
[info] Iteration   1: 1198078.999 ops/s
[info]                  ·gc.alloc.rate:                   1870.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1686.719 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2214.892 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1184221.251 ops/s
[info]                  ·gc.alloc.rate:                   1848.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2031.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2698.490 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.111 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 1179907.541 ops/s
[info]                  ·gc.alloc.rate:                   1841.939 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1695.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2261.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1199048.493 ops/s
[info]                  ·gc.alloc.rate:                   1871.808 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.172 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2675.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 1203698.979 ops/s
[info]                  ·gc.alloc.rate:                   1879.128 MB/sec
[info]                  ·gc.alloc.rate.norm:              2456.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.702 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2221.493 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce":
[info]   1192991.052 ±(99.9%) 39706.803 ops/s [Average]
[info]   (min, avg, max) = (1179907.541, 1192991.052, 1203698.979), stdev = 10311.731
[info]   CI (99.9%): [1153284.249, 1232697.856] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1862.376 ±(99.9%) 62.040 MB/sec [Average]
[info]   (min, avg, max) = (1841.939, 1862.376, 1879.128), stdev = 16.112
[info]   CI (99.9%): [1800.335, 1924.416] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2456.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2456.000, 2456.000, 2456.000), stdev = 0.001
[info]   CI (99.9%): [2456.000, 2456.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1830.540 ±(99.9%) 719.666 MB/sec [Average]
[info]   (min, avg, max) = (1686.719, 1830.540, 2039.172), stdev = 186.895
[info]   CI (99.9%): [1110.874, 2550.207] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2414.353 ±(99.9%) 961.489 B/op [Average]
[info]   (min, avg, max) = (2214.892, 2414.353, 2698.490), stdev = 249.696
[info]   CI (99.9%): [1452.863, 3375.842] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.077 ±(99.9%) 0.090 B/op [Average]
[info]   (min, avg, max) = (0.054, 0.077, 0.111), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.167] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 14.000), stdev = 4.159
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson
[info] # Run progress: 8.54% complete, ETA 00:20:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1094869.975 ops/s
[info] # Warmup Iteration   2: 1816035.181 ops/s
[info] # Warmup Iteration   3: 1815502.462 ops/s
[info] # Warmup Iteration   4: 1808658.275 ops/s
[info] # Warmup Iteration   5: 1786380.649 ops/s
[info] Iteration   1: 1779635.158 ops/s
[info]                  ·gc.alloc.rate:                   1266.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1182.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 1805936.609 ops/s
[info]                  ·gc.alloc.rate:                   1285.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.298 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     878.371 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 1790510.073 ops/s
[info]                  ·gc.alloc.rate:                   1274.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.471 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1184.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 1803213.152 ops/s
[info]                  ·gc.alloc.rate:                   1283.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.786 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1179.397 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.018 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 1779508.583 ops/s
[info]                  ·gc.alloc.rate:                   1266.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              1120.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.757 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1197.769 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson":
[info]   1791760.715 ±(99.9%) 48356.724 ops/s [Average]
[info]   (min, avg, max) = (1779508.583, 1791760.715, 1805936.609), stdev = 12558.088
[info]   CI (99.9%): [1743403.991, 1840117.439] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1275.561 ±(99.9%) 34.442 MB/sec [Average]
[info]   (min, avg, max) = (1266.795, 1275.561, 1285.668), stdev = 8.945
[info]   CI (99.9%): [1241.118, 1310.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1120.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1120.000, 1120.000, 1120.000), stdev = 0.001
[info]   CI (99.9%): [1120.000, 1120.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1280.298 ±(99.9%) 585.997 MB/sec [Average]
[info]   (min, avg, max) = (1008.298, 1280.298, 1354.757), stdev = 152.181
[info]   CI (99.9%): [694.302, 1866.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1124.668 ±(99.9%) 530.845 B/op [Average]
[info]   (min, avg, max) = (878.371, 1124.668, 1197.769), stdev = 137.859
[info]   CI (99.9%): [593.823, 1655.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.029 ±(99.9%) 0.039 B/op [Average]
[info]   (min, avg, max) = (0.018, 0.029, 0.037), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.600, 12.000), stdev = 3.647
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter
[info] # Run progress: 9.76% complete, ETA 00:19:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5614791.326 ops/s
[info] # Warmup Iteration   2: 6324180.119 ops/s
[info] # Warmup Iteration   3: 6384848.580 ops/s
[info] # Warmup Iteration   4: 6454906.407 ops/s
[info] # Warmup Iteration   5: 6428820.085 ops/s
[info] Iteration   1: 6438507.697 ops/s
[info]                  ·gc.alloc.rate:                   818.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     240.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 6508413.890 ops/s
[info]                  ·gc.alloc.rate:                   827.405 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.784 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     158.999 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 6522150.558 ops/s
[info]                  ·gc.alloc.rate:                   829.144 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     239.281 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6516370.725 ops/s
[info]                  ·gc.alloc.rate:               828.420 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.776 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 160.251 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 6473153.949 ops/s
[info]                  ·gc.alloc.rate:                   822.879 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     242.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter":
[info]   6491719.364 ±(99.9%) 135985.676 ops/s [Average]
[info]   (min, avg, max) = (6438507.697, 6491719.364, 6522150.558), stdev = 35315.048
[info]   CI (99.9%): [6355733.688, 6627705.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   825.271 ±(99.9%) 17.321 MB/sec [Average]
[info]   (min, avg, max) = (818.508, 825.271, 829.144), stdev = 4.498
[info]   CI (99.9%): [807.951, 842.592] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.094 ±(99.9%) 697.518 MB/sec [Average]
[info]   (min, avg, max) = (657.784, 859.094, 999.281), stdev = 181.143
[info]   CI (99.9%): [161.576, 1556.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   208.302 ±(99.9%) 171.191 B/op [Average]
[info]   (min, avg, max) = (158.999, 208.302, 242.875), stdev = 44.458
[info]   CI (99.9%): [37.111, 379.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.008 ±(99.9%) 0.029 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.020), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 7.000), stdev = 1.924
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay
[info] # Run progress: 10.98% complete, ETA 00:19:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 256459.649 ops/s
[info] # Warmup Iteration   2: 418819.589 ops/s
[info] # Warmup Iteration   3: 431911.788 ops/s
[info] # Warmup Iteration   4: 429901.499 ops/s
[info] # Warmup Iteration   5: 430003.165 ops/s
[info] Iteration   1: 424271.718 ops/s
[info]                  ·gc.alloc.rate:                   1121.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3662.254 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.309 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 422289.579 ops/s
[info]                  ·gc.alloc.rate:                   1116.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4940.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 421120.876 ops/s
[info]                  ·gc.alloc.rate:                   1113.546 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3735.641 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 429229.254 ops/s
[info]                  ·gc.alloc.rate:                   1134.938 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3679.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.076 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 425954.861 ops/s
[info]                  ·gc.alloc.rate:                   1126.204 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.718 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4967.151 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.308 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay":
[info]   424573.257 ±(99.9%) 12299.806 ops/s [Average]
[info]   (min, avg, max) = (421120.876, 424573.257, 429229.254), stdev = 3194.221
[info]   CI (99.9%): [412273.451, 436873.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1122.629 ±(99.9%) 32.419 MB/sec [Average]
[info]   (min, avg, max) = (1113.546, 1122.629, 1134.938), stdev = 8.419
[info]   CI (99.9%): [1090.210, 1155.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.477 ±(99.9%) 714.317 MB/sec [Average]
[info]   (min, avg, max) = (987.609, 1132.477, 1344.718), stdev = 185.506
[info]   CI (99.9%): [418.160, 1846.794] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4197.110 ±(99.9%) 2662.711 B/op [Average]
[info]   (min, avg, max) = (3662.254, 4197.110, 4967.151), stdev = 691.498
[info]   CI (99.9%): [1534.398, 6859.821] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.232 ±(99.9%) 0.365 B/op [Average]
[info]   (min, avg, max) = (0.076, 0.232, 0.309), stdev = 0.095
[info]   CI (99.9%): [≈ 0, 0.596] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 10.000), stdev = 3.647
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce
[info] # Run progress: 12.20% complete, ETA 00:19:23
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 340597.711 ops/s
[info] # Warmup Iteration   2: 606049.980 ops/s
[info] # Warmup Iteration   3: 622033.128 ops/s
[info] # Warmup Iteration   4: 628538.578 ops/s
[info] # Warmup Iteration   5: 621688.374 ops/s
[info] Iteration   1: 626075.962 ops/s
[info]                  ·gc.alloc.rate:                   2047.056 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.843 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5095.719 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.157 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 630145.066 ops/s
[info]                  ·gc.alloc.rate:                   2059.967 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2033.537 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5078.003 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 641839.715 ops/s
[info]                  ·gc.alloc.rate:                   2098.581 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4996.820 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 641855.679 ops/s
[info]                  ·gc.alloc.rate:                   2098.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.140 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4998.244 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 636332.246 ops/s
[info]                  ·gc.alloc.rate:                   2080.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              5144.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.185 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5051.552 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.103 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce":
[info]   635249.734 ±(99.9%) 27122.718 ops/s [Average]
[info]   (min, avg, max) = (626075.962, 635249.734, 641855.679), stdev = 7043.684
[info]   CI (99.9%): [608127.016, 662372.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2076.957 ±(99.9%) 88.900 MB/sec [Average]
[info]   (min, avg, max) = (2047.056, 2076.957, 2098.605), stdev = 23.087
[info]   CI (99.9%): [1988.057, 2165.857] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5144.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5144.001, 5144.001, 5144.001), stdev = 0.001
[info]   CI (99.9%): [5144.001, 5144.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2036.448 ±(99.9%) 22.742 MB/sec [Average]
[info]   (min, avg, max) = (2027.843, 2036.448, 2043.185), stdev = 5.906
[info]   CI (99.9%): [2013.706, 2059.190] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5044.068 ±(99.9%) 174.426 B/op [Average]
[info]   (min, avg, max) = (4996.820, 5044.068, 5095.719), stdev = 45.298
[info]   CI (99.9%): [4869.642, 5218.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.113 ±(99.9%) 0.167 B/op [Average]
[info]   (min, avg, max) = (0.052, 0.113, 0.157), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.280] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.count":
[info]   30.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.000, 6.000), stdev = 0.001
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysCirce:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.800, 14.000), stdev = 3.701
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson
[info] # Run progress: 13.41% complete, ETA 00:19:07
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 811179.945 ops/s
[info] # Warmup Iteration   2: 1227054.154 ops/s
[info] # Warmup Iteration   3: 1257987.547 ops/s
[info] # Warmup Iteration   4: 1259822.034 ops/s
[info] # Warmup Iteration   5: 1248943.692 ops/s
[info] Iteration   1: 1234759.140 ops/s
[info]                  ·gc.alloc.rate:                   1123.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.809 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1677.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1243303.959 ops/s
[info]                  ·gc.alloc.rate:                   1131.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.663 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1259.857 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1243224.286 ops/s
[info]                  ·gc.alloc.rate:                   1131.643 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.670 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1265.000 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1233604.033 ops/s
[info]                  ·gc.alloc.rate:                   1122.845 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.846 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1710.024 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 1248072.385 ops/s
[info]                  ·gc.alloc.rate:                   1136.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              1432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1272.258 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson":
[info]   1240592.761 ±(99.9%) 23822.213 ops/s [Average]
[info]   (min, avg, max) = (1233604.033, 1240592.761, 1248072.385), stdev = 6186.553
[info]   CI (99.9%): [1216770.548, 1264414.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1129.225 ±(99.9%) 21.773 MB/sec [Average]
[info]   (min, avg, max) = (1122.845, 1129.225, 1136.052), stdev = 5.654
[info]   CI (99.9%): [1107.452, 1150.998] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1432.000, 1432.000, 1432.000), stdev = 0.001
[info]   CI (99.9%): [1432.000, 1432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1132.462 ±(99.9%) 691.291 MB/sec [Average]
[info]   (min, avg, max) = (995.663, 1132.462, 1340.846), stdev = 179.526
[info]   CI (99.9%): [441.171, 1823.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1436.992 ±(99.9%) 904.371 B/op [Average]
[info]   (min, avg, max) = (1259.857, 1436.992, 1710.024), stdev = 234.862
[info]   CI (99.9%): [532.622, 2341.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.037 ±(99.9%) 0.092 B/op [Average]
[info]   (min, avg, max) = (0.026, 0.037, 0.080), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 14.000), stdev = 4.393
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter
[info] # Run progress: 14.63% complete, ETA 00:18:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2008106.932 ops/s
[info] # Warmup Iteration   2: 2377004.196 ops/s
[info] # Warmup Iteration   3: 2410390.336 ops/s
[info] # Warmup Iteration   4: 2410176.206 ops/s
[info] # Warmup Iteration   5: 2423616.951 ops/s
[info] Iteration   1: 2427709.323 ops/s
[info]                  ·gc.alloc.rate:                   1012.313 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     640.251 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2384742.937 ops/s
[info]                  ·gc.alloc.rate:                   994.376 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.316 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     655.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2404921.185 ops/s
[info]                  ·gc.alloc.rate:                   1002.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.938 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     652.841 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 2326626.893 ops/s
[info]                  ·gc.alloc.rate:                   970.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     677.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2331210.343 ops/s
[info]                  ·gc.alloc.rate:                   972.100 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.342 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     679.107 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter":
[info]   2375042.136 ±(99.9%) 172485.183 ops/s [Average]
[info]   (min, avg, max) = (2326626.893, 2375042.136, 2427709.323), stdev = 44793.854
[info]   CI (99.9%): [2202556.953, 2547527.320] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   990.350 ±(99.9%) 71.835 MB/sec [Average]
[info]   (min, avg, max) = (970.194, 990.350, 1012.313), stdev = 18.655
[info]   CI (99.9%): [918.516, 1062.185] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   997.526 ±(99.9%) 27.661 MB/sec [Average]
[info]   (min, avg, max) = (988.009, 997.526, 1006.342), stdev = 7.184
[info]   CI (99.9%): [969.864, 1025.187] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   661.004 ±(99.9%) 64.733 B/op [Average]
[info]   (min, avg, max) = (640.251, 661.004, 679.107), stdev = 16.811
[info]   CI (99.9%): [596.272, 725.737] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.038 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.038, 0.055), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 12.000), stdev = 4.438
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay
[info] # Run progress: 15.85% complete, ETA 00:18:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 82079.413 ops/s
[info] # Warmup Iteration   2: 214023.148 ops/s
[info] # Warmup Iteration   3: 221450.329 ops/s
[info] # Warmup Iteration   4: 225122.098 ops/s
[info] # Warmup Iteration   5: 222397.706 ops/s
[info] Iteration   1: 222289.841 ops/s
[info]                  ·gc.alloc.rate:                   1362.136 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.585 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9367.171 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 222907.518 ops/s
[info]                  ·gc.alloc.rate:                   1365.844 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.838 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9407.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.588 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   3: 228011.023 ops/s
[info]                  ·gc.alloc.rate:                   1397.186 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1675.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11561.948 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.575 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   4: 232004.776 ops/s
[info]                  ·gc.alloc.rate:                   1421.536 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.448 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9137.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.282 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 231882.084 ops/s
[info]                  ·gc.alloc.rate:                   1420.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              9640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.728 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9164.918 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.424 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay":
[info]   227419.048 ±(99.9%) 18057.087 ops/s [Average]
[info]   (min, avg, max) = (222289.841, 227419.048, 232004.776), stdev = 4689.368
[info]   CI (99.9%): [209361.962, 245476.135] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1393.490 ±(99.9%) 110.442 MB/sec [Average]
[info]   (min, avg, max) = (1362.136, 1393.490, 1421.536), stdev = 28.681
[info]   CI (99.9%): [1283.048, 1503.931] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9640.002, 9640.002, 9640.002), stdev = 0.001
[info]   CI (99.9%): [9640.002, 9640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1406.069 ±(99.9%) 582.043 MB/sec [Average]
[info]   (min, avg, max) = (1323.585, 1406.069, 1675.746), stdev = 151.155
[info]   CI (99.9%): [824.026, 1988.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   9727.734 ±(99.9%) 3974.856 B/op [Average]
[info]   (min, avg, max) = (9137.582, 9727.734, 11561.948), stdev = 1032.258
[info]   CI (99.9%): [5752.878, 13702.591] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.062, 0.083), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.433 ±(99.9%) 0.564 B/op [Average]
[info]   (min, avg, max) = (0.282, 0.433, 0.588), stdev = 0.147
[info]   CI (99.9%): [≈ 0, 0.997] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readArraysPlay:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 18.000), stdev = 5.805
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson
[info] # Run progress: 17.07% complete, ETA 00:18:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1152715.967 ops/s
[info] # Warmup Iteration   2: 1764016.728 ops/s
[info] # Warmup Iteration   3: 1748599.792 ops/s
[info] # Warmup Iteration   4: 1730735.267 ops/s
[info] # Warmup Iteration   5: 1767615.756 ops/s
[info] Iteration   1: 1754295.512 ops/s
[info]                  ·gc.alloc.rate:                   1132.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     897.340 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1751112.255 ops/s
[info]                  ·gc.alloc.rate:                   1130.857 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1203.725 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1763144.131 ops/s
[info]                  ·gc.alloc.rate:                   1138.605 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     900.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 1778034.474 ops/s
[info]                  ·gc.alloc.rate:                   1148.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.931 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     895.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 1767490.407 ops/s
[info]                  ·gc.alloc.rate:                   1141.427 MB/sec
[info]                  ·gc.alloc.rate.norm:              1016.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1203.233 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson":
[info]   1762815.356 ±(99.9%) 41434.077 ops/s [Average]
[info]   (min, avg, max) = (1751112.255, 1762815.356, 1778034.474), stdev = 10760.298
[info]   CI (99.9%): [1721381.279, 1804249.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1138.408 ±(99.9%) 26.748 MB/sec [Average]
[info]   (min, avg, max) = (1130.857, 1138.408, 1148.239), stdev = 6.946
[info]   CI (99.9%): [1111.661, 1165.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1016.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1016.000, 1016.000, 1016.000), stdev = 0.001
[info]   CI (99.9%): [1016.000, 1016.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1142.610 ±(99.9%) 714.567 MB/sec [Average]
[info]   (min, avg, max) = (1000.599, 1142.610, 1351.775), stdev = 185.571
[info]   CI (99.9%): [428.043, 1857.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1019.998 ±(99.9%) 644.998 B/op [Average]
[info]   (min, avg, max) = (895.390, 1019.998, 1203.725), stdev = 167.504
[info]   CI (99.9%): [375.000, 1664.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.030 ±(99.9%) 0.063 B/op [Average]
[info]   (min, avg, max) = (0.019, 0.030, 0.055), stdev = 0.016
[info]   CI (99.9%): [≈ 0, 0.093] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.789
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter
[info] # Run progress: 18.29% complete, ETA 00:18:02
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2964420.276 ops/s
[info] # Warmup Iteration   2: 3550803.264 ops/s
[info] # Warmup Iteration   3: 3586247.591 ops/s
[info] # Warmup Iteration   4: 3579230.564 ops/s
[info] # Warmup Iteration   5: 3612017.662 ops/s
[info] Iteration   1: 3564646.502 ops/s
[info]                  ·gc.alloc.rate:                   471.301 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.885 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     143.823 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 3685794.146 ops/s
[info]                  ·gc.alloc.rate:                   487.299 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.099 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.344 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.044 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3605262.940 ops/s
[info]                  ·gc.alloc.rate:               476.649 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.207 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 142.350 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   4: 3666736.817 ops/s
[info]                  ·gc.alloc.rate:                   484.762 MB/sec
[info]                  ·gc.alloc.rate.norm:              208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.730 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     280.501 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3635225.334 ops/s
[info]                  ·gc.alloc.rate:               480.610 MB/sec
[info]                  ·gc.alloc.rate.norm:          208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 141.900 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter":
[info]   3631533.148 ±(99.9%) 186280.583 ops/s [Average]
[info]   (min, avg, max) = (3564646.502, 3631533.148, 3685794.146), stdev = 48376.476
[info]   CI (99.9%): [3445252.565, 3817813.731] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   480.124 ±(99.9%) 24.592 MB/sec [Average]
[info]   (min, avg, max) = (471.301, 480.124, 487.299), stdev = 6.387
[info]   CI (99.9%): [455.532, 504.717] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (208.000, 208.000, 208.000), stdev = 0.001
[info]   CI (99.9%): [208.000, 208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.160 ±(99.9%) 688.115 MB/sec [Average]
[info]   (min, avg, max) = (325.885, 457.160, 653.730), stdev = 178.701
[info]   CI (99.9%): [≈ 0, 1145.275] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   197.384 ±(99.9%) 288.405 B/op [Average]
[info]   (min, avg, max) = (141.900, 197.384, 280.501), stdev = 74.898
[info]   CI (99.9%): [≈ 0, 485.789] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.174 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.104), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.044), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.090] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 5.200, 13.000), stdev = 5.167
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay
[info] # Run progress: 19.51% complete, ETA 00:17:46
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 126293.249 ops/s
[info] # Warmup Iteration   2: 271267.434 ops/s
[info] # Warmup Iteration   3: 277092.724 ops/s
[info] # Warmup Iteration   4: 277345.676 ops/s
[info] # Warmup Iteration   5: 282041.638 ops/s
[info] Iteration   1: 264866.187 ops/s
[info]                  ·gc.alloc.rate:                   1243.127 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.510 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7861.470 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.371 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 277093.626 ops/s
[info]                  ·gc.alloc.rate:                   1300.556 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5666.005 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.709 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 280647.198 ops/s
[info]                  ·gc.alloc.rate:                   1317.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.090 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7501.169 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.233 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 275258.747 ops/s
[info]                  ·gc.alloc.rate:                   1291.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.862 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7686.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.238 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 276520.350 ops/s
[info]                  ·gc.alloc.rate:               1297.778 MB/sec
[info]                  ·gc.alloc.rate.norm:          7384.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1349.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7678.001 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay":
[info]   274877.222 ±(99.9%) 22883.917 ops/s [Average]
[info]   (min, avg, max) = (264866.187, 274877.222, 280647.198), stdev = 5942.881
[info]   CI (99.9%): [251993.305, 297761.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1290.120 ±(99.9%) 107.404 MB/sec [Average]
[info]   (min, avg, max) = (1243.127, 1290.120, 1317.189), stdev = 27.893
[info]   CI (99.9%): [1182.715, 1397.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7384.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7384.002, 7384.002, 7384.002), stdev = 0.001
[info]   CI (99.9%): [7384.001, 7384.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.775 ±(99.9%) 588.460 MB/sec [Average]
[info]   (min, avg, max) = (997.963, 1270.775, 1349.450), stdev = 152.821
[info]   CI (99.9%): [682.314, 1859.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7278.614 ±(99.9%) 3505.767 B/op [Average]
[info]   (min, avg, max) = (5666.005, 7278.614, 7861.470), stdev = 910.437
[info]   CI (99.9%): [3772.847, 10784.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.310 ±(99.9%) 1.001 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.310, 0.709), stdev = 0.260
[info]   CI (99.9%): [≈ 0, 1.312] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.000, 11.000), stdev = 3.391
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce
[info] # Run progress: 20.73% complete, ETA 00:17:30
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 337465.397 ops/s
[info] # Warmup Iteration   2: 552581.640 ops/s
[info] # Warmup Iteration   3: 551088.034 ops/s
[info] # Warmup Iteration   4: 558775.943 ops/s
[info] # Warmup Iteration   5: 558448.067 ops/s
[info] Iteration   1: 550801.083 ops/s
[info]                  ·gc.alloc.rate:                   1823.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2022.903 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5778.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.297 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   2: 552043.703 ops/s
[info]                  ·gc.alloc.rate:                   1827.522 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.049 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4821.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.059 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 554537.969 ops/s
[info]                  ·gc.alloc.rate:                   1835.637 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5774.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.236 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 551544.532 ops/s
[info]                  ·gc.alloc.rate:                   1825.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.320 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4847.408 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 561657.008 ops/s
[info]                  ·gc.alloc.rate:                   1859.244 MB/sec
[info]                  ·gc.alloc.rate.norm:              5208.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4759.967 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce":
[info]   554116.859 ±(99.9%) 17106.179 ops/s [Average]
[info]   (min, avg, max) = (550801.083, 554116.859, 561657.008), stdev = 4442.420
[info]   CI (99.9%): [537010.680, 571223.038] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1834.291 ±(99.9%) 56.588 MB/sec [Average]
[info]   (min, avg, max) = (1823.323, 1834.291, 1859.244), stdev = 14.696
[info]   CI (99.9%): [1777.703, 1890.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5208.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5208.001, 5208.001, 5208.001), stdev = 0.001
[info]   CI (99.9%): [5208.001, 5208.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.750 ±(99.9%) 700.829 MB/sec [Average]
[info]   (min, avg, max) = (1692.049, 1829.750, 2035.179), stdev = 182.003
[info]   CI (99.9%): [1128.920, 2530.579] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5196.302 ±(99.9%) 2041.754 B/op [Average]
[info]   (min, avg, max) = (4759.967, 5196.302, 5778.067), stdev = 530.237
[info]   CI (99.9%): [3154.548, 7238.056] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.177 ±(99.9%) 0.361 B/op [Average]
[info]   (min, avg, max) = (0.059, 0.177, 0.297), stdev = 0.094
[info]   CI (99.9%): [≈ 0, 0.539] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.400, 15.000), stdev = 3.435
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson
[info] # Run progress: 21.95% complete, ETA 00:17:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 419640.858 ops/s
[info] # Warmup Iteration   2: 717822.980 ops/s
[info] # Warmup Iteration   3: 720783.795 ops/s
[info] # Warmup Iteration   4: 719573.439 ops/s
[info] # Warmup Iteration   5: 719677.383 ops/s
[info] Iteration   1: 717691.122 ops/s
[info]                  ·gc.alloc.rate:                   897.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2178.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.137 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 718285.892 ops/s
[info]                  ·gc.alloc.rate:                   898.514 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2187.304 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 715078.151 ops/s
[info]                  ·gc.alloc.rate:                   894.475 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1470.610 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 722506.385 ops/s
[info]                  ·gc.alloc.rate:                   903.832 MB/sec
[info]                  ·gc.alloc.rate.norm:              1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.645 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2189.688 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 703721.408 ops/s
[info]                  ·gc.alloc.rate:               880.288 MB/sec
[info]                  ·gc.alloc.rate.norm:          1968.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1008.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2255.656 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson":
[info]   715456.591 ±(99.9%) 27265.945 ops/s [Average]
[info]   (min, avg, max) = (703721.408, 715456.591, 722506.385), stdev = 7080.879
[info]   CI (99.9%): [688190.646, 742722.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   894.979 ±(99.9%) 34.161 MB/sec [Average]
[info]   (min, avg, max) = (880.288, 894.979, 903.832), stdev = 8.872
[info]   CI (99.9%): [860.818, 929.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1968.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1968.001, 1968.001, 1968.001), stdev = 0.001
[info]   CI (99.9%): [1968.001, 1968.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   935.118 ±(99.9%) 574.560 MB/sec [Average]
[info]   (min, avg, max) = (668.407, 935.118, 1008.957), stdev = 149.211
[info]   CI (99.9%): [360.558, 1509.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2056.408 ±(99.9%) 1266.521 B/op [Average]
[info]   (min, avg, max) = (1470.610, 2056.408, 2255.656), stdev = 328.911
[info]   CI (99.9%): [789.887, 3322.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.055 ±(99.9%) 0.193 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.055, 0.137), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.247] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 13.000), stdev = 3.899
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 23.17% complete, ETA 00:16:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4031629.982 ops/s
[info] # Warmup Iteration   2: 4271429.324 ops/s
[info] # Warmup Iteration   3: 4295827.549 ops/s
[info] # Warmup Iteration   4: 4313026.215 ops/s
[info] # Warmup Iteration   5: 4328494.697 ops/s
[info] Iteration   1: 4308710.425 ops/s
[info]                  ·gc.alloc.rate:      197.191 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4312658.092 ops/s
[info]                  ·gc.alloc.rate:                   197.370 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4280568.754 ops/s
[info]                  ·gc.alloc.rate:               195.902 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.910 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 94.055 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   4: 4219706.677 ops/s
[info]                  ·gc.alloc.rate:      193.127 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4223069.269 ops/s
[info]                  ·gc.alloc.rate:                   193.268 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.541 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.815 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter":
[info]   4268942.643 ±(99.9%) 173879.388 ops/s [Average]
[info]   (min, avg, max) = (4219706.677, 4268942.643, 4312658.092), stdev = 45155.925
[info]   CI (99.9%): [4095063.255, 4442822.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   195.372 ±(99.9%) 7.950 MB/sec [Average]
[info]   (min, avg, max) = (193.127, 195.372, 197.370), stdev = 2.065
[info]   CI (99.9%): [187.422, 203.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.472 ±(99.9%) 598.778 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.472, 325.541), stdev = 155.501
[info]   CI (99.9%): [≈ 0, 766.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   61.737 ±(99.9%) 221.304 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 61.737, 121.277), stdev = 57.472
[info]   CI (99.9%): [≈ 0, 283.041] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.439 ±(99.9%) 3.761 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.439, 2.187), stdev = 0.977
[info]   CI (99.9%): [≈ 0, 4.201] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 1.401 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.164, 0.815), stdev = 0.364
[info]   CI (99.9%): [≈ 0, 1.565] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 5.400, 16.000), stdev = 6.542
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay
[info] # Run progress: 24.39% complete, ETA 00:16:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74861.603 ops/s
[info] # Warmup Iteration   2: 184977.492 ops/s
[info] # Warmup Iteration   3: 192033.449 ops/s
[info] # Warmup Iteration   4: 194425.078 ops/s
[info] # Warmup Iteration   5: 193375.585 ops/s
[info] Iteration   1: 194443.776 ops/s
[info]                  ·gc.alloc.rate:               994.684 MB/sec
[info]                  ·gc.alloc.rate.norm:          8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7961.363 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 193855.563 ops/s
[info]                  ·gc.alloc.rate:                   991.673 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.643 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8023.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.507 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 192413.782 ops/s
[info]                  ·gc.alloc.rate:                   984.306 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.983 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8127.123 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.170 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 192027.075 ops/s
[info]                  ·gc.alloc.rate:                   982.339 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8181.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 192217.720 ops/s
[info]                  ·gc.alloc.rate:                   983.293 MB/sec
[info]                  ·gc.alloc.rate.norm:              8048.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.245 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8211.303 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.341 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay":
[info]   192991.583 ±(99.9%) 4182.126 ops/s [Average]
[info]   (min, avg, max) = (192027.075, 192991.583, 194443.776), stdev = 1086.085
[info]   CI (99.9%): [188809.457, 197173.709] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   987.259 ±(99.9%) 21.376 MB/sec [Average]
[info]   (min, avg, max) = (982.339, 987.259, 994.684), stdev = 5.551
[info]   CI (99.9%): [965.883, 1008.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8048.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8048.002, 8048.002, 8048.002), stdev = 0.001
[info]   CI (99.9%): [8048.002, 8048.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   993.693 ±(99.9%) 29.547 MB/sec [Average]
[info]   (min, avg, max) = (983.976, 993.693, 1003.245), stdev = 7.673
[info]   CI (99.9%): [964.147, 1023.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8100.916 ±(99.9%) 407.644 B/op [Average]
[info]   (min, avg, max) = (7961.363, 8100.916, 8211.303), stdev = 105.864
[info]   CI (99.9%): [7693.272, 8508.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.272 ±(99.9%) 0.743 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.272, 0.507), stdev = 0.193
[info]   CI (99.9%): [≈ 0, 1.015] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.962
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce
[info] # Run progress: 25.61% complete, ETA 00:16:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3029.054 ops/s
[info] # Warmup Iteration   2: 4725.229 ops/s
[info] # Warmup Iteration   3: 5032.624 ops/s
[info] # Warmup Iteration   4: 5020.475 ops/s
[info] # Warmup Iteration   5: 5059.760 ops/s
[info] Iteration   1: 5034.430 ops/s
[info]                  ·gc.alloc.rate:                   1257.498 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.276 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416640.305 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 32.534 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 5009.997 ops/s
[info]                  ·gc.alloc.rate:                   1251.459 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.086 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.824 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     420706.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 19.618 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 5076.708 ops/s
[info]                  ·gc.alloc.rate:                   1268.118 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.091 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.744 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     417014.421 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.453 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 5145.291 ops/s
[info]                  ·gc.alloc.rate:                   1285.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.084 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     309357.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.050 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 15.319 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 5110.714 ops/s
[info]                  ·gc.alloc.rate:                   1276.580 MB/sec
[info]                  ·gc.alloc.rate.norm:              392960.085 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.044 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     416189.496 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.092 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 28.244 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce":
[info]   5075.428 ±(99.9%) 211.695 ops/s [Average]
[info]   (min, avg, max) = (5009.997, 5075.428, 5145.291), stdev = 54.976
[info]   CI (99.9%): [4863.733, 5287.123] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1267.769 ±(99.9%) 52.825 MB/sec [Average]
[info]   (min, avg, max) = (1251.459, 1267.769, 1285.190), stdev = 13.718
[info]   CI (99.9%): [1214.944, 1320.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   392960.086 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (392960.084, 392960.086, 392960.091), stdev = 0.003
[info]   CI (99.9%): [392960.075, 392960.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1276.530 ±(99.9%) 570.557 MB/sec [Average]
[info]   (min, avg, max) = (1011.765, 1276.530, 1352.044), stdev = 148.172
[info]   CI (99.9%): [705.973, 1847.088] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   395981.700 ±(99.9%) 186593.470 B/op [Average]
[info]   (min, avg, max) = (309357.423, 395981.700, 420706.855), stdev = 48457.732
[info]   CI (99.9%): [209388.230, 582575.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.066 ±(99.9%) 0.128 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.066, 0.104), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.194] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   20.434 ±(99.9%) 39.910 B/op [Average]
[info]   (min, avg, max) = (6.453, 20.434, 32.534), stdev = 10.365
[info]   CI (99.9%): [≈ 0, 60.344] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 8.400, 13.000), stdev = 3.715
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson
[info] # Run progress: 26.83% complete, ETA 00:16:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5855.032 ops/s
[info] # Warmup Iteration   2: 9632.676 ops/s
[info] # Warmup Iteration   3: 9505.669 ops/s
[info] # Warmup Iteration   4: 9581.309 ops/s
[info] # Warmup Iteration   5: 9592.390 ops/s
[info] Iteration   1: 9723.841 ops/s
[info]                  ·gc.alloc.rate:               262.327 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.897 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 41399.669 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 9718.864 ops/s
[info]                  ·gc.alloc.rate:               262.188 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.048 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52423.407 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 9701.386 ops/s
[info]                  ·gc.alloc.rate:                   261.704 MB/sec
[info]                  ·gc.alloc.rate.norm:              42440.045 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.865 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     52520.657 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.377 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 9708.394 ops/s
[info]                  ·gc.alloc.rate:               261.904 MB/sec
[info]                  ·gc.alloc.rate.norm:          42440.044 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.878 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 52806.763 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 9709.903 ops/s
[info]                  ·gc.alloc.rate:      261.952 MB/sec
[info]                  ·gc.alloc.rate.norm: 42440.044 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson":
[info]   9712.478 ±(99.9%) 34.237 ops/s [Average]
[info]   (min, avg, max) = (9701.386, 9712.478, 9723.841), stdev = 8.891
[info]   CI (99.9%): [9678.240, 9746.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   262.015 ±(99.9%) 0.945 MB/sec [Average]
[info]   (min, avg, max) = (261.704, 262.015, 262.327), stdev = 0.245
[info]   CI (99.9%): [261.070, 262.960] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   42440.045 ±(99.9%) 0.006 B/op [Average]
[info]   (min, avg, max) = (42440.044, 42440.045, 42440.048), stdev = 0.001
[info]   CI (99.9%): [42440.040, 42440.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   245.901 ±(99.9%) 541.561 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 245.901, 325.878), stdev = 140.642
[info]   CI (99.9%): [≈ 0, 787.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   39830.099 ±(99.9%) 87743.489 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 39830.099, 52806.763), stdev = 22786.706
[info]   CI (99.9%): [≈ 0, 127573.588] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.675 ±(99.9%) 5.816 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.675, 3.377), stdev = 1.510
[info]   CI (99.9%): [≈ 0, 6.491] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 2.000), stdev = 0.707
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter
[info] # Run progress: 28.05% complete, ETA 00:15:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12770.770 ops/s
[info] # Warmup Iteration   2: 15200.945 ops/s
[info] # Warmup Iteration   3: 15144.011 ops/s
[info] # Warmup Iteration   4: 15165.187 ops/s
[info] # Warmup Iteration   5: 15159.708 ops/s
[info] Iteration   1: 15341.890 ops/s
[info]                  ·gc.alloc.rate:               287.167 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 26241.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 15121.194 ops/s
[info]                  ·gc.alloc.rate:                   283.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.041 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.205 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33833.978 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.276 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 236.811 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 15420.878 ops/s
[info]                  ·gc.alloc.rate:               288.647 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.187 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33175.900 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   4: 15426.055 ops/s
[info]                  ·gc.alloc.rate:               288.747 MB/sec
[info]                  ·gc.alloc.rate.norm:          29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.215 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33167.299 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 15455.980 ops/s
[info]                  ·gc.alloc.rate:                   289.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              29448.028 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.200 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33102.930 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.479 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter":
[info]   15353.199 ±(99.9%) 525.181 ops/s [Average]
[info]   (min, avg, max) = (15121.194, 15353.199, 15455.980), stdev = 136.388
[info]   CI (99.9%): [14828.018, 15878.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   287.381 ±(99.9%) 9.807 MB/sec [Average]
[info]   (min, avg, max) = (283.048, 287.381, 289.295), stdev = 2.547
[info]   CI (99.9%): [277.573, 297.188] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   29448.031 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (29448.028, 29448.031, 29448.041), stdev = 0.006
[info]   CI (99.9%): [29448.008, 29448.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   311.342 ±(99.9%) 119.341 MB/sec [Average]
[info]   (min, avg, max) = (255.901, 311.342, 325.215), stdev = 30.992
[info]   CI (99.9%): [192.001, 430.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   31904.369 ±(99.9%) 12243.163 B/op [Average]
[info]   (min, avg, max) = (26241.735, 31904.369, 33833.978), stdev = 3179.510
[info]   CI (99.9%): [19661.206, 44147.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.472 ±(99.9%) 3.886 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.472, 2.276), stdev = 1.009
[info]   CI (99.9%): [≈ 0, 4.358] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   49.058 ±(99.9%) 404.399 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 49.058, 236.811), stdev = 105.021
[info]   CI (99.9%): [≈ 0, 453.457] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 8.000), stdev = 3.209
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay
[info] # Run progress: 29.27% complete, ETA 00:15:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 935.585 ops/s
[info] # Warmup Iteration   2: 1903.774 ops/s
[info] # Warmup Iteration   3: 1956.695 ops/s
[info] # Warmup Iteration   4: 1955.535 ops/s
[info] # Warmup Iteration   5: 1958.234 ops/s
[info] Iteration   1: 1969.885 ops/s
[info]                  ·gc.alloc.rate:                   1196.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.235 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.347 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     794013.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.250 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 1941.457 ops/s
[info]                  ·gc.alloc.rate:                   1178.829 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.692 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1080702.814 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.873 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1942.429 ops/s
[info]                  ·gc.alloc.rate:                   1179.407 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.222 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     813820.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.865 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1978.454 ops/s
[info]                  ·gc.alloc.rate:                   1201.361 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.218 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.434 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1069770.058 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 33.116 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1968.716 ops/s
[info]                  ·gc.alloc.rate:                   1195.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              955216.219 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     808931.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.642 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay":
[info]   1960.188 ±(99.9%) 65.762 ops/s [Average]
[info]   (min, avg, max) = (1941.457, 1960.188, 1978.454), stdev = 17.078
[info]   CI (99.9%): [1894.426, 2025.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1190.238 ±(99.9%) 40.080 MB/sec [Average]
[info]   (min, avg, max) = (1178.829, 1190.238, 1201.361), stdev = 10.409
[info]   CI (99.9%): [1150.158, 1230.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   955216.224 ±(99.9%) 0.026 B/op [Average]
[info]   (min, avg, max) = (955216.218, 955216.224, 955216.235), stdev = 0.007
[info]   CI (99.9%): [955216.197, 955216.250] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1138.121 ±(99.9%) 708.701 MB/sec [Average]
[info]   (min, avg, max) = (994.347, 1138.121, 1345.434), stdev = 184.047
[info]   CI (99.9%): [429.420, 1846.823] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   913447.599 ±(99.9%) 569598.572 B/op [Average]
[info]   (min, avg, max) = (794013.029, 913447.599, 1080702.814), stdev = 147922.940
[info]   CI (99.9%): [343849.027, 1483046.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.073] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   23.349 ±(99.9%) 34.569 B/op [Average]
[info]   (min, avg, max) = (16.642, 23.349, 33.250), stdev = 8.978
[info]   CI (99.9%): [≈ 0, 57.919] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.800, 10.000), stdev = 2.280
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 30.49% complete, ETA 00:15:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2789399.617 ops/s
[info] # Warmup Iteration   2: 3185556.709 ops/s
[info] # Warmup Iteration   3: 3258994.419 ops/s
[info] # Warmup Iteration   4: 3289888.792 ops/s
[info] # Warmup Iteration   5: 3302398.740 ops/s
[info] Iteration   1: 3278172.461 ops/s
[info]                  ·gc.alloc.rate:                   983.543 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.975 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     474.127 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 3290047.878 ops/s
[info]                  ·gc.alloc.rate:                   987.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.296 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     474.971 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3294731.657 ops/s
[info]                  ·gc.alloc.rate:                   988.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.034 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     476.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 3286932.244 ops/s
[info]                  ·gc.alloc.rate:                   986.129 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.740 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     319.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 3242451.026 ops/s
[info]                  ·gc.alloc.rate:                   972.779 MB/sec
[info]                  ·gc.alloc.rate.norm:              472.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.575 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     487.428 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter":
[info]   3278467.053 ±(99.9%) 80944.925 ops/s [Average]
[info]   (min, avg, max) = (3242451.026, 3278467.053, 3294731.657), stdev = 21021.140
[info]   CI (99.9%): [3197522.128, 3359411.979] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   983.616 ±(99.9%) 24.360 MB/sec [Average]
[info]   (min, avg, max) = (972.779, 983.616, 988.547), stdev = 6.326
[info]   CI (99.9%): [959.256, 1007.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   472.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (472.000, 472.000, 472.000), stdev = 0.001
[info]   CI (99.9%): [472.000, 472.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   930.324 ±(99.9%) 565.721 MB/sec [Average]
[info]   (min, avg, max) = (667.740, 930.324, 1004.575), stdev = 146.916
[info]   CI (99.9%): [364.603, 1496.045] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   446.533 ±(99.9%) 273.996 B/op [Average]
[info]   (min, avg, max) = (319.607, 446.533, 487.428), stdev = 71.156
[info]   CI (99.9%): [172.537, 720.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.026, 0.030), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 9.000), stdev = 2.608
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 31.71% complete, ETA 00:15:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 144929.073 ops/s
[info] # Warmup Iteration   2: 233677.533 ops/s
[info] # Warmup Iteration   3: 244092.276 ops/s
[info] # Warmup Iteration   4: 244897.148 ops/s
[info] # Warmup Iteration   5: 245992.399 ops/s
[info] Iteration   1: 244176.034 ops/s
[info]                  ·gc.alloc.rate:               1312.452 MB/sec
[info]                  ·gc.alloc.rate.norm:          8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1323.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8529.668 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 244221.839 ops/s
[info]                  ·gc.alloc.rate:                   1312.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8586.088 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.537 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 244673.036 ops/s
[info]                  ·gc.alloc.rate:                   1315.121 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.857 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8615.046 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.670 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 243624.307 ops/s
[info]                  ·gc.alloc.rate:                   1309.317 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.972 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8692.733 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 243724.396 ops/s
[info]                  ·gc.alloc.rate:                   1309.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.173 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8715.441 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.403 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay":
[info]   244083.922 ±(99.9%) 1628.082 ops/s [Average]
[info]   (min, avg, max) = (243624.307, 244083.922, 244673.036), stdev = 422.808
[info]   CI (99.9%): [242455.840, 245712.005] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1311.915 ±(99.9%) 8.964 MB/sec [Average]
[info]   (min, avg, max) = (1309.317, 1311.915, 1315.121), stdev = 2.328
[info]   CI (99.9%): [1302.951, 1320.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1338.557 ±(99.9%) 40.335 MB/sec [Average]
[info]   (min, avg, max) = (1323.886, 1338.557, 1350.173), stdev = 10.475
[info]   CI (99.9%): [1298.222, 1378.892] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8627.795 ±(99.9%) 294.704 B/op [Average]
[info]   (min, avg, max) = (8529.668, 8627.795, 8715.441), stdev = 76.534
[info]   CI (99.9%): [8333.091, 8922.500] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.166 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.054, 0.104), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.349 ±(99.9%) 1.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.349, 0.670), stdev = 0.278
[info]   CI (99.9%): [≈ 0, 1.419] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 11.000), stdev = 3.209
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce
[info] # Run progress: 32.93% complete, ETA 00:14:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 319180.447 ops/s
[info] # Warmup Iteration   2: 526360.600 ops/s
[info] # Warmup Iteration   3: 542330.351 ops/s
[info] # Warmup Iteration   4: 540870.202 ops/s
[info] # Warmup Iteration   5: 539500.905 ops/s
[info] Iteration   1: 544187.399 ops/s
[info]                  ·gc.alloc.rate:                   1906.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.519 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5852.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 545662.745 ops/s
[info]                  ·gc.alloc.rate:                   1911.807 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4882.102 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.120 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 544339.530 ops/s
[info]                  ·gc.alloc.rate:                   1907.052 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.856 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5884.286 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.181 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 547728.846 ops/s
[info]                  ·gc.alloc.rate:               1918.945 MB/sec
[info]                  ·gc.alloc.rate.norm:          5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1699.336 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4881.193 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     12.000 ms
[info] Iteration   5: 535876.406 ops/s
[info]                  ·gc.alloc.rate:                   1877.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              5512.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5988.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.183 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce":
[info]   543558.985 ±(99.9%) 17417.485 ops/s [Average]
[info]   (min, avg, max) = (535876.406, 543558.985, 547728.846), stdev = 4523.266
[info]   CI (99.9%): [526141.500, 560976.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1904.374 ±(99.9%) 60.993 MB/sec [Average]
[info]   (min, avg, max) = (1877.468, 1904.374, 1918.945), stdev = 15.840
[info]   CI (99.9%): [1843.381, 1965.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5512.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5512.001, 5512.001, 5512.001), stdev = 0.001
[info]   CI (99.9%): [5512.001, 5512.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1898.581 ±(99.9%) 711.306 MB/sec [Average]
[info]   (min, avg, max) = (1693.330, 1898.581, 2039.861), stdev = 184.724
[info]   CI (99.9%): [1187.275, 2609.887] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5497.853 ±(99.9%) 2174.691 B/op [Average]
[info]   (min, avg, max) = (4881.193, 5497.853, 5988.766), stdev = 564.760
[info]   CI (99.9%): [3323.163, 7672.544] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.121 ±(99.9%) 0.286 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.121, 0.183), stdev = 0.074
[info]   CI (99.9%): [≈ 0, 0.407] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (8.000, 10.800, 13.000), stdev = 2.168
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson
[info] # Run progress: 34.15% complete, ETA 00:14:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 291765.390 ops/s
[info] # Warmup Iteration   2: 518513.639 ops/s
[info] # Warmup Iteration   3: 518808.199 ops/s
[info] # Warmup Iteration   4: 522086.545 ops/s
[info] # Warmup Iteration   5: 516757.522 ops/s
[info] Iteration   1: 519107.893 ops/s
[info]                  ·gc.alloc.rate:               527.935 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.433 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1980.347 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   2: 517984.474 ops/s
[info]                  ·gc.alloc.rate:               526.790 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.539 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 994.823 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 515001.603 ops/s
[info]                  ·gc.alloc.rate:               523.750 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2009.355 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 519906.965 ops/s
[info]                  ·gc.alloc.rate:                   528.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.422 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1998.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.126 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 524531.650 ops/s
[info]                  ·gc.alloc.rate:                   533.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     994.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.500 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson":
[info]   519306.517 ±(99.9%) 13336.533 ops/s [Average]
[info]   (min, avg, max) = (515001.603, 519306.517, 524531.650), stdev = 3463.455
[info]   CI (99.9%): [505969.984, 532643.050] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   528.132 ±(99.9%) 13.546 MB/sec [Average]
[info]   (min, avg, max) = (523.750, 528.132, 533.430), stdev = 3.518
[info]   CI (99.9%): [514.586, 541.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.135 ±(99.9%) 691.160 MB/sec [Average]
[info]   (min, avg, max) = (327.539, 526.135, 660.422), stdev = 179.492
[info]   CI (99.9%): [≈ 0, 1217.296] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1595.472 ±(99.9%) 2112.443 B/op [Average]
[info]   (min, avg, max) = (994.423, 1595.472, 2009.355), stdev = 548.595
[info]   CI (99.9%): [≈ 0, 3707.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.278 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.167), stdev = 0.072
[info]   CI (99.9%): [≈ 0, 0.319] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.125 ±(99.9%) 0.833 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.125, 0.500), stdev = 0.216
[info]   CI (99.9%): [≈ 0, 0.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 10.000), stdev = 3.782
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter
[info] # Run progress: 35.37% complete, ETA 00:14:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2316342.412 ops/s
[info] # Warmup Iteration   2: 2720764.131 ops/s
[info] # Warmup Iteration   3: 2759801.220 ops/s
[info] # Warmup Iteration   4: 2770661.377 ops/s
[info] # Warmup Iteration   5: 2768165.564 ops/s
[info] Iteration   1: 2764902.687 ops/s
[info]                  ·gc.alloc.rate:                   745.148 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.743 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2771819.701 ops/s
[info]                  ·gc.alloc.rate:                   747.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          984.640 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     558.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2791597.926 ops/s
[info]                  ·gc.alloc.rate:                   752.332 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     371.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2796707.584 ops/s
[info]                  ·gc.alloc.rate:                   753.733 MB/sec
[info]                  ·gc.alloc.rate.norm:              424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.263 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2783317.240 ops/s
[info]                  ·gc.alloc.rate:               750.108 MB/sec
[info]                  ·gc.alloc.rate.norm:          424.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 375.188 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter":
[info]   2781669.028 ±(99.9%) 51141.756 ops/s [Average]
[info]   (min, avg, max) = (2764902.687, 2781669.028, 2796707.584), stdev = 13281.352
[info]   CI (99.9%): [2730527.272, 2832810.784] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   749.672 ±(99.9%) 13.770 MB/sec [Average]
[info]   (min, avg, max) = (745.148, 749.672, 753.733), stdev = 3.576
[info]   CI (99.9%): [735.902, 763.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   424.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (424.000, 424.000, 424.000), stdev = 0.001
[info]   CI (99.9%): [424.000, 424.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.595 ±(99.9%) 559.953 MB/sec [Average]
[info]   (min, avg, max) = (653.743, 724.595, 984.640), stdev = 145.418
[info]   CI (99.9%): [164.642, 1284.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   409.948 ±(99.9%) 320.583 B/op [Average]
[info]   (min, avg, max) = (371.444, 409.948, 558.855), stdev = 83.254
[info]   CI (99.9%): [89.364, 730.531] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.047), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time":
[info]   14.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.800, 6.000), stdev = 2.168
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay
[info] # Run progress: 36.59% complete, ETA 00:13:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 87029.009 ops/s
[info] # Warmup Iteration   2: 174102.617 ops/s
[info] # Warmup Iteration   3: 175620.222 ops/s
[info] # Warmup Iteration   4: 174740.048 ops/s
[info] # Warmup Iteration   5: 176698.222 ops/s
[info] Iteration   1: 176097.324 ops/s
[info]                  ·gc.alloc.rate:                   1246.463 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.802 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     11800.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.372 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 174084.588 ops/s
[info]                  ·gc.alloc.rate:                   1232.240 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.815 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12026.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.753 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 177397.256 ops/s
[info]                  ·gc.alloc.rate:                   1255.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8897.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.369 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 175249.661 ops/s
[info]                  ·gc.alloc.rate:                   1240.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12057.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 174640.235 ops/s
[info]                  ·gc.alloc.rate:                   1236.029 MB/sec
[info]                  ·gc.alloc.rate.norm:              11136.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.339 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12147.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay":
[info]   175493.813 ±(99.9%) 5006.370 ops/s [Average]
[info]   (min, avg, max) = (174084.588, 175493.813, 177397.256), stdev = 1300.138
[info]   CI (99.9%): [170487.443, 180500.183] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1242.180 ±(99.9%) 35.488 MB/sec [Average]
[info]   (min, avg, max) = (1232.240, 1242.180, 1255.668), stdev = 9.216
[info]   CI (99.9%): [1206.692, 1277.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   11136.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (11136.002, 11136.002, 11136.003), stdev = 0.001
[info]   CI (99.9%): [11136.002, 11136.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1269.279 ±(99.9%) 574.090 MB/sec [Average]
[info]   (min, avg, max) = (1003.272, 1269.279, 1348.339), stdev = 149.089
[info]   CI (99.9%): [695.189, 1843.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   11386.022 ±(99.9%) 5379.147 B/op [Average]
[info]   (min, avg, max) = (8897.607, 11386.022, 12147.858), stdev = 1396.948
[info]   CI (99.9%): [6006.875, 16765.170] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.374 ±(99.9%) 0.889 B/op [Average]
[info]   (min, avg, max) = (0.187, 0.374, 0.753), stdev = 0.231
[info]   CI (99.9%): [≈ 0, 1.263] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readIterablesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 2.915
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce
[info] # Run progress: 37.80% complete, ETA 00:13:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196330.979 ops/s
[info] # Warmup Iteration   2: 455183.152 ops/s
[info] # Warmup Iteration   3: 463606.453 ops/s
[info] # Warmup Iteration   4: 464232.654 ops/s
[info] # Warmup Iteration   5: 465041.173 ops/s
[info] Iteration   1: 464760.756 ops/s
[info]                  ·gc.alloc.rate:                   1651.940 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5688.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.211 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 468000.073 ops/s
[info]                  ·gc.alloc.rate:                   1663.462 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.668 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5673.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 462976.136 ops/s
[info]                  ·gc.alloc.rate:                   1645.611 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.362 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5754.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 465969.407 ops/s
[info]                  ·gc.alloc.rate:                   1656.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4582.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.141 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 467369.572 ops/s
[info]                  ·gc.alloc.rate:                   1661.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5719.302 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.140 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce":
[info]   465815.189 ±(99.9%) 7793.550 ops/s [Average]
[info]   (min, avg, max) = (462976.136, 465815.189, 468000.073), stdev = 2023.960
[info]   CI (99.9%): [458021.639, 473608.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1655.699 ±(99.9%) 27.716 MB/sec [Average]
[info]   (min, avg, max) = (1645.611, 1655.699, 1663.462), stdev = 7.198
[info]   CI (99.9%): [1627.983, 1683.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.508 ±(99.9%) 574.040 MB/sec [Average]
[info]   (min, avg, max) = (1357.121, 1623.508, 1699.065), stdev = 149.076
[info]   CI (99.9%): [1049.468, 2197.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5483.422 ±(99.9%) 1943.864 B/op [Average]
[info]   (min, avg, max) = (4582.093, 5483.422, 5754.264), stdev = 504.815
[info]   CI (99.9%): [3539.558, 7427.287] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.098] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.141 ±(99.9%) 0.192 B/op [Average]
[info]   (min, avg, max) = (0.071, 0.141, 0.211), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.332] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson
[info] # Run progress: 39.02% complete, ETA 00:13:26
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 447756.125 ops/s
[info] # Warmup Iteration   2: 894924.904 ops/s
[info] # Warmup Iteration   3: 931918.645 ops/s
[info] # Warmup Iteration   4: 925307.700 ops/s
[info] # Warmup Iteration   5: 911201.120 ops/s
[info] Iteration   1: 908320.271 ops/s
[info]                  ·gc.alloc.rate:                   1071.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1727.346 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 884656.333 ops/s
[info]                  ·gc.alloc.rate:                   1043.722 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.686 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1783.028 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 912943.631 ops/s
[info]                  ·gc.alloc.rate:                   1077.031 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1733.513 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.036 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 906978.244 ops/s
[info]                  ·gc.alloc.rate:                   1069.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.274 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1750.686 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 910949.929 ops/s
[info]                  ·gc.alloc.rate:                   1074.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1746.533 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson":
[info]   904769.682 ±(99.9%) 44200.299 ops/s [Average]
[info]   (min, avg, max) = (884656.333, 904769.682, 912943.631), stdev = 11478.677
[info]   CI (99.9%): [860569.382, 948969.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1067.395 ±(99.9%) 52.026 MB/sec [Average]
[info]   (min, avg, max) = (1043.722, 1067.395, 1077.031), stdev = 13.511
[info]   CI (99.9%): [1015.369, 1119.420] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.000, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1005.296 ±(99.9%) 21.328 MB/sec [Average]
[info]   (min, avg, max) = (997.299, 1005.296, 1011.270), stdev = 5.539
[info]   CI (99.9%): [983.969, 1026.624] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1748.221 ±(99.9%) 83.315 B/op [Average]
[info]   (min, avg, max) = (1727.346, 1748.221, 1783.028), stdev = 21.637
[info]   CI (99.9%): [1664.907, 1831.536] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.087 ±(99.9%) 0.164 B/op [Average]
[info]   (min, avg, max) = (0.036, 0.087, 0.148), stdev = 0.043
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJackson:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 10.000), stdev = 1.789
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter
[info] # Run progress: 40.24% complete, ETA 00:13:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2552230.789 ops/s
[info] # Warmup Iteration   2: 3028334.036 ops/s
[info] # Warmup Iteration   3: 3053428.319 ops/s
[info] # Warmup Iteration   4: 3052080.620 ops/s
[info] # Warmup Iteration   5: 3095057.591 ops/s
[info] Iteration   1: 3069854.265 ops/s
[info]                  ·gc.alloc.rate:                   764.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          981.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     503.080 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 3071807.866 ops/s
[info]                  ·gc.alloc.rate:                   765.390 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.752 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     336.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 3040882.138 ops/s
[info]                  ·gc.alloc.rate:                   757.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.087 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     340.995 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 3053152.805 ops/s
[info]                  ·gc.alloc.rate:                   760.760 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     511.806 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 3052915.740 ops/s
[info]                  ·gc.alloc.rate:                   760.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.371 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     342.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter":
[info]   3057722.563 ±(99.9%) 49953.185 ops/s [Average]
[info]   (min, avg, max) = (3040882.138, 3057722.563, 3071807.866), stdev = 12972.683
[info]   CI (99.9%): [3007769.378, 3107675.748] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   761.868 ±(99.9%) 12.457 MB/sec [Average]
[info]   (min, avg, max) = (757.671, 761.868, 765.390), stdev = 3.235
[info]   CI (99.9%): [749.411, 774.325] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   791.021 ±(99.9%) 690.730 MB/sec [Average]
[info]   (min, avg, max) = (656.752, 791.021, 993.268), stdev = 179.380
[info]   CI (99.9%): [100.291, 1481.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   406.926 ±(99.9%) 353.634 B/op [Average]
[info]   (min, avg, max) = (336.360, 406.926, 511.806), stdev = 91.838
[info]   CI (99.9%): [53.292, 760.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.035 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.019, 0.032), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.054] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 7.000), stdev = 2.191
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay
[info] # Run progress: 41.46% complete, ETA 00:12:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 140127.633 ops/s
[info] # Warmup Iteration   2: 236887.619 ops/s
[info] # Warmup Iteration   3: 245507.928 ops/s
[info] # Warmup Iteration   4: 246163.224 ops/s
[info] # Warmup Iteration   5: 246447.054 ops/s
[info] Iteration   1: 246244.108 ops/s
[info]                  ·gc.alloc.rate:                   1285.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.545 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8455.949 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 246406.650 ops/s
[info]                  ·gc.alloc.rate:                   1286.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.779 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8509.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 249772.001 ops/s
[info]                  ·gc.alloc.rate:                   1304.380 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.804 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8439.129 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 252055.153 ops/s
[info]                  ·gc.alloc.rate:                   1316.189 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.837 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6297.429 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 252549.435 ops/s
[info]                  ·gc.alloc.rate:                   1318.867 MB/sec
[info]                  ·gc.alloc.rate.norm:              8216.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8406.708 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay":
[info]   249405.470 ±(99.9%) 11556.233 ops/s [Average]
[info]   (min, avg, max) = (246244.108, 249405.470, 252549.435), stdev = 3001.117
[info]   CI (99.9%): [237849.236, 260961.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1302.442 ±(99.9%) 60.225 MB/sec [Average]
[info]   (min, avg, max) = (1285.988, 1302.442, 1318.867), stdev = 15.640
[info]   CI (99.9%): [1242.217, 1362.666] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8216.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8216.002, 8216.002, 8216.002), stdev = 0.001
[info]   CI (99.9%): [8216.001, 8216.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.889 ±(99.9%) 565.272 MB/sec [Average]
[info]   (min, avg, max) = (1008.837, 1270.889, 1349.480), stdev = 146.799
[info]   CI (99.9%): [705.618, 1836.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8021.780 ±(99.9%) 3714.569 B/op [Average]
[info]   (min, avg, max) = (6297.429, 8021.780, 8509.684), stdev = 964.662
[info]   CI (99.9%): [4307.211, 11736.349] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.237 ±(99.9%) 0.427 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.237, 0.394), stdev = 0.111
[info]   CI (99.9%): [≈ 0, 0.664] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMapsPlay:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 11.000), stdev = 3.782
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson
[info] # Run progress: 42.68% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 179235.176 ops/s
[info] # Warmup Iteration   2: 663798.803 ops/s
[info] # Warmup Iteration   3: 677969.987 ops/s
[info] # Warmup Iteration   4: 681781.023 ops/s
[info] # Warmup Iteration   5: 682564.011 ops/s
[info] Iteration   1: 683488.394 ops/s
[info]                  ·gc.alloc.rate:                   886.281 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.301 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2277.125 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 680339.147 ops/s
[info]                  ·gc.alloc.rate:                   882.194 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.967 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2303.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.289 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 685386.764 ops/s
[info]                  ·gc.alloc.rate:               888.712 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      666.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1530.434 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 677487.695 ops/s
[info]                  ·gc.alloc.rate:                   878.468 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.592 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2330.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 678539.115 ops/s
[info]                  ·gc.alloc.rate:               879.823 MB/sec
[info]                  ·gc.alloc.rate.norm:          2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      671.059 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1555.950 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson":
[info]   681048.223 ±(99.9%) 12807.826 ops/s [Average]
[info]   (min, avg, max) = (677487.695, 681048.223, 685386.764), stdev = 3326.152
[info]   CI (99.9%): [668240.397, 693856.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   883.096 ±(99.9%) 16.633 MB/sec [Average]
[info]   (min, avg, max) = (878.468, 883.096, 888.712), stdev = 4.319
[info]   CI (99.9%): [866.463, 899.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   865.328 ±(99.9%) 690.805 MB/sec [Average]
[info]   (min, avg, max) = (666.723, 865.328, 1003.592), stdev = 179.400
[info]   CI (99.9%): [174.523, 1556.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1999.433 ±(99.9%) 1605.777 B/op [Average]
[info]   (min, avg, max) = (1530.434, 1999.433, 2330.564), stdev = 417.015
[info]   CI (99.9%): [393.656, 3605.210] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.200 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.125), stdev = 0.052
[info]   CI (99.9%): [≈ 0, 0.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.106 ±(99.9%) 0.462 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.106, 0.289), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.493
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter
[info] # Run progress: 43.90% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2013256.268 ops/s
[info] # Warmup Iteration   2: 2234602.214 ops/s
[info] # Warmup Iteration   3: 2279396.234 ops/s
[info] # Warmup Iteration   4: 2267620.270 ops/s
[info] # Warmup Iteration   5: 2257540.835 ops/s
[info] Iteration   1: 2261651.178 ops/s
[info]                  ·gc.alloc.rate:                   1069.523 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     688.183 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 2242543.411 ops/s
[info]                  ·gc.alloc.rate:                   1060.542 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     698.225 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.058 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 2192348.316 ops/s
[info]                  ·gc.alloc.rate:                   1036.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     956.943 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2236907.666 ops/s
[info]                  ·gc.alloc.rate:                   1057.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     706.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2264647.480 ops/s
[info]                  ·gc.alloc.rate:                   1070.952 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     700.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter":
[info]   2239619.610 ±(99.9%) 111639.836 ops/s [Average]
[info]   (min, avg, max) = (2192348.316, 2239619.610, 2264647.480), stdev = 28992.511
[info]   CI (99.9%): [2127979.775, 2351259.446] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1059.116 ±(99.9%) 52.840 MB/sec [Average]
[info]   (min, avg, max) = (1036.729, 1059.116, 1070.952), stdev = 13.722
[info]   CI (99.9%): [1006.276, 1111.956] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1066.187 ±(99.9%) 576.040 MB/sec [Average]
[info]   (min, avg, max) = (989.284, 1066.187, 1333.455), stdev = 149.596
[info]   CI (99.9%): [490.147, 1642.227] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   750.078 ±(99.9%) 446.022 B/op [Average]
[info]   (min, avg, max) = (688.183, 750.078, 956.943), stdev = 115.830
[info]   CI (99.9%): [304.056, 1196.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.074 B/op [Average]
[info]   (min, avg, max) = (0.014, 0.032, 0.058), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.106] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 8.000), stdev = 2.121
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay
[info] # Run progress: 45.12% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 128081.130 ops/s
[info] # Warmup Iteration   2: 211122.968 ops/s
[info] # Warmup Iteration   3: 223483.456 ops/s
[info] # Warmup Iteration   4: 223777.096 ops/s
[info] # Warmup Iteration   5: 223339.137 ops/s
[info] Iteration   1: 225497.087 ops/s
[info]                  ·gc.alloc.rate:                   1187.931 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1319.478 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9205.784 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.436 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 223331.208 ops/s
[info]                  ·gc.alloc.rate:                   1176.508 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.261 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7011.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.440 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 223814.514 ops/s
[info]                  ·gc.alloc.rate:                   1179.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9382.989 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.439 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 218725.228 ops/s
[info]                  ·gc.alloc.rate:                   1152.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.509 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7233.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.300 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 220426.677 ops/s
[info]                  ·gc.alloc.rate:                   1161.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              8288.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.115 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9607.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.149 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay":
[info]   222358.943 ±(99.9%) 10518.932 ops/s [Average]
[info]   (min, avg, max) = (218725.228, 222358.943, 225497.087), stdev = 2731.733
[info]   CI (99.9%): [211840.010, 232877.875] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1171.376 ±(99.9%) 55.545 MB/sec [Average]
[info]   (min, avg, max) = (1152.149, 1171.376, 1187.931), stdev = 14.425
[info]   CI (99.9%): [1115.831, 1226.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8288.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8288.002, 8288.002, 8288.002), stdev = 0.001
[info]   CI (99.9%): [8288.002, 8288.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.241 ±(99.9%) 703.605 MB/sec [Average]
[info]   (min, avg, max) = (995.261, 1200.241, 1346.115), stdev = 182.724
[info]   CI (99.9%): [496.637, 1903.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8488.145 ±(99.9%) 4842.242 B/op [Average]
[info]   (min, avg, max) = (7011.194, 8488.145, 9607.615), stdev = 1257.515
[info]   CI (99.9%): [3645.904, 13330.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.353 ±(99.9%) 0.496 B/op [Average]
[info]   (min, avg, max) = (0.149, 0.353, 0.440), stdev = 0.129
[info]   CI (99.9%): [≈ 0, 0.849] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.000, 10.000), stdev = 3.082
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce
[info] # Run progress: 46.34% complete, ETA 00:11:49
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 134269.792 ops/s
[info] # Warmup Iteration   2: 439277.524 ops/s
[info] # Warmup Iteration   3: 456002.555 ops/s
[info] # Warmup Iteration   4: 455048.581 ops/s
[info] # Warmup Iteration   5: 458309.638 ops/s
[info] Iteration   1: 462883.178 ops/s
[info]                  ·gc.alloc.rate:                   1372.190 MB/sec
[info]                  ·gc.alloc.rate.norm:              4664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.423 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4539.035 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.071 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 456556.463 ops/s
[info]                  ·gc.alloc.rate:               1353.497 MB/sec
[info]                  ·gc.alloc.rate.norm:          4664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1342.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4624.922 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   3: 456858.039 ops/s
[info]                  ·gc.alloc.rate:                   1354.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              4664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5797.006 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 456003.450 ops/s
[info]                  ·gc.alloc.rate:                   1352.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              4664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.400 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4665.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.144 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 457945.958 ops/s
[info]                  ·gc.alloc.rate:                   1357.627 MB/sec
[info]                  ·gc.alloc.rate.norm:              4664.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.542 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4656.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce":
[info]   458049.418 ±(99.9%) 10756.024 ops/s [Average]
[info]   (min, avg, max) = (456003.450, 458049.418, 462883.178), stdev = 2793.305
[info]   CI (99.9%): [447293.393, 468805.442] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate":
[info]   1358.045 ±(99.9%) 31.446 MB/sec [Average]
[info]   (min, avg, max) = (1352.091, 1358.045, 1372.190), stdev = 8.167
[info]   CI (99.9%): [1326.599, 1389.492] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm":
[info]   4664.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4664.001, 4664.001, 4664.001), stdev = 0.001
[info]   CI (99.9%): [4664.001, 4664.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1413.893 ±(99.9%) 582.126 MB/sec [Average]
[info]   (min, avg, max) = (1335.423, 1413.893, 1683.943), stdev = 151.176
[info]   CI (99.9%): [831.767, 1996.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4856.573 ±(99.9%) 2033.449 B/op [Average]
[info]   (min, avg, max) = (4539.035, 4856.573, 5797.006), stdev = 528.080
[info]   CI (99.9%): [2823.124, 6890.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.072 ±(99.9%) 0.196 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.072, 0.144), stdev = 0.051
[info]   CI (99.9%): [≈ 0, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.200, 7.000), stdev = 1.304
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson
[info] # Run progress: 47.56% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 633692.845 ops/s
[info] # Warmup Iteration   2: 976038.641 ops/s
[info] # Warmup Iteration   3: 981930.260 ops/s
[info] # Warmup Iteration   4: 984145.957 ops/s
[info] # Warmup Iteration   5: 985086.703 ops/s
[info] Iteration   1: 980369.511 ops/s
[info]                  ·gc.alloc.rate:                   752.753 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.964 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1588.670 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 977580.197 ops/s
[info]                  ·gc.alloc.rate:                   750.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.089 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1067.108 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 983315.486 ops/s
[info]                  ·gc.alloc.rate:                   754.996 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.402 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1064.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.067 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 967260.489 ops/s
[info]                  ·gc.alloc.rate:               742.705 MB/sec
[info]                  ·gc.alloc.rate.norm:          1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      667.414 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1085.541 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 988564.347 ops/s
[info]                  ·gc.alloc.rate:                   759.033 MB/sec
[info]                  ·gc.alloc.rate.norm:              1208.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1004.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1598.830 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson":
[info]   979418.006 ±(99.9%) 30498.828 ops/s [Average]
[info]   (min, avg, max) = (967260.489, 979418.006, 988564.347), stdev = 7920.449
[info]   CI (99.9%): [948919.178, 1009916.834] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   752.025 ±(99.9%) 23.364 MB/sec [Average]
[info]   (min, avg, max) = (742.705, 752.025, 759.033), stdev = 6.068
[info]   CI (99.9%): [728.661, 775.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1208.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1208.000, 1208.000, 1208.000), stdev = 0.001
[info]   CI (99.9%): [1208.000, 1208.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   798.095 ±(99.9%) 700.490 MB/sec [Average]
[info]   (min, avg, max) = (663.089, 798.095, 1004.607), stdev = 181.915
[info]   CI (99.9%): [97.606, 1498.585] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1280.960 ±(99.9%) 1100.029 B/op [Average]
[info]   (min, avg, max) = (1064.650, 1280.960, 1598.830), stdev = 285.674
[info]   CI (99.9%): [180.931, 2380.989] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.060 ±(99.9%) 0.191 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.060, 0.134), stdev = 0.050
[info]   CI (99.9%): [≈ 0, 0.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.000, 6.000), stdev = 1.000
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter
[info] # Run progress: 48.78% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2878054.384 ops/s
[info] # Warmup Iteration   2: 3291278.776 ops/s
[info] # Warmup Iteration   3: 3310207.551 ops/s
[info] # Warmup Iteration   4: 3344690.350 ops/s
[info] # Warmup Iteration   5: 3333832.357 ops/s
[info] Iteration   1: 3348309.845 ops/s
[info]                  ·gc.alloc.rate:      102.157 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 3347706.779 ops/s
[info]                  ·gc.alloc.rate:      102.138 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3324559.944 ops/s
[info]                  ·gc.alloc.rate:                   101.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     121.098 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.010 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3251245.139 ops/s
[info]                  ·gc.alloc.rate:      99.198 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3272127.332 ops/s
[info]                  ·gc.alloc.rate:                   99.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     123.039 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter":
[info]   3308789.808 ±(99.9%) 171996.968 ops/s [Average]
[info]   (min, avg, max) = (3251245.139, 3308789.808, 3348309.845), stdev = 44667.066
[info]   CI (99.9%): [3136792.840, 3480786.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   100.952 ±(99.9%) 5.243 MB/sec [Average]
[info]   (min, avg, max) = (99.198, 100.952, 102.157), stdev = 1.362
[info]   CI (99.9%): [95.708, 106.195] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.361 ±(99.9%) 539.720 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.361, 255.902), stdev = 140.163
[info]   CI (99.9%): [≈ 0, 642.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   48.828 ±(99.9%) 257.467 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 48.828, 123.039), stdev = 66.863
[info]   CI (99.9%): [≈ 0, 306.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.006 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.006, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.017 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.010), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.020] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 5.000), stdev = 2.302
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay
[info] # Run progress: 50.00% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 94558.389 ops/s
[info] # Warmup Iteration   2: 161976.987 ops/s
[info] # Warmup Iteration   3: 165104.572 ops/s
[info] # Warmup Iteration   4: 163873.215 ops/s
[info] # Warmup Iteration   5: 164506.280 ops/s
[info] Iteration   1: 166436.988 ops/s
[info]                  ·gc.alloc.rate:                   1130.684 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9344.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 163737.523 ops/s
[info]                  ·gc.alloc.rate:                   1112.348 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.932 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9550.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.800 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   3: 165753.079 ops/s
[info]                  ·gc.alloc.rate:                   1126.048 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12649.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.791 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 166578.837 ops/s
[info]                  ·gc.alloc.rate:                   1131.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.928 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9481.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.197 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 165392.862 ops/s
[info]                  ·gc.alloc.rate:                   1123.621 MB/sec
[info]                  ·gc.alloc.rate.norm:              10688.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.820 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12792.073 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay":
[info]   165579.858 ±(99.9%) 4386.947 ops/s [Average]
[info]   (min, avg, max) = (163737.523, 165579.858, 166578.837), stdev = 1139.276
[info]   CI (99.9%): [161192.911, 169966.805] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1124.873 ±(99.9%) 29.811 MB/sec [Average]
[info]   (min, avg, max) = (1112.348, 1124.873, 1131.666), stdev = 7.742
[info]   CI (99.9%): [1095.063, 1154.684] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10688.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10688.003, 10688.003, 10688.003), stdev = 0.001
[info]   CI (99.9%): [10688.003, 10688.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1132.808 ±(99.9%) 724.544 MB/sec [Average]
[info]   (min, avg, max) = (988.604, 1132.808, 1344.820), stdev = 188.162
[info]   CI (99.9%): [408.264, 1857.352] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10763.762 ±(99.9%) 6888.661 B/op [Average]
[info]   (min, avg, max) = (9344.963, 10763.762, 12792.073), stdev = 1788.963
[info]   CI (99.9%): [3875.101, 17652.423] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.516 ±(99.9%) 1.032 B/op [Average]
[info]   (min, avg, max) = (0.197, 0.516, 0.800), stdev = 0.268
[info]   CI (99.9%): [≈ 0, 1.548] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.000, 14.000), stdev = 4.796
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce
[info] # Run progress: 51.22% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3202.132 ops/s
[info] # Warmup Iteration   2: 4394.954 ops/s
[info] # Warmup Iteration   3: 6131.479 ops/s
[info] # Warmup Iteration   4: 7443.063 ops/s
[info] # Warmup Iteration   5: 7434.614 ops/s
[info] Iteration   1: 7395.073 ops/s
[info]                  ·gc.alloc.rate:                   1045.515 MB/sec
[info]                  ·gc.alloc.rate.norm:              222408.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     211005.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.186 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 39.551 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 7493.575 ops/s
[info]                  ·gc.alloc.rate:                   1059.451 MB/sec
[info]                  ·gc.alloc.rate.norm:              222408.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.363 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     279070.053 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.114 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 7245.282 ops/s
[info]                  ·gc.alloc.rate:               1024.314 MB/sec
[info]                  ·gc.alloc.rate.norm:          222408.060 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.907 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217542.986 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     17.000 ms
[info] Iteration   4: 7386.088 ops/s
[info]                  ·gc.alloc.rate:                   1044.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              222408.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.230 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     214313.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.871 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 7327.389 ops/s
[info]                  ·gc.alloc.rate:                   1036.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              222430.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216581.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 13.411 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce":
[info]   7369.482 ±(99.9%) 352.535 ops/s [Average]
[info]   (min, avg, max) = (7245.282, 7369.482, 7493.575), stdev = 91.552
[info]   CI (99.9%): [7016.947, 7722.016] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate":
[info]   1041.904 ±(99.9%) 49.857 MB/sec [Average]
[info]   (min, avg, max) = (1024.314, 1041.904, 1059.451), stdev = 12.948
[info]   CI (99.9%): [992.048, 1091.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm":
[info]   222412.449 ±(99.9%) 37.804 B/op [Average]
[info]   (min, avg, max) = (222408.058, 222412.449, 222430.011), stdev = 9.818
[info]   CI (99.9%): [222374.645, 222450.253] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1067.636 ±(99.9%) 563.931 MB/sec [Average]
[info]   (min, avg, max) = (991.912, 1067.636, 1329.363), stdev = 146.451
[info]   CI (99.9%): [503.705, 1631.567] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   227702.735 ±(99.9%) 110995.646 B/op [Average]
[info]   (min, avg, max) = (211005.188, 227702.735, 279070.053), stdev = 28825.217
[info]   CI (99.9%): [116707.088, 338698.381] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.267 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.071, 0.186), stdev = 0.069
[info]   CI (99.9%): [≈ 0, 0.338] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   14.989 ±(99.9%) 56.835 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 14.989, 39.551), stdev = 14.760
[info]   CI (99.9%): [≈ 0, 71.824] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.800, 17.000), stdev = 5.848
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson
[info] # Run progress: 52.44% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2913.778 ops/s
[info] # Warmup Iteration   2: 11609.096 ops/s
[info] # Warmup Iteration   3: 11825.833 ops/s
[info] # Warmup Iteration   4: 11788.193 ops/s
[info] # Warmup Iteration   5: 11779.497 ops/s
[info] Iteration   1: 11831.136 ops/s
[info]                  ·gc.alloc.rate:      187.470 MB/sec
[info]                  ·gc.alloc.rate.norm: 24928.043 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 11686.843 ops/s
[info]                  ·gc.alloc.rate:               185.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          24928.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.900 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34447.188 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 11755.818 ops/s
[info]                  ·gc.alloc.rate:               186.417 MB/sec
[info]                  ·gc.alloc.rate.norm:          24928.037 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.526 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 34169.483 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 11877.260 ops/s
[info]                  ·gc.alloc.rate:      188.196 MB/sec
[info]                  ·gc.alloc.rate.norm: 24928.036 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 11820.998 ops/s
[info]                  ·gc.alloc.rate:                   187.302 MB/sec
[info]                  ·gc.alloc.rate.norm:              24928.050 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.198 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     43014.409 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.772 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson":
[info]   11794.411 ±(99.9%) 285.442 ops/s [Average]
[info]   (min, avg, max) = (11686.843, 11794.411, 11877.260), stdev = 74.128
[info]   CI (99.9%): [11508.969, 12079.853] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate":
[info]   186.914 ±(99.9%) 4.449 MB/sec [Average]
[info]   (min, avg, max) = (185.185, 186.914, 188.196), stdev = 1.155
[info]   CI (99.9%): [182.464, 191.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   24928.041 ±(99.9%) 0.023 B/op [Average]
[info]   (min, avg, max) = (24928.036, 24928.041, 24928.050), stdev = 0.006
[info]   CI (99.9%): [24928.018, 24928.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   166.925 ±(99.9%) 596.277 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 166.925, 323.198), stdev = 154.851
[info]   CI (99.9%): [≈ 0, 763.202] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   22326.216 ±(99.9%) 79665.117 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 22326.216, 43014.409), stdev = 20688.778
[info]   CI (99.9%): [≈ 0, 101991.333] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.554 ±(99.9%) 4.773 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.554, 2.772), stdev = 1.239
[info]   CI (99.9%): [≈ 0, 5.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time":
[info]   6.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.200, 3.000), stdev = 1.304
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter
[info] # Run progress: 53.66% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 9662.267 ops/s
[info] # Warmup Iteration   2: 12547.398 ops/s
[info] # Warmup Iteration   3: 17908.825 ops/s
[info] # Warmup Iteration   4: 20450.104 ops/s
[info] # Warmup Iteration   5: 21064.131 ops/s
[info] Iteration   1: 20972.557 ops/s
[info]                  ·gc.alloc.rate:                   230.785 MB/sec
[info]                  ·gc.alloc.rate.norm:              17312.030 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19195.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.564 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 20876.123 ops/s
[info]                  ·gc.alloc.rate:               229.710 MB/sec
[info]                  ·gc.alloc.rate.norm:          17310.453 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19284.156 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 20992.719 ops/s
[info]                  ·gc.alloc.rate:                   230.994 MB/sec
[info]                  ·gc.alloc.rate.norm:              17312.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19177.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.342 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 20855.896 ops/s
[info]                  ·gc.alloc.rate:                   229.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              17312.021 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.208 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     24531.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.239 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 168.877 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 21181.583 ops/s
[info]                  ·gc.alloc.rate:      233.086 MB/sec
[info]                  ·gc.alloc.rate.norm: 17312.020 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter":
[info]   20975.776 ±(99.9%) 498.193 ops/s [Average]
[info]   (min, avg, max) = (20855.896, 20975.776, 21181.583), stdev = 129.379
[info]   CI (99.9%): [20477.583, 21473.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate":
[info]   230.815 ±(99.9%) 5.494 MB/sec [Average]
[info]   (min, avg, max) = (229.500, 230.815, 233.086), stdev = 1.427
[info]   CI (99.9%): [225.321, 236.309] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   17311.709 ±(99.9%) 2.704 B/op [Average]
[info]   (min, avg, max) = (17310.453, 17311.709, 17312.030), stdev = 0.702
[info]   CI (99.9%): [17309.005, 17314.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   218.579 ±(99.9%) 484.493 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 218.579, 325.208), stdev = 125.821
[info]   CI (99.9%): [≈ 0, 703.072] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   16437.858 ±(99.9%) 36475.917 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 16437.858, 24531.621), stdev = 9472.680
[info]   CI (99.9%): [≈ 0, 52913.775] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.458 ±(99.9%) 3.833 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.458, 2.239), stdev = 0.995
[info]   CI (99.9%): [≈ 0, 4.291] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   34.557 ±(99.9%) 289.162 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 34.557, 168.877), stdev = 75.094
[info]   CI (99.9%): [≈ 0, 323.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time":
[info]   13.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.600, 4.000), stdev = 1.673
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce
[info] # Run progress: 54.88% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 998962.858 ops/s
[info] # Warmup Iteration   2: 1386663.152 ops/s
[info] # Warmup Iteration   3: 1411011.023 ops/s
[info] # Warmup Iteration   4: 1408610.149 ops/s
[info] # Warmup Iteration   5: 1383250.765 ops/s
[info] Iteration   1: 1399972.172 ops/s
[info]                  ·gc.alloc.rate:                   1516.357 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.194 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1503.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 1397375.945 ops/s
[info]                  ·gc.alloc.rate:                   1513.568 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1893.720 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1399589.009 ops/s
[info]                  ·gc.alloc.rate:               1515.897 MB/sec
[info]                  ·gc.alloc.rate.norm:          1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1350.503 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1518.083 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Iteration   4: 1400394.870 ops/s
[info]                  ·gc.alloc.rate:                   1516.814 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.096 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1902.037 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 1371332.436 ops/s
[info]                  ·gc.alloc.rate:                   1485.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              1704.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1556.625 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.048 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce":
[info]   1393732.887 ±(99.9%) 48426.993 ops/s [Average]
[info]   (min, avg, max) = (1371332.436, 1393732.887, 1400394.870), stdev = 12576.336
[info]   CI (99.9%): [1345305.893, 1442159.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1509.576 ±(99.9%) 52.596 MB/sec [Average]
[info]   (min, avg, max) = (1485.245, 1509.576, 1516.814), stdev = 13.659
[info]   CI (99.9%): [1456.980, 1562.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1704.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1704.000, 1704.000, 1704.000), stdev = 0.001
[info]   CI (99.9%): [1704.000, 1704.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1484.133 ±(99.9%) 715.801 MB/sec [Average]
[info]   (min, avg, max) = (1338.194, 1484.133, 1693.096), stdev = 185.891
[info]   CI (99.9%): [768.332, 2199.935] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1674.851 ±(99.9%) 787.578 B/op [Average]
[info]   (min, avg, max) = (1503.790, 1674.851, 1902.037), stdev = 204.531
[info]   CI (99.9%): [887.273, 2462.429] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.033 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.048), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.114] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 10.800, 19.000), stdev = 5.263
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson
[info] # Run progress: 56.10% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2397484.401 ops/s
[info] # Warmup Iteration   2: 3643031.028 ops/s
[info] # Warmup Iteration   3: 3675718.196 ops/s
[info] # Warmup Iteration   4: 3733409.554 ops/s
[info] # Warmup Iteration   5: 3745488.720 ops/s
[info] Iteration   1: 3712149.442 ops/s
[info]                  ·gc.alloc.rate:                   1019.288 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     420.406 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 3695657.626 ops/s
[info]                  ·gc.alloc.rate:                   1014.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     424.544 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3709554.005 ops/s
[info]                  ·gc.alloc.rate:                   1018.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.864 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     566.973 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 3668721.791 ops/s
[info]                  ·gc.alloc.rate:               1007.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 431.948 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 3676570.956 ops/s
[info]                  ·gc.alloc.rate:                   1009.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.182 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.009 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson":
[info]   3692530.764 ±(99.9%) 74717.456 ops/s [Average]
[info]   (min, avg, max) = (3668721.791, 3692530.764, 3712149.442), stdev = 19403.886
[info]   CI (99.9%): [3617813.308, 3767248.220] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1013.942 ±(99.9%) 20.444 MB/sec [Average]
[info]   (min, avg, max) = (1007.429, 1013.942, 1019.288), stdev = 5.309
[info]   CI (99.9%): [993.498, 1034.387] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1068.679 ±(99.9%) 577.976 MB/sec [Average]
[info]   (min, avg, max) = (991.933, 1068.679, 1336.864), stdev = 150.099
[info]   CI (99.9%): [490.703, 1646.655] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   455.211 ±(99.9%) 241.350 B/op [Average]
[info]   (min, avg, max) = (420.406, 455.211, 566.973), stdev = 62.678
[info]   CI (99.9%): [213.861, 696.560] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.007 ±(99.9%) 0.015 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.007, 0.009), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.022] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 10.000), stdev = 3.317
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 57.32% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13322898.171 ops/s
[info] # Warmup Iteration   2: 16018757.398 ops/s
[info] # Warmup Iteration   3: 15448721.831 ops/s
[info] # Warmup Iteration   4: 15556842.876 ops/s
[info] # Warmup Iteration   5: 15605708.601 ops/s
[info] Iteration   1: 15563445.161 ops/s
[info]                  ·gc.alloc.rate:                   474.833 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.739 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     65.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.002 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 15385841.314 ops/s
[info]                  ·gc.alloc.rate:               469.437 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.357 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Iteration   3: 15445750.158 ops/s
[info]                  ·gc.alloc.rate:                   471.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     33.227 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.004 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 15386839.058 ops/s
[info]                  ·gc.alloc.rate:                   469.470 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     66.845 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.006 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 15525027.071 ops/s
[info]                  ·gc.alloc.rate:               473.670 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      328.212 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 33.260 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter":
[info]   15461380.552 ±(99.9%) 310299.452 ops/s [Average]
[info]   (min, avg, max) = (15385841.314, 15461380.552, 15563445.161), stdev = 80583.782
[info]   CI (99.9%): [15151081.100, 15771680.004] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   471.736 ±(99.9%) 9.427 MB/sec [Average]
[info]   (min, avg, max) = (469.437, 471.736, 474.833), stdev = 2.448
[info]   CI (99.9%): [462.309, 481.162] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.238 ±(99.9%) 687.306 MB/sec [Average]
[info]   (min, avg, max) = (326.227, 457.238, 653.783), stdev = 178.491
[info]   CI (99.9%): [≈ 0, 1144.543] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   46.514 ±(99.9%) 69.787 B/op [Average]
[info]   (min, avg, max) = (33.227, 46.514, 66.845), stdev = 18.123
[info]   CI (99.9%): [≈ 0, 116.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.003 ±(99.9%) 0.011 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.003, 0.006), stdev = 0.003
[info]   CI (99.9%): [≈ 0, 0.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 5.000), stdev = 2.408
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay
[info] # Run progress: 58.54% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 555493.882 ops/s
[info] # Warmup Iteration   2: 845313.940 ops/s
[info] # Warmup Iteration   3: 850167.844 ops/s
[info] # Warmup Iteration   4: 846758.249 ops/s
[info] # Warmup Iteration   5: 847423.235 ops/s
[info] Iteration   1: 844977.482 ops/s
[info]                  ·gc.alloc.rate:                   1250.331 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.133 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2465.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.116 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 849175.646 ops/s
[info]                  ·gc.alloc.rate:                   1256.553 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1850.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.154 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 833440.588 ops/s
[info]                  ·gc.alloc.rate:                   1233.212 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.110 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2526.022 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.118 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         15.000 ms
[info] Iteration   4: 839239.110 ops/s
[info]                  ·gc.alloc.rate:                   1241.843 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2520.979 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 845893.500 ops/s
[info]                  ·gc.alloc.rate:                   1251.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              2328.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.493 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2509.922 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay":
[info]   842545.265 ±(99.9%) 23963.423 ops/s [Average]
[info]   (min, avg, max) = (833440.588, 842545.265, 849175.646), stdev = 6223.225
[info]   CI (99.9%): [818581.842, 866508.689] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1246.724 ±(99.9%) 35.531 MB/sec [Average]
[info]   (min, avg, max) = (1233.212, 1246.724, 1256.553), stdev = 9.227
[info]   CI (99.9%): [1211.193, 1282.255] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2328.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2328.001, 2328.001, 2328.001), stdev = 0.001
[info]   CI (99.9%): [2328.000, 2328.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1271.025 ±(99.9%) 587.558 MB/sec [Average]
[info]   (min, avg, max) = (998.605, 1271.025, 1349.493), stdev = 152.587
[info]   CI (99.9%): [683.467, 1858.583] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2374.488 ±(99.9%) 1132.526 B/op [Average]
[info]   (min, avg, max) = (1850.104, 2374.488, 2526.022), stdev = 294.113
[info]   CI (99.9%): [1241.962, 3507.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.101, 0.154), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.271] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.600, 15.000), stdev = 5.505
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce
[info] # Run progress: 59.76% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 417069.055 ops/s
[info] # Warmup Iteration   2: 701739.723 ops/s
[info] # Warmup Iteration   3: 721533.335 ops/s
[info] # Warmup Iteration   4: 726438.385 ops/s
[info] # Warmup Iteration   5: 732085.784 ops/s
[info] Iteration   1: 732392.186 ops/s
[info]                  ·gc.alloc.rate:                   1769.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2010.168 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4317.365 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.179 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 734340.508 ops/s
[info]                  ·gc.alloc.rate:                   1773.707 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.308 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3610.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 723495.501 ops/s
[info]                  ·gc.alloc.rate:                   1747.520 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1691.377 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3677.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 723975.825 ops/s
[info]                  ·gc.alloc.rate:                   1748.633 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.011 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3685.647 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 719043.500 ops/s
[info]                  ·gc.alloc.rate:                   1736.788 MB/sec
[info]                  ·gc.alloc.rate.norm:              3800.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1698.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3716.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.046 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce":
[info]   726649.504 ±(99.9%) 24886.418 ops/s [Average]
[info]   (min, avg, max) = (719043.500, 726649.504, 734340.508), stdev = 6462.924
[info]   CI (99.9%): [701763.086, 751535.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1755.186 ±(99.9%) 60.331 MB/sec [Average]
[info]   (min, avg, max) = (1736.788, 1755.186, 1773.707), stdev = 15.668
[info]   CI (99.9%): [1694.855, 1815.518] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3800.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3800.001, 3800.001, 3800.001), stdev = 0.001
[info]   CI (99.9%): [3800.001, 3800.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1756.317 ±(99.9%) 546.783 MB/sec [Average]
[info]   (min, avg, max) = (1685.308, 1756.317, 2010.168), stdev = 141.998
[info]   CI (99.9%): [1209.534, 2303.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3801.652 ±(99.9%) 1120.063 B/op [Average]
[info]   (min, avg, max) = (3610.615, 3801.652, 4317.365), stdev = 290.877
[info]   CI (99.9%): [2681.590, 4921.715] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.099 ±(99.9%) 0.281 B/op [Average]
[info]   (min, avg, max) = (0.045, 0.099, 0.179), stdev = 0.073
[info]   CI (99.9%): [≈ 0, 0.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.count":
[info]   26.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.200, 6.000), stdev = 0.447
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.200, 10.000), stdev = 2.387
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson
[info] # Run progress: 60.98% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1469019.155 ops/s
[info] # Warmup Iteration   2: 2562387.191 ops/s
[info] # Warmup Iteration   3: 2598662.793 ops/s
[info] # Warmup Iteration   4: 2625173.097 ops/s
[info] # Warmup Iteration   5: 2577414.731 ops/s
[info] Iteration   1: 2591503.357 ops/s
[info]                  ·gc.alloc.rate:                   1502.275 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     813.373 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2602759.647 ops/s
[info]                  ·gc.alloc.rate:                   1508.783 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1683.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1017.502 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2607858.203 ops/s
[info]                  ·gc.alloc.rate:                   1511.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1351.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     815.328 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2590332.581 ops/s
[info]                  ·gc.alloc.rate:                   1501.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.073 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1028.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   5: 2558482.707 ops/s
[info]                  ·gc.alloc.rate:                   1483.069 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1357.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     834.746 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson":
[info]   2590187.299 ±(99.9%) 73999.996 ops/s [Average]
[info]   (min, avg, max) = (2558482.707, 2590187.299, 2607858.203), stdev = 19217.564
[info]   CI (99.9%): [2516187.303, 2664187.295] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1501.499 ±(99.9%) 42.981 MB/sec [Average]
[info]   (min, avg, max) = (1483.069, 1501.499, 1511.747), stdev = 11.162
[info]   CI (99.9%): [1458.518, 1544.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1485.230 ±(99.9%) 715.783 MB/sec [Average]
[info]   (min, avg, max) = (1339.813, 1485.230, 1694.073), stdev = 185.887
[info]   CI (99.9%): [769.447, 2201.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   901.967 ±(99.9%) 427.623 B/op [Average]
[info]   (min, avg, max) = (813.373, 901.967, 1028.885), stdev = 111.052
[info]   CI (99.9%): [474.343, 1329.590] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.025, 0.042), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.015 ±(99.9%) 0.022 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.015, 0.025), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.037] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJackson:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 8.400, 13.000), stdev = 3.847
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter
[info] # Run progress: 62.20% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4205117.245 ops/s
[info] # Warmup Iteration   2: 4642022.653 ops/s
[info] # Warmup Iteration   3: 4730347.820 ops/s
[info] # Warmup Iteration   4: 4738043.827 ops/s
[info] # Warmup Iteration   5: 4699983.179 ops/s
[info] Iteration   1: 4660700.828 ops/s
[info]                  ·gc.alloc.rate:                   1279.798 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1327.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.114 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         19.000 ms
[info] Iteration   2: 4724060.338 ops/s
[info]                  ·gc.alloc.rate:                   1297.176 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1335.515 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     444.768 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 4703436.603 ops/s
[info]                  ·gc.alloc.rate:                   1291.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     448.935 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 4754466.262 ops/s
[info]                  ·gc.alloc.rate:                   1305.496 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.425 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     445.875 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 4736769.314 ops/s
[info]                  ·gc.alloc.rate:                   1300.655 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.122 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     449.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter":
[info]   4715886.669 ±(99.9%) 138726.895 ops/s [Average]
[info]   (min, avg, max) = (4660700.828, 4715886.669, 4754466.262), stdev = 36026.934
[info]   CI (99.9%): [4577159.774, 4854613.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1294.930 ±(99.9%) 38.024 MB/sec [Average]
[info]   (min, avg, max) = (1279.798, 1294.930, 1305.496), stdev = 9.875
[info]   CI (99.9%): [1256.907, 1332.954] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1340.951 ±(99.9%) 37.420 MB/sec [Average]
[info]   (min, avg, max) = (1327.534, 1340.951, 1352.122), stdev = 9.718
[info]   CI (99.9%): [1303.531, 1378.370] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   447.357 ±(99.9%) 7.452 B/op [Average]
[info]   (min, avg, max) = (444.768, 447.357, 449.095), stdev = 1.935
[info]   CI (99.9%): [439.905, 454.810] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.041 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.028), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.059] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 19.000), stdev = 6.140
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay
[info] # Run progress: 63.41% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 173254.707 ops/s
[info] # Warmup Iteration   2: 322320.649 ops/s
[info] # Warmup Iteration   3: 328297.239 ops/s
[info] # Warmup Iteration   4: 330068.161 ops/s
[info] # Warmup Iteration   5: 325173.959 ops/s
[info] Iteration   1: 325882.838 ops/s
[info]                  ·gc.alloc.rate:                   1163.378 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6365.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 327526.906 ops/s
[info]                  ·gc.alloc.rate:                   1169.210 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.337 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4780.849 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 327911.385 ops/s
[info]                  ·gc.alloc.rate:                   1170.524 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.169 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6401.145 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.200 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 326672.466 ops/s
[info]                  ·gc.alloc.rate:                   1166.122 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4842.929 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 327024.144 ops/s
[info]                  ·gc.alloc.rate:                   1167.434 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.211 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6476.016 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay":
[info]   327003.548 ±(99.9%) 3022.267 ops/s [Average]
[info]   (min, avg, max) = (325882.838, 327003.548, 327911.385), stdev = 784.873
[info]   CI (99.9%): [323981.281, 330025.815] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1167.334 ±(99.9%) 10.689 MB/sec [Average]
[info]   (min, avg, max) = (1163.378, 1167.334, 1170.524), stdev = 2.776
[info]   CI (99.9%): [1156.644, 1178.023] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1199.985 ±(99.9%) 702.481 MB/sec [Average]
[info]   (min, avg, max) = (995.337, 1199.985, 1346.211), stdev = 182.432
[info]   CI (99.9%): [497.504, 1902.466] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5773.258 ±(99.9%) 3383.899 B/op [Average]
[info]   (min, avg, max) = (4780.849, 5773.258, 6476.016), stdev = 878.788
[info]   CI (99.9%): [2389.359, 9157.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.180 ±(99.9%) 0.502 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.180, 0.400), stdev = 0.130
[info]   CI (99.9%): [≈ 0, 0.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeArraysPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.408
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson
[info] # Run progress: 64.63% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1509717.493 ops/s
[info] # Warmup Iteration   2: 2075098.708 ops/s
[info] # Warmup Iteration   3: 2054969.133 ops/s
[info] # Warmup Iteration   4: 2031637.963 ops/s
[info] # Warmup Iteration   5: 2046681.110 ops/s
[info] Iteration   1: 2053212.613 ops/s
[info]                  ·gc.alloc.rate:               1085.777 MB/sec
[info]                  ·gc.alloc.rate.norm:          832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1326.134 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1016.179 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 2032873.770 ops/s
[info]                  ·gc.alloc.rate:                   1075.068 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.287 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     774.901 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2028790.690 ops/s
[info]                  ·gc.alloc.rate:                   1072.889 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.622 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     779.836 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 2043784.482 ops/s
[info]                  ·gc.alloc.rate:                   1080.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.917 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     776.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 2064957.952 ops/s
[info]                  ·gc.alloc.rate:                   1092.023 MB/sec
[info]                  ·gc.alloc.rate.norm:              832.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.470 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1028.146 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.016 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson":
[info]   2044723.902 ±(99.9%) 57005.477 ops/s [Average]
[info]   (min, avg, max) = (2028790.690, 2044723.902, 2064957.952), stdev = 14804.141
[info]   CI (99.9%): [1987718.425, 2101729.378] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1081.315 ±(99.9%) 30.126 MB/sec [Average]
[info]   (min, avg, max) = (1072.889, 1081.315, 1092.023), stdev = 7.824
[info]   CI (99.9%): [1051.190, 1111.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   832.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (832.000, 832.000, 832.000), stdev = 0.001
[info]   CI (99.9%): [832.000, 832.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.286 ±(99.9%) 702.123 MB/sec [Average]
[info]   (min, avg, max) = (1001.287, 1138.286, 1349.470), stdev = 182.339
[info]   CI (99.9%): [436.163, 1840.409] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   875.143 ±(99.9%) 517.097 B/op [Average]
[info]   (min, avg, max) = (774.901, 875.143, 1028.146), stdev = 134.289
[info]   CI (99.9%): [358.045, 1392.240] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.028 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.016), stdev = 0.007
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 12.000), stdev = 3.435
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.85% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3814072.310 ops/s
[info] # Warmup Iteration   2: 4135799.264 ops/s
[info] # Warmup Iteration   3: 4269331.834 ops/s
[info] # Warmup Iteration   4: 4300916.906 ops/s
[info] # Warmup Iteration   5: 4287905.133 ops/s
[info] Iteration   1: 4190954.707 ops/s
[info]                  ·gc.alloc.rate:               767.198 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      654.764 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 245.793 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 4203413.462 ops/s
[info]                  ·gc.alloc.rate:               769.479 MB/sec
[info]                  ·gc.alloc.rate.norm:          288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 245.806 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   3: 4174329.344 ops/s
[info]                  ·gc.alloc.rate:                   764.161 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.278 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     372.843 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 4288576.454 ops/s
[info]                  ·gc.alloc.rate:                   785.066 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     243.245 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.023 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 4261975.820 ops/s
[info]                  ·gc.alloc.rate:                   780.181 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.410 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.264 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter":
[info]   4223849.958 ±(99.9%) 188594.497 ops/s [Average]
[info]   (min, avg, max) = (4174329.344, 4223849.958, 4288576.454), stdev = 48977.392
[info]   CI (99.9%): [4035255.460, 4412444.455] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   773.217 ±(99.9%) 34.501 MB/sec [Average]
[info]   (min, avg, max) = (764.161, 773.217, 785.066), stdev = 8.960
[info]   CI (99.9%): [738.716, 807.718] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   725.653 ±(99.9%) 567.690 MB/sec [Average]
[info]   (min, avg, max) = (654.764, 725.653, 989.278), stdev = 147.427
[info]   CI (99.9%): [157.963, 1293.343] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   270.590 ±(99.9%) 220.144 B/op [Average]
[info]   (min, avg, max) = (243.245, 270.590, 372.843), stdev = 57.171
[info]   CI (99.9%): [50.446, 490.734] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.031), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 11.000), stdev = 4.450
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay
[info] # Run progress: 67.07% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 270765.335 ops/s
[info] # Warmup Iteration   2: 488745.105 ops/s
[info] # Warmup Iteration   3: 492509.905 ops/s
[info] # Warmup Iteration   4: 495378.677 ops/s
[info] # Warmup Iteration   5: 505029.313 ops/s
[info] Iteration   1: 505545.690 ops/s
[info]                  ·gc.alloc.rate:                   1496.154 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1661.720 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5171.238 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 507126.979 ops/s
[info]                  ·gc.alloc.rate:                   1500.771 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.094 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4151.311 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.258 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 506279.647 ops/s
[info]                  ·gc.alloc.rate:                   1498.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.004 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5226.810 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.194 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 500812.165 ops/s
[info]                  ·gc.alloc.rate:                   1482.146 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.131 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4241.289 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   5: 502160.688 ops/s
[info]                  ·gc.alloc.rate:                   1486.074 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.632 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5303.167 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay":
[info]   504385.034 ±(99.9%) 10574.918 ops/s [Average]
[info]   (min, avg, max) = (500812.165, 504385.034, 507126.979), stdev = 2746.273
[info]   CI (99.9%): [493810.116, 514959.951] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1492.692 ±(99.9%) 31.277 MB/sec [Average]
[info]   (min, avg, max) = (1482.146, 1492.692, 1500.771), stdev = 8.123
[info]   CI (99.9%): [1461.415, 1523.969] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1544.916 ±(99.9%) 707.338 MB/sec [Average]
[info]   (min, avg, max) = (1338.094, 1544.916, 1692.632), stdev = 183.693
[info]   CI (99.9%): [837.578, 2252.254] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4818.763 ±(99.9%) 2198.880 B/op [Average]
[info]   (min, avg, max) = (4151.311, 4818.763, 5303.167), stdev = 571.042
[info]   CI (99.9%): [2619.882, 7017.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.169 ±(99.9%) 0.221 B/op [Average]
[info]   (min, avg, max) = (0.130, 0.169, 0.258), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.389] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.400, 14.000), stdev = 4.722
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce
[info] # Run progress: 68.29% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3556.951 ops/s
[info] # Warmup Iteration   2: 5183.882 ops/s
[info] # Warmup Iteration   3: 5393.761 ops/s
[info] # Warmup Iteration   4: 5412.257 ops/s
[info] # Warmup Iteration   5: 5392.974 ops/s
[info] Iteration   1: 5385.235 ops/s
[info]                  ·gc.alloc.rate:                   1493.245 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.191 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     392096.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 5362.403 ops/s
[info]                  ·gc.alloc.rate:                   1486.864 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     494085.727 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.044 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 12.984 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5386.107 ops/s
[info]                  ·gc.alloc.rate:                   1493.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.072 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     394942.200 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.018 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 5.319 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 5383.698 ops/s
[info]                  ·gc.alloc.rate:                   1492.838 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.080 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1354.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     395869.082 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.023 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 6.849 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 5305.834 ops/s
[info]                  ·gc.alloc.rate:                   1471.222 MB/sec
[info]                  ·gc.alloc.rate.norm:              436224.081 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.260 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     502948.975 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.698 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce":
[info]   5364.655 ±(99.9%) 132.152 ops/s [Average]
[info]   (min, avg, max) = (5305.834, 5364.655, 5386.107), stdev = 34.320
[info]   CI (99.9%): [5232.503, 5496.808] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate":
[info]   1487.514 ±(99.9%) 36.616 MB/sec [Average]
[info]   (min, avg, max) = (1471.222, 1487.514, 1493.399), stdev = 9.509
[info]   CI (99.9%): [1450.898, 1524.129] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm":
[info]   436224.081 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (436224.080, 436224.081, 436224.081), stdev = 0.001
[info]   CI (99.9%): [436224.079, 436224.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space":
[info]   1485.869 ±(99.9%) 718.573 MB/sec [Average]
[info]   (min, avg, max) = (1342.191, 1485.869, 1696.260), stdev = 186.611
[info]   CI (99.9%): [767.296, 2204.441] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   435988.508 ±(99.9%) 220193.728 B/op [Average]
[info]   (min, avg, max) = (392096.558, 435988.508, 502948.975), stdev = 57183.612
[info]   CI (99.9%): [215794.780, 656182.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.038 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.018, 0.038, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   11.187 ±(99.9%) 31.346 B/op [Average]
[info]   (min, avg, max) = (5.319, 11.187, 24.698), stdev = 8.140
[info]   CI (99.9%): [≈ 0, 42.533] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 6.200, 8.000), stdev = 1.095
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson
[info] # Run progress: 69.51% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 14168.970 ops/s
[info] # Warmup Iteration   2: 21828.269 ops/s
[info] # Warmup Iteration   3: 22055.472 ops/s
[info] # Warmup Iteration   4: 22173.850 ops/s
[info] # Warmup Iteration   5: 22230.003 ops/s
[info] Iteration   1: 22173.975 ops/s
[info]                  ·gc.alloc.rate:               366.575 MB/sec
[info]                  ·gc.alloc.rate.norm:          26007.571 B/op
[info]                  ·gc.churn.PS_Eden_Space:      323.875 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 22978.084 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 21817.279 ops/s
[info]                  ·gc.alloc.rate:                   360.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              26008.170 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23522.201 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.502 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 21783.513 ops/s
[info]                  ·gc.alloc.rate:               360.131 MB/sec
[info]                  ·gc.alloc.rate.norm:          26007.929 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23558.909 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 22119.684 ops/s
[info]                  ·gc.alloc.rate:                   365.680 MB/sec
[info]                  ·gc.alloc.rate.norm:              26007.679 B/op
[info]                  ·gc.churn.PS_Eden_Space:          327.884 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     23319.595 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.481 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 21829.706 ops/s
[info]                  ·gc.alloc.rate:               360.880 MB/sec
[info]                  ·gc.alloc.rate.norm:          26007.852 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.877 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 23629.341 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson":
[info]   21944.832 ±(99.9%) 716.849 ops/s [Average]
[info]   (min, avg, max) = (21783.513, 21944.832, 22173.975), stdev = 186.164
[info]   CI (99.9%): [21227.982, 22661.681] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate":
[info]   362.792 ±(99.9%) 11.835 MB/sec [Average]
[info]   (min, avg, max) = (360.131, 362.792, 366.575), stdev = 3.074
[info]   CI (99.9%): [350.957, 374.627] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm":
[info]   26007.840 ±(99.9%) 0.893 B/op [Average]
[info]   (min, avg, max) = (26007.571, 26007.840, 26008.170), stdev = 0.232
[info]   CI (99.9%): [26006.947, 26008.733] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space":
[info]   326.414 ±(99.9%) 6.335 MB/sec [Average]
[info]   (min, avg, max) = (323.875, 326.414, 327.884), stdev = 1.645
[info]   CI (99.9%): [320.080, 332.749] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   23401.626 ±(99.9%) 1013.765 B/op [Average]
[info]   (min, avg, max) = (22978.084, 23401.626, 23629.341), stdev = 263.272
[info]   CI (99.9%): [22387.861, 24415.391] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.008 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.008, 0.021), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.052] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.597 ±(99.9%) 3.146 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.597, 1.502), stdev = 0.817
[info]   CI (99.9%): [≈ 0, 3.742] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time":
[info]   7.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 3.000), stdev = 0.894
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter
[info] # Run progress: 70.73% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 30108.212 ops/s
[info] # Warmup Iteration   2: 35255.698 ops/s
[info] # Warmup Iteration   3: 34166.944 ops/s
[info] # Warmup Iteration   4: 34199.957 ops/s
[info] # Warmup Iteration   5: 34057.559 ops/s
[info] Iteration   1: 34287.390 ops/s
[info]                  ·gc.alloc.rate:               262.933 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 11741.899 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   2: 34278.977 ops/s
[info]                  ·gc.alloc.rate:                   262.866 MB/sec
[info]                  ·gc.alloc.rate.norm:              12064.014 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.216 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14925.478 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.266 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 103.988 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 34319.235 ops/s
[info]                  ·gc.alloc.rate:      263.179 MB/sec
[info]                  ·gc.alloc.rate.norm: 12064.013 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   4: 34403.119 ops/s
[info]                  ·gc.alloc.rate:                   263.820 MB/sec
[info]                  ·gc.alloc.rate.norm:              12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.219 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     14871.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.857 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         ≈ 0 ms
[info] Iteration   5: 34375.603 ops/s
[info]                  ·gc.alloc.rate:               263.594 MB/sec
[info]                  ·gc.alloc.rate.norm:          12064.013 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.206 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 14883.801 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter":
[info]   34332.865 ±(99.9%) 210.203 ops/s [Average]
[info]   (min, avg, max) = (34278.977, 34332.865, 34403.119), stdev = 54.589
[info]   CI (99.9%): [34122.662, 34543.068] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate":
[info]   263.279 ±(99.9%) 1.601 MB/sec [Average]
[info]   (min, avg, max) = (262.866, 263.279, 263.820), stdev = 0.416
[info]   CI (99.9%): [261.678, 264.879] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm":
[info]   12064.013 ±(99.9%) 0.002 B/op [Average]
[info]   (min, avg, max) = (12064.013, 12064.013, 12064.014), stdev = 0.001
[info]   CI (99.9%): [12064.011, 12064.014] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   246.311 ±(99.9%) 542.647 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.311, 325.219), stdev = 140.924
[info]   CI (99.9%): [≈ 0, 788.958] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   11284.573 ±(99.9%) 24852.974 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 11284.573, 14925.478), stdev = 6454.238
[info]   CI (99.9%): [≈ 0, 36137.547] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.466 ±(99.9%) 3.876 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.466, 2.266), stdev = 1.007
[info]   CI (99.9%): [≈ 0, 4.342] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   21.369 ±(99.9%) 177.908 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 21.369, 103.988), stdev = 46.202
[info]   CI (99.9%): [≈ 0, 199.277] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay
[info] # Run progress: 71.95% complete, ETA 00:06:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2170.500 ops/s
[info] # Warmup Iteration   2: 3819.395 ops/s
[info] # Warmup Iteration   3: 3870.205 ops/s
[info] # Warmup Iteration   4: 3953.721 ops/s
[info] # Warmup Iteration   5: 3974.838 ops/s
[info] Iteration   1: 3972.573 ops/s
[info]                  ·gc.alloc.rate:                   1248.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              494440.270 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     522968.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.491 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 3954.612 ops/s
[info]                  ·gc.alloc.rate:                   1242.989 MB/sec
[info]                  ·gc.alloc.rate.norm:              494440.071 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1329.353 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     528794.014 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.283 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 3972.145 ops/s
[info]                  ·gc.alloc.rate:                   1248.258 MB/sec
[info]                  ·gc.alloc.rate.norm:              494439.875 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1002.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     397075.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 24.743 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 3940.594 ops/s
[info]                  ·gc.alloc.rate:                   1238.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              494440.039 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.977 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535726.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 16.625 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 3957.002 ops/s
[info]                  ·gc.alloc.rate:                   1243.694 MB/sec
[info]                  ·gc.alloc.rate.norm:              494439.567 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.095 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     535547.343 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.279 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay":
[info]   3959.385 ±(99.9%) 51.601 ops/s [Average]
[info]   (min, avg, max) = (3940.594, 3959.385, 3972.573), stdev = 13.401
[info]   CI (99.9%): [3907.784, 4010.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate":
[info]   1244.423 ±(99.9%) 16.027 MB/sec [Average]
[info]   (min, avg, max) = (1238.557, 1244.423, 1248.616), stdev = 4.162
[info]   CI (99.9%): [1228.396, 1260.450] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm":
[info]   494439.964 ±(99.9%) 1.011 B/op [Average]
[info]   (min, avg, max) = (494439.567, 494439.964, 494440.270), stdev = 0.262
[info]   CI (99.9%): [494438.954, 494440.975] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space":
[info]   1268.308 ±(99.9%) 573.668 MB/sec [Average]
[info]   (min, avg, max) = (1002.454, 1268.308, 1347.095), stdev = 148.980
[info]   CI (99.9%): [694.639, 1841.976] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm":
[info]   504022.403 ±(99.9%) 231111.546 B/op [Average]
[info]   (min, avg, max) = (397075.910, 504022.403, 535726.044), stdev = 60018.935
[info]   CI (99.9%): [272910.857, 735133.949] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.037, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   14.884 ±(99.9%) 26.540 B/op [Average]
[info]   (min, avg, max) = (8.279, 14.884, 24.743), stdev = 6.892
[info]   CI (99.9%): [≈ 0, 41.424] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.271
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 73.17% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 74521.516 ops/s
[info] # Warmup Iteration   2: 702459.666 ops/s
[info] # Warmup Iteration   3: 709456.209 ops/s
[info] # Warmup Iteration   4: 705454.954 ops/s
[info] # Warmup Iteration   5: 703794.206 ops/s
[info] Iteration   1: 710698.604 ops/s
[info]                  ·gc.alloc.rate:                   1561.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1674.635 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3707.196 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 714640.400 ops/s
[info]                  ·gc.alloc.rate:                   1569.907 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2963.476 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 699324.991 ops/s
[info]                  ·gc.alloc.rate:                   1536.269 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3800.525 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 703611.198 ops/s
[info]                  ·gc.alloc.rate:                   1545.714 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.111 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3787.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 703833.924 ops/s
[info]                  ·gc.alloc.rate:                   1546.174 MB/sec
[info]                  ·gc.alloc.rate.norm:              3456.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.886 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3032.904 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson":
[info]   706421.824 ±(99.9%) 23642.900 ops/s [Average]
[info]   (min, avg, max) = (699324.991, 706421.824, 714640.400), stdev = 6139.986
[info]   CI (99.9%): [682778.924, 730064.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1551.845 ±(99.9%) 51.856 MB/sec [Average]
[info]   (min, avg, max) = (1536.269, 1551.845, 1569.907), stdev = 13.467
[info]   CI (99.9%): [1499.989, 1603.702] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   3456.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3456.001, 3456.001, 3456.001), stdev = 0.001
[info]   CI (99.9%): [3456.001, 3456.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1552.245 ±(99.9%) 706.233 MB/sec [Average]
[info]   (min, avg, max) = (1346.175, 1552.245, 1694.111), stdev = 183.406
[info]   CI (99.9%): [846.012, 2258.477] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   3458.380 ±(99.9%) 1626.239 B/op [Average]
[info]   (min, avg, max) = (2963.476, 3458.380, 3800.525), stdev = 422.329
[info]   CI (99.9%): [1832.140, 5084.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.092 ±(99.9%) 0.176 B/op [Average]
[info]   (min, avg, max) = (0.047, 0.092, 0.138), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 7.600, 11.000), stdev = 2.074
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 74.39% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2075913.661 ops/s
[info] # Warmup Iteration   2: 2393134.709 ops/s
[info] # Warmup Iteration   3: 2356851.326 ops/s
[info] # Warmup Iteration   4: 2374318.476 ops/s
[info] # Warmup Iteration   5: 2378014.363 ops/s
[info] Iteration   1: 2409665.920 ops/s
[info]                  ·gc.alloc.rate:                   465.631 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.890 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212.766 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2404156.962 ops/s
[info]                  ·gc.alloc.rate:                   464.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     426.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 2421698.697 ops/s
[info]                  ·gc.alloc.rate:               468.156 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.929 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 211.644 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2401659.978 ops/s
[info]                  ·gc.alloc.rate:                   464.083 MB/sec
[info]                  ·gc.alloc.rate.norm:              304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.761 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     428.250 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   5: 2431222.988 ops/s
[info]                  ·gc.alloc.rate:               469.791 MB/sec
[info]                  ·gc.alloc.rate.norm:          304.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 212.170 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter":
[info]   2413680.909 ±(99.9%) 48069.007 ops/s [Average]
[info]   (min, avg, max) = (2401659.978, 2413680.909, 2431222.988), stdev = 12483.368
[info]   CI (99.9%): [2365611.902, 2461749.915] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   466.451 ±(99.9%) 9.390 MB/sec [Average]
[info]   (min, avg, max) = (464.083, 466.451, 469.791), stdev = 2.438
[info]   CI (99.9%): [457.062, 475.841] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   304.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (304.000, 304.000, 304.000), stdev = 0.001
[info]   CI (99.9%): [304.000, 304.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   457.122 ±(99.9%) 688.397 MB/sec [Average]
[info]   (min, avg, max) = (325.890, 457.122, 653.761), stdev = 178.775
[info]   CI (99.9%): [≈ 0, 1145.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   298.311 ±(99.9%) 454.082 B/op [Average]
[info]   (min, avg, max) = (211.644, 298.311, 428.250), stdev = 117.924
[info]   CI (99.9%): [≈ 0, 752.393] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.014, 0.027), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.066] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 6.000), stdev = 2.236
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 75.61% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 91806.370 ops/s
[info] # Warmup Iteration   2: 245180.800 ops/s
[info] # Warmup Iteration   3: 252501.746 ops/s
[info] # Warmup Iteration   4: 253943.017 ops/s
[info] # Warmup Iteration   5: 253003.704 ops/s
[info] Iteration   1: 250627.309 ops/s
[info]                  ·gc.alloc.rate:               982.577 MB/sec
[info]                  ·gc.alloc.rate.norm:          6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6176.658 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 248878.578 ops/s
[info]                  ·gc.alloc.rate:                   975.764 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6245.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.658 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 250733.317 ops/s
[info]                  ·gc.alloc.rate:                   983.239 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6232.247 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.261 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 248745.362 ops/s
[info]                  ·gc.alloc.rate:                   975.234 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6315.885 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 250219.371 ops/s
[info]                  ·gc.alloc.rate:                   980.987 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6308.116 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.262 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay":
[info]   249840.787 ±(99.9%) 3695.593 ops/s [Average]
[info]   (min, avg, max) = (248745.362, 249840.787, 250733.317), stdev = 959.734
[info]   CI (99.9%): [246145.195, 253536.380] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   979.560 ±(99.9%) 14.637 MB/sec [Average]
[info]   (min, avg, max) = (975.234, 979.560, 983.239), stdev = 3.801
[info]   CI (99.9%): [964.923, 994.197] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.458 ±(99.9%) 30.035 MB/sec [Average]
[info]   (min, avg, max) = (983.956, 993.458, 1003.271), stdev = 7.800
[info]   CI (99.9%): [963.423, 1023.493] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6255.608 ±(99.9%) 221.863 B/op [Average]
[info]   (min, avg, max) = (6176.658, 6255.608, 6315.885), stdev = 57.617
[info]   CI (99.9%): [6033.744, 6477.471] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.289 ±(99.9%) 0.907 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.289, 0.658), stdev = 0.236
[info]   CI (99.9%): [≈ 0, 1.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 12.000), stdev = 3.962
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce
[info] # Run progress: 76.83% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 368956.590 ops/s
[info] # Warmup Iteration   2: 598698.819 ops/s
[info] # Warmup Iteration   3: 608765.599 ops/s
[info] # Warmup Iteration   4: 612899.107 ops/s
[info] # Warmup Iteration   5: 606368.578 ops/s
[info] Iteration   1: 613956.041 ops/s
[info]                  ·gc.alloc.rate:                   1567.224 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.496 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3437.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 608667.590 ops/s
[info]                  ·gc.alloc.rate:                   1553.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1685.406 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4356.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.108 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 613245.027 ops/s
[info]                  ·gc.alloc.rate:                   1565.344 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3470.606 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 613999.458 ops/s
[info]                  ·gc.alloc.rate:                   1567.371 MB/sec
[info]                  ·gc.alloc.rate.norm:              4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1694.722 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4342.308 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   5: 616103.307 ops/s
[info]                  ·gc.alloc.rate:               1572.733 MB/sec
[info]                  ·gc.alloc.rate.norm:          4016.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1697.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4334.379 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce":
[info]   613194.284 ±(99.9%) 10577.805 ops/s [Average]
[info]   (min, avg, max) = (608667.590, 613194.284, 616103.307), stdev = 2747.022
[info]   CI (99.9%): [602616.479, 623772.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1565.294 ±(99.9%) 26.924 MB/sec [Average]
[info]   (min, avg, max) = (1553.797, 1565.294, 1572.733), stdev = 6.992
[info]   CI (99.9%): [1538.370, 1592.217] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4016.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4016.001, 4016.001, 4016.001), stdev = 0.001
[info]   CI (99.9%): [4016.001, 4016.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1554.360 ±(99.9%) 728.811 MB/sec [Average]
[info]   (min, avg, max) = (1341.496, 1554.360, 1697.415), stdev = 189.270
[info]   CI (99.9%): [825.549, 2283.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3988.206 ±(99.9%) 1878.272 B/op [Average]
[info]   (min, avg, max) = (3437.573, 3988.206, 4356.162), stdev = 487.781
[info]   CI (99.9%): [2109.934, 5866.478] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.064 ±(99.9%) 0.173 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.064, 0.108), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.237] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time":
[info]   47.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.400, 17.000), stdev = 5.320
[info]   CI (99.9%): [47.000, 47.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson
[info] # Run progress: 78.05% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 824834.769 ops/s
[info] # Warmup Iteration   2: 1196313.195 ops/s
[info] # Warmup Iteration   3: 1200231.894 ops/s
[info] # Warmup Iteration   4: 1207694.760 ops/s
[info] # Warmup Iteration   5: 1205391.137 ops/s
[info] Iteration   1: 1200232.640 ops/s
[info]                  ·gc.alloc.rate:                   738.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          650.407 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     852.555 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 1220622.611 ops/s
[info]                  ·gc.alloc.rate:                   751.051 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.768 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     842.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 1215067.801 ops/s
[info]                  ·gc.alloc.rate:                   747.467 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     850.781 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 1212287.002 ops/s
[info]                  ·gc.alloc.rate:               745.911 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1286.433 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   5: 1223234.493 ops/s
[info]                  ·gc.alloc.rate:               752.589 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.366 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 854.526 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson":
[info]   1214288.909 ±(99.9%) 34566.487 ops/s [Average]
[info]   (min, avg, max) = (1200232.640, 1214288.909, 1223234.493), stdev = 8976.807
[info]   CI (99.9%): [1179722.422, 1248855.396] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   747.099 ±(99.9%) 21.232 MB/sec [Average]
[info]   (min, avg, max) = (738.479, 747.099, 752.589), stdev = 5.514
[info]   CI (99.9%): [725.867, 768.331] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   723.356 ±(99.9%) 577.081 MB/sec [Average]
[info]   (min, avg, max) = (650.407, 723.356, 991.286), stdev = 149.866
[info]   CI (99.9%): [146.274, 1300.437] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   937.382 ±(99.9%) 751.561 B/op [Average]
[info]   (min, avg, max) = (842.615, 937.382, 1286.433), stdev = 195.178
[info]   CI (99.9%): [185.821, 1688.944] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.055), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time":
[info]   18.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.600, 7.000), stdev = 2.191
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter
[info] # Run progress: 79.27% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3816158.597 ops/s
[info] # Warmup Iteration   2: 4468643.757 ops/s
[info] # Warmup Iteration   3: 4518700.726 ops/s
[info] # Warmup Iteration   4: 4576030.213 ops/s
[info] # Warmup Iteration   5: 4560602.843 ops/s
[info] Iteration   1: 4521108.561 ops/s
[info]                  ·gc.alloc.rate:                   689.692 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     227.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 4501284.704 ops/s
[info]                  ·gc.alloc.rate:                   686.676 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     228.848 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 4481660.313 ops/s
[info]                  ·gc.alloc.rate:                   683.670 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.604 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     345.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 4470864.824 ops/s
[info]                  ·gc.alloc.rate:                   682.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     232.392 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 4509271.476 ops/s
[info]                  ·gc.alloc.rate:                   687.881 MB/sec
[info]                  ·gc.alloc.rate.norm:              240.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          662.421 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.117 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter":
[info]   4496837.976 ±(99.9%) 78641.630 ops/s [Average]
[info]   (min, avg, max) = (4470864.824, 4496837.976, 4521108.561), stdev = 20422.981
[info]   CI (99.9%): [4418196.346, 4575479.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   685.987 ±(99.9%) 12.011 MB/sec [Average]
[info]   (min, avg, max) = (682.017, 685.987, 689.692), stdev = 3.119
[info]   CI (99.9%): [673.976, 697.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   240.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (240.000, 240.000, 240.000), stdev = 0.001
[info]   CI (99.9%): [240.000, 240.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   723.190 ±(99.9%) 565.071 MB/sec [Average]
[info]   (min, avg, max) = (652.760, 723.190, 985.604), stdev = 146.747
[info]   CI (99.9%): [158.119, 1288.260] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   253.100 ±(99.9%) 200.112 B/op [Average]
[info]   (min, avg, max) = (227.148, 253.100, 345.993), stdev = 51.968
[info]   CI (99.9%): [52.988, 453.211] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.043 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.017, 0.029), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.060] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.600, 13.000), stdev = 4.037
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay
[info] # Run progress: 80.49% complete, ETA 00:04:18
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 196353.030 ops/s
[info] # Warmup Iteration   2: 362415.559 ops/s
[info] # Warmup Iteration   3: 371325.562 ops/s
[info] # Warmup Iteration   4: 376360.494 ops/s
[info] # Warmup Iteration   5: 376814.487 ops/s
[info] Iteration   1: 377397.055 ops/s
[info]                  ·gc.alloc.rate:                   1299.152 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1324.121 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5520.093 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.174 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 375714.554 ops/s
[info]                  ·gc.alloc.rate:                   1293.435 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.831 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5580.961 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.349 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 369365.704 ops/s
[info]                  ·gc.alloc.rate:                   1271.530 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.944 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4276.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   4: 374611.928 ops/s
[info]                  ·gc.alloc.rate:                   1289.579 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.785 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5647.858 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 378487.239 ops/s
[info]                  ·gc.alloc.rate:                   1302.945 MB/sec
[info]                  ·gc.alloc.rate.norm:              5416.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.468 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5609.388 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay":
[info]   375115.296 ±(99.9%) 13647.630 ops/s [Average]
[info]   (min, avg, max) = (369365.704, 375115.296, 378487.239), stdev = 3544.246
[info]   CI (99.9%): [361467.667, 388762.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1291.328 ±(99.9%) 46.988 MB/sec [Average]
[info]   (min, avg, max) = (1271.530, 1291.328, 1302.945), stdev = 12.203
[info]   CI (99.9%): [1244.340, 1338.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5416.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5416.001, 5416.001, 5416.001), stdev = 0.001
[info]   CI (99.9%): [5416.001, 5416.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1271.030 ±(99.9%) 576.200 MB/sec [Average]
[info]   (min, avg, max) = (1003.944, 1271.030, 1349.468), stdev = 149.637
[info]   CI (99.9%): [694.830, 1847.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5326.907 ±(99.9%) 2268.762 B/op [Average]
[info]   (min, avg, max) = (4276.235, 5326.907, 5647.858), stdev = 589.190
[info]   CI (99.9%): [3058.145, 7595.668] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.193 ±(99.9%) 0.441 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.193, 0.349), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 16.000), stdev = 4.690
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce
[info] # Run progress: 81.71% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 131844.380 ops/s
[info] # Warmup Iteration   2: 327143.099 ops/s
[info] # Warmup Iteration   3: 340909.301 ops/s
[info] # Warmup Iteration   4: 338999.071 ops/s
[info] # Warmup Iteration   5: 343296.522 ops/s
[info] Iteration   1: 341663.348 ops/s
[info]                  ·gc.alloc.rate:                   1005.943 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          978.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4506.220 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 341864.832 ops/s
[info]                  ·gc.alloc.rate:                   1006.501 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4540.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 338680.493 ops/s
[info]                  ·gc.alloc.rate:                   997.124 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.282 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4614.157 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 341749.828 ops/s
[info]                  ·gc.alloc.rate:                   1006.149 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4600.175 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.192 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 341652.275 ops/s
[info]                  ·gc.alloc.rate:                   1005.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              4632.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.868 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6165.278 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.288 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce":
[info]   341122.155 ±(99.9%) 5266.089 ops/s [Average]
[info]   (min, avg, max) = (338680.493, 341122.155, 341864.832), stdev = 1367.587
[info]   CI (99.9%): [335856.066, 346388.244] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1004.323 ±(99.9%) 15.524 MB/sec [Average]
[info]   (min, avg, max) = (997.124, 1004.323, 1006.501), stdev = 4.031
[info]   CI (99.9%): [988.799, 1019.846] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4632.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4632.001, 4632.001, 4632.001), stdev = 0.001
[info]   CI (99.9%): [4632.001, 4632.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1059.322 ±(99.9%) 602.470 MB/sec [Average]
[info]   (min, avg, max) = (978.627, 1059.322, 1338.868), stdev = 156.459
[info]   CI (99.9%): [456.852, 1661.791] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4885.246 ±(99.9%) 2760.550 B/op [Average]
[info]   (min, avg, max) = (4506.220, 4885.246, 6165.278), stdev = 716.906
[info]   CI (99.9%): [2124.695, 7645.796] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.062), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.113] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.211 ±(99.9%) 0.309 B/op [Average]
[info]   (min, avg, max) = (0.096, 0.211, 0.288), stdev = 0.080
[info]   CI (99.9%): [≈ 0, 0.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsCirce:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (5.000, 7.200, 10.000), stdev = 2.168
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson
[info] # Run progress: 82.93% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 114516.085 ops/s
[info] # Warmup Iteration   2: 809850.714 ops/s
[info] # Warmup Iteration   3: 820433.654 ops/s
[info] # Warmup Iteration   4: 815419.703 ops/s
[info] # Warmup Iteration   5: 824474.843 ops/s
[info] Iteration   1: 809345.581 ops/s
[info]                  ·gc.alloc.rate:                   1234.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.850 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2588.893 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 823156.961 ops/s
[info]                  ·gc.alloc.rate:                   1255.743 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.502 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2560.084 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 823487.777 ops/s
[info]                  ·gc.alloc.rate:                   1256.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1345.444 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2570.570 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 820443.172 ops/s
[info]                  ·gc.alloc.rate:               1251.588 MB/sec
[info]                  ·gc.alloc.rate.norm:          2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1011.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1940.466 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 819655.449 ops/s
[info]                  ·gc.alloc.rate:                   1250.413 MB/sec
[info]                  ·gc.alloc.rate.norm:              2400.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.847 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2596.609 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson":
[info]   819217.788 ±(99.9%) 22195.837 ops/s [Average]
[info]   (min, avg, max) = (809345.581, 819217.788, 823487.777), stdev = 5764.188
[info]   CI (99.9%): [797021.950, 841413.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1249.717 ±(99.9%) 33.799 MB/sec [Average]
[info]   (min, avg, max) = (1234.675, 1249.717, 1256.168), stdev = 8.777
[info]   CI (99.9%): [1215.918, 1283.516] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   2400.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2400.001, 2400.001, 2400.001), stdev = 0.001
[info]   CI (99.9%): [2400.000, 2400.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1276.317 ±(99.9%) 569.861 MB/sec [Average]
[info]   (min, avg, max) = (1011.943, 1276.317, 1352.847), stdev = 147.991
[info]   CI (99.9%): [706.457, 1846.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2451.324 ±(99.9%) 1101.071 B/op [Average]
[info]   (min, avg, max) = (1940.466, 2451.324, 2596.609), stdev = 285.945
[info]   CI (99.9%): [1350.253, 3552.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.056 ±(99.9%) 0.175 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.056, 0.119), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.231] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 11.000), stdev = 3.435
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter
[info] # Run progress: 84.15% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2119657.523 ops/s
[info] # Warmup Iteration   2: 2379083.754 ops/s
[info] # Warmup Iteration   3: 2396214.829 ops/s
[info] # Warmup Iteration   4: 2368116.491 ops/s
[info] # Warmup Iteration   5: 2351955.316 ops/s
[info] Iteration   1: 2365114.727 ops/s
[info]                  ·gc.alloc.rate:               565.238 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.209 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 216.997 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   2: 2359872.043 ops/s
[info]                  ·gc.alloc.rate:                   563.988 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     435.387 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.056 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2346757.445 ops/s
[info]                  ·gc.alloc.rate:                   560.852 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.750 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.950 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 2350101.847 ops/s
[info]                  ·gc.alloc.rate:               561.658 MB/sec
[info]                  ·gc.alloc.rate.norm:          376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.867 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 219.490 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 2361165.719 ops/s
[info]                  ·gc.alloc.rate:                   564.296 MB/sec
[info]                  ·gc.alloc.rate.norm:              376.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     438.271 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter":
[info]   2356602.356 ±(99.9%) 30022.338 ops/s [Average]
[info]   (min, avg, max) = (2346757.445, 2356602.356, 2365114.727), stdev = 7796.706
[info]   CI (99.9%): [2326580.018, 2386624.694] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   563.207 ±(99.9%) 7.169 MB/sec [Average]
[info]   (min, avg, max) = (560.852, 563.207, 565.238), stdev = 1.862
[info]   CI (99.9%): [556.037, 570.376] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   376.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (376.000, 376.000, 376.000), stdev = 0.001
[info]   CI (99.9%): [376.000, 376.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   523.929 ±(99.9%) 692.132 MB/sec [Average]
[info]   (min, avg, max) = (326.209, 523.929, 657.751), stdev = 179.744
[info]   CI (99.9%): [≈ 0, 1216.061] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   349.819 ±(99.9%) 462.548 B/op [Average]
[info]   (min, avg, max) = (216.997, 349.819, 438.950), stdev = 120.122
[info]   CI (99.9%): [≈ 0, 812.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.143 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.096 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.056), stdev = 0.025
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 9.000), stdev = 3.082
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay
[info] # Run progress: 85.37% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108873.708 ops/s
[info] # Warmup Iteration   2: 247276.939 ops/s
[info] # Warmup Iteration   3: 253191.631 ops/s
[info] # Warmup Iteration   4: 255835.624 ops/s
[info] # Warmup Iteration   5: 256077.034 ops/s
[info] Iteration   1: 257426.777 ops/s
[info]                  ·gc.alloc.rate:                   949.040 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6013.402 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 256186.291 ops/s
[info]                  ·gc.alloc.rate:                   944.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.323 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6068.522 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.256 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 257403.365 ops/s
[info]                  ·gc.alloc.rate:                   948.964 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.746 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4044.546 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.255 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 258645.907 ops/s
[info]                  ·gc.alloc.rate:                   953.558 MB/sec
[info]                  ·gc.alloc.rate.norm:              5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6068.115 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.380 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 254994.901 ops/s
[info]                  ·gc.alloc.rate:               940.058 MB/sec
[info]                  ·gc.alloc.rate.norm:          5800.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.619 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6179.824 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay":
[info]   256931.448 ±(99.9%) 5347.025 ops/s [Average]
[info]   (min, avg, max) = (254994.901, 256931.448, 258645.907), stdev = 1388.605
[info]   CI (99.9%): [251584.423, 262278.473] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   947.242 ±(99.9%) 19.702 MB/sec [Average]
[info]   (min, avg, max) = (940.058, 947.242, 953.558), stdev = 5.117
[info]   CI (99.9%): [927.540, 966.945] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5800.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5800.002, 5800.002, 5800.002), stdev = 0.001
[info]   CI (99.9%): [5800.001, 5800.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   926.657 ±(99.9%) 570.888 MB/sec [Average]
[info]   (min, avg, max) = (661.746, 926.657, 1001.619), stdev = 148.258
[info]   CI (99.9%): [355.769, 1497.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5674.882 ±(99.9%) 3517.149 B/op [Average]
[info]   (min, avg, max) = (4044.546, 5674.882, 6179.824), stdev = 913.393
[info]   CI (99.9%): [2157.733, 9192.031] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.204 ±(99.9%) 0.557 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.204, 0.380), stdev = 0.145
[info]   CI (99.9%): [≈ 0, 0.761] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMapsPlay:·gc.time":
[info]   42.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.400, 11.000), stdev = 3.647
[info]   CI (99.9%): [42.000, 42.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.59% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 130539.962 ops/s
[info] # Warmup Iteration   2: 342214.792 ops/s
[info] # Warmup Iteration   3: 353188.104 ops/s
[info] # Warmup Iteration   4: 348583.326 ops/s
[info] # Warmup Iteration   5: 349150.414 ops/s
[info] Iteration   1: 348011.362 ops/s
[info]                  ·gc.alloc.rate:                   1008.698 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1309.463 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5919.665 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 349744.306 ops/s
[info]                  ·gc.alloc.rate:                   1013.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4450.067 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.094 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 348396.247 ops/s
[info]                  ·gc.alloc.rate:                   1009.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.945 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4497.504 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 348071.413 ops/s
[info]                  ·gc.alloc.rate:               1008.845 MB/sec
[info]                  ·gc.alloc.rate.norm:          4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.232 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4525.592 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 349144.533 ops/s
[info]                  ·gc.alloc.rate:                   1011.959 MB/sec
[info]                  ·gc.alloc.rate.norm:              4560.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4531.412 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce":
[info]   348673.572 ±(99.9%) 2885.608 ops/s [Average]
[info]   (min, avg, max) = (348011.362, 348673.572, 349744.306), stdev = 749.383
[info]   CI (99.9%): [345787.964, 351559.180] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   1010.603 ±(99.9%) 8.395 MB/sec [Average]
[info]   (min, avg, max) = (1008.698, 1010.603, 1013.731), stdev = 2.180
[info]   CI (99.9%): [1002.208, 1018.999] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4560.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4560.001, 4560.001, 4560.001), stdev = 0.001
[info]   CI (99.9%): [4560.001, 4560.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1060.309 ±(99.9%) 536.835 MB/sec [Average]
[info]   (min, avg, max) = (989.291, 1060.309, 1309.463), stdev = 139.414
[info]   CI (99.9%): [523.474, 1597.144] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4784.848 ±(99.9%) 2445.915 B/op [Average]
[info]   (min, avg, max) = (4450.067, 4784.848, 5919.665), stdev = 635.196
[info]   CI (99.9%): [2338.933, 7230.763] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.113 ±(99.9%) 0.303 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.113, 0.188), stdev = 0.079
[info]   CI (99.9%): [≈ 0, 0.415] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.302
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson
[info] # Run progress: 87.80% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 85119.240 ops/s
[info] # Warmup Iteration   2: 497147.637 ops/s
[info] # Warmup Iteration   3: 763902.380 ops/s
[info] # Warmup Iteration   4: 758793.409 ops/s
[info] # Warmup Iteration   5: 737284.308 ops/s
[info] Iteration   1: 737338.729 ops/s
[info]                  ·gc.alloc.rate:                   1139.813 MB/sec
[info]                  ·gc.alloc.rate.norm:              2432.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.153 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2833.859 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 731782.383 ops/s
[info]                  ·gc.alloc.rate:                   1131.249 MB/sec
[info]                  ·gc.alloc.rate.norm:              2432.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.310 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2152.652 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.090 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   3: 738594.903 ops/s
[info]                  ·gc.alloc.rate:                   1141.787 MB/sec
[info]                  ·gc.alloc.rate.norm:              2432.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.666 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2142.063 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.089 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 745154.049 ops/s
[info]                  ·gc.alloc.rate:                   1151.925 MB/sec
[info]                  ·gc.alloc.rate.norm:              2432.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.214 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2842.192 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 752302.942 ops/s
[info]                  ·gc.alloc.rate:                   1162.948 MB/sec
[info]                  ·gc.alloc.rate.norm:              2432.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.275 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2116.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson":
[info]   741034.602 ±(99.9%) 30390.858 ops/s [Average]
[info]   (min, avg, max) = (731782.383, 741034.602, 752302.942), stdev = 7892.409
[info]   CI (99.9%): [710643.743, 771425.460] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1145.544 ±(99.9%) 46.960 MB/sec [Average]
[info]   (min, avg, max) = (1131.249, 1145.544, 1162.948), stdev = 12.195
[info]   CI (99.9%): [1098.584, 1192.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2432.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2432.001, 2432.001, 2432.001), stdev = 0.001
[info]   CI (99.9%): [2432.001, 2432.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1138.724 ±(99.9%) 698.210 MB/sec [Average]
[info]   (min, avg, max) = (1001.310, 1138.724, 1346.214), stdev = 181.323
[info]   CI (99.9%): [440.514, 1836.933] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2417.535 ±(99.9%) 1478.972 B/op [Average]
[info]   (min, avg, max) = (2116.908, 2417.535, 2842.192), stdev = 384.084
[info]   CI (99.9%): [938.563, 3896.506] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.124 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.124, 0.178), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.310] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.200, 11.000), stdev = 2.775
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 89.02% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1542474.493 ops/s
[info] # Warmup Iteration   2: 2081476.425 ops/s
[info] # Warmup Iteration   3: 2047086.216 ops/s
[info] # Warmup Iteration   4: 2062530.296 ops/s
[info] # Warmup Iteration   5: 2084938.223 ops/s
[info] Iteration   1: 2055409.759 ops/s
[info]                  ·gc.alloc.rate:               501.686 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      651.766 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 498.874 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 2092141.429 ops/s
[info]                  ·gc.alloc.rate:               510.651 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.876 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 245.053 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 2056177.964 ops/s
[info]                  ·gc.alloc.rate:                   501.884 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.780 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     499.453 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 2075428.832 ops/s
[info]                  ·gc.alloc.rate:                   506.564 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.416 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     496.079 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 2090992.767 ops/s
[info]                  ·gc.alloc.rate:               510.356 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.536 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 246.444 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter":
[info]   2074030.150 ±(99.9%) 68966.436 ops/s [Average]
[info]   (min, avg, max) = (2055409.759, 2074030.150, 2092141.429), stdev = 17910.365
[info]   CI (99.9%): [2005063.714, 2142996.587] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   506.228 ±(99.9%) 16.807 MB/sec [Average]
[info]   (min, avg, max) = (501.686, 506.228, 510.651), stdev = 4.365
[info]   CI (99.9%): [489.421, 523.035] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.475 ±(99.9%) 688.168 MB/sec [Average]
[info]   (min, avg, max) = (325.876, 522.475, 654.416), stdev = 178.715
[info]   CI (99.9%): [≈ 0, 1210.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   397.181 ±(99.9%) 532.332 B/op [Average]
[info]   (min, avg, max) = (245.053, 397.181, 499.453), stdev = 138.245
[info]   CI (99.9%): [≈ 0, 929.513] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.013 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.013, 0.032), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.800, 10.000), stdev = 4.087
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay
[info] # Run progress: 90.24% complete, ETA 00:02:09
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 106472.332 ops/s
[info] # Warmup Iteration   2: 254159.426 ops/s
[info] # Warmup Iteration   3: 257118.080 ops/s
[info] # Warmup Iteration   4: 257720.237 ops/s
[info] # Warmup Iteration   5: 255078.806 ops/s
[info] Iteration   1: 256183.569 ops/s
[info]                  ·gc.alloc.rate:                   973.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6040.481 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.128 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 258801.110 ops/s
[info]                  ·gc.alloc.rate:                   983.081 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.636 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6003.692 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.506 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 250544.722 ops/s
[info]                  ·gc.alloc.rate:                   951.691 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6241.300 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.523 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 260495.753 ops/s
[info]                  ·gc.alloc.rate:                   989.500 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.609 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6031.017 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.252 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 257105.255 ops/s
[info]                  ·gc.alloc.rate:                   976.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              5976.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.265 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6139.094 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.127 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay":
[info]   256626.082 ±(99.9%) 14550.322 ops/s [Average]
[info]   (min, avg, max) = (250544.722, 256626.082, 260495.753), stdev = 3778.672
[info]   CI (99.9%): [242075.760, 271176.404] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   974.799 ±(99.9%) 55.295 MB/sec [Average]
[info]   (min, avg, max) = (951.691, 974.799, 989.500), stdev = 14.360
[info]   CI (99.9%): [919.503, 1030.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   5976.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5976.002, 5976.002, 5976.002), stdev = 0.001
[info]   CI (99.9%): [5976.001, 5976.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.412 ±(99.9%) 30.674 MB/sec [Average]
[info]   (min, avg, max) = (983.609, 993.412, 1003.265), stdev = 7.966
[info]   CI (99.9%): [962.738, 1024.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6091.117 ±(99.9%) 378.636 B/op [Average]
[info]   (min, avg, max) = (6003.692, 6091.117, 6241.300), stdev = 98.331
[info]   CI (99.9%): [5712.481, 6469.753] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.307 ±(99.9%) 0.755 B/op [Average]
[info]   (min, avg, max) = (0.127, 0.307, 0.523), stdev = 0.196
[info]   CI (99.9%): [≈ 0, 1.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time":
[info]   39.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.800, 17.000), stdev = 5.891
[info]   CI (99.9%): [39.000, 39.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce
[info] # Run progress: 91.46% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 380950.722 ops/s
[info] # Warmup Iteration   2: 618194.968 ops/s
[info] # Warmup Iteration   3: 638837.289 ops/s
[info] # Warmup Iteration   4: 637581.748 ops/s
[info] # Warmup Iteration   5: 644527.055 ops/s
[info] Iteration   1: 643129.154 ops/s
[info]                  ·gc.alloc.rate:                   1236.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.108 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3258.751 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 646811.141 ops/s
[info]                  ·gc.alloc.rate:                   1243.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2441.908 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 643402.464 ops/s
[info]                  ·gc.alloc.rate:                   1238.223 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3276.085 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 642977.535 ops/s
[info]                  ·gc.alloc.rate:                   1235.863 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.109 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3303.547 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 647301.330 ops/s
[info]                  ·gc.alloc.rate:                   1244.206 MB/sec
[info]                  ·gc.alloc.rate.norm:              3024.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1014.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2466.761 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce":
[info]   644724.325 ±(99.9%) 8244.991 ops/s [Average]
[info]   (min, avg, max) = (642977.535, 644724.325, 647301.330), stdev = 2141.198
[info]   CI (99.9%): [636479.334, 652969.316] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1239.543 ±(99.9%) 15.222 MB/sec [Average]
[info]   (min, avg, max) = (1235.863, 1239.543, 1244.206), stdev = 3.953
[info]   CI (99.9%): [1224.321, 1254.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3024.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3024.001, 3024.001, 3024.001), stdev = 0.001
[info]   CI (99.9%): [3024.001, 3024.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1208.510 ±(99.9%) 700.329 MB/sec [Average]
[info]   (min, avg, max) = (1003.958, 1208.510, 1350.109), stdev = 181.873
[info]   CI (99.9%): [508.182, 1908.839] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2949.410 ±(99.9%) 1741.676 B/op [Average]
[info]   (min, avg, max) = (2441.908, 2949.410, 3303.547), stdev = 452.308
[info]   CI (99.9%): [1207.734, 4691.086] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.071 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.029, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.071 ±(99.9%) 0.175 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.071, 0.152), stdev = 0.045
[info]   CI (99.9%): [≈ 0, 0.246] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 11.000), stdev = 4.324
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson
[info] # Run progress: 92.68% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1046084.254 ops/s
[info] # Warmup Iteration   2: 1474052.578 ops/s
[info] # Warmup Iteration   3: 1480734.713 ops/s
[info] # Warmup Iteration   4: 1509912.289 ops/s
[info] # Warmup Iteration   5: 1521768.418 ops/s
[info] Iteration   1: 1526600.816 ops/s
[info]                  ·gc.alloc.rate:               729.709 MB/sec
[info]                  ·gc.alloc.rate.norm:          752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      653.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 673.719 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1521299.997 ops/s
[info]                  ·gc.alloc.rate:                   727.180 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.091 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     679.518 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1507049.917 ops/s
[info]                  ·gc.alloc.rate:                   722.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          986.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1027.103 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1492052.362 ops/s
[info]                  ·gc.alloc.rate:               713.164 MB/sec
[info]                  ·gc.alloc.rate.norm:          752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 699.883 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     9.000 ms
[info] Iteration   5: 1507033.148 ops/s
[info]                  ·gc.alloc.rate:                   720.323 MB/sec
[info]                  ·gc.alloc.rate.norm:              752.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.721 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     694.997 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.043 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson":
[info]   1510807.248 ±(99.9%) 52361.738 ops/s [Average]
[info]   (min, avg, max) = (1492052.362, 1510807.248, 1526600.816), stdev = 13598.177
[info]   CI (99.9%): [1458445.510, 1563168.986] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   722.537 ±(99.9%) 24.791 MB/sec [Average]
[info]   (min, avg, max) = (713.164, 722.537, 729.709), stdev = 6.438
[info]   CI (99.9%): [697.746, 747.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   752.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (752.000, 752.000, 752.000), stdev = 0.001
[info]   CI (99.9%): [752.000, 752.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   725.369 ±(99.9%) 562.521 MB/sec [Average]
[info]   (min, avg, max) = (653.748, 725.369, 986.550), stdev = 146.085
[info]   CI (99.9%): [162.848, 1287.890] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   755.044 ±(99.9%) 587.089 B/op [Average]
[info]   (min, avg, max) = (673.719, 755.044, 1027.103), stdev = 152.465
[info]   CI (99.9%): [167.955, 1342.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.083 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.022, 0.043), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.105] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.400, 11.000), stdev = 3.578
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter
[info] # Run progress: 93.90% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3761218.545 ops/s
[info] # Warmup Iteration   2: 4383727.811 ops/s
[info] # Warmup Iteration   3: 4418003.828 ops/s
[info] # Warmup Iteration   4: 4456910.921 ops/s
[info] # Warmup Iteration   5: 4485059.173 ops/s
[info] Iteration   1: 4486066.666 ops/s
[info]                  ·gc.alloc.rate:                   364.997 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.559 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     114.170 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.135 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.749 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 4463454.609 ops/s
[info]                  ·gc.alloc.rate:                   363.159 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     229.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 4487750.257 ops/s
[info]                  ·gc.alloc.rate:               365.133 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.892 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114.244 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 4407690.772 ops/s
[info]                  ·gc.alloc.rate:                   358.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     116.436 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4499717.796 ops/s
[info]                  ·gc.alloc.rate:               366.107 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.225 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 114.056 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     ≈ 0 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter":
[info]   4468936.020 ±(99.9%) 141166.657 ops/s [Average]
[info]   (min, avg, max) = (4407690.772, 4468936.020, 4499717.796), stdev = 36660.532
[info]   CI (99.9%): [4327769.363, 4610102.677] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   363.604 ±(99.9%) 11.479 MB/sec [Average]
[info]   (min, avg, max) = (358.623, 363.604, 366.107), stdev = 2.981
[info]   CI (99.9%): [352.124, 375.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   391.071 ±(99.9%) 560.497 MB/sec [Average]
[info]   (min, avg, max) = (325.559, 391.071, 651.455), stdev = 145.559
[info]   CI (99.9%): [≈ 0, 951.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   137.704 ±(99.9%) 197.880 B/op [Average]
[info]   (min, avg, max) = (114.056, 137.704, 229.614), stdev = 51.389
[info]   CI (99.9%): [≈ 0, 335.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.448 ±(99.9%) 3.634 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.448, 2.135), stdev = 0.944
[info]   CI (99.9%): [≈ 0, 4.081] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.157 ±(99.9%) 1.274 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.157, 0.749), stdev = 0.331
[info]   CI (99.9%): [≈ 0, 1.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   12.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 2.400, 5.000), stdev = 1.817
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay
[info] # Run progress: 95.12% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 103229.607 ops/s
[info] # Warmup Iteration   2: 218158.910 ops/s
[info] # Warmup Iteration   3: 217295.153 ops/s
[info] # Warmup Iteration   4: 220118.228 ops/s
[info] # Warmup Iteration   5: 219439.564 ops/s
[info] Iteration   1: 218167.491 ops/s
[info]                  ·gc.alloc.rate:                   1098.280 MB/sec
[info]                  ·gc.alloc.rate.norm:              7920.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.479 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9500.705 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.451 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 221763.452 ops/s
[info]                  ·gc.alloc.rate:                   1116.446 MB/sec
[info]                  ·gc.alloc.rate.norm:              7920.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.003 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7051.400 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.295 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 219270.372 ops/s
[info]                  ·gc.alloc.rate:                   1103.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              7920.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7165.161 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.448 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 214452.643 ops/s
[info]                  ·gc.alloc.rate:                   1079.606 MB/sec
[info]                  ·gc.alloc.rate.norm:              7920.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.311 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7360.306 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.611 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 216721.174 ops/s
[info]                  ·gc.alloc.rate:                   1091.046 MB/sec
[info]                  ·gc.alloc.rate.norm:              7920.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.220 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9750.561 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.151 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay":
[info]   218075.027 ±(99.9%) 10544.801 ops/s [Average]
[info]   (min, avg, max) = (214452.643, 218075.027, 221763.452), stdev = 2738.451
[info]   CI (99.9%): [207530.226, 228619.827] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1097.849 ±(99.9%) 53.125 MB/sec [Average]
[info]   (min, avg, max) = (1079.606, 1097.849, 1116.446), stdev = 13.796
[info]   CI (99.9%): [1044.724, 1150.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   7920.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7920.002, 7920.002, 7920.002), stdev = 0.001
[info]   CI (99.9%): [7920.002, 7920.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.335 ±(99.9%) 700.556 MB/sec [Average]
[info]   (min, avg, max) = (994.003, 1131.335, 1343.220), stdev = 181.932
[info]   CI (99.9%): [430.779, 1831.891] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8165.627 ±(99.9%) 5160.949 B/op [Average]
[info]   (min, avg, max) = (7051.400, 8165.627, 9750.561), stdev = 1340.282
[info]   CI (99.9%): [3004.677, 13326.576] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.391 ±(99.9%) 0.672 B/op [Average]
[info]   (min, avg, max) = (0.151, 0.391, 0.611), stdev = 0.175
[info]   CI (99.9%): [≈ 0, 1.064] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time":
[info]   32.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.400, 10.000), stdev = 3.050
[info]   CI (99.9%): [32.000, 32.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce
[info] # Run progress: 96.34% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3131.326 ops/s
[info] # Warmup Iteration   2: 6632.786 ops/s
[info] # Warmup Iteration   3: 7436.677 ops/s
[info] # Warmup Iteration   4: 7542.242 ops/s
[info] # Warmup Iteration   5: 7435.260 ops/s
[info] Iteration   1: 7433.875 ops/s
[info]                  ·gc.alloc.rate:                   947.235 MB/sec
[info]                  ·gc.alloc.rate.norm:              200456.062 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.988 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     209926.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 26.515 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 7465.536 ops/s
[info]                  ·gc.alloc.rate:                   951.282 MB/sec
[info]                  ·gc.alloc.rate.norm:              200456.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     210150.527 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.777 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 7545.675 ops/s
[info]                  ·gc.alloc.rate:                   961.432 MB/sec
[info]                  ·gc.alloc.rate.norm:              200456.057 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.909 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     208895.457 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.684 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 7544.822 ops/s
[info]                  ·gc.alloc.rate:               961.359 MB/sec
[info]                  ·gc.alloc.rate.norm:          200460.713 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1005.941 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 209756.887 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 7484.931 ops/s
[info]                  ·gc.alloc.rate:                   953.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              200504.058 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1009.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     212110.104 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 8.753 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce":
[info]   7494.968 ±(99.9%) 190.169 ops/s [Average]
[info]   (min, avg, max) = (7433.875, 7494.968, 7545.675), stdev = 49.386
[info]   CI (99.9%): [7304.799, 7685.136] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate":
[info]   955.053 ±(99.9%) 24.124 MB/sec [Average]
[info]   (min, avg, max) = (947.235, 955.053, 961.432), stdev = 6.265
[info]   CI (99.9%): [930.929, 979.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm":
[info]   200466.590 ±(99.9%) 81.025 B/op [Average]
[info]   (min, avg, max) = (200456.057, 200466.590, 200504.058), stdev = 21.042
[info]   CI (99.9%): [200385.565, 200547.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space":
[info]   1001.260 ±(99.9%) 26.309 MB/sec [Average]
[info]   (min, avg, max) = (991.988, 1001.260, 1009.175), stdev = 6.832
[info]   CI (99.9%): [974.951, 1027.570] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm":
[info]   210167.945 ±(99.9%) 4563.726 B/op [Average]
[info]   (min, avg, max) = (208895.457, 210167.945, 212110.104), stdev = 1185.185
[info]   CI (99.9%): [205604.219, 214731.671] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.176 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.125), stdev = 0.046
[info]   CI (99.9%): [≈ 0, 0.226] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm":
[info]   10.546 ±(99.9%) 37.335 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10.546, 26.515), stdev = 9.696
[info]   CI (99.9%): [≈ 0, 47.880] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 10.000), stdev = 3.033
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson
[info] # Run progress: 97.56% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 12052.575 ops/s
[info] # Warmup Iteration   2: 25971.389 ops/s
[info] # Warmup Iteration   3: 26696.867 ops/s
[info] # Warmup Iteration   4: 26581.804 ops/s
[info] # Warmup Iteration   5: 26734.552 ops/s
[info] Iteration   1: 26727.987 ops/s
[info]                  ·gc.alloc.rate:                   373.298 MB/sec
[info]                  ·gc.alloc.rate.norm:              21973.073 B/op
[info]                  ·gc.churn.PS_Eden_Space:          323.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     19063.592 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.226 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 26904.407 ops/s
[info]                  ·gc.alloc.rate:               375.767 MB/sec
[info]                  ·gc.alloc.rate.norm:          21972.891 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19055.099 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 26545.937 ops/s
[info]                  ·gc.alloc.rate:               371.779 MB/sec
[info]                  ·gc.alloc.rate.norm:          21973.209 B/op
[info]                  ·gc.churn.PS_Eden_Space:      324.104 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19155.472 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 26892.191 ops/s
[info]                  ·gc.alloc.rate:               375.602 MB/sec
[info]                  ·gc.alloc.rate.norm:          21972.990 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.548 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 19161.775 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 26620.806 ops/s
[info]                  ·gc.alloc.rate:               371.803 MB/sec
[info]                  ·gc.alloc.rate.norm:          21973.016 B/op
[info]                  ·gc.churn.PS_Eden_Space:      656.426 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 38793.846 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson":
[info]   26738.266 ±(99.9%) 615.467 ops/s [Average]
[info]   (min, avg, max) = (26545.937, 26738.266, 26904.407), stdev = 159.835
[info]   CI (99.9%): [26122.799, 27353.732] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate":
[info]   373.650 ±(99.9%) 7.539 MB/sec [Average]
[info]   (min, avg, max) = (371.779, 373.650, 375.767), stdev = 1.958
[info]   CI (99.9%): [366.111, 381.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm":
[info]   21973.036 ±(99.9%) 0.450 B/op [Average]
[info]   (min, avg, max) = (21972.891, 21973.036, 21973.209), stdev = 0.117
[info]   CI (99.9%): [21972.586, 21973.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space":
[info]   391.563 ±(99.9%) 570.165 MB/sec [Average]
[info]   (min, avg, max) = (323.869, 391.563, 656.426), stdev = 148.070
[info]   CI (99.9%): [≈ 0, 961.728] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm":
[info]   23045.957 ±(99.9%) 33899.061 B/op [Average]
[info]   (min, avg, max) = (19055.099, 23045.957, 38793.846), stdev = 8803.479
[info]   CI (99.9%): [≈ 0, 56945.018] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space":
[info]   0.004 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.040] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.245 ±(99.9%) 2.111 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.245, 1.226), stdev = 0.548
[info]   CI (99.9%): [≈ 0, 2.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count":
[info]   6.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.200, 2.000), stdev = 0.447
[info]   CI (99.9%): [6.000, 6.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 10.000), stdev = 4.278
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter
[info] # Run progress: 98.78% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 27646.993 ops/s
[info] # Warmup Iteration   2: 38219.078 ops/s
[info] # Warmup Iteration   3: 38564.408 ops/s
[info] # Warmup Iteration   4: 38479.184 ops/s
[info] # Warmup Iteration   5: 38466.052 ops/s
[info] Iteration   1: 38667.908 ops/s
[info]                  ·gc.alloc.rate:                   260.345 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.914 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10411.739 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.031 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 1.271 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 38757.912 ops/s
[info]                  ·gc.alloc.rate:      260.951 MB/sec
[info]                  ·gc.alloc.rate.norm: 10592.012 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 38805.614 ops/s
[info]                  ·gc.alloc.rate:                   261.271 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.887 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13171.029 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 89.496 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 38574.689 ops/s
[info]                  ·gc.alloc.rate:                   259.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:          324.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     13249.891 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 2.548 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 38710.041 ops/s
[info]                  ·gc.alloc.rate:               260.628 MB/sec
[info]                  ·gc.alloc.rate.norm:          10592.011 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.224 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 13217.231 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter":
[info]   38703.233 ±(99.9%) 340.567 ops/s [Average]
[info]   (min, avg, max) = (38574.689, 38703.233, 38805.614), stdev = 88.444
[info]   CI (99.9%): [38362.666, 39043.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate":
[info]   260.583 ±(99.9%) 2.290 MB/sec [Average]
[info]   (min, avg, max) = (259.719, 260.583, 261.271), stdev = 0.595
[info]   CI (99.9%): [258.293, 262.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm":
[info]   10592.011 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10592.011, 10592.011, 10592.012), stdev = 0.001
[info]   CI (99.9%): [10592.010, 10592.013] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space":
[info]   246.183 ±(99.9%) 542.304 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 246.183, 325.224), stdev = 140.835
[info]   CI (99.9%): [≈ 0, 788.487] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   10009.978 ±(99.9%) 22047.822 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 10009.978, 13249.891), stdev = 5725.749
[info]   CI (99.9%): [≈ 0, 32057.800] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.460 ±(99.9%) 3.763 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.460, 2.208), stdev = 0.977
[info]   CI (99.9%): [≈ 0, 4.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   18.663 ±(99.9%) 152.528 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 18.663, 89.496), stdev = 39.611
[info]   CI (99.9%): [≈ 0, 171.191] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count":
[info]   4.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.800, 1.000), stdev = 0.447
[info]   CI (99.9%): [4.000, 4.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time":
[info]   15.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 3.000, 6.000), stdev = 2.236
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:22:02
[info] Benchmark                                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecMakerBenchmark.missingReqFieldCirce                                                     thrpt    5   1514092.185 ±  87621.160   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate                                      thrpt    5      2432.917 ±    140.832  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.alloc.rate.norm                                 thrpt    5      2528.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space                             thrpt    5      2447.561 ±    588.547  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2543.580 ±    619.929    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.062 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.065 ±      0.135    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.count                                           thrpt    5        36.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldCirce:·gc.time                                            thrpt    5        56.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJackson                                                   thrpt    5    213757.959 ±   5477.956   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate                                    thrpt    5       503.275 ±     12.869  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.alloc.rate.norm                               thrpt    5      3704.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space                           thrpt    5       458.510 ±    692.310  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      3370.741 ±   5040.379    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.021 ±      0.113  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.153 ±      0.834    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.count                                         thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJackson:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter                                                  thrpt    5    448329.628 ±  10856.997   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate                                   thrpt    5       417.194 ±     10.104  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.alloc.rate.norm                              thrpt    5      1464.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       456.696 ±    688.619  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5      1601.497 ±   2400.517    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.029 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.102 ±      0.578    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.count                                        thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniter:·gc.time                                         thrpt    5        11.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless                                         thrpt    5   1809224.105 ±  69102.999   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate                          thrpt    5      1122.406 ±     42.994  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.alloc.rate.norm                     thrpt    5       976.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space                 thrpt    5      1135.204 ±    723.464  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Eden_Space.norm            thrpt    5       986.978 ±    623.229    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space             thrpt    5         0.058 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.051 ±      0.152    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.count                               thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStackless:·gc.time                                thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump                                   thrpt    5   3674568.507 ±  51584.968   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate                    thrpt    5       523.184 ±      7.331  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.alloc.rate.norm               thrpt    5       224.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space           thrpt    5       523.328 ±    690.012  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Eden_Space.norm      thrpt    5       224.080 ±    295.649    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space       thrpt    5         0.025 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.011 ±      0.062    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.count                         thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldJsoniterStacklessNoDump:·gc.time                          thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.missingReqFieldPlay                                                      thrpt    5    123146.468 ±   3300.740   ops/s
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate                                       thrpt    5      1027.581 ±     27.519  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.alloc.rate.norm                                  thrpt    5     13128.004 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space                              thrpt    5       994.605 ±     30.527  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5     12707.377 ±    589.286    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.693 ±      1.572    B/op
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.count                                            thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.missingReqFieldPlay:·gc.time                                             thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsCirce                                                         thrpt    5   1192991.052 ±  39706.803   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate                                          thrpt    5      1862.376 ±     62.040  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                                     thrpt    5      2456.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1830.540 ±    719.666  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2414.353 ±    961.489    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.077 ±      0.090    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.count                                               thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsCirce:·gc.time                                                thrpt    5        37.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJackson                                                       thrpt    5   1791760.715 ±  48356.724   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate                                        thrpt    5      1275.561 ±     34.442  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                                   thrpt    5      1120.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1280.298 ±    585.997  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1124.668 ±    530.845    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.029 ±      0.039    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJackson:·gc.time                                              thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter                                                      thrpt    5   6491719.364 ± 135985.676   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                                       thrpt    5       825.271 ±     17.321  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       859.094 ±    697.518  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       208.302 ±    171.191    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.008 ±      0.029    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.count                                            thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsJsoniter:·gc.time                                             thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.readAnyRefsPlay                                                          thrpt    5    424573.257 ±  12299.806   ops/s
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate                                           thrpt    5      1122.629 ±     32.419  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                                      thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1132.477 ±    714.317  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      4197.110 ±   2662.711    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.062 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.232 ±      0.365    B/op
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.count                                                thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readAnyRefsPlay:·gc.time                                                 thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readArraysCirce                                                          thrpt    5    635249.734 ±  27122.718   ops/s
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate                                           thrpt    5      2076.957 ±     88.900  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.alloc.rate.norm                                      thrpt    5      5144.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                                  thrpt    5      2036.448 ±     22.742  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5044.068 ±    174.426    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                              thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.113 ±      0.167    B/op
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.count                                                thrpt    5        30.000               counts
[info] JsonCodecMakerBenchmark.readArraysCirce:·gc.time                                                 thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJackson                                                        thrpt    5   1240592.761 ±  23822.213   ops/s
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate                                         thrpt    5      1129.225 ±     21.773  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.alloc.rate.norm                                    thrpt    5      1432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                                thrpt    5      1132.462 ±    691.291  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1436.992 ±    904.371    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                            thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.037 ±      0.092    B/op
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.count                                              thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readArraysJackson:·gc.time                                               thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.readArraysJsoniter                                                       thrpt    5   2375042.136 ± 172485.183   ops/s
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate                                        thrpt    5       990.350 ±     71.835  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                                   thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                               thrpt    5       997.526 ±     27.661  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm                          thrpt    5       661.004 ±     64.733    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                           thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.038 ±      0.067    B/op
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.count                                             thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readArraysJsoniter:·gc.time                                              thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.readArraysPlay                                                           thrpt    5    227419.048 ±  18057.087   ops/s
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate                                            thrpt    5      1393.490 ±    110.442  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.alloc.rate.norm                                       thrpt    5      9640.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                                   thrpt    5      1406.069 ±    582.043  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                              thrpt    5      9727.734 ±   3974.856    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                               thrpt    5         0.062 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.433 ±      0.564    B/op
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.count                                                 thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readArraysPlay:·gc.time                                                  thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJackson                                                       thrpt    5   1762815.356 ±  41434.077   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate                                        thrpt    5      1138.408 ±     26.748  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                                   thrpt    5      1016.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1142.610 ±    714.567  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5      1019.998 ±    644.998    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.033 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.030 ±      0.063    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJackson:·gc.time                                              thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter                                                      thrpt    5   3631533.148 ± 186280.583   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate                                       thrpt    5       480.124 ±     24.592  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                                  thrpt    5       208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5       457.160 ±    688.115  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       197.384 ±    288.405    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.037 ±      0.174  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.016 ±      0.074    B/op
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.count                                            thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsJsoniter:·gc.time                                             thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readBitSetsPlay                                                          thrpt    5    274877.222 ±  22883.917   ops/s
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate                                           thrpt    5      1290.120 ±    107.404  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                                      thrpt    5      7384.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1270.775 ±    588.460  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      7278.614 ±   3505.767    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.054 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.310 ±      1.001    B/op
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.count                                                thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readBitSetsPlay:·gc.time                                                 thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce                                                   thrpt    5    554116.859 ±  17106.179   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate                                    thrpt    5      1834.291 ±     56.588  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                               thrpt    5      5208.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                           thrpt    5      1829.750 ±    700.829  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5      5196.302 ±   2041.754    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.062 ±      0.127  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.177 ±      0.361    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.count                                         thrpt    5        27.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsCirce:·gc.time                                          thrpt    5        52.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson                                                 thrpt    5    715456.591 ±  27265.945   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate                                  thrpt    5       894.979 ±     34.161  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                             thrpt    5      1968.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space                         thrpt    5       935.118 ±    574.560  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5      2056.408 ±   1266.521    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.025 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.055 ±      0.193    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.count                                       thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJackson:·gc.time                                        thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter                                                thrpt    5   4268942.643 ± 173879.388   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                                 thrpt    5       195.372 ±      7.950  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                            thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       167.472 ±    598.778  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5        61.737 ±    221.304    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.439 ±      3.761  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.164 ±      1.401    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.count                                      thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsJsoniter:·gc.time                                       thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay                                                    thrpt    5    192991.583 ±   4182.126   ops/s
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate                                     thrpt    5       987.259 ±     21.376  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                                thrpt    5      8048.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                            thrpt    5       993.693 ±     29.547  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5      8100.916 ±    407.644    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.272 ±      0.743    B/op
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.count                                          thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readExtractFieldsPlay:·gc.time                                           thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce                                                   thrpt    5      5075.428 ±    211.695   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate                                    thrpt    5      1267.769 ±     52.825  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.alloc.rate.norm                               thrpt    5    392960.086 ±      0.011    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                           thrpt    5      1276.530 ±    570.557  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                      thrpt    5    395981.700 ± 186593.470    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                       thrpt    5         0.066 ±      0.128  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        20.434 ±     39.910    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPICirce:·gc.time                                          thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson                                                 thrpt    5      9712.478 ±     34.237   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate                                  thrpt    5       262.015 ±      0.945  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.alloc.rate.norm                             thrpt    5     42440.045 ±      0.006    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                         thrpt    5       245.901 ±    541.561  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                    thrpt    5     39830.099 ±  87743.489    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                     thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.675 ±      5.816    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.count                                       thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJackson:·gc.time                                        thrpt    5         5.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter                                                thrpt    5     15353.199 ±    525.181   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate                                 thrpt    5       287.381 ±      9.807  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                            thrpt    5     29448.031 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                        thrpt    5       311.342 ±    119.341  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                   thrpt    5     31904.369 ±  12243.163    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                    thrpt    5         0.472 ±      3.886  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm               thrpt    5        49.058 ±    404.399    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIJsoniter:·gc.time                                       thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay                                                    thrpt    5      1960.188 ±     65.762   ops/s
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate                                     thrpt    5      1190.238 ±     40.080  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.alloc.rate.norm                                thrpt    5    955216.224 ±      0.026    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                            thrpt    5      1138.121 ±    708.701  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                       thrpt    5    913447.599 ± 569598.572    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                        thrpt    5         0.029 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                   thrpt    5        23.349 ±     34.569    B/op
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.count                                          thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readGoogleMapsAPIPlay:·gc.time                                           thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter                                               thrpt    5   3278467.053 ±  80944.925   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                                thrpt    5       983.616 ±     24.360  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                           thrpt    5       472.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       930.324 ±    565.721  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5       446.533 ±    273.996    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.026 ±      0.035    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.count                                     thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsJsoniter:·gc.time                                      thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay                                                   thrpt    5    244083.922 ±   1628.082   ops/s
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                                    thrpt    5      1311.915 ±      8.964  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                               thrpt    5      8456.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1338.557 ±     40.335  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5      8627.795 ±    294.704    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.054 ±      0.166  MB/sec
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.349 ±      1.070    B/op
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.count                                         thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.readIntAndLongMapsPlay:·gc.time                                          thrpt    5        28.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesCirce                                                       thrpt    5    543558.985 ±  17417.485   ops/s
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate                                        thrpt    5      1904.374 ±     60.993  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.alloc.rate.norm                                   thrpt    5      5512.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                               thrpt    5      1898.581 ±    711.306  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5497.853 ±   2174.691    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                           thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.121 ±      0.286    B/op
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.count                                             thrpt    5        28.000               counts
[info] JsonCodecMakerBenchmark.readIterablesCirce:·gc.time                                              thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJackson                                                     thrpt    5    519306.517 ±  13336.533   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate                                      thrpt    5       528.132 ±     13.546  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.alloc.rate.norm                                 thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                             thrpt    5       526.135 ±    691.160  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm                        thrpt    5      1595.472 ±   2112.443    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space                         thrpt    5         0.042 ±      0.278  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.125 ±      0.833    B/op
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.count                                           thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJackson:·gc.time                                            thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesJsoniter                                                    thrpt    5   2781669.028 ±  51141.756   ops/s
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate                                     thrpt    5       749.672 ±     13.770  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                                thrpt    5       424.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                            thrpt    5       724.595 ±    559.953  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                       thrpt    5       409.948 ±    320.583    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space                        thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.017 ±      0.069    B/op
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.readIterablesJsoniter:·gc.time                                           thrpt    5        14.000                   ms
[info] JsonCodecMakerBenchmark.readIterablesPlay                                                        thrpt    5    175493.813 ±   5006.370   ops/s
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate                                         thrpt    5      1242.180 ±     35.488  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.alloc.rate.norm                                    thrpt    5     11136.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                                thrpt    5      1269.279 ±    574.090  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                           thrpt    5     11386.022 ±   5379.147    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                            thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.374 ±      0.889    B/op
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.count                                              thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readIterablesPlay:·gc.time                                               thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readMapsCirce                                                            thrpt    5    465815.189 ±   7793.550   ops/s
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate                                             thrpt    5      1655.699 ±     27.716  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.alloc.rate.norm                                        thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                                    thrpt    5      1623.508 ±    574.040  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5483.422 ±   1943.864    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                                thrpt    5         0.042 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.141 ±      0.192    B/op
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.count                                                  thrpt    5        24.000               counts
[info] JsonCodecMakerBenchmark.readMapsCirce:·gc.time                                                   thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJackson                                                          thrpt    5    904769.682 ±  44200.299   ops/s
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate                                           thrpt    5      1067.395 ±     52.026  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.alloc.rate.norm                                      thrpt    5      1856.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                                  thrpt    5      1005.296 ±     21.328  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                             thrpt    5      1748.221 ±     83.315    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                              thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.087 ±      0.164    B/op
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.count                                                thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.readMapsJackson:·gc.time                                                 thrpt    5        41.000                   ms
[info] JsonCodecMakerBenchmark.readMapsJsoniter                                                         thrpt    5   3057722.563 ±  49953.185   ops/s
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate                                          thrpt    5       761.868 ±     12.457  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                                 thrpt    5       791.021 ±    690.730  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                            thrpt    5       406.926 ±    353.634    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                             thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.019 ±      0.035    B/op
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.count                                               thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readMapsJsoniter:·gc.time                                                thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.readMapsPlay                                                             thrpt    5    249405.470 ±  11556.233   ops/s
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate                                              thrpt    5      1302.442 ±     60.225  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.alloc.rate.norm                                         thrpt    5      8216.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                                     thrpt    5      1270.889 ±    565.272  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                                thrpt    5      8021.780 ±   3714.569    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                                 thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                            thrpt    5         0.237 ±      0.427    B/op
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.count                                                   thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.readMapsPlay:·gc.time                                                    thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJackson                                                   thrpt    5    681048.223 ±  12807.826   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate                                    thrpt    5       883.096 ±     16.633  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                               thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                           thrpt    5       865.328 ±    690.805  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5      1999.433 ±   1605.777    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.046 ±      0.200  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.106 ±      0.462    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.count                                         thrpt    5        13.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJackson:·gc.time                                          thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter                                                  thrpt    5   2239619.610 ± 111639.836   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                                   thrpt    5      1059.116 ±     52.840  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                              thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5      1066.187 ±    576.040  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       750.078 ±    446.022    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.032 ±      0.074    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.count                                        thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsJsoniter:·gc.time                                         thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readMutableMapsPlay                                                      thrpt    5    222358.943 ±  10518.932   ops/s
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate                                       thrpt    5      1171.376 ±     55.545  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                                  thrpt    5      8288.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1200.241 ±    703.605  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8488.145 ±   4842.242    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.353 ±      0.496    B/op
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.count                                            thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.readMutableMapsPlay:·gc.time                                             thrpt    5        30.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesCirce                                                      thrpt    5    458049.418 ±  10756.024   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate                                       thrpt    5      1358.045 ±     31.446  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.alloc.rate.norm                                  thrpt    5      4664.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1413.893 ±    582.126  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      4856.573 ±   2033.449    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.072 ±      0.196    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.count                                            thrpt    5        21.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesCirce:·gc.time                                             thrpt    5        26.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJackson                                                    thrpt    5    979418.006 ±  30498.828   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate                                     thrpt    5       752.025 ±     23.364  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                                thrpt    5      1208.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       798.095 ±    700.490  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5      1280.960 ±   1100.029    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.060 ±      0.191    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.count                                          thrpt    5        12.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJackson:·gc.time                                           thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter                                                   thrpt    5   3308789.808 ± 171996.968   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                                    thrpt    5       100.952 ±      5.243  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                               thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       102.361 ±    539.720  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5        48.828 ±    257.467    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.006 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.003 ±      0.017    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.count                                         thrpt    5         2.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesJsoniter:·gc.time                                          thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.readPrimitivesPlay                                                       thrpt    5    165579.858 ±   4386.947   ops/s
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate                                        thrpt    5      1124.873 ±     29.811  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                                   thrpt    5     10688.003 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1132.808 ±    724.544  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5     10763.762 ±   6888.661    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.054 ±      0.108  MB/sec
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.516 ±      1.032    B/op
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.count                                             thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.readPrimitivesPlay:·gc.time                                              thrpt    5        35.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPICirce                                                      thrpt    5      7369.482 ±    352.535   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate                                       thrpt    5      1041.904 ±     49.857  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.alloc.rate.norm                                  thrpt    5    222412.449 ±     37.804    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space                              thrpt    5      1067.636 ±    563.931  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5    227702.735 ± 110995.646    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.071 ±      0.267  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5        14.989 ±     56.835    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPICirce:·gc.time                                             thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson                                                    thrpt    5     11794.411 ±    285.442   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate                                     thrpt    5       186.914 ±      4.449  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.alloc.rate.norm                                thrpt    5     24928.041 ±      0.023    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space                            thrpt    5       166.925 ±    596.277  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5     22326.216 ±  79665.117    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.554 ±      4.773    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.count                                          thrpt    5         3.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJackson:·gc.time                                           thrpt    5         6.000                   ms
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter                                                   thrpt    5     20975.776 ±    498.193   ops/s
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate                                    thrpt    5       230.815 ±      5.494  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.alloc.rate.norm                               thrpt    5     17311.709 ±      2.704    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       218.579 ±    484.493  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5     16437.858 ±  36475.917    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.458 ±      3.833  MB/sec
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        34.557 ±    289.162    B/op
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.count                                         thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.readTwitterAPIJsoniter:·gc.time                                          thrpt    5        13.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce                                                        thrpt    5   1393732.887 ±  48426.993   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate                                         thrpt    5      1509.576 ±     52.596  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                                    thrpt    5      1704.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                                thrpt    5      1484.133 ±    715.801  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                           thrpt    5      1674.851 ±    787.578    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                            thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.033 ±      0.081    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.count                                              thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsCirce:·gc.time                                               thrpt    5        54.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson                                                      thrpt    5   3692530.764 ±  74717.456   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate                                       thrpt    5      1013.942 ±     20.444  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1068.679 ±    577.976  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       455.211 ±    241.350    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.007 ±      0.015    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.count                                            thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJackson:·gc.time                                             thrpt    5        25.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter                                                     thrpt    5  15461380.552 ± 310299.452   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                                      thrpt    5       471.736 ±      9.427  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                                 thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       457.238 ±    687.306  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5        46.514 ±     69.787    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.003 ±      0.011    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.count                                           thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsJsoniter:·gc.time                                            thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay                                                         thrpt    5    842545.265 ±  23963.423   ops/s
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate                                          thrpt    5      1246.724 ±     35.531  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                                     thrpt    5      2328.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1271.025 ±    587.558  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2374.488 ±   1132.526    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.101 ±      0.170    B/op
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.count                                               thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeAnyRefsPlay:·gc.time                                                thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysCirce                                                         thrpt    5    726649.504 ±  24886.418   ops/s
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate                                          thrpt    5      1755.186 ±     60.331  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.alloc.rate.norm                                     thrpt    5      3800.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                                 thrpt    5      1756.317 ±    546.783  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                            thrpt    5      3801.652 ±   1120.063    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                             thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.099 ±      0.281    B/op
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.count                                               thrpt    5        26.000               counts
[info] JsonCodecMakerBenchmark.writeArraysCirce:·gc.time                                                thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJackson                                                       thrpt    5   2590187.299 ±  73999.996   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate                                        thrpt    5      1501.499 ±     42.981  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.alloc.rate.norm                                   thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                               thrpt    5      1485.230 ±    715.783  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm                          thrpt    5       901.967 ±    427.623    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                           thrpt    5         0.025 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.015 ±      0.022    B/op
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.count                                             thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJackson:·gc.time                                              thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysJsoniter                                                      thrpt    5   4715886.669 ± 138726.895   ops/s
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate                                       thrpt    5      1294.930 ±     38.024  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                                  thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                              thrpt    5      1340.951 ±     37.420  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm                         thrpt    5       447.357 ±      7.452    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.018 ±      0.041    B/op
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.count                                            thrpt    5        20.000               counts
[info] JsonCodecMakerBenchmark.writeArraysJsoniter:·gc.time                                             thrpt    5        44.000                   ms
[info] JsonCodecMakerBenchmark.writeArraysPlay                                                          thrpt    5    327003.548 ±   3022.267   ops/s
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate                                           thrpt    5      1167.334 ±     10.689  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.alloc.rate.norm                                      thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                                  thrpt    5      1199.985 ±    702.481  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                             thrpt    5      5773.258 ±   3383.899    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                              thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm                         thrpt    5         0.180 ±      0.502    B/op
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.count                                                thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writeArraysPlay:·gc.time                                                 thrpt    5        23.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJackson                                                      thrpt    5   2044723.902 ±  57005.477   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate                                       thrpt    5      1081.315 ±     30.126  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                                  thrpt    5       832.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                              thrpt    5      1138.286 ±    702.123  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm                         thrpt    5       875.143 ±    517.097    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space                          thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.013 ±      0.028    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJackson:·gc.time                                             thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter                                                     thrpt    5   4223849.958 ± 188594.497   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                                      thrpt    5       773.217 ±     34.501  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                                 thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                             thrpt    5       725.653 ±    567.690  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm                        thrpt    5       270.590 ±    220.144    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space                         thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.014 ±      0.054    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.count                                           thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsJsoniter:·gc.time                                            thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeBitSetsPlay                                                         thrpt    5    504385.034 ±  10574.918   ops/s
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate                                          thrpt    5      1492.692 ±     31.277  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                                     thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                                 thrpt    5      1544.916 ±    707.338  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                            thrpt    5      4818.763 ±   2198.880    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                             thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.169 ±      0.221    B/op
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.count                                               thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeBitSetsPlay:·gc.time                                                thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce                                                  thrpt    5      5364.655 ±    132.152   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate                                   thrpt    5      1487.514 ±     36.616  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.alloc.rate.norm                              thrpt    5    436224.081 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space                          thrpt    5      1485.869 ±    718.573  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Eden_Space.norm                     thrpt    5    435988.508 ± 220193.728    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space                      thrpt    5         0.038 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        11.187 ±     31.346    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.count                                        thrpt    5        22.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPICirce:·gc.time                                         thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson                                                thrpt    5     21944.832 ±    716.849   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate                                 thrpt    5       362.792 ±     11.835  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.alloc.rate.norm                            thrpt    5     26007.840 ±      0.893    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space                        thrpt    5       326.414 ±      6.335  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Eden_Space.norm                   thrpt    5     23401.626 ±   1013.765    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space                    thrpt    5         0.008 ±      0.044  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.597 ±      3.146    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.count                                      thrpt    5         5.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJackson:·gc.time                                       thrpt    5         7.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter                                               thrpt    5     34332.865 ±    210.203   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate                                thrpt    5       263.279 ±      1.601  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.alloc.rate.norm                           thrpt    5     12064.013 ±      0.002    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space                       thrpt    5       246.311 ±    542.647  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Eden_Space.norm                  thrpt    5     11284.573 ±  24852.974    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space                   thrpt    5         0.466 ±      3.876  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.churn.PS_Survivor_Space.norm              thrpt    5        21.369 ±    177.908    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.count                                     thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIJsoniter:·gc.time                                      thrpt    5         8.000                   ms
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay                                                   thrpt    5      3959.385 ±     51.601   ops/s
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate                                    thrpt    5      1244.423 ±     16.027  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.alloc.rate.norm                               thrpt    5    494439.964 ±      1.011    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space                           thrpt    5      1268.308 ±    573.668  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Eden_Space.norm                      thrpt    5    504022.403 ± 231111.546    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space                       thrpt    5         0.037 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.churn.PS_Survivor_Space.norm                  thrpt    5        14.884 ±     26.540    B/op
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.count                                         thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeGoogleMapsAPIPlay:·gc.time                                          thrpt    5        31.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson                                               thrpt    5    706421.824 ±  23642.900   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                                thrpt    5      1551.845 ±     51.856  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                           thrpt    5      3456.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1552.245 ±    706.233  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      3458.380 ±   1626.239    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.092 ±      0.176    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.count                                     thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJackson:·gc.time                                      thrpt    5        38.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter                                              thrpt    5   2413680.909 ±  48069.007   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                               thrpt    5       466.451 ±      9.390  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       304.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       457.122 ±    688.397  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       298.311 ±    454.082    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.021 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.014 ±      0.053    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.count                                    thrpt    5         7.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsJsoniter:·gc.time                                     thrpt    5        10.000                   ms
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay                                                  thrpt    5    249840.787 ±   3695.593   ops/s
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                                   thrpt    5       979.560 ±     14.637  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                              thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5       993.458 ±     30.035  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      6255.608 ±    221.863    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.046 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.289 ±      0.907    B/op
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.count                                        thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeIntAndLongMapsPlay:·gc.time                                         thrpt    5        34.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesCirce                                                      thrpt    5    613194.284 ±  10577.805   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate                                       thrpt    5      1565.294 ±     26.924  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                                  thrpt    5      4016.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                              thrpt    5      1554.360 ±    728.811  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm                         thrpt    5      3988.206 ±   1878.272    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space                          thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.064 ±      0.173    B/op
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.count                                            thrpt    5        23.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesCirce:·gc.time                                             thrpt    5        47.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJackson                                                    thrpt    5   1214288.909 ±  34566.487   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate                                     thrpt    5       747.099 ±     21.232  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                                thrpt    5       968.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                            thrpt    5       723.356 ±    577.081  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm                       thrpt    5       937.382 ±    751.561    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space                        thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.022 ±      0.088    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.count                                          thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJackson:·gc.time                                           thrpt    5        18.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter                                                   thrpt    5   4496837.976 ±  78641.630   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate                                    thrpt    5       685.987 ±     12.011  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                               thrpt    5       240.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                           thrpt    5       723.190 ±    565.071  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm                      thrpt    5       253.100 ±    200.112    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space                       thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.017 ±      0.043    B/op
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesJsoniter:·gc.time                                          thrpt    5        33.000                   ms
[info] JsonCodecMakerBenchmark.writeIterablesPlay                                                       thrpt    5    375115.296 ±  13647.630   ops/s
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate                                        thrpt    5      1291.328 ±     46.988  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                                   thrpt    5      5416.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                               thrpt    5      1271.030 ±    576.200  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm                          thrpt    5      5326.907 ±   2268.762    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                           thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm                      thrpt    5         0.193 ±      0.441    B/op
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.count                                             thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeIterablesPlay:·gc.time                                              thrpt    5        40.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsCirce                                                           thrpt    5    341122.155 ±   5266.089   ops/s
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate                                            thrpt    5      1004.323 ±     15.524  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.alloc.rate.norm                                       thrpt    5      4632.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                                   thrpt    5      1059.322 ±    602.470  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                              thrpt    5      4885.246 ±   2760.550    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                               thrpt    5         0.046 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm                          thrpt    5         0.211 ±      0.309    B/op
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.count                                                 thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMapsCirce:·gc.time                                                  thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJackson                                                         thrpt    5    819217.788 ±  22195.837   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate                                          thrpt    5      1249.717 ±     33.799  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.alloc.rate.norm                                     thrpt    5      2400.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                                 thrpt    5      1276.317 ±    569.861  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                            thrpt    5      2451.324 ±   1101.071    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                             thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm                        thrpt    5         0.056 ±      0.175    B/op
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.count                                               thrpt    5        19.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJackson:·gc.time                                                thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsJsoniter                                                        thrpt    5   2356602.356 ±  30022.338   ops/s
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate                                         thrpt    5       563.207 ±      7.169  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                                    thrpt    5       376.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                                thrpt    5       523.929 ±    692.132  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                           thrpt    5       349.819 ±    462.548    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                            thrpt    5         0.037 ±      0.143  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                       thrpt    5         0.025 ±      0.096    B/op
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.count                                              thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeMapsJsoniter:·gc.time                                               thrpt    5        20.000                   ms
[info] JsonCodecMakerBenchmark.writeMapsPlay                                                            thrpt    5    256931.448 ±   5347.025   ops/s
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate                                             thrpt    5       947.242 ±     19.702  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.alloc.rate.norm                                        thrpt    5      5800.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                                    thrpt    5       926.657 ±    570.888  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                               thrpt    5      5674.882 ±   3517.149    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                                thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                           thrpt    5         0.204 ±      0.557    B/op
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.count                                                  thrpt    5        14.000               counts
[info] JsonCodecMakerBenchmark.writeMapsPlay:·gc.time                                                   thrpt    5        42.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce                                                    thrpt    5    348673.572 ±   2885.608   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate                                     thrpt    5      1010.603 ±      8.395  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                                thrpt    5      4560.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                            thrpt    5      1060.309 ±    536.835  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm                       thrpt    5      4784.848 ±   2445.915    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space                        thrpt    5         0.025 ±      0.067  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm                   thrpt    5         0.113 ±      0.303    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.count                                          thrpt    5        16.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsCirce:·gc.time                                           thrpt    5        27.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson                                                  thrpt    5    741034.602 ±  30390.858   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate                                   thrpt    5      1145.544 ±     46.960  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                              thrpt    5      2432.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space                          thrpt    5      1138.724 ±    698.210  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm                     thrpt    5      2417.535 ±   1478.972    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space                      thrpt    5         0.058 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.124 ±      0.186    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.count                                        thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJackson:·gc.time                                         thrpt    5        36.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter                                                 thrpt    5   2074030.150 ±  68966.436   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                                  thrpt    5       506.228 ±     16.807  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                             thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space                         thrpt    5       522.475 ±    688.168  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm                    thrpt    5       397.181 ±    532.332    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space                     thrpt    5         0.017 ±      0.088  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.013 ±      0.067    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.count                                       thrpt    5         8.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsJsoniter:·gc.time                                        thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay                                                     thrpt    5    256626.082 ±  14550.322   ops/s
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate                                      thrpt    5       974.799 ±     55.295  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                                 thrpt    5      5976.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                             thrpt    5       993.412 ±     30.674  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm                        thrpt    5      6091.117 ±    378.636    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.307 ±      0.755    B/op
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeMutableMapsPlay:·gc.time                                            thrpt    5        39.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesCirce                                                     thrpt    5    644724.325 ±   8244.991   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate                                      thrpt    5      1239.543 ±     15.222  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                                 thrpt    5      3024.001 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                             thrpt    5      1208.510 ±    700.329  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5      2949.410 ±   1741.676    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.029 ±      0.071  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5         0.071 ±      0.175    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.count                                           thrpt    5        18.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesCirce:·gc.time                                            thrpt    5        29.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJackson                                                   thrpt    5   1510807.248 ±  52361.738   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate                                    thrpt    5       722.537 ±     24.791  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                               thrpt    5       752.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                           thrpt    5       725.369 ±    562.521  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5       755.044 ±    587.089    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.021 ±      0.080  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.022 ±      0.083    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.count                                         thrpt    5        11.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJackson:·gc.time                                          thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter                                                  thrpt    5   4468936.020 ± 141166.657   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                                   thrpt    5       363.604 ±     11.479  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                              thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       391.071 ±    560.497  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5       137.704 ±    197.880    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.448 ±      3.634  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.157 ±      1.274    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.count                                        thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesJsoniter:·gc.time                                         thrpt    5        12.000                   ms
[info] JsonCodecMakerBenchmark.writePrimitivesPlay                                                      thrpt    5    218075.027 ±  10544.801   ops/s
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate                                       thrpt    5      1097.849 ±     53.125  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                                  thrpt    5      7920.002 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                              thrpt    5      1131.335 ±    700.556  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm                         thrpt    5      8165.627 ±   5160.949    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space                          thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm                     thrpt    5         0.391 ±      0.672    B/op
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.count                                            thrpt    5        17.000               counts
[info] JsonCodecMakerBenchmark.writePrimitivesPlay:·gc.time                                             thrpt    5        32.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce                                                     thrpt    5      7494.968 ±    190.169   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate                                      thrpt    5       955.053 ±     24.124  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.alloc.rate.norm                                 thrpt    5    200466.590 ±     81.025    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space                             thrpt    5      1001.260 ±     26.309  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Eden_Space.norm                        thrpt    5    210167.945 ±   4563.726    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space                         thrpt    5         0.050 ±      0.176  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.churn.PS_Survivor_Space.norm                    thrpt    5        10.546 ±     37.335    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.count                                           thrpt    5        15.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPICirce:·gc.time                                            thrpt    5        24.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson                                                   thrpt    5     26738.266 ±    615.467   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate                                    thrpt    5       373.650 ±      7.539  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.alloc.rate.norm                               thrpt    5     21973.036 ±      0.450    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space                           thrpt    5       391.563 ±    570.165  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Eden_Space.norm                      thrpt    5     23045.957 ±  33899.061    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space                       thrpt    5         0.004 ±      0.036  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.churn.PS_Survivor_Space.norm                  thrpt    5         0.245 ±      2.111    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.count                                         thrpt    5         6.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJackson:·gc.time                                          thrpt    5        22.000                   ms
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter                                                  thrpt    5     38703.233 ±    340.567   ops/s
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate                                   thrpt    5       260.583 ±      2.290  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.alloc.rate.norm                              thrpt    5     10592.011 ±      0.001    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space                          thrpt    5       246.183 ±    542.304  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Eden_Space.norm                     thrpt    5     10009.978 ±  22047.822    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space                      thrpt    5         0.460 ±      3.763  MB/sec
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.churn.PS_Survivor_Space.norm                 thrpt    5        18.663 ±    152.528    B/op
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.count                                        thrpt    5         4.000               counts
[info] JsonCodecMakerBenchmark.writeTwitterAPIJsoniter:·gc.time                                         thrpt    5        15.000                   ms
[success] Total time: 1378 s, completed Nov 21, 2017 8:55:03 AM
