[info] Loading settings from build.sbt ...
[info] Loading global plugins from /home/andriy/.sbt/1.0/plugins
[info] Loading settings from plugins.sbt ...
[info] Loading project definition from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/project
[info] Loading settings from build.sbt,version.sbt ...
[info] Set current project to jsoniter-scala (in build file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/)
[success] Total time: 0 s, completed Oct 31, 2017 7:45:03 PM
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}macros...
[info] Done updating.
[info] Updating {file:/home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/}benchmark...
[info] Done updating.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/classes ...
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:212:9: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]       s.getBytes(0, remaining, buf, count)
[warn]         ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:222:13: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]           s.getBytes(i, j, buf, count)
[warn]             ^
[warn] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonWriter.scala:228:13: method getBytes in class String is deprecated: see corresponding Javadoc for more information.
[warn]           s.getBytes(i, j, buf, count)
[warn]             ^
[warn] three warnings found
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/macros/target/scala-2.12/macros_2.12-0.1-SNAPSHOT.jar ...
[info] Done packaging.
[info] Compiling 3 Scala sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:49:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.AnyRefs':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.AnyRefs] {
[info]       private val reqFields: Array[String] = Array("s", "bd");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.AnyRefs = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _bd: scala.math.BigDecimal = null;
[info]           var _os: Option[String] = None;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1868115770 => if (in.isReusableCharsEqualsTo(l, "bd"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _bd = in.readBigDecimal(_bd)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 135249149 => if (in.isReusableCharsEqualsTo(l, "os"))
[info]                       _os = Option(in.readString(null))
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.AnyRefs(s = _s, bd = _bd, os = _os)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.AnyRefs, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.AnyRefs];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("bd");
[info]             out.writeVal(x.bd)
[info]           };
[info]           if (x.os.ne(null).&&(x.os.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("os");
[info]               out.writeVal(x.os.get)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val anyRefsCodec: JsonCodec[AnyRefs] = materialize[AnyRefs]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:51:51: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Arrays':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Arrays] {
[info]       private val reqFields: Array[String] = Array("aa", "a");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Arrays = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _aa: Array[Array[Int]] = new Array[Array[Int]](0);
[info]           var _a: Array[BigInt] = new Array[scala.math.BigInt](0);
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1396692260 => if (in.isReusableCharsEqualsTo(l, "aa"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _aa = d1(in, _aa)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 272946562 => if (in.isReusableCharsEqualsTo(l, "a"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _a = d2(in, _a)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Arrays(aa = _aa, a = _a)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Arrays, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Arrays];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("aa");
[info]             e1(out, x.aa)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("a");
[info]             e2(out, x.a)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: Array[Int]): Array[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: Array[Array[Int]]): Array[Array[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[Array[Int]];
[info]             do 
[info]               buf.+=(d0(in, new Array[Int](0)))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: Array[BigInt]): Array[BigInt] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = collection.mutable.ArrayBuilder.make[scala.math.BigInt];
[info]             do 
[info]               buf.+=(in.readBigInt(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: Array[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: Array[Array[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             e0(out, x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: Array[BigInt]): Unit = {
[info]         out.writeArrayStart();
[info]         val l = x.length;
[info]         var i = 0;
[info]         var first = true;
[info]         while (i.<(l)) 
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeVal(x(i));
[info]             i.+=(1)
[info]           }
[info]         ;
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val arraysCodec: JsonCodec[Arrays] = materialize[Arrays]
[info]                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:53:53: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.BitSets':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.BitSets] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.BitSets = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _bs: scala.collection.immutable.BitSet = BitSet.empty;
[info]           var _mbs: scala.collection.mutable.BitSet = BitSet.empty;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -311899171 => if (in.isReusableCharsEqualsTo(l, "bs"))
[info]                       _bs = d0(in, _bs)
[info]                     else
[info]                       in.skip()
[info]                     case 395882128 => if (in.isReusableCharsEqualsTo(l, "mbs"))
[info]                       _mbs = d1(in, _mbs)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.BitSets(bs = _bs, mbs = _mbs)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.BitSets, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.BitSets];
[info]           var first = true;
[info]           if (x.bs.ne(null).&&(x.bs.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("bs");
[info]               e0(out, x.bs)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mbs.ne(null).&&(x.mbs.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mbs");
[info]               e1(out, x.mbs)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.BitSet): scala.collection.immutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.newBuilder;
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.BitSet): scala.collection.mutable.BitSet = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = BitSet.empty;
[info]             do 
[info]               buf.add(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.BitSet): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val bitSetsCodec: JsonCodec[BitSets] = materialize[BitSets]
[info]                                                     ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:55:57: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Iterables':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Iterables] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Iterables = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _l: List[String] = List.empty[String];
[info]           var _s: scala.collection.immutable.Set[Int] = Set.empty[Int];
[info]           var _ls: List[Set[Int]] = List.empty[scala.collection.immutable.Set[Int]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       _l = d0(in, _l)
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       _s = d1(in, _s)
[info]                     else
[info]                       in.skip()
[info]                     case 753022030 => if (in.isReusableCharsEqualsTo(l, "ls"))
[info]                       _ls = d2(in, _ls)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Iterables(l = _l, s = _s, ls = _ls)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Iterables, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Iterables];
[info]           var first = true;
[info]           if (x.l.ne(null).&&(x.l.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("l");
[info]               e0(out, x.l)
[info]             }
[info]           else
[info]             ();
[info]           if (x.s.ne(null).&&(x.s.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("s");
[info]               e1(out, x.s)
[info]             }
[info]           else
[info]             ();
[info]           if (x.ls.ne(null).&&(x.ls.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("ls");
[info]               e2(out, x.ls)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: List[String]): List[String] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[String];
[info]             do 
[info]               buf.+=(in.readString(null))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.Set[Int]): scala.collection.immutable.Set[Int] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Set.newBuilder[Int];
[info]             do 
[info]               buf.+=(in.readInt())
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def d2(in: JsonReader, default: List[Set[Int]]): List[Set[Int]] = (in.nextToken(): @switch) match {
[info]         case '[' => if (in.nextToken().==(']'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = List.newBuilder[scala.collection.immutable.Set[Int]];
[info]             do 
[info]               buf.+=(d1(in, Set.empty[Int]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf.result()
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect [ or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: List[String]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.Set[Int]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           out.writeVal(x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: List[Set[Int]]): Unit = {
[info]         out.writeArrayStart();
[info]         var first = true;
[info]         x.foreach(((x) => {
[info]           first = out.writeSep(first);
[info]           e1(out, x)
[info]         }));
[info]         out.writeArrayEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val iterablesCodec: JsonCodec[Iterables] = materialize[Iterables]
[info]                                                         ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:57:47: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Maps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Maps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Maps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.Maps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Maps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Maps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.HashMap[String,Double]): scala.collection.immutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.HashMap[Long,Double]): scala.collection.immutable.HashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = HashMap.empty[Long, Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = Map.empty[Int, scala.collection.immutable.HashMap[Long,Double]];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), d1(in, HashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.HashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.immutable.Map[Int,scala.collection.immutable.HashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mapsCodec: JsonCodec[Maps] = materialize[Maps]
[info]                                               ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:59:61: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.MutableMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.MutableMaps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.MutableMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.mutable.HashMap[String,Double] = HashMap.empty[String, Double];
[info]           var _mm: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.MutableMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.MutableMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.MutableMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.mutable.HashMap[String,Double]): scala.collection.mutable.HashMap[String,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = HashMap.empty[String, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsString(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.mutable.OpenHashMap[Long,Double]): scala.collection.mutable.OpenHashMap[Long,Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = OpenHashMap.empty[Long, Double];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = Map.empty[Int, scala.collection.mutable.OpenHashMap[Long,Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsInt(), d1(in, OpenHashMap.empty[Long, Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.mutable.HashMap[String,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.mutable.OpenHashMap[Long,Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.Map[Int,scala.collection.mutable.OpenHashMap[Long,Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val mutableMapsCodec: JsonCodec[MutableMaps] = materialize[MutableMaps]
[info]                                                             ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:61:67: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps] {
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var _m: scala.collection.immutable.IntMap[Double] = IntMap.empty[Double];
[info]           var _mm: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1098479999 => if (in.isReusableCharsEqualsTo(l, "m"))
[info]                       _m = d0(in, _m)
[info]                     else
[info]                       in.skip()
[info]                     case -188455160 => if (in.isReusableCharsEqualsTo(l, "mm"))
[info]                       _mm = d2(in, _mm)
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           new com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps(m = _m, mm = _mm)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.IntAndLongMaps];
[info]           var first = true;
[info]           if (x.m.ne(null).&&(x.m.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("m");
[info]               e0(out, x.m)
[info]             }
[info]           else
[info]             ();
[info]           if (x.mm.ne(null).&&(x.mm.isEmpty.`unary_!`))
[info]             {
[info]               first = out.writeSep(first);
[info]               out.writeObjectField("mm");
[info]               e2(out, x.mm)
[info]             }
[info]           else
[info]             ();
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull();
[info]       private def d0(in: JsonReader, default: scala.collection.immutable.IntMap[Double]): scala.collection.immutable.IntMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = IntMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsInt(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d1(in: JsonReader, default: scala.collection.immutable.LongMap[Double]): scala.collection.immutable.LongMap[Double] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             var buf = LongMap.empty[Double];
[info]             do 
[info]               buf = buf.updated(in.readObjectFieldAsLong(), in.readDouble())
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def d2(in: JsonReader, default: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]] = (in.nextToken(): @switch) match {
[info]         case '{' => if (in.nextToken().==('}'))
[info]           default
[info]         else
[info]           {
[info]             in.unreadByte();
[info]             val buf = LongMap.empty[scala.collection.immutable.LongMap[Double]];
[info]             do 
[info]               buf.update(in.readObjectFieldAsLong(), d1(in, LongMap.empty[Double]))
[info]              while (in.nextToken().==(',')) ;
[info]             buf
[info]           }
[info]         case 'n' => in.parseNull(default)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       private def e0(out: JsonWriter, x: scala.collection.immutable.IntMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e1(out: JsonWriter, x: scala.collection.immutable.LongMap[Double]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           out.writeVal(kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       };
[info]       private def e2(out: JsonWriter, x: scala.collection.mutable.LongMap[scala.collection.immutable.LongMap[Double]]): Unit = {
[info]         out.writeObjectStart();
[info]         var first = true;
[info]         x.foreach(((kv) => {
[info]           first = out.writeSep(first);
[info]           out.writeObjectField(kv._1);
[info]           e1(out, kv._2)
[info]         }));
[info]         out.writeObjectEnd()
[info]       }
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val intAndLongMapsCodec: JsonCodec[IntAndLongMaps] = materialize[IntAndLongMaps]
[info]                                                                   ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:63:59: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.Primitives':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.Primitives] {
[info]       private val reqFields: Array[String] = Array("b", "s", "i", "l", "bl", "ch", "dbl", "f");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.Primitives = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 255;
[info]           var _b: Byte = 0.toByte;
[info]           var _s: Short = 0.toShort;
[info]           var _i: Int = 0;
[info]           var _l: Long = 0L;
[info]           var _bl: Boolean = false;
[info]           var _ch: Char = 0.toChar;
[info]           var _dbl: Double = 0.0;
[info]           var _f: Float = 0.0F;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 479329913 => if (in.isReusableCharsEqualsTo(l, "b"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _b = in.readByte()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _s = in.readShort()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -608352987 => if (in.isReusableCharsEqualsTo(l, "i"))
[info]                       {
[info]                         req0.&=(-5);
[info]                         _i = in.readInt()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-9);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -986815646 => if (in.isReusableCharsEqualsTo(l, "bl"))
[info]                       {
[info]                         req0.&=(-17);
[info]                         _bl = in.readBoolean()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1128364876 => if (in.isReusableCharsEqualsTo(l, "ch"))
[info]                       {
[info]                         req0.&=(-33);
[info]                         _ch = in.readChar()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case 977778859 => if (in.isReusableCharsEqualsTo(l, "dbl"))
[info]                       {
[info]                         req0.&=(-65);
[info]                         _dbl = in.readDouble()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -2108804597 => if (in.isReusableCharsEqualsTo(l, "f"))
[info]                       {
[info]                         req0.&=(-129);
[info]                         _f = in.readFloat()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.Primitives(b = _b, s = _s, i = _i, l = _l, bl = _bl, ch = _ch, dbl = _dbl, f = _f)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.Primitives, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.Primitives];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("b");
[info]             out.writeVal(x.b)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("i");
[info]             out.writeVal(x.i)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("bl");
[info]             out.writeVal(x.bl)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("ch");
[info]             out.writeVal(x.ch)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("dbl");
[info]             out.writeVal(x.dbl)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("f");
[info]             out.writeVal(x.f)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val primitivesCodec: JsonCodec[Primitives] = materialize[Primitives]
[info]                                                           ^
[info] /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/src/main/scala/com/github/plokhotnyuk/jsoniter_scala/JsonCodecBenchmark.scala:65:65: Generated JSON codec for type 'com.github.plokhotnyuk.jsoniter_scala.ExtractFields':
[info] {
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonReader;
[info]   import com.github.plokhotnyuk.jsoniter_scala.JsonWriter;
[info]   import scala.annotation.switch;
[info]   {
[info]     final class $anon extends com.github.plokhotnyuk.jsoniter_scala.JsonCodec[com.github.plokhotnyuk.jsoniter_scala.ExtractFields] {
[info]       private val reqFields: Array[String] = Array("s", "l");
[info]       override def read(in: JsonReader): com.github.plokhotnyuk.jsoniter_scala.ExtractFields = (in.nextToken(): @switch) match {
[info]         case '{' => {
[info]           var req0 = 3;
[info]           var _s: String = null;
[info]           var _l: Long = 0L;
[info]           if (in.nextToken().!=('}'))
[info]             {
[info]               in.unreadByte();
[info]               do 
[info]                 {
[info]                   val l = in.readObjectFieldAsReusableChars();
[info]                   ((in.reusableCharsToHashCode(l): @switch) match {
[info]                     case 1511246974 => if (in.isReusableCharsEqualsTo(l, "s"))
[info]                       {
[info]                         req0.&=(-2);
[info]                         _s = in.readString(_s)
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case -1696035452 => if (in.isReusableCharsEqualsTo(l, "l"))
[info]                       {
[info]                         req0.&=(-3);
[info]                         _l = in.readLong()
[info]                       }
[info]                     else
[info]                       in.skip()
[info]                     case _ => in.skip()
[info]                   })
[info]                 }
[info]                while (in.nextToken().==(',')) 
[info]             }
[info]           else
[info]             ();
[info]           if (req0.==(0))
[info]             new com.github.plokhotnyuk.jsoniter_scala.ExtractFields(s = _s, l = _l)
[info]           else
[info]             in.reqFieldError(reqFields, req0)
[info]         }
[info]         case 'n' => in.parseNull(null)
[info]         case _ => in.decodeError("expect { or n")
[info]       };
[info]       override def write(obj: com.github.plokhotnyuk.jsoniter_scala.ExtractFields, out: JsonWriter): Unit = if (obj.ne(null))
[info]         {
[info]           out.writeObjectStart();
[info]           val x = obj.asInstanceOf[com.github.plokhotnyuk.jsoniter_scala.ExtractFields];
[info]           var first = true;
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("s");
[info]             out.writeVal(x.s)
[info]           };
[info]           {
[info]             first = out.writeSep(first);
[info]             out.writeObjectField("l");
[info]             out.writeVal(x.l)
[info]           };
[info]           out.writeObjectEnd()
[info]         }
[info]       else
[info]         out.writeNull()
[info]     };
[info]     new $anon()
[info]   }
[info] }
[info]   val extractFieldsCodec: JsonCodec[ExtractFields] = materialize[ExtractFields]
[info]                                                                 ^
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT.jar ...
Processing 82 classes from /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes with "reflection" generator
Writing out Java source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/src_managed/jmh and resources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/resource_managed/jmh
[info] Done packaging.
[info] Compiling 1 Scala source to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/test-classes ...
[info] Compiling 65 Java sources to /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/classes ...
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-tests.jar ...
[info] Done packaging.
[info] Done compiling.
[info] Packaging /home/andriy/Projects/com/github/plokhotnyuk/jsoniter-scala/benchmark/target/scala-2.12/benchmark_2.12-0.1-SNAPSHOT-jmh.jar ...
[info] Done packaging.
[info] Running (fork) org.openjdk.jmh.Main -prof gc .*JsonCodecBenchmark.*
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce
[info] # Run progress: 0.00% complete, ETA 00:10:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 705380.443 ops/s
[info] # Warmup Iteration   2: 1187460.061 ops/s
[info] # Warmup Iteration   3: 1223458.871 ops/s
[info] # Warmup Iteration   4: 1223652.187 ops/s
[info] # Warmup Iteration   5: 1222623.115 ops/s
[info] Iteration   1: 1197647.351 ops/s
[info]                  ·gc.alloc.rate:                   1875.715 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2024.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2659.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.082 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 1229124.818 ops/s
[info]                  ·gc.alloc.rate:                   1924.983 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1693.329 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2167.480 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1209950.269 ops/s
[info]                  ·gc.alloc.rate:                   1895.013 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2035.901 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2647.191 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         26.000 ms
[info] Iteration   4: 1223316.751 ops/s
[info]                  ·gc.alloc.rate:                   1915.897 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.181 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2622.554 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.080 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1204732.212 ops/s
[info]                  ·gc.alloc.rate:                   1886.752 MB/sec
[info]                  ·gc.alloc.rate.norm:              2464.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.614 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2220.914 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.054 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce":
[info]   1212954.280 ±(99.9%) 50198.711 ops/s [Average]
[info]   (min, avg, max) = (1197647.351, 1212954.280, 1229124.818), stdev = 13036.446
[info]   CI (99.9%): [1162755.569, 1263152.990] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate":
[info]   1899.672 ±(99.9%) 78.597 MB/sec [Average]
[info]   (min, avg, max) = (1875.715, 1899.672, 1924.983), stdev = 20.411
[info]   CI (99.9%): [1821.075, 1978.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm":
[info]   2464.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2464.000, 2464.000, 2464.000), stdev = 0.001
[info]   CI (99.9%): [2464.000, 2464.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1898.696 ±(99.9%) 709.472 MB/sec [Average]
[info]   (min, avg, max) = (1693.329, 1898.696, 2039.181), stdev = 184.248
[info]   CI (99.9%): [1189.224, 2608.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   2463.506 ±(99.9%) 950.822 B/op [Average]
[info]   (min, avg, max) = (2167.480, 2463.506, 2659.390), stdev = 246.925
[info]   CI (99.9%): [1512.684, 3414.328] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.050, 0.062), stdev = 0.011
[info]   CI (99.9%): [0.006, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.065 ±(99.9%) 0.058 B/op [Average]
[info]   (min, avg, max) = (0.053, 0.065, 0.082), stdev = 0.015
[info]   CI (99.9%): [0.007, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsCirce:·gc.time":
[info]   58.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 11.600, 26.000), stdev = 8.620
[info]   CI (99.9%): [58.000, 58.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson
[info] # Run progress: 1.64% complete, ETA 00:16:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1254413.009 ops/s
[info] # Warmup Iteration   2: 1898042.487 ops/s
[info] # Warmup Iteration   3: 1920182.396 ops/s
[info] # Warmup Iteration   4: 1902666.381 ops/s
[info] # Warmup Iteration   5: 1888455.015 ops/s
[info] Iteration   1: 1907691.070 ops/s
[info]                  ·gc.alloc.rate:                   1338.683 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.183 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1095.341 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1906717.539 ops/s
[info]                  ·gc.alloc.rate:                   1338.042 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.500 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1102.728 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 1884101.827 ops/s
[info]                  ·gc.alloc.rate:                   1322.162 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.498 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1121.816 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.035 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 1904884.531 ops/s
[info]                  ·gc.alloc.rate:                   1336.685 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.736 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1113.954 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.069 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1910873.905 ops/s
[info]                  ·gc.alloc.rate:                   1340.916 MB/sec
[info]                  ·gc.alloc.rate.norm:              1104.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.783 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1113.771 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson":
[info]   1902853.774 ±(99.9%) 41222.133 ops/s [Average]
[info]   (min, avg, max) = (1884101.827, 1902853.774, 1910873.905), stdev = 10705.257
[info]   CI (99.9%): [1861631.641, 1944075.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate":
[info]   1335.298 ±(99.9%) 28.881 MB/sec [Average]
[info]   (min, avg, max) = (1322.162, 1335.298, 1340.916), stdev = 7.500
[info]   CI (99.9%): [1306.416, 1364.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm":
[info]   1104.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1104.000, 1104.000, 1104.000), stdev = 0.001
[info]   CI (99.9%): [1104.000, 1104.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1341.940 ±(99.9%) 37.780 MB/sec [Average]
[info]   (min, avg, max) = (1328.183, 1341.940, 1352.783), stdev = 9.811
[info]   CI (99.9%): [1304.161, 1379.720] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1109.522 ±(99.9%) 40.206 B/op [Average]
[info]   (min, avg, max) = (1095.341, 1109.522, 1121.816), stdev = 10.441
[info]   CI (99.9%): [1069.316, 1149.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.034 ±(99.9%) 0.081 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.034, 0.069), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.116] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJackson:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.347
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter
[info] # Run progress: 3.28% complete, ETA 00:16:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 6223432.600 ops/s
[info] # Warmup Iteration   2: 6135251.937 ops/s
[info] # Warmup Iteration   3: 6299748.758 ops/s
[info] # Warmup Iteration   4: 6301301.572 ops/s
[info] # Warmup Iteration   5: 6311781.824 ops/s
[info] Iteration   1: 6320783.432 ops/s
[info]                  ·gc.alloc.rate:                   803.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.687 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     244.833 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 6315725.057 ops/s
[info]                  ·gc.alloc.rate:                   802.893 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          658.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     164.011 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   3: 6357573.339 ops/s
[info]                  ·gc.alloc.rate:                   808.202 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     245.477 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 6253632.305 ops/s
[info]                  ·gc.alloc.rate:               794.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.065 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 167.063 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   5: 6204420.748 ops/s
[info]                  ·gc.alloc.rate:                   788.724 MB/sec
[info]                  ·gc.alloc.rate.norm:              200.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     168.899 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter":
[info]   6290426.976 ±(99.9%) 234392.119 ops/s [Average]
[info]   (min, avg, max) = (6204420.748, 6290426.976, 6357573.339), stdev = 60870.889
[info]   CI (99.9%): [6056034.857, 6524819.095] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate":
[info]   799.673 ±(99.9%) 29.830 MB/sec [Average]
[info]   (min, avg, max) = (788.724, 799.673, 808.202), stdev = 7.747
[info]   CI (99.9%): [769.843, 829.503] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   200.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (200.000, 200.000, 200.000), stdev = 0.001
[info]   CI (99.9%): [200.000, 200.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.843 ±(99.9%) 685.588 MB/sec [Average]
[info]   (min, avg, max) = (658.417, 792.843, 991.974), stdev = 178.045
[info]   CI (99.9%): [107.255, 1478.431] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   198.056 ±(99.9%) 165.696 B/op [Average]
[info]   (min, avg, max) = (164.011, 198.056, 245.477), stdev = 43.031
[info]   CI (99.9%): [32.360, 363.752] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.127 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.083), stdev = 0.033
[info]   CI (99.9%): [≈ 0, 0.168] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.010 ±(99.9%) 0.031 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.010, 0.021), stdev = 0.008
[info]   CI (99.9%): [≈ 0, 0.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time":
[info]   20.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.000, 6.000), stdev = 2.739
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay
[info] # Run progress: 4.92% complete, ETA 00:15:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 252217.046 ops/s
[info] # Warmup Iteration   2: 411589.393 ops/s
[info] # Warmup Iteration   3: 429241.129 ops/s
[info] # Warmup Iteration   4: 425704.123 ops/s
[info] # Warmup Iteration   5: 426955.185 ops/s
[info] Iteration   1: 430362.313 ops/s
[info]                  ·gc.alloc.rate:                   1137.956 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.272 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3616.460 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 427195.014 ops/s
[info]                  ·gc.alloc.rate:                   1129.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4884.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 424335.489 ops/s
[info]                  ·gc.alloc.rate:                   1122.014 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.610 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3709.882 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.232 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 428275.528 ops/s
[info]                  ·gc.alloc.rate:               1132.449 MB/sec
[info]                  ·gc.alloc.rate.norm:          4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.952 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 3687.971 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 427273.846 ops/s
[info]                  ·gc.alloc.rate:                   1129.780 MB/sec
[info]                  ·gc.alloc.rate.norm:              4160.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.792 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4951.704 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay":
[info]   427488.438 ±(99.9%) 8381.656 ops/s [Average]
[info]   (min, avg, max) = (424335.489, 427488.438, 430362.313), stdev = 2176.689
[info]   CI (99.9%): [419106.782, 435870.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate":
[info]   1130.349 ±(99.9%) 22.180 MB/sec [Average]
[info]   (min, avg, max) = (1122.014, 1130.349, 1137.956), stdev = 5.760
[info]   CI (99.9%): [1108.169, 1152.529] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm":
[info]   4160.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4160.001, 4160.001, 4160.001), stdev = 0.001
[info]   CI (99.9%): [4160.001, 4160.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1132.954 ±(99.9%) 712.627 MB/sec [Average]
[info]   (min, avg, max) = (989.272, 1132.954, 1344.792), stdev = 185.067
[info]   CI (99.9%): [420.327, 1845.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4170.013 ±(99.9%) 2633.820 B/op [Average]
[info]   (min, avg, max) = (3616.460, 4170.013, 4951.704), stdev = 683.995
[info]   CI (99.9%): [1536.194, 6803.833] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.123 ±(99.9%) 0.338 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.123, 0.232), stdev = 0.088
[info]   CI (99.9%): [≈ 0, 0.461] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readAnyRefsPlay:·gc.time":
[info]   38.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.600, 12.000), stdev = 4.336
[info]   CI (99.9%): [38.000, 38.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce
[info] # Run progress: 6.56% complete, ETA 00:15:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 344924.268 ops/s
[info] # Warmup Iteration   2: 610978.361 ops/s
[info] # Warmup Iteration   3: 640139.752 ops/s
[info] # Warmup Iteration   4: 650365.788 ops/s
[info] # Warmup Iteration   5: 648902.289 ops/s
[info] Iteration   1: 647473.216 ops/s
[info]                  ·gc.alloc.rate:                   2110.426 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2027.863 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4927.385 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.202 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 644971.927 ops/s
[info]                  ·gc.alloc.rate:                   2102.265 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2373.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5789.497 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        7.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 641032.301 ops/s
[info]                  ·gc.alloc.rate:                   2089.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.769 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5003.834 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.102 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   4: 642414.657 ops/s
[info]                  ·gc.alloc.rate:                   2093.872 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.765 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4995.488 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.153 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Iteration   5: 642908.834 ops/s
[info]                  ·gc.alloc.rate:                   2095.578 MB/sec
[info]                  ·gc.alloc.rate.norm:              5128.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2043.247 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4999.944 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce":
[info]   643760.187 ±(99.9%) 9671.082 ops/s [Average]
[info]   (min, avg, max) = (641032.301, 643760.187, 647473.216), stdev = 2511.549
[info]   CI (99.9%): [634089.106, 653431.269] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate":
[info]   2098.300 ±(99.9%) 31.618 MB/sec [Average]
[info]   (min, avg, max) = (2089.360, 2098.300, 2110.426), stdev = 8.211
[info]   CI (99.9%): [2066.682, 2129.918] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm":
[info]   5128.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5128.001, 5128.001, 5128.001), stdev = 0.001
[info]   CI (99.9%): [5128.001, 5128.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space":
[info]   2104.619 ±(99.9%) 579.104 MB/sec [Average]
[info]   (min, avg, max) = (2027.863, 2104.619, 2373.450), stdev = 150.392
[info]   CI (99.9%): [1525.514, 2683.723] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5143.230 ±(99.9%) 1396.409 B/op [Average]
[info]   (min, avg, max) = (4927.385, 5143.230, 5789.497), stdev = 362.643
[info]   CI (99.9%): [3746.821, 6539.639] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.112 ±(99.9%) 0.254 B/op [Average]
[info]   (min, avg, max) = (0.051, 0.112, 0.202), stdev = 0.066
[info]   CI (99.9%): [≈ 0, 0.366] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.count":
[info]   31.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (6.000, 6.200, 7.000), stdev = 0.447
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysCirce:·gc.time":
[info]   54.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 10.800, 16.000), stdev = 3.701
[info]   CI (99.9%): [54.000, 54.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson
[info] # Run progress: 8.20% complete, ETA 00:15:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 813967.791 ops/s
[info] # Warmup Iteration   2: 1235701.774 ops/s
[info] # Warmup Iteration   3: 1246502.930 ops/s
[info] # Warmup Iteration   4: 1241531.407 ops/s
[info] # Warmup Iteration   5: 1242674.383 ops/s
[info] Iteration   1: 1239682.157 ops/s
[info]                  ·gc.alloc.rate:               1166.246 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      991.341 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1258.041 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 1241063.344 ops/s
[info]                  ·gc.alloc.rate:                   1167.481 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1687.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.079 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1264391.787 ops/s
[info]                  ·gc.alloc.rate:               1189.480 MB/sec
[info]                  ·gc.alloc.rate.norm:          1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.633 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1248.762 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 1253684.719 ops/s
[info]                  ·gc.alloc.rate:                   1179.369 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.454 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1685.913 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 1255814.848 ops/s
[info]                  ·gc.alloc.rate:                   1181.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              1480.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1266.483 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson":
[info]   1250927.371 ±(99.9%) 40226.550 ops/s [Average]
[info]   (min, avg, max) = (1239682.157, 1250927.371, 1264391.787), stdev = 10446.707
[info]   CI (99.9%): [1210700.821, 1291153.921] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate":
[info]   1176.786 ±(99.9%) 37.844 MB/sec [Average]
[info]   (min, avg, max) = (1166.246, 1176.786, 1189.480), stdev = 9.828
[info]   CI (99.9%): [1138.942, 1214.630] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm":
[info]   1480.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1480.000, 1480.000, 1480.000), stdev = 0.001
[info]   CI (99.9%): [1480.000, 1480.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1136.035 ±(99.9%) 707.634 MB/sec [Average]
[info]   (min, avg, max) = (991.341, 1136.035, 1343.454), stdev = 183.770
[info]   CI (99.9%): [428.401, 1843.669] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1429.254 ±(99.9%) 904.550 B/op [Average]
[info]   (min, avg, max) = (1248.762, 1429.254, 1687.070), stdev = 234.909
[info]   CI (99.9%): [524.703, 2333.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.032 ±(99.9%) 0.132 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.032, 0.079), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.164] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 10.000), stdev = 2.775
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter
[info] # Run progress: 9.84% complete, ETA 00:14:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2131640.388 ops/s
[info] # Warmup Iteration   2: 2496577.357 ops/s
[info] # Warmup Iteration   3: 2514683.927 ops/s
[info] # Warmup Iteration   4: 2519879.228 ops/s
[info] # Warmup Iteration   5: 2526839.192 ops/s
[info] Iteration   1: 2521800.987 ops/s
[info]                  ·gc.alloc.rate:                   1154.082 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     825.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 2530500.076 ops/s
[info]                  ·gc.alloc.rate:                   1158.060 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.616 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     620.869 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.052 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 2476095.880 ops/s
[info]                  ·gc.alloc.rate:                   1133.208 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.966 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     636.614 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         17.000 ms
[info] Iteration   4: 2532873.573 ops/s
[info]                  ·gc.alloc.rate:                   1159.228 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.235 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.666 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2537849.401 ops/s
[info]                  ·gc.alloc.rate:                   1161.472 MB/sec
[info]                  ·gc.alloc.rate.norm:              720.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.321 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     626.301 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter":
[info]   2519823.984 ±(99.9%) 96750.867 ops/s [Average]
[info]   (min, avg, max) = (2476095.880, 2519823.984, 2537849.401), stdev = 25125.893
[info]   CI (99.9%): [2423073.117, 2616574.850] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate":
[info]   1153.210 ±(99.9%) 44.276 MB/sec [Average]
[info]   (min, avg, max) = (1133.208, 1153.210, 1161.472), stdev = 11.498
[info]   CI (99.9%): [1108.934, 1197.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm":
[info]   720.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (720.000, 720.000, 720.000), stdev = 0.001
[info]   CI (99.9%): [720.000, 720.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1135.319 ±(99.9%) 694.998 MB/sec [Average]
[info]   (min, avg, max) = (998.616, 1135.319, 1342.235), stdev = 180.489
[info]   CI (99.9%): [440.320, 1830.317] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   708.624 ±(99.9%) 426.181 B/op [Average]
[info]   (min, avg, max) = (620.869, 708.624, 833.666), stdev = 110.678
[info]   CI (99.9%): [282.443, 1134.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.031 ±(99.9%) 0.057 B/op [Average]
[info]   (min, avg, max) = (0.013, 0.031, 0.052), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.089] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysJsoniter:·gc.time":
[info]   33.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.600, 17.000), stdev = 5.941
[info]   CI (99.9%): [33.000, 33.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay
[info] # Run progress: 11.48% complete, ETA 00:14:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 109795.320 ops/s
[info] # Warmup Iteration   2: 197706.319 ops/s
[info] # Warmup Iteration   3: 204900.756 ops/s
[info] # Warmup Iteration   4: 204568.648 ops/s
[info] # Warmup Iteration   5: 201868.599 ops/s
[info] Iteration   1: 202197.449 ops/s
[info]                  ·gc.alloc.rate:               1189.586 MB/sec
[info]                  ·gc.alloc.rate.norm:          9256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      989.933 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 7702.531 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   2: 200700.246 ops/s
[info]                  ·gc.alloc.rate:                   1180.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              9256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.459 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10413.723 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.653 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 202868.719 ops/s
[info]                  ·gc.alloc.rate:                   1193.559 MB/sec
[info]                  ·gc.alloc.rate.norm:              9256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.626 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7767.574 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.323 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 200540.050 ops/s
[info]                  ·gc.alloc.rate:                   1179.848 MB/sec
[info]                  ·gc.alloc.rate.norm:              9256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.461 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10523.872 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.327 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 201518.683 ops/s
[info]                  ·gc.alloc.rate:                   1185.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              9256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.299 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7887.316 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.163 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay":
[info]   201565.029 ±(99.9%) 3802.275 ops/s [Average]
[info]   (min, avg, max) = (200540.050, 201565.029, 202868.719), stdev = 987.439
[info]   CI (99.9%): [197762.754, 205367.304] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate":
[info]   1185.876 ±(99.9%) 22.392 MB/sec [Average]
[info]   (min, avg, max) = (1179.848, 1185.876, 1193.559), stdev = 5.815
[info]   CI (99.9%): [1163.484, 1208.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm":
[info]   9256.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (9256.002, 9256.002, 9256.002), stdev = 0.001
[info]   CI (99.9%): [9256.002, 9256.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1134.356 ±(99.9%) 705.923 MB/sec [Average]
[info]   (min, avg, max) = (989.933, 1134.356, 1341.461), stdev = 183.326
[info]   CI (99.9%): [428.432, 1840.279] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8859.003 ±(99.9%) 5666.391 B/op [Average]
[info]   (min, avg, max) = (7702.531, 8859.003, 10523.872), stdev = 1471.544
[info]   CI (99.9%): [3192.612, 14525.394] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.083), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.156] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.293 ±(99.9%) 0.932 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.293, 0.653), stdev = 0.242
[info]   CI (99.9%): [≈ 0, 1.225] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readArraysPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 12.000), stdev = 3.564
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson
[info] # Run progress: 13.11% complete, ETA 00:14:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1037084.667 ops/s
[info] # Warmup Iteration   2: 1591852.971 ops/s
[info] # Warmup Iteration   3: 1619815.639 ops/s
[info] # Warmup Iteration   4: 1625663.457 ops/s
[info] # Warmup Iteration   5: 1598830.659 ops/s
[info] Iteration   1: 1598639.435 ops/s
[info]                  ·gc.alloc.rate:                   1016.143 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1314.148 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1293.270 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1625547.150 ops/s
[info]                  ·gc.alloc.rate:                   1033.324 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          994.026 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     961.970 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1603059.200 ops/s
[info]                  ·gc.alloc.rate:                   1018.965 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.657 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     980.070 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 1614611.786 ops/s
[info]                  ·gc.alloc.rate:                   1026.290 MB/sec
[info]                  ·gc.alloc.rate.norm:              1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.598 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     977.890 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 1641251.529 ops/s
[info]                  ·gc.alloc.rate:               1043.239 MB/sec
[info]                  ·gc.alloc.rate.norm:          1000.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1006.957 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 965.222 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson":
[info]   1616621.820 ±(99.9%) 66629.359 ops/s [Average]
[info]   (min, avg, max) = (1598639.435, 1616621.820, 1641251.529), stdev = 17303.433
[info]   CI (99.9%): [1549992.461, 1683251.179] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate":
[info]   1027.592 ±(99.9%) 42.396 MB/sec [Average]
[info]   (min, avg, max) = (1016.143, 1027.592, 1043.239), stdev = 11.010
[info]   CI (99.9%): [985.196, 1069.988] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm":
[info]   1000.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1000.000, 1000.000, 1000.000), stdev = 0.001
[info]   CI (99.9%): [1000.000, 1000.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1063.477 ±(99.9%) 539.917 MB/sec [Average]
[info]   (min, avg, max) = (994.026, 1063.477, 1314.148), stdev = 140.215
[info]   CI (99.9%): [523.560, 1603.395] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1035.685 ±(99.9%) 555.289 B/op [Average]
[info]   (min, avg, max) = (961.970, 1035.685, 1293.270), stdev = 144.207
[info]   CI (99.9%): [480.395, 1590.974] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.028, 0.060), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.117] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJackson:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.400, 11.000), stdev = 3.782
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter
[info] # Run progress: 14.75% complete, ETA 00:14:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5260999.183 ops/s
[info] # Warmup Iteration   2: 5585887.356 ops/s
[info] # Warmup Iteration   3: 5658772.636 ops/s
[info] # Warmup Iteration   4: 5677544.867 ops/s
[info] # Warmup Iteration   5: 5753140.947 ops/s
[info] Iteration   1: 5762010.505 ops/s
[info]                  ·gc.alloc.rate:                   615.295 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.415 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     178.135 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 5699168.872 ops/s
[info]                  ·gc.alloc.rate:                   608.584 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.762 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     180.472 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.029 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 5762561.541 ops/s
[info]                  ·gc.alloc.rate:                   615.347 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.404 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.209 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 5715545.600 ops/s
[info]                  ·gc.alloc.rate:                   610.350 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.760 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     181.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 5801054.828 ops/s
[info]                  ·gc.alloc.rate:                   619.479 MB/sec
[info]                  ·gc.alloc.rate.norm:              168.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     179.111 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter":
[info]   5748068.269 ±(99.9%) 157133.773 ops/s [Average]
[info]   (min, avg, max) = (5699168.872, 5748068.269, 5801054.828), stdev = 40807.142
[info]   CI (99.9%): [5590934.497, 5905202.042] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate":
[info]   613.811 ±(99.9%) 16.784 MB/sec [Average]
[info]   (min, avg, max) = (608.584, 613.811, 619.479), stdev = 4.359
[info]   CI (99.9%): [597.027, 630.594] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   168.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (168.000, 168.000, 168.000), stdev = 0.001
[info]   CI (99.9%): [168.000, 168.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   656.158 ±(99.9%) 12.298 MB/sec [Average]
[info]   (min, avg, max) = (652.415, 656.158, 660.450), stdev = 3.194
[info]   CI (99.9%): [643.861, 668.456] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   179.596 ±(99.9%) 4.473 B/op [Average]
[info]   (min, avg, max) = (178.135, 179.596, 181.050), stdev = 1.162
[info]   CI (99.9%): [175.122, 184.069] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.088 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.067, 0.104), stdev = 0.023
[info]   CI (99.9%): [≈ 0, 0.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.024 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.018, 0.029), stdev = 0.006
[info]   CI (99.9%): [≈ 0, 0.043] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 8.000), stdev = 2.950
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay
[info] # Run progress: 16.39% complete, ETA 00:13:44
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 119091.037 ops/s
[info] # Warmup Iteration   2: 236483.650 ops/s
[info] # Warmup Iteration   3: 245737.311 ops/s
[info] # Warmup Iteration   4: 245764.342 ops/s
[info] # Warmup Iteration   5: 246785.302 ops/s
[info] Iteration   1: 242610.100 ops/s
[info]                  ·gc.alloc.rate:                   1109.047 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1316.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8539.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.675 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 245816.010 ops/s
[info]                  ·gc.alloc.rate:                   1123.720 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.951 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6361.455 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.400 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 244211.456 ops/s
[info]                  ·gc.alloc.rate:                   1116.738 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.825 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8577.204 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 247561.304 ops/s
[info]                  ·gc.alloc.rate:                   1131.731 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.962 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6380.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.265 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 244869.625 ops/s
[info]                  ·gc.alloc.rate:                   1119.410 MB/sec
[info]                  ·gc.alloc.rate.norm:              7192.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.279 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6478.004 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay":
[info]   245013.699 ±(99.9%) 7093.874 ops/s [Average]
[info]   (min, avg, max) = (242610.100, 245013.699, 247561.304), stdev = 1842.257
[info]   CI (99.9%): [237919.825, 252107.573] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate":
[info]   1120.129 ±(99.9%) 32.351 MB/sec [Average]
[info]   (min, avg, max) = (1109.047, 1120.129, 1131.731), stdev = 8.402
[info]   CI (99.9%): [1087.778, 1152.480] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm":
[info]   7192.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (7192.002, 7192.002, 7192.002), stdev = 0.001
[info]   CI (99.9%): [7192.002, 7192.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1130.959 ±(99.9%) 680.233 MB/sec [Average]
[info]   (min, avg, max) = (993.951, 1130.959, 1331.825), stdev = 176.654
[info]   CI (99.9%): [450.726, 1811.193] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   7267.168 ±(99.9%) 4541.544 B/op [Average]
[info]   (min, avg, max) = (6361.455, 7267.168, 8577.204), stdev = 1179.425
[info]   CI (99.9%): [2725.623, 11808.712] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.375 ±(99.9%) 0.775 B/op [Average]
[info]   (min, avg, max) = (0.134, 0.375, 0.675), stdev = 0.201
[info]   CI (99.9%): [≈ 0, 1.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readBitSetsPlay:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 11.000), stdev = 3.114
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce
[info] # Run progress: 18.03% complete, ETA 00:13:28
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 351717.391 ops/s
[info] # Warmup Iteration   2: 530624.045 ops/s
[info] # Warmup Iteration   3: 540112.065 ops/s
[info] # Warmup Iteration   4: 541921.586 ops/s
[info] # Warmup Iteration   5: 549962.730 ops/s
[info] Iteration   1: 550650.712 ops/s
[info]                  ·gc.alloc.rate:                   1828.430 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1684.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4814.139 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 550319.483 ops/s
[info]                  ·gc.alloc.rate:                   1827.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2029.844 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5803.090 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.119 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 548514.992 ops/s
[info]                  ·gc.alloc.rate:                   1821.360 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.056 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4864.607 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.060 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 552221.417 ops/s
[info]                  ·gc.alloc.rate:                   1833.687 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2038.607 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5807.797 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.356 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 553419.009 ops/s
[info]                  ·gc.alloc.rate:                   1837.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              5224.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1699.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4830.934 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.237 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce":
[info]   551025.122 ±(99.9%) 7229.751 ops/s [Average]
[info]   (min, avg, max) = (548514.992, 551025.122, 553419.009), stdev = 1877.543
[info]   CI (99.9%): [543795.372, 558254.873] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate":
[info]   1829.688 ±(99.9%) 24.084 MB/sec [Average]
[info]   (min, avg, max) = (1821.360, 1829.688, 1837.674), stdev = 6.255
[info]   CI (99.9%): [1805.603, 1853.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm":
[info]   5224.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5224.001, 5224.001, 5224.001), stdev = 0.001
[info]   CI (99.9%): [5224.001, 5224.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space":
[info]   1829.777 ±(99.9%) 719.058 MB/sec [Average]
[info]   (min, avg, max) = (1684.976, 1829.777, 2038.607), stdev = 186.737
[info]   CI (99.9%): [1110.720, 2548.835] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5224.113 ±(99.9%) 2044.665 B/op [Average]
[info]   (min, avg, max) = (4814.139, 5224.113, 5807.797), stdev = 530.993
[info]   CI (99.9%): [3179.448, 7268.778] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.062 ±(99.9%) 0.160 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.062, 0.125), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.223] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.178 ±(99.9%) 0.456 B/op [Average]
[info]   (min, avg, max) = (0.060, 0.178, 0.356), stdev = 0.118
[info]   CI (99.9%): [≈ 0, 0.634] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsCirce:·gc.time":
[info]   46.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (7.000, 9.200, 12.000), stdev = 1.924
[info]   CI (99.9%): [46.000, 46.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson
[info] # Run progress: 19.67% complete, ETA 00:13:11
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 416277.507 ops/s
[info] # Warmup Iteration   2: 682079.243 ops/s
[info] # Warmup Iteration   3: 688010.257 ops/s
[info] # Warmup Iteration   4: 689133.003 ops/s
[info] # Warmup Iteration   5: 686875.913 ops/s
[info] Iteration   1: 693518.057 ops/s
[info]                  ·gc.alloc.rate:               860.463 MB/sec
[info]                  ·gc.alloc.rate.norm:          1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      657.753 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1492.143 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 688015.081 ops/s
[info]                  ·gc.alloc.rate:                   853.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.949 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2268.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   3: 692910.105 ops/s
[info]                  ·gc.alloc.rate:                   859.734 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.304 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2264.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 694400.438 ops/s
[info]                  ·gc.alloc.rate:                   861.620 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          668.457 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1514.391 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 693734.311 ops/s
[info]                  ·gc.alloc.rate:                   860.766 MB/sec
[info]                  ·gc.alloc.rate.norm:              1952.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.661 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2280.587 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.047 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson":
[info]   692515.598 ±(99.9%) 9902.426 ops/s [Average]
[info]   (min, avg, max) = (688015.081, 692515.598, 694400.438), stdev = 2571.629
[info]   CI (99.9%): [682613.172, 702418.025] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate":
[info]   859.241 ±(99.9%) 12.369 MB/sec [Average]
[info]   (min, avg, max) = (853.624, 859.241, 861.620), stdev = 3.212
[info]   CI (99.9%): [846.872, 871.611] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm":
[info]   1952.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1952.001, 1952.001, 1952.001), stdev = 0.001
[info]   CI (99.9%): [1952.001, 1952.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space":
[info]   864.225 ±(99.9%) 707.364 MB/sec [Average]
[info]   (min, avg, max) = (657.753, 864.225, 1005.661), stdev = 183.700
[info]   CI (99.9%): [156.860, 1571.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1963.957 ±(99.9%) 1619.836 B/op [Average]
[info]   (min, avg, max) = (1492.143, 1963.957, 2280.587), stdev = 420.666
[info]   CI (99.9%): [344.120, 3583.793] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.047 ±(99.9%) 0.130 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.047, 0.095), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJackson:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 12.000), stdev = 3.962
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter
[info] # Run progress: 21.31% complete, ETA 00:12:55
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4163074.647 ops/s
[info] # Warmup Iteration   2: 4277688.891 ops/s
[info] # Warmup Iteration   3: 4315655.211 ops/s
[info] # Warmup Iteration   4: 4310006.488 ops/s
[info] # Warmup Iteration   5: 4294066.044 ops/s
[info] Iteration   1: 4316156.102 ops/s
[info]                  ·gc.alloc.rate:      197.528 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   2: 4302082.136 ops/s
[info]                  ·gc.alloc.rate:                   196.883 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.899 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     93.582 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.052 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.019 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4307942.587 ops/s
[info]                  ·gc.alloc.rate:               197.152 MB/sec
[info]                  ·gc.alloc.rate.norm:          72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 93.455 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 4330146.325 ops/s
[info]                  ·gc.alloc.rate:      198.168 MB/sec
[info]                  ·gc.alloc.rate.norm: 72.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 4309507.229 ops/s
[info]                  ·gc.alloc.rate:                   197.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              72.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.549 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     118.847 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.208 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.806 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter":
[info]   4313166.876 ±(99.9%) 41329.215 ops/s [Average]
[info]   (min, avg, max) = (4302082.136, 4313166.876, 4330146.325), stdev = 10733.066
[info]   CI (99.9%): [4271837.661, 4354496.091] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate":
[info]   197.391 ±(99.9%) 1.890 MB/sec [Average]
[info]   (min, avg, max) = (196.883, 197.391, 198.168), stdev = 0.491
[info]   CI (99.9%): [195.501, 199.281] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm":
[info]   72.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (72.000, 72.000, 72.000), stdev = 0.001
[info]   CI (99.9%): [72.000, 72.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space":
[info]   167.470 ±(99.9%) 598.775 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 167.470, 325.549), stdev = 155.500
[info]   CI (99.9%): [≈ 0, 766.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   61.177 ±(99.9%) 218.700 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 61.177, 118.847), stdev = 56.796
[info]   CI (99.9%): [≈ 0, 279.877] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.452 ±(99.9%) 3.780 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.452, 2.208), stdev = 0.982
[info]   CI (99.9%): [≈ 0, 4.232] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.165 ±(99.9%) 1.380 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.165, 0.806), stdev = 0.358
[info]   CI (99.9%): [≈ 0, 1.545] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count":
[info]   3.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.600, 1.000), stdev = 0.548
[info]   CI (99.9%): [3.000, 3.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time":
[info]   8.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.600, 3.000), stdev = 1.517
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay
[info] # Run progress: 22.95% complete, ETA 00:12:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 89262.478 ops/s
[info] # Warmup Iteration   2: 211778.059 ops/s
[info] # Warmup Iteration   3: 215625.294 ops/s
[info] # Warmup Iteration   4: 214484.030 ops/s
[info] # Warmup Iteration   5: 216035.305 ops/s
[info] Iteration   1: 216114.519 ops/s
[info]                  ·gc.alloc.rate:                   1186.834 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1320.156 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9610.572 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 213553.599 ops/s
[info]                  ·gc.alloc.rate:                   1172.744 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.259 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7332.407 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.767 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   3: 215953.548 ops/s
[info]                  ·gc.alloc.rate:                   1185.951 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.775 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9724.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 215946.215 ops/s
[info]                  ·gc.alloc.rate:                   1185.927 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.615 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7326.350 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.152 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 215348.434 ops/s
[info]                  ·gc.alloc.rate:                   1182.656 MB/sec
[info]                  ·gc.alloc.rate.norm:              8640.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.179 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9834.630 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.304 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay":
[info]   215383.263 ±(99.9%) 4095.897 ops/s [Average]
[info]   (min, avg, max) = (213553.599, 215383.263, 216114.519), stdev = 1063.692
[info]   CI (99.9%): [211287.366, 219479.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate":
[info]   1182.822 ±(99.9%) 22.545 MB/sec [Average]
[info]   (min, avg, max) = (1172.744, 1182.822, 1186.834), stdev = 5.855
[info]   CI (99.9%): [1160.278, 1205.367] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm":
[info]   8640.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8640.002, 8640.002, 8640.002), stdev = 0.001
[info]   CI (99.9%): [8640.002, 8640.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space":
[info]   1200.397 ±(99.9%) 703.925 MB/sec [Average]
[info]   (min, avg, max) = (995.259, 1200.397, 1346.179), stdev = 182.807
[info]   CI (99.9%): [496.472, 1904.322] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8765.638 ±(99.9%) 5057.867 B/op [Average]
[info]   (min, avg, max) = (7326.350, 8765.638, 9834.630), stdev = 1313.512
[info]   CI (99.9%): [3707.771, 13823.505] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.172] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.366 ±(99.9%) 0.900 B/op [Average]
[info]   (min, avg, max) = (0.152, 0.366, 0.767), stdev = 0.234
[info]   CI (99.9%): [≈ 0, 1.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readExtractFieldsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 13.000), stdev = 3.937
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter
[info] # Run progress: 24.59% complete, ETA 00:12:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2959836.421 ops/s
[info] # Warmup Iteration   2: 3231287.760 ops/s
[info] # Warmup Iteration   3: 3329042.583 ops/s
[info] # Warmup Iteration   4: 3301774.577 ops/s
[info] # Warmup Iteration   5: 3308102.974 ops/s
[info] Iteration   1: 3258843.690 ops/s
[info]                  ·gc.alloc.rate:                   1541.097 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.361 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     806.888 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 3309071.778 ops/s
[info]                  ·gc.alloc.rate:                   1564.918 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.083 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     798.752 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 3246204.872 ops/s
[info]                  ·gc.alloc.rate:                   1535.138 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     654.312 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 3269948.835 ops/s
[info]                  ·gc.alloc.rate:                   1546.364 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.281 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     814.205 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 3231571.580 ops/s
[info]                  ·gc.alloc.rate:                   1528.157 MB/sec
[info]                  ·gc.alloc.rate.norm:              744.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.443 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     660.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.010 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         16.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter":
[info]   3263128.151 ±(99.9%) 113216.622 ops/s [Average]
[info]   (min, avg, max) = (3231571.580, 3263128.151, 3309071.778), stdev = 29401.997
[info]   CI (99.9%): [3149911.529, 3376344.772] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   1543.135 ±(99.9%) 53.681 MB/sec [Average]
[info]   (min, avg, max) = (1528.157, 1543.135, 1564.918), stdev = 13.941
[info]   CI (99.9%): [1489.454, 1596.816] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   744.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (744.000, 744.000, 744.000), stdev = 0.001
[info]   CI (99.9%): [744.000, 744.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1550.049 ±(99.9%) 692.386 MB/sec [Average]
[info]   (min, avg, max) = (1350.078, 1550.049, 1692.281), stdev = 179.810
[info]   CI (99.9%): [857.663, 2242.435] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   746.911 ±(99.9%) 315.613 B/op [Average]
[info]   (min, avg, max) = (654.312, 746.911, 814.205), stdev = 81.964
[info]   CI (99.9%): [431.298, 1062.524] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.028 ±(99.9%) 0.050 B/op [Average]
[info]   (min, avg, max) = (0.010, 0.028, 0.040), stdev = 0.013
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 16.000), stdev = 4.764
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay
[info] # Run progress: 26.23% complete, ETA 00:12:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 141247.359 ops/s
[info] # Warmup Iteration   2: 235931.260 ops/s
[info] # Warmup Iteration   3: 242614.249 ops/s
[info] # Warmup Iteration   4: 243300.374 ops/s
[info] # Warmup Iteration   5: 238267.762 ops/s
[info] Iteration   1: 239005.996 ops/s
[info]                  ·gc.alloc.rate:                   1284.736 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.891 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8713.715 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.548 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   2: 238159.768 ops/s
[info]                  ·gc.alloc.rate:                   1280.077 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8804.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.550 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 233059.338 ops/s
[info]                  ·gc.alloc.rate:                   1252.609 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9044.179 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.562 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         24.000 ms
[info] Iteration   4: 238114.399 ops/s
[info]                  ·gc.alloc.rate:                   1279.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.898 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6665.956 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.138 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 239620.738 ops/s
[info]                  ·gc.alloc.rate:                   1287.792 MB/sec
[info]                  ·gc.alloc.rate.norm:              8456.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.333 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8860.096 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.410 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay":
[info]   237592.048 ±(99.9%) 10051.480 ops/s [Average]
[info]   (min, avg, max) = (233059.338, 237592.048, 239620.738), stdev = 2610.337
[info]   CI (99.9%): [227540.568, 247643.528] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate":
[info]   1277.007 ±(99.9%) 54.069 MB/sec [Average]
[info]   (min, avg, max) = (1252.609, 1277.007, 1287.792), stdev = 14.042
[info]   CI (99.9%): [1222.938, 1331.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   8456.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8456.002, 8456.002, 8456.002), stdev = 0.001
[info]   CI (99.9%): [8456.002, 8456.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.934 ±(99.9%) 565.194 MB/sec [Average]
[info]   (min, avg, max) = (1008.898, 1270.934, 1349.333), stdev = 146.779
[info]   CI (99.9%): [705.740, 1836.128] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8417.659 ±(99.9%) 3799.242 B/op [Average]
[info]   (min, avg, max) = (6665.956, 8417.659, 9044.179), stdev = 986.651
[info]   CI (99.9%): [4618.417, 12216.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.067 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.067, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.171] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.442 ±(99.9%) 0.697 B/op [Average]
[info]   (min, avg, max) = (0.138, 0.442, 0.562), stdev = 0.181
[info]   CI (99.9%): [≈ 0, 1.139] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time":
[info]   52.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 10.400, 24.000), stdev = 8.385
[info]   CI (99.9%): [52.000, 52.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce
[info] # Run progress: 27.87% complete, ETA 00:11:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 350593.502 ops/s
[info] # Warmup Iteration   2: 539845.111 ops/s
[info] # Warmup Iteration   3: 542950.774 ops/s
[info] # Warmup Iteration   4: 546787.720 ops/s
[info] # Warmup Iteration   5: 547494.961 ops/s
[info] Iteration   1: 552868.041 ops/s
[info]                  ·gc.alloc.rate:                   1942.646 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1687.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4802.318 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.178 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 561006.435 ops/s
[info]                  ·gc.alloc.rate:                   1971.248 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2032.550 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5699.910 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 556304.256 ops/s
[info]                  ·gc.alloc.rate:                   1954.666 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2037.124 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5761.199 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.177 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 561851.649 ops/s
[info]                  ·gc.alloc.rate:                   1974.147 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.146 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5710.009 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.175 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 560910.264 ops/s
[info]                  ·gc.alloc.rate:                   1970.855 MB/sec
[info]                  ·gc.alloc.rate.norm:              5528.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1700.641 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4770.086 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.117 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce":
[info]   558588.129 ±(99.9%) 14891.910 ops/s [Average]
[info]   (min, avg, max) = (552868.041, 558588.129, 561851.649), stdev = 3867.382
[info]   CI (99.9%): [543696.219, 573480.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate":
[info]   1962.712 ±(99.9%) 52.280 MB/sec [Average]
[info]   (min, avg, max) = (1942.646, 1962.712, 1974.147), stdev = 13.577
[info]   CI (99.9%): [1910.433, 2014.992] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm":
[info]   5528.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5528.001, 5528.001, 5528.001), stdev = 0.001
[info]   CI (99.9%): [5528.001, 5528.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1899.418 ±(99.9%) 721.876 MB/sec [Average]
[info]   (min, avg, max) = (1687.627, 1899.418, 2039.146), stdev = 187.469
[info]   CI (99.9%): [1177.541, 2621.294] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5348.705 ±(99.9%) 1979.785 B/op [Average]
[info]   (min, avg, max) = (4770.086, 5348.705, 5761.199), stdev = 514.144
[info]   CI (99.9%): [3368.920, 7328.489] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.062), stdev = 0.009
[info]   CI (99.9%): [0.022, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.164 ±(99.9%) 0.102 B/op [Average]
[info]   (min, avg, max) = (0.117, 0.164, 0.178), stdev = 0.027
[info]   CI (99.9%): [0.062, 0.267] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.count":
[info]   28.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.600, 6.000), stdev = 0.548
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 8.000), stdev = 1.581
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson
[info] # Run progress: 29.51% complete, ETA 00:11:33
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 295948.842 ops/s
[info] # Warmup Iteration   2: 511618.981 ops/s
[info] # Warmup Iteration   3: 529295.657 ops/s
[info] # Warmup Iteration   4: 529618.980 ops/s
[info] # Warmup Iteration   5: 524514.659 ops/s
[info] Iteration   1: 527792.443 ops/s
[info]                  ·gc.alloc.rate:                   536.755 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.409 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1947.734 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 512364.445 ops/s
[info]                  ·gc.alloc.rate:               521.078 MB/sec
[info]                  ·gc.alloc.rate.norm:          1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      327.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1005.714 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   3: 521244.498 ops/s
[info]                  ·gc.alloc.rate:                   530.109 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.748 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1985.246 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 522517.338 ops/s
[info]                  ·gc.alloc.rate:                   531.420 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.396 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1988.322 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.125 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 524198.429 ops/s
[info]                  ·gc.alloc.rate:                   533.105 MB/sec
[info]                  ·gc.alloc.rate.norm:              1600.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          331.527 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     995.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.313 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson":
[info]   521623.431 ±(99.9%) 22066.474 ops/s [Average]
[info]   (min, avg, max) = (512364.445, 521623.431, 527792.443), stdev = 5730.593
[info]   CI (99.9%): [499556.956, 543689.905] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate":
[info]   530.493 ±(99.9%) 22.427 MB/sec [Average]
[info]   (min, avg, max) = (521.078, 530.493, 536.755), stdev = 5.824
[info]   CI (99.9%): [508.067, 552.920] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm":
[info]   1600.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1600.001, 1600.001, 1600.001), stdev = 0.001
[info]   CI (99.9%): [1600.001, 1600.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   526.123 ±(99.9%) 691.137 MB/sec [Average]
[info]   (min, avg, max) = (327.534, 526.123, 660.396), stdev = 179.486
[info]   CI (99.9%): [≈ 0, 1217.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1584.405 ±(99.9%) 2053.970 B/op [Average]
[info]   (min, avg, max) = (995.008, 1584.405, 1988.322), stdev = 533.410
[info]   CI (99.9%): [≈ 0, 3638.375] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.154 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.104), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.200] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.137 ±(99.9%) 0.462 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.137, 0.313), stdev = 0.120
[info]   CI (99.9%): [≈ 0, 0.600] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 8.000), stdev = 2.702
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter
[info] # Run progress: 31.15% complete, ETA 00:11:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2679692.758 ops/s
[info] # Warmup Iteration   2: 2939490.261 ops/s
[info] # Warmup Iteration   3: 2950890.298 ops/s
[info] # Warmup Iteration   4: 2957280.452 ops/s
[info] # Warmup Iteration   5: 2951545.178 ops/s
[info] Iteration   1: 2923338.013 ops/s
[info]                  ·gc.alloc.rate:                   728.411 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.781 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2918037.711 ops/s
[info]                  ·gc.alloc.rate:                   727.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.677 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     531.413 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.045 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2915941.006 ops/s
[info]                  ·gc.alloc.rate:                   726.561 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          659.438 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.022 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2928317.796 ops/s
[info]                  ·gc.alloc.rate:                   729.623 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.742 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.530 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 2937950.370 ops/s
[info]                  ·gc.alloc.rate:                   732.021 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          664.079 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     355.617 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.011 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter":
[info]   2924716.979 ±(99.9%) 33987.272 ops/s [Average]
[info]   (min, avg, max) = (2915941.006, 2924716.979, 2937950.370), stdev = 8826.387
[info]   CI (99.9%): [2890729.707, 2958704.251] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate":
[info]   728.742 ±(99.9%) 8.419 MB/sec [Average]
[info]   (min, avg, max) = (726.561, 728.742, 732.021), stdev = 2.186
[info]   CI (99.9%): [720.323, 737.161] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   724.943 ±(99.9%) 561.441 MB/sec [Average]
[info]   (min, avg, max) = (653.781, 724.943, 985.677), stdev = 145.805
[info]   CI (99.9%): [163.502, 1286.385] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   390.036 ±(99.9%) 304.390 B/op [Average]
[info]   (min, avg, max) = (351.837, 390.036, 531.413), stdev = 79.049
[info]   CI (99.9%): [85.647, 694.426] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.022 ±(99.9%) 0.053 B/op [Average]
[info]   (min, avg, max) = (0.011, 0.022, 0.045), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.075] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay
[info] # Run progress: 32.79% complete, ETA 00:11:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71813.314 ops/s
[info] # Warmup Iteration   2: 156921.266 ops/s
[info] # Warmup Iteration   3: 165356.497 ops/s
[info] # Warmup Iteration   4: 164520.094 ops/s
[info] # Warmup Iteration   5: 165573.523 ops/s
[info] Iteration   1: 166275.392 ops/s
[info]                  ·gc.alloc.rate:                   1138.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1317.473 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12466.008 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.788 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 163804.330 ops/s
[info]                  ·gc.alloc.rate:                   1121.982 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.959 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9546.416 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.600 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 166766.023 ops/s
[info]                  ·gc.alloc.rate:                   1142.192 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.767 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12573.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.393 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 166270.516 ops/s
[info]                  ·gc.alloc.rate:                   1138.869 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.924 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9499.148 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.394 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 163325.169 ops/s
[info]                  ·gc.alloc.rate:                   1118.721 MB/sec
[info]                  ·gc.alloc.rate.norm:              10776.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9712.187 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.201 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay":
[info]   165288.286 ±(99.9%) 6142.596 ops/s [Average]
[info]   (min, avg, max) = (163325.169, 165288.286, 166766.023), stdev = 1595.213
[info]   CI (99.9%): [159145.690, 171430.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate":
[info]   1132.126 ±(99.9%) 41.953 MB/sec [Average]
[info]   (min, avg, max) = (1118.721, 1132.126, 1142.192), stdev = 10.895
[info]   CI (99.9%): [1090.173, 1174.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm":
[info]   10776.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10776.003, 10776.003, 10776.003), stdev = 0.001
[info]   CI (99.9%): [10776.002, 10776.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.281 ±(99.9%) 681.985 MB/sec [Average]
[info]   (min, avg, max) = (993.959, 1131.281, 1332.767), stdev = 177.109
[info]   CI (99.9%): [449.296, 1813.265] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10759.549 ±(99.9%) 6197.458 B/op [Average]
[info]   (min, avg, max) = (9499.148, 10759.549, 12573.984), stdev = 1609.460
[info]   CI (99.9%): [4562.090, 16957.007] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.141] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.475 ±(99.9%) 0.866 B/op [Average]
[info]   (min, avg, max) = (0.201, 0.475, 0.788), stdev = 0.225
[info]   CI (99.9%): [≈ 0, 1.341] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readIterablesPlay:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.400, 9.000), stdev = 2.302
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce
[info] # Run progress: 34.43% complete, ETA 00:10:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 231542.024 ops/s
[info] # Warmup Iteration   2: 451468.681 ops/s
[info] # Warmup Iteration   3: 453844.154 ops/s
[info] # Warmup Iteration   4: 449343.036 ops/s
[info] # Warmup Iteration   5: 453451.487 ops/s
[info] Iteration   1: 452591.125 ops/s
[info]                  ·gc.alloc.rate:                   1608.729 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.417 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5841.188 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.072 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 459686.148 ops/s
[info]                  ·gc.alloc.rate:                   1633.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.801 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4619.664 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.214 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 452936.022 ops/s
[info]                  ·gc.alloc.rate:                   1609.973 MB/sec
[info]                  ·gc.alloc.rate.norm:              5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.101 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5877.261 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.217 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 461251.868 ops/s
[info]                  ·gc.alloc.rate:               1639.429 MB/sec
[info]                  ·gc.alloc.rate.norm:          5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1695.989 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5784.924 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   5: 459331.519 ops/s
[info]                  ·gc.alloc.rate:               1632.640 MB/sec
[info]                  ·gc.alloc.rate.norm:          5592.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1698.653 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5818.106 B/op
[info]                  ·gc.count:                    5.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce":
[info]   457159.336 ±(99.9%) 15707.242 ops/s [Average]
[info]   (min, avg, max) = (452591.125, 457159.336, 461251.868), stdev = 4079.121
[info]   CI (99.9%): [441452.095, 472866.578] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate":
[info]   1624.935 ±(99.9%) 55.680 MB/sec [Average]
[info]   (min, avg, max) = (1608.729, 1624.935, 1639.429), stdev = 14.460
[info]   CI (99.9%): [1569.255, 1680.615] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm":
[info]   5592.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5592.001, 5592.001, 5592.001), stdev = 0.001
[info]   CI (99.9%): [5592.001, 5592.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1623.392 ±(99.9%) 589.537 MB/sec [Average]
[info]   (min, avg, max) = (1349.801, 1623.392, 1698.653), stdev = 153.101
[info]   CI (99.9%): [1033.855, 2212.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   5588.228 ±(99.9%) 2088.932 B/op [Average]
[info]   (min, avg, max) = (4619.664, 5588.228, 5877.261), stdev = 542.489
[info]   CI (99.9%): [3499.297, 7677.160] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.151] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.101 ±(99.9%) 0.419 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.101, 0.217), stdev = 0.109
[info]   CI (99.9%): [≈ 0, 0.520] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsCirce:·gc.time":
[info]   44.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.800, 13.000), stdev = 3.701
[info]   CI (99.9%): [44.000, 44.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson
[info] # Run progress: 36.07% complete, ETA 00:10:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 386941.781 ops/s
[info] # Warmup Iteration   2: 852380.070 ops/s
[info] # Warmup Iteration   3: 860371.593 ops/s
[info] # Warmup Iteration   4: 863204.516 ops/s
[info] # Warmup Iteration   5: 857490.998 ops/s
[info] Iteration   1: 849400.067 ops/s
[info]                  ·gc.alloc.rate:                   1002.072 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.861 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2457.563 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.193 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 853753.378 ops/s
[info]                  ·gc.alloc.rate:                   1007.232 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1000.680 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1843.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.077 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 844058.116 ops/s
[info]                  ·gc.alloc.rate:                   995.758 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.319 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1873.821 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   4: 846812.000 ops/s
[info]                  ·gc.alloc.rate:                   1001.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.552 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1860.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.115 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         18.000 ms
[info] Iteration   5: 866557.825 ops/s
[info]                  ·gc.alloc.rate:                   1022.310 MB/sec
[info]                  ·gc.alloc.rate.norm:              1856.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.286 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1835.986 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson":
[info]   852116.277 ±(99.9%) 33990.822 ops/s [Average]
[info]   (min, avg, max) = (844058.116, 852116.277, 866557.825), stdev = 8827.309
[info]   CI (99.9%): [818125.455, 886107.100] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate":
[info]   1005.712 ±(99.9%) 39.015 MB/sec [Average]
[info]   (min, avg, max) = (995.758, 1005.712, 1022.310), stdev = 10.132
[info]   CI (99.9%): [966.697, 1044.727] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm":
[info]   1856.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1856.000, 1856.001, 1856.001), stdev = 0.001
[info]   CI (99.9%): [1856.000, 1856.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1069.540 ±(99.9%) 554.106 MB/sec [Average]
[info]   (min, avg, max) = (1000.680, 1069.540, 1326.861), stdev = 143.899
[info]   CI (99.9%): [515.434, 1623.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1974.336 ±(99.9%) 1041.712 B/op [Average]
[info]   (min, avg, max) = (1835.986, 1974.336, 2457.563), stdev = 270.529
[info]   CI (99.9%): [932.624, 3016.048] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.119 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.104), stdev = 0.031
[info]   CI (99.9%): [≈ 0, 0.177] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.107 ±(99.9%) 0.220 B/op [Average]
[info]   (min, avg, max) = (0.039, 0.107, 0.193), stdev = 0.057
[info]   CI (99.9%): [≈ 0, 0.327] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJackson:·gc.time":
[info]   49.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 9.800, 18.000), stdev = 6.419
[info]   CI (99.9%): [49.000, 49.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter
[info] # Run progress: 37.70% complete, ETA 00:10:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2926664.967 ops/s
[info] # Warmup Iteration   2: 3244345.983 ops/s
[info] # Warmup Iteration   3: 3248689.714 ops/s
[info] # Warmup Iteration   4: 3228808.619 ops/s
[info] # Warmup Iteration   5: 3290406.640 ops/s
[info] Iteration   1: 3254155.599 ops/s
[info]                  ·gc.alloc.rate:                   810.818 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.280 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     475.379 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.030 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 3285386.836 ops/s
[info]                  ·gc.alloc.rate:                   818.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.733 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     314.969 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 3253175.142 ops/s
[info]                  ·gc.alloc.rate:                   810.554 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.927 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     479.716 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3266168.092 ops/s
[info]                  ·gc.alloc.rate:               813.816 MB/sec
[info]                  ·gc.alloc.rate.norm:          392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.078 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 319.874 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     6.000 ms
[info] Iteration   5: 3270304.929 ops/s
[info]                  ·gc.alloc.rate:                   814.823 MB/sec
[info]                  ·gc.alloc.rate.norm:              392.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          666.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     320.432 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter":
[info]   3265838.120 ±(99.9%) 50904.503 ops/s [Average]
[info]   (min, avg, max) = (3253175.142, 3265838.120, 3285386.836), stdev = 13219.738
[info]   CI (99.9%): [3214933.617, 3316742.623] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate":
[info]   813.721 ±(99.9%) 12.685 MB/sec [Average]
[info]   (min, avg, max) = (810.554, 813.721, 818.592), stdev = 3.294
[info]   CI (99.9%): [801.036, 826.405] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm":
[info]   392.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (392.000, 392.000, 392.000), stdev = 0.001
[info]   CI (99.9%): [392.000, 392.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.616 ±(99.9%) 685.614 MB/sec [Average]
[info]   (min, avg, max) = (657.733, 792.616, 991.927), stdev = 178.052
[info]   CI (99.9%): [107.001, 1478.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   382.074 ±(99.9%) 335.754 B/op [Average]
[info]   (min, avg, max) = (314.969, 382.074, 479.716), stdev = 87.194
[info]   CI (99.9%): [46.320, 717.828] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.146 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.104), stdev = 0.038
[info]   CI (99.9%): [≈ 0, 0.196] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.024 ±(99.9%) 0.070 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.024, 0.050), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.094] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsJsoniter:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.800, 12.000), stdev = 4.382
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay
[info] # Run progress: 39.34% complete, ETA 00:09:56
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146835.039 ops/s
[info] # Warmup Iteration   2: 235297.497 ops/s
[info] # Warmup Iteration   3: 247173.907 ops/s
[info] # Warmup Iteration   4: 246307.693 ops/s
[info] # Warmup Iteration   5: 242064.794 ops/s
[info] Iteration   1: 248271.601 ops/s
[info]                  ·gc.alloc.rate:                   1291.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1323.828 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8388.726 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 249104.798 ops/s
[info]                  ·gc.alloc.rate:                   1295.827 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.841 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8417.767 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.125 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.789 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 246586.476 ops/s
[info]                  ·gc.alloc.rate:                   1282.681 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.923 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6405.423 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.266 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 248588.490 ops/s
[info]                  ·gc.alloc.rate:               1293.134 MB/sec
[info]                  ·gc.alloc.rate.norm:          8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1344.789 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 8510.916 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   5: 245372.525 ops/s
[info]                  ·gc.alloc.rate:                   1276.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              8184.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1349.315 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8652.287 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.134 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         20.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay":
[info]   247584.778 ±(99.9%) 5990.287 ops/s [Average]
[info]   (min, avg, max) = (245372.525, 247584.778, 249104.798), stdev = 1555.659
[info]   CI (99.9%): [241594.491, 253575.065] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate":
[info]   1287.890 ±(99.9%) 31.369 MB/sec [Average]
[info]   (min, avg, max) = (1276.287, 1287.890, 1295.827), stdev = 8.146
[info]   CI (99.9%): [1256.521, 1319.259] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm":
[info]   8184.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8184.002, 8184.002, 8184.002), stdev = 0.001
[info]   CI (99.9%): [8184.002, 8184.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1270.939 ±(99.9%) 576.064 MB/sec [Average]
[info]   (min, avg, max) = (1003.923, 1270.939, 1349.315), stdev = 149.602
[info]   CI (99.9%): [694.875, 1847.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8075.024 ±(99.9%) 3615.652 B/op [Average]
[info]   (min, avg, max) = (6405.423, 8075.024, 8652.287), stdev = 938.973
[info]   CI (99.9%): [4459.372, 11690.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.188 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.125), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.230] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.264 ±(99.9%) 1.187 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.264, 0.789), stdev = 0.308
[info]   CI (99.9%): [≈ 0, 1.451] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMapsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 8.000, 20.000), stdev = 6.819
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson
[info] # Run progress: 40.98% complete, ETA 00:09:40
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 71480.961 ops/s
[info] # Warmup Iteration   2: 560982.687 ops/s
[info] # Warmup Iteration   3: 640137.094 ops/s
[info] # Warmup Iteration   4: 647127.422 ops/s
[info] # Warmup Iteration   5: 643007.179 ops/s
[info] Iteration   1: 648381.932 ops/s
[info]                  ·gc.alloc.rate:                   841.287 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.534 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1594.424 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 644145.928 ops/s
[info]                  ·gc.alloc.rate:                   835.247 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2425.963 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.167 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.407 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 652356.809 ops/s
[info]                  ·gc.alloc.rate:                   845.878 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.285 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2405.149 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 640754.933 ops/s
[info]                  ·gc.alloc.rate:                   830.842 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          667.726 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1639.494 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.051 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   5: 650994.759 ops/s
[info]                  ·gc.alloc.rate:                   844.114 MB/sec
[info]                  ·gc.alloc.rate.norm:              2040.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.262 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2429.451 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.101 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson":
[info]   647326.872 ±(99.9%) 18584.652 ops/s [Average]
[info]   (min, avg, max) = (640754.933, 647326.872, 652356.809), stdev = 4826.375
[info]   CI (99.9%): [628742.220, 665911.525] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate":
[info]   839.474 ±(99.9%) 24.217 MB/sec [Average]
[info]   (min, avg, max) = (830.842, 839.474, 845.878), stdev = 6.289
[info]   CI (99.9%): [815.257, 863.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm":
[info]   2040.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2040.001, 2040.001, 2040.001), stdev = 0.001
[info]   CI (99.9%): [2040.001, 2040.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   864.216 ±(99.9%) 708.934 MB/sec [Average]
[info]   (min, avg, max) = (657.534, 864.216, 1005.262), stdev = 184.108
[info]   CI (99.9%): [155.281, 1573.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   2098.896 ±(99.9%) 1695.566 B/op [Average]
[info]   (min, avg, max) = (1594.424, 2098.896, 2429.451), stdev = 440.333
[info]   CI (99.9%): [403.331, 3794.462] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.245 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.167), stdev = 0.064
[info]   CI (99.9%): [≈ 0, 0.299] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.132 ±(99.9%) 0.598 B/op [Average]
[info]   (min, avg, max) = (0.050, 0.132, 0.407), stdev = 0.155
[info]   CI (99.9%): [≈ 0, 0.730] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJackson:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.200, 12.000), stdev = 4.025
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter
[info] # Run progress: 42.62% complete, ETA 00:09:24
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1716297.184 ops/s
[info] # Warmup Iteration   2: 2340367.589 ops/s
[info] # Warmup Iteration   3: 2407372.818 ops/s
[info] # Warmup Iteration   4: 2392203.155 ops/s
[info] # Warmup Iteration   5: 2350644.371 ops/s
[info] Iteration   1: 2399355.387 ops/s
[info]                  ·gc.alloc.rate:                   1634.900 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1671.398 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1095.931 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2397662.354 ops/s
[info]                  ·gc.alloc.rate:                   1633.747 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1680.017 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1102.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.068 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2386553.057 ops/s
[info]                  ·gc.alloc.rate:                   1626.132 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1688.297 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1112.982 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 2374895.724 ops/s
[info]                  ·gc.alloc.rate:                   1618.225 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.993 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1121.531 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2367641.837 ops/s
[info]                  ·gc.alloc.rate:                   1613.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              1072.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.751 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     901.564 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.042 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter":
[info]   2385221.672 ±(99.9%) 53494.192 ops/s [Average]
[info]   (min, avg, max) = (2367641.837, 2385221.672, 2399355.387), stdev = 13892.272
[info]   CI (99.9%): [2331727.480, 2438715.864] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate":
[info]   1625.248 ±(99.9%) 36.518 MB/sec [Average]
[info]   (min, avg, max) = (1613.238, 1625.248, 1634.900), stdev = 9.484
[info]   CI (99.9%): [1588.731, 1661.766] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   1072.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1072.000, 1072.000, 1072.000), stdev = 0.001
[info]   CI (99.9%): [1072.000, 1072.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   1617.891 ±(99.9%) 563.018 MB/sec [Average]
[info]   (min, avg, max) = (1356.751, 1617.891, 1692.993), stdev = 146.214
[info]   CI (99.9%): [1054.873, 2180.909] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   1066.874 ±(99.9%) 357.842 B/op [Average]
[info]   (min, avg, max) = (901.564, 1066.874, 1121.531), stdev = 92.931
[info]   CI (99.9%): [709.031, 1424.716] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.075 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.075, 0.104), stdev = 0.019
[info]   CI (99.9%): [0.003, 0.147] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.049 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.041, 0.049, 0.068), stdev = 0.012
[info]   CI (99.9%): [0.003, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count":
[info]   24.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.800, 5.000), stdev = 0.447
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time":
[info]   27.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 5.400, 9.000), stdev = 2.074
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay
[info] # Run progress: 44.26% complete, ETA 00:09:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 123997.382 ops/s
[info] # Warmup Iteration   2: 223947.899 ops/s
[info] # Warmup Iteration   3: 226444.809 ops/s
[info] # Warmup Iteration   4: 226321.945 ops/s
[info] # Warmup Iteration   5: 226831.459 ops/s
[info] Iteration   1: 225914.211 ops/s
[info]                  ·gc.alloc.rate:                   1192.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              8304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          990.599 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6898.740 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.145 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 225968.825 ops/s
[info]                  ·gc.alloc.rate:                   1192.739 MB/sec
[info]                  ·gc.alloc.rate.norm:              8304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1328.501 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9249.194 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.580 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 225426.280 ops/s
[info]                  ·gc.alloc.rate:                   1189.851 MB/sec
[info]                  ·gc.alloc.rate.norm:              8304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1001.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6990.383 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.436 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 230056.592 ops/s
[info]                  ·gc.alloc.rate:                   1214.278 MB/sec
[info]                  ·gc.alloc.rate.norm:              8304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.480 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9173.889 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.570 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 229595.604 ops/s
[info]                  ·gc.alloc.rate:                   1211.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              8304.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.385 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9233.526 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.285 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay":
[info]   227392.302 ±(99.9%) 8616.599 ops/s [Average]
[info]   (min, avg, max) = (225426.280, 227392.302, 230056.592), stdev = 2237.703
[info]   CI (99.9%): [218775.704, 236008.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate":
[info]   1200.199 ±(99.9%) 45.373 MB/sec [Average]
[info]   (min, avg, max) = (1189.851, 1200.199, 1214.278), stdev = 11.783
[info]   CI (99.9%): [1154.826, 1245.572] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm":
[info]   8304.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8304.002, 8304.002, 8304.002), stdev = 0.001
[info]   CI (99.9%): [8304.002, 8304.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   1201.918 ±(99.9%) 724.069 MB/sec [Average]
[info]   (min, avg, max) = (990.599, 1201.918, 1347.385), stdev = 188.038
[info]   CI (99.9%): [477.850, 1925.987] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8309.146 ±(99.9%) 4799.550 B/op [Average]
[info]   (min, avg, max) = (6898.740, 8309.146, 9249.194), stdev = 1246.428
[info]   CI (99.9%): [3509.596, 13108.696] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.058, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.403 ±(99.9%) 0.722 B/op [Average]
[info]   (min, avg, max) = (0.145, 0.403, 0.580), stdev = 0.187
[info]   CI (99.9%): [≈ 0, 1.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readMutableMapsPlay:·gc.time":
[info]   40.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 8.000, 11.000), stdev = 3.536
[info]   CI (99.9%): [40.000, 40.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson
[info] # Run progress: 45.90% complete, ETA 00:08:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 644274.830 ops/s
[info] # Warmup Iteration   2: 983328.049 ops/s
[info] # Warmup Iteration   3: 1005229.029 ops/s
[info] # Warmup Iteration   4: 1005256.045 ops/s
[info] # Warmup Iteration   5: 998336.898 ops/s
[info] Iteration   1: 1000299.591 ops/s
[info]                  ·gc.alloc.rate:                   727.365 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.084 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1024.026 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 986921.970 ops/s
[info]                  ·gc.alloc.rate:                   717.654 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1566.390 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 1000078.370 ops/s
[info]                  ·gc.alloc.rate:               727.185 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1036.832 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   4: 992406.758 ops/s
[info]                  ·gc.alloc.rate:                   721.616 MB/sec
[info]                  ·gc.alloc.rate.norm:              1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          661.723 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1049.050 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 995002.257 ops/s
[info]                  ·gc.alloc.rate:               723.499 MB/sec
[info]                  ·gc.alloc.rate.norm:          1144.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      664.399 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1050.552 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson":
[info]   994941.789 ±(99.9%) 21597.792 ops/s [Average]
[info]   (min, avg, max) = (986921.970, 994941.789, 1000299.591), stdev = 5608.878
[info]   CI (99.9%): [973343.997, 1016539.581] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate":
[info]   723.464 ±(99.9%) 15.669 MB/sec [Average]
[info]   (min, avg, max) = (717.654, 723.464, 727.365), stdev = 4.069
[info]   CI (99.9%): [707.794, 739.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm":
[info]   1144.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1144.000, 1144.000, 1144.000), stdev = 0.001
[info]   CI (99.9%): [1144.000, 1144.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   723.779 ±(99.9%) 557.519 MB/sec [Average]
[info]   (min, avg, max) = (651.084, 723.779, 982.627), stdev = 144.786
[info]   CI (99.9%): [166.261, 1281.298] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1145.370 ±(99.9%) 907.214 B/op [Average]
[info]   (min, avg, max) = (1024.026, 1145.370, 1566.390), stdev = 235.601
[info]   CI (99.9%): [238.156, 2052.584] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.066), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.133] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 3.400, 5.000), stdev = 1.140
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter
[info] # Run progress: 47.54% complete, ETA 00:08:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2814233.824 ops/s
[info] # Warmup Iteration   2: 2987082.482 ops/s
[info] # Warmup Iteration   3: 2965021.367 ops/s
[info] # Warmup Iteration   4: 2987651.083 ops/s
[info] # Warmup Iteration   5: 2984921.827 ops/s
[info] Iteration   1: 2970380.685 ops/s
[info]                  ·gc.alloc.rate:                   90.624 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          255.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     135.538 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      5.749 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 3.045 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2976830.869 ops/s
[info]                  ·gc.alloc.rate:      90.825 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   3: 3007963.343 ops/s
[info]                  ·gc.alloc.rate:               91.774 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      255.912 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 133.848 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 2929124.472 ops/s
[info]                  ·gc.alloc.rate:      89.370 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Iteration   5: 3006329.207 ops/s
[info]                  ·gc.alloc.rate:      91.723 MB/sec
[info]                  ·gc.alloc.rate.norm: 48.000 B/op
[info]                  ·gc.count:           ≈ 0 counts
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter":
[info]   2978125.715 ±(99.9%) 124007.848 ops/s [Average]
[info]   (min, avg, max) = (2929124.472, 2978125.715, 3007963.343), stdev = 32204.444
[info]   CI (99.9%): [2854117.867, 3102133.563] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate":
[info]   90.863 ±(99.9%) 3.782 MB/sec [Average]
[info]   (min, avg, max) = (89.370, 90.863, 91.774), stdev = 0.982
[info]   CI (99.9%): [87.081, 94.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   102.361 ±(99.9%) 539.722 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 102.361, 255.912), stdev = 140.164
[info]   CI (99.9%): [≈ 0, 642.083] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   53.877 ±(99.9%) 284.088 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 53.877, 135.538), stdev = 73.777
[info]   CI (99.9%): [≈ 0, 337.965] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   1.150 ±(99.9%) 9.900 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 1.150, 5.749), stdev = 2.571
[info]   CI (99.9%): [≈ 0, 11.049] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.609 ±(99.9%) 5.243 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.609, 3.045), stdev = 1.362
[info]   CI (99.9%): [≈ 0, 5.852] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count":
[info]   2.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (≈ 0, 0.400, 1.000), stdev = 0.548
[info]   CI (99.9%): [2.000, 2.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time":
[info]   5.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (≈ 0, 1.000, 3.000), stdev = 1.414
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay
[info] # Run progress: 49.18% complete, ETA 00:08:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 96734.717 ops/s
[info] # Warmup Iteration   2: 160670.834 ops/s
[info] # Warmup Iteration   3: 164579.766 ops/s
[info] # Warmup Iteration   4: 165630.576 ops/s
[info] # Warmup Iteration   5: 165397.673 ops/s
[info] Iteration   1: 165906.679 ops/s
[info]                  ·gc.alloc.rate:                   1101.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.128 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12499.749 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 166072.115 ops/s
[info]                  ·gc.alloc.rate:                   1102.903 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.958 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9415.947 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.592 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 164652.238 ops/s
[info]                  ·gc.alloc.rate:                   1093.399 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.579 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9541.945 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.597 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 165378.868 ops/s
[info]                  ·gc.alloc.rate:                   1098.309 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.162 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     12729.684 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.396 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 167114.262 ops/s
[info]                  ·gc.alloc.rate:                   1109.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              10448.003 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.292 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     9492.186 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay":
[info]   165824.832 ±(99.9%) 3499.818 ops/s [Average]
[info]   (min, avg, max) = (164652.238, 165824.832, 167114.262), stdev = 908.892
[info]   CI (99.9%): [162325.014, 169324.651] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate":
[info]   1101.240 ±(99.9%) 23.325 MB/sec [Average]
[info]   (min, avg, max) = (1093.399, 1101.240, 1109.822), stdev = 6.057
[info]   CI (99.9%): [1077.915, 1124.564] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm":
[info]   10448.003 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (10448.003, 10448.003, 10448.003), stdev = 0.001
[info]   CI (99.9%): [10448.002, 10448.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1131.424 ±(99.9%) 692.327 MB/sec [Average]
[info]   (min, avg, max) = (993.958, 1131.424, 1338.162), stdev = 179.795
[info]   CI (99.9%): [439.096, 1823.751] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   10735.902 ±(99.9%) 6613.969 B/op [Average]
[info]   (min, avg, max) = (9415.947, 10735.902, 12729.684), stdev = 1717.627
[info]   CI (99.9%): [4121.933, 17349.871] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.475 ±(99.9%) 0.684 B/op [Average]
[info]   (min, avg, max) = (0.196, 0.475, 0.597), stdev = 0.178
[info]   CI (99.9%): [≈ 0, 1.159] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.readPrimitivesPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 7.200, 11.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce
[info] # Run progress: 50.82% complete, ETA 00:08:03
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 894264.976 ops/s
[info] # Warmup Iteration   2: 1263300.175 ops/s
[info] # Warmup Iteration   3: 1293134.442 ops/s
[info] # Warmup Iteration   4: 1318085.567 ops/s
[info] # Warmup Iteration   5: 1315391.339 ops/s
[info] Iteration   1: 1322600.852 ops/s
[info]                  ·gc.alloc.rate:                   1479.567 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1340.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1594.515 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.050 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   2: 1322189.420 ops/s
[info]                  ·gc.alloc.rate:                   1479.163 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.157 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1601.741 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 1321076.835 ops/s
[info]                  ·gc.alloc.rate:                   1477.906 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1689.330 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2011.780 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 1328115.691 ops/s
[info]                  ·gc.alloc.rate:               1485.696 MB/sec
[info]                  ·gc.alloc.rate.norm:          1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1354.737 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1604.863 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1294212.005 ops/s
[info]                  ·gc.alloc.rate:                   1447.871 MB/sec
[info]                  ·gc.alloc.rate.norm:              1760.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1356.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1649.309 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.025 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce":
[info]   1317638.961 ±(99.9%) 51508.395 ops/s [Average]
[info]   (min, avg, max) = (1294212.005, 1317638.961, 1328115.691), stdev = 13376.567
[info]   CI (99.9%): [1266130.565, 1369147.356] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate":
[info]   1474.041 ±(99.9%) 57.515 MB/sec [Average]
[info]   (min, avg, max) = (1447.871, 1474.041, 1485.696), stdev = 14.936
[info]   CI (99.9%): [1416.525, 1531.556] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm":
[info]   1760.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1760.000, 1760.000, 1760.000), stdev = 0.001
[info]   CI (99.9%): [1760.000, 1760.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space":
[info]   1417.497 ±(99.9%) 585.692 MB/sec [Average]
[info]   (min, avg, max) = (1340.450, 1417.497, 1689.330), stdev = 152.102
[info]   CI (99.9%): [831.805, 2003.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   1692.442 ±(99.9%) 692.376 B/op [Average]
[info]   (min, avg, max) = (1594.515, 1692.442, 2011.780), stdev = 179.808
[info]   CI (99.9%): [1000.066, 2384.817] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.021 ±(99.9%) 0.057 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.042), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.078] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.025 ±(99.9%) 0.067 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.050), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.092] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsCirce:·gc.time":
[info]   34.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.800, 9.000), stdev = 2.950
[info]   CI (99.9%): [34.000, 34.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson
[info] # Run progress: 52.46% complete, ETA 00:07:47
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2692384.503 ops/s
[info] # Warmup Iteration   2: 3862489.424 ops/s
[info] # Warmup Iteration   3: 3850847.054 ops/s
[info] # Warmup Iteration   4: 3877958.624 ops/s
[info] # Warmup Iteration   5: 3900302.145 ops/s
[info] Iteration   1: 3892740.088 ops/s
[info]                  ·gc.alloc.rate:                   1068.904 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.303 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     401.446 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 3864049.260 ops/s
[info]                  ·gc.alloc.rate:                   1061.025 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1333.451 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     542.919 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 3802319.151 ops/s
[info]                  ·gc.alloc.rate:                   1044.110 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.322 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     415.952 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 3909127.917 ops/s
[info]                  ·gc.alloc.rate:                   1073.374 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.902 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     405.650 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 3883880.236 ops/s
[info]                  ·gc.alloc.rate:                   1066.466 MB/sec
[info]                  ·gc.alloc.rate.norm:              432.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.256 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     409.636 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson":
[info]   3870423.330 ±(99.9%) 159418.275 ops/s [Average]
[info]   (min, avg, max) = (3802319.151, 3870423.330, 3909127.917), stdev = 41400.420
[info]   CI (99.9%): [3711005.056, 4029841.605] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate":
[info]   1062.776 ±(99.9%) 43.692 MB/sec [Average]
[info]   (min, avg, max) = (1044.110, 1062.776, 1073.374), stdev = 11.347
[info]   CI (99.9%): [1019.084, 1106.468] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm":
[info]   432.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (432.000, 432.000, 432.000), stdev = 0.001
[info]   CI (99.9%): [432.000, 432.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space":
[info]   1070.247 ±(99.9%) 567.166 MB/sec [Average]
[info]   (min, avg, max) = (993.303, 1070.247, 1333.451), stdev = 147.291
[info]   CI (99.9%): [503.081, 1637.413] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   435.120 ±(99.9%) 232.956 B/op [Average]
[info]   (min, avg, max) = (401.446, 435.120, 542.919), stdev = 60.498
[info]   CI (99.9%): [202.165, 668.076] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.044 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.033, 0.042), stdev = 0.011
[info]   CI (99.9%): [≈ 0, 0.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.014 ±(99.9%) 0.018 B/op [Average]
[info]   (min, avg, max) = (0.008, 0.014, 0.017), stdev = 0.005
[info]   CI (99.9%): [≈ 0, 0.032] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.194
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter
[info] # Run progress: 54.10% complete, ETA 00:07:31
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 13481172.580 ops/s
[info] # Warmup Iteration   2: 13669191.204 ops/s
[info] # Warmup Iteration   3: 13620700.796 ops/s
[info] # Warmup Iteration   4: 13861794.638 ops/s
[info] # Warmup Iteration   5: 13971976.602 ops/s
[info] Iteration   1: 13924157.123 ops/s
[info]                  ·gc.alloc.rate:                   424.825 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.390 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73.599 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   2: 14113314.993 ops/s
[info]                  ·gc.alloc.rate:               430.601 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.880 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 36.326 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 14057210.827 ops/s
[info]                  ·gc.alloc.rate:                   428.880 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.210 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     36.509 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.005 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 14014092.969 ops/s
[info]                  ·gc.alloc.rate:                   427.569 MB/sec
[info]                  ·gc.alloc.rate.norm:              48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     73.315 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 13818993.576 ops/s
[info]                  ·gc.alloc.rate:               421.614 MB/sec
[info]                  ·gc.alloc.rate.norm:          48.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.869 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 37.213 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter":
[info]   13985553.898 ±(99.9%) 446508.673 ops/s [Average]
[info]   (min, avg, max) = (13818993.576, 13985553.898, 14113314.993), stdev = 115956.884
[info]   CI (99.9%): [13539045.225, 14432062.571] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate":
[info]   426.698 ±(99.9%) 13.628 MB/sec [Average]
[info]   (min, avg, max) = (421.614, 426.698, 430.601), stdev = 3.539
[info]   CI (99.9%): [413.070, 440.326] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm":
[info]   48.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (48.000, 48.000, 48.000), stdev = 0.001
[info]   CI (99.9%): [48.000, 48.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.684 ±(99.9%) 687.379 MB/sec [Average]
[info]   (min, avg, max) = (325.880, 456.684, 653.071), stdev = 178.510
[info]   CI (99.9%): [≈ 0, 1144.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   51.393 ±(99.9%) 77.571 B/op [Average]
[info]   (min, avg, max) = (36.326, 51.393, 73.599), stdev = 20.145
[info]   CI (99.9%): [≈ 0, 128.964] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.004 ±(99.9%) 0.014 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.004, 0.007), stdev = 0.004
[info]   CI (99.9%): [≈ 0, 0.017] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.200, 12.000), stdev = 4.438
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay
[info] # Run progress: 55.74% complete, ETA 00:07:15
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 538894.464 ops/s
[info] # Warmup Iteration   2: 866887.155 ops/s
[info] # Warmup Iteration   3: 878658.175 ops/s
[info] # Warmup Iteration   4: 874315.280 ops/s
[info] # Warmup Iteration   5: 884920.282 ops/s
[info] Iteration   1: 884304.560 ops/s
[info]                  ·gc.alloc.rate:                   1331.018 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.147 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2359.335 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.074 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   2: 888330.082 ops/s
[info]                  ·gc.alloc.rate:                   1337.078 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.810 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2363.984 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.148 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 866741.127 ops/s
[info]                  ·gc.alloc.rate:                   1304.557 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1342.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2436.231 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   4: 879547.443 ops/s
[info]                  ·gc.alloc.rate:                   1323.840 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.271 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1807.109 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 876508.424 ops/s
[info]                  ·gc.alloc.rate:                   1319.273 MB/sec
[info]                  ·gc.alloc.rate.norm:              2368.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2423.386 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay":
[info]   879086.327 ±(99.9%) 31749.669 ops/s [Average]
[info]   (min, avg, max) = (866741.127, 879086.327, 888330.082), stdev = 8245.288
[info]   CI (99.9%): [847336.658, 910835.996] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate":
[info]   1323.153 ±(99.9%) 47.829 MB/sec [Average]
[info]   (min, avg, max) = (1304.557, 1323.153, 1337.078), stdev = 12.421
[info]   CI (99.9%): [1275.324, 1370.982] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm":
[info]   2368.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (2368.000, 2368.000, 2368.001), stdev = 0.001
[info]   CI (99.9%): [2368.000, 2368.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space":
[info]   1272.701 ±(99.9%) 565.931 MB/sec [Average]
[info]   (min, avg, max) = (1010.271, 1272.701, 1350.130), stdev = 146.970
[info]   CI (99.9%): [706.770, 1838.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   2278.009 ±(99.9%) 1022.274 B/op [Average]
[info]   (min, avg, max) = (1807.109, 2278.009, 2436.231), stdev = 265.481
[info]   CI (99.9%): [1255.735, 3300.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.083), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.150] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.082 ±(99.9%) 0.186 B/op [Average]
[info]   (min, avg, max) = (0.037, 0.082, 0.148), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.268] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeAnyRefsPlay:·gc.time":
[info]   37.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.400, 10.000), stdev = 2.966
[info]   CI (99.9%): [37.000, 37.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce
[info] # Run progress: 57.38% complete, ETA 00:06:59
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 397839.297 ops/s
[info] # Warmup Iteration   2: 749127.356 ops/s
[info] # Warmup Iteration   3: 754372.105 ops/s
[info] # Warmup Iteration   4: 749397.962 ops/s
[info] # Warmup Iteration   5: 750885.816 ops/s
[info] Iteration   1: 744103.149 ops/s
[info]                  ·gc.alloc.rate:                   1801.045 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1678.024 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3547.894 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.176 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         13.000 ms
[info] Iteration   2: 756539.208 ops/s
[info]                  ·gc.alloc.rate:                   1831.168 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2023.913 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4208.822 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 741468.462 ops/s
[info]                  ·gc.alloc.rate:                   1794.591 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3591.600 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.088 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 749198.175 ops/s
[info]                  ·gc.alloc.rate:                   1813.382 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1696.025 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3561.558 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.087 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 748996.148 ops/s
[info]                  ·gc.alloc.rate:                   1812.870 MB/sec
[info]                  ·gc.alloc.rate.norm:              3808.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          2039.192 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4283.399 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        6.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce":
[info]   748061.028 ±(99.9%) 22218.400 ops/s [Average]
[info]   (min, avg, max) = (741468.462, 748061.028, 756539.208), stdev = 5770.048
[info]   CI (99.9%): [725842.628, 770279.428] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate":
[info]   1810.611 ±(99.9%) 53.893 MB/sec [Average]
[info]   (min, avg, max) = (1794.591, 1810.611, 1831.168), stdev = 13.996
[info]   CI (99.9%): [1756.719, 1864.504] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm":
[info]   3808.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3808.001, 3808.001, 3808.001), stdev = 0.001
[info]   CI (99.9%): [3808.000, 3808.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space":
[info]   1825.953 ±(99.9%) 723.480 MB/sec [Average]
[info]   (min, avg, max) = (1678.024, 1825.953, 2039.192), stdev = 187.886
[info]   CI (99.9%): [1102.472, 2549.433] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3838.655 ±(99.9%) 1437.149 B/op [Average]
[info]   (min, avg, max) = (3547.894, 3838.655, 4283.399), stdev = 373.223
[info]   CI (99.9%): [2401.506, 5275.803] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.054, 0.083), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.126] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.114 ±(99.9%) 0.152 B/op [Average]
[info]   (min, avg, max) = (0.087, 0.114, 0.176), stdev = 0.040
[info]   CI (99.9%): [≈ 0, 0.266] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.count":
[info]   27.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (5.000, 5.400, 6.000), stdev = 0.548
[info]   CI (99.9%): [27.000, 27.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysCirce:·gc.time":
[info]   43.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.600, 13.000), stdev = 2.881
[info]   CI (99.9%): [43.000, 43.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson
[info] # Run progress: 59.02% complete, ETA 00:06:43
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1482115.077 ops/s
[info] # Warmup Iteration   2: 2403255.704 ops/s
[info] # Warmup Iteration   3: 2459199.017 ops/s
[info] # Warmup Iteration   4: 2457347.420 ops/s
[info] # Warmup Iteration   5: 2464419.294 ops/s
[info] Iteration   1: 2486832.637 ops/s
[info]                  ·gc.alloc.rate:                   1441.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.145 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     846.560 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.026 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 2456315.738 ops/s
[info]                  ·gc.alloc.rate:                   1423.914 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     861.342 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 2472949.866 ops/s
[info]                  ·gc.alloc.rate:                   1433.600 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.193 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     858.940 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   4: 2433205.985 ops/s
[info]                  ·gc.alloc.rate:                   1410.526 MB/sec
[info]                  ·gc.alloc.rate.norm:              912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.346 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1094.216 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 2445890.160 ops/s
[info]                  ·gc.alloc.rate:               1417.829 MB/sec
[info]                  ·gc.alloc.rate.norm:          912.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1356.455 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 872.523 B/op
[info]                  ·gc.count:                    4.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson":
[info]   2459038.877 ±(99.9%) 81993.657 ops/s [Average]
[info]   (min, avg, max) = (2433205.985, 2459038.877, 2486832.637), stdev = 21293.492
[info]   CI (99.9%): [2377045.220, 2541032.534] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate":
[info]   1425.491 ±(99.9%) 47.548 MB/sec [Average]
[info]   (min, avg, max) = (1410.526, 1425.491, 1441.585), stdev = 12.348
[info]   CI (99.9%): [1377.942, 1473.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm":
[info]   912.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (912.000, 912.000, 912.000), stdev = 0.001
[info]   CI (99.9%): [912.000, 912.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space":
[info]   1416.392 ±(99.9%) 594.580 MB/sec [Average]
[info]   (min, avg, max) = (1338.145, 1416.392, 1692.346), stdev = 154.411
[info]   CI (99.9%): [821.812, 2010.972] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm":
[info]   906.716 ±(99.9%) 405.167 B/op [Average]
[info]   (min, avg, max) = (846.560, 906.716, 1094.216), stdev = 105.221
[info]   CI (99.9%): [501.549, 1311.883] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.059 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.040), stdev = 0.015
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.count":
[info]   21.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.200, 5.000), stdev = 0.447
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJackson:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 9.000), stdev = 2.550
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter
[info] # Run progress: 60.66% complete, ETA 00:06:27
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 5016925.973 ops/s
[info] # Warmup Iteration   2: 5569657.272 ops/s
[info] # Warmup Iteration   3: 5694799.789 ops/s
[info] # Warmup Iteration   4: 5627459.361 ops/s
[info] # Warmup Iteration   5: 5699784.687 ops/s
[info] Iteration   1: 5754918.876 ops/s
[info]                  ·gc.alloc.rate:                   1053.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.150 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     360.349 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.028 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 5723040.560 ops/s
[info]                  ·gc.alloc.rate:                   1047.678 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.659 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     273.700 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 5675898.586 ops/s
[info]                  ·gc.alloc.rate:                   1039.006 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.612 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 5667575.642 ops/s
[info]                  ·gc.alloc.rate:                   1037.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.608 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     278.590 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 5715770.934 ops/s
[info]                  ·gc.alloc.rate:                   1046.316 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.940 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     277.162 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter":
[info]   5707440.920 ±(99.9%) 138181.973 ops/s [Average]
[info]   (min, avg, max) = (5667575.642, 5707440.920, 5754918.876), stdev = 35885.420
[info]   CI (99.9%): [5569258.947, 5845622.893] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate":
[info]   1044.802 ±(99.9%) 25.322 MB/sec [Average]
[info]   (min, avg, max) = (1037.509, 1044.802, 1053.499), stdev = 6.576
[info]   CI (99.9%): [1019.479, 1070.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space":
[info]   1064.794 ±(99.9%) 545.612 MB/sec [Average]
[info]   (min, avg, max) = (995.659, 1064.794, 1318.150), stdev = 141.694
[info]   CI (99.9%): [519.182, 1610.406] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   293.376 ±(99.9%) 144.330 B/op [Average]
[info]   (min, avg, max) = (273.700, 293.376, 360.349), stdev = 37.482
[info]   CI (99.9%): [149.047, 437.706] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.071 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.062, 0.071, 0.104), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.143] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.019 ±(99.9%) 0.019 B/op [Average]
[info]   (min, avg, max) = (0.017, 0.019, 0.028), stdev = 0.005
[info]   CI (99.9%): [≈ 10⁻⁴, 0.039] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.600, 8.000), stdev = 2.302
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay
[info] # Run progress: 62.30% complete, ETA 00:06:10
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 159617.889 ops/s
[info] # Warmup Iteration   2: 324355.332 ops/s
[info] # Warmup Iteration   3: 323264.752 ops/s
[info] # Warmup Iteration   4: 327010.450 ops/s
[info] # Warmup Iteration   5: 326888.070 ops/s
[info] Iteration   1: 329922.200 ops/s
[info]                  ·gc.alloc.rate:                   1177.703 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1318.803 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6288.850 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.199 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 325871.360 ops/s
[info]                  ·gc.alloc.rate:                   1163.261 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.268 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4804.964 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.402 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   3: 324192.570 ops/s
[info]                  ·gc.alloc.rate:                   1157.238 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.821 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6477.802 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.303 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 328797.603 ops/s
[info]                  ·gc.alloc.rate:                   1173.690 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4811.693 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.299 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 326025.573 ops/s
[info]                  ·gc.alloc.rate:                   1163.795 MB/sec
[info]                  ·gc.alloc.rate.norm:              5616.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1346.130 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6495.877 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.100 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay":
[info]   326961.861 ±(99.9%) 9003.501 ops/s [Average]
[info]   (min, avg, max) = (324192.570, 326961.861, 329922.200), stdev = 2338.181
[info]   CI (99.9%): [317958.360, 335965.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate":
[info]   1167.137 ±(99.9%) 32.146 MB/sec [Average]
[info]   (min, avg, max) = (1157.238, 1167.137, 1177.703), stdev = 8.348
[info]   CI (99.9%): [1134.992, 1199.283] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm":
[info]   5616.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5616.001, 5616.001, 5616.001), stdev = 0.001
[info]   CI (99.9%): [5616.001, 5616.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space":
[info]   1200.124 ±(99.9%) 703.079 MB/sec [Average]
[info]   (min, avg, max) = (995.268, 1200.124, 1346.130), stdev = 182.587
[info]   CI (99.9%): [497.045, 1903.203] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5775.837 ±(99.9%) 3415.243 B/op [Average]
[info]   (min, avg, max) = (4804.964, 5775.837, 6495.877), stdev = 886.928
[info]   CI (99.9%): [2360.595, 9191.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.083), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.146] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.261 ±(99.9%) 0.442 B/op [Average]
[info]   (min, avg, max) = (0.100, 0.261, 0.402), stdev = 0.115
[info]   CI (99.9%): [≈ 0, 0.703] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeArraysPlay:·gc.time":
[info]   41.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (6.000, 8.200, 12.000), stdev = 2.683
[info]   CI (99.9%): [41.000, 41.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson
[info] # Run progress: 63.93% complete, ETA 00:05:54
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1923539.468 ops/s
[info] # Warmup Iteration   2: 2726213.625 ops/s
[info] # Warmup Iteration   3: 2706672.761 ops/s
[info] # Warmup Iteration   4: 2733357.200 ops/s
[info] # Warmup Iteration   5: 2706393.539 ops/s
[info] Iteration   1: 2725559.063 ops/s
[info]                  ·gc.alloc.rate:                   1164.188 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.270 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     575.651 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 2698549.411 ops/s
[info]                  ·gc.alloc.rate:                   1152.716 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.325 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     584.909 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.012 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 2688228.322 ops/s
[info]                  ·gc.alloc.rate:                   1148.289 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1343.227 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     786.081 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 2686727.397 ops/s
[info]                  ·gc.alloc.rate:               1147.622 MB/sec
[info]                  ·gc.alloc.rate.norm:          672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1010.971 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 591.983 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 2698052.457 ops/s
[info]                  ·gc.alloc.rate:                   1152.474 MB/sec
[info]                  ·gc.alloc.rate.norm:              672.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.879 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     787.689 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.024 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson":
[info]   2699423.330 ±(99.9%) 60032.839 ops/s [Average]
[info]   (min, avg, max) = (2686727.397, 2699423.330, 2725559.063), stdev = 15590.338
[info]   CI (99.9%): [2639390.491, 2759456.169] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate":
[info]   1153.058 ±(99.9%) 25.588 MB/sec [Average]
[info]   (min, avg, max) = (1147.622, 1153.058, 1164.188), stdev = 6.645
[info]   CI (99.9%): [1127.470, 1178.645] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm":
[info]   672.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (672.000, 672.000, 672.000), stdev = 0.001
[info]   CI (99.9%): [672.000, 672.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space":
[info]   1141.134 ±(99.9%) 724.148 MB/sec [Average]
[info]   (min, avg, max) = (997.270, 1141.134, 1350.879), stdev = 188.059
[info]   CI (99.9%): [416.986, 1865.282] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   665.263 ±(99.9%) 428.106 B/op [Average]
[info]   (min, avg, max) = (575.651, 665.263, 787.689), stdev = 111.178
[info]   CI (99.9%): [237.157, 1093.369] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.017 ±(99.9%) 0.054 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.037), stdev = 0.014
[info]   CI (99.9%): [≈ 0, 0.071] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.count":
[info]   17.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.400, 4.000), stdev = 0.548
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 9.000), stdev = 2.683
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter
[info] # Run progress: 65.57% complete, ETA 00:05:38
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4050741.470 ops/s
[info] # Warmup Iteration   2: 4381119.208 ops/s
[info] # Warmup Iteration   3: 4459870.486 ops/s
[info] # Warmup Iteration   4: 4473434.256 ops/s
[info] # Warmup Iteration   5: 4470424.845 ops/s
[info] Iteration   1: 4498971.934 ops/s
[info]                  ·gc.alloc.rate:                   823.563 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          982.618 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     343.622 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4465690.417 ops/s
[info]                  ·gc.alloc.rate:                   817.499 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.749 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.721 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.037 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 4456828.850 ops/s
[info]                  ·gc.alloc.rate:                   815.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.939 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     350.166 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 4504958.494 ops/s
[info]                  ·gc.alloc.rate:                   824.674 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          663.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     231.794 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   5: 4478195.375 ops/s
[info]                  ·gc.alloc.rate:                   819.748 MB/sec
[info]                  ·gc.alloc.rate.norm:              288.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.239 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     351.060 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.015 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter":
[info]   4480929.014 ±(99.9%) 79929.120 ops/s [Average]
[info]   (min, avg, max) = (4456828.850, 4480929.014, 4504958.494), stdev = 20757.339
[info]   CI (99.9%): [4400999.895, 4560858.134] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate":
[info]   820.264 ±(99.9%) 14.643 MB/sec [Average]
[info]   (min, avg, max) = (815.837, 820.264, 824.674), stdev = 3.803
[info]   CI (99.9%): [805.622, 834.907] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm":
[info]   288.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (288.000, 288.000, 288.000), stdev = 0.001
[info]   CI (99.9%): [288.000, 288.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space":
[info]   859.055 ±(99.9%) 697.522 MB/sec [Average]
[info]   (min, avg, max) = (657.749, 859.055, 999.239), stdev = 181.144
[info]   CI (99.9%): [161.534, 1556.577] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   301.673 ±(99.9%) 246.009 B/op [Average]
[info]   (min, avg, max) = (231.721, 301.673, 351.060), stdev = 63.888
[info]   CI (99.9%): [55.663, 547.682] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.046 ±(99.9%) 0.132 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.046, 0.104), stdev = 0.034
[info]   CI (99.9%): [≈ 0, 0.178] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.047 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.016, 0.037), stdev = 0.012
[info]   CI (99.9%): [≈ 0, 0.063] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count":
[info]   13.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.600, 3.000), stdev = 0.548
[info]   CI (99.9%): [13.000, 13.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.600, 9.000), stdev = 3.507
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay
[info] # Run progress: 67.21% complete, ETA 00:05:22
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 270508.755 ops/s
[info] # Warmup Iteration   2: 495110.844 ops/s
[info] # Warmup Iteration   3: 496203.784 ops/s
[info] # Warmup Iteration   4: 500440.817 ops/s
[info] # Warmup Iteration   5: 501770.133 ops/s
[info] Iteration   1: 502003.900 ops/s
[info]                  ·gc.alloc.rate:                   1485.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1330.813 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4170.696 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.131 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 504029.263 ops/s
[info]                  ·gc.alloc.rate:                   1491.653 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.790 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4178.862 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.260 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 497415.623 ops/s
[info]                  ·gc.alloc.rate:                   1472.091 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1682.009 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5319.939 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.132 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   4: 496304.567 ops/s
[info]                  ·gc.alloc.rate:                   1468.791 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.116 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4279.807 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.198 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   5: 501265.360 ops/s
[info]                  ·gc.alloc.rate:                   1483.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              4656.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1692.647 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5312.581 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.196 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay":
[info]   500203.742 ±(99.9%) 12474.450 ops/s [Average]
[info]   (min, avg, max) = (496304.567, 500203.742, 504029.263), stdev = 3239.575
[info]   CI (99.9%): [487729.293, 512678.192] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate":
[info]   1480.331 ±(99.9%) 36.908 MB/sec [Average]
[info]   (min, avg, max) = (1468.791, 1480.331, 1491.653), stdev = 9.585
[info]   CI (99.9%): [1443.423, 1517.239] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm":
[info]   4656.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4656.001, 4656.001, 4656.001), stdev = 0.001
[info]   CI (99.9%): [4656.001, 4656.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space":
[info]   1478.875 ±(99.9%) 733.360 MB/sec [Average]
[info]   (min, avg, max) = (1330.813, 1478.875, 1692.647), stdev = 190.451
[info]   CI (99.9%): [745.515, 2212.235] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   4652.377 ±(99.9%) 2339.524 B/op [Average]
[info]   (min, avg, max) = (4170.696, 4652.377, 5319.939), stdev = 607.567
[info]   CI (99.9%): [2312.853, 6991.901] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.183 ±(99.9%) 0.208 B/op [Average]
[info]   (min, avg, max) = (0.131, 0.183, 0.260), stdev = 0.054
[info]   CI (99.9%): [≈ 0, 0.392] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.count":
[info]   22.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.400, 5.000), stdev = 0.548
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeBitSetsPlay:·gc.time":
[info]   35.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 7.000, 11.000), stdev = 3.240
[info]   CI (99.9%): [35.000, 35.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson
[info] # Run progress: 68.85% complete, ETA 00:05:06
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 127809.211 ops/s
[info] # Warmup Iteration   2: 999922.133 ops/s
[info] # Warmup Iteration   3: 995599.365 ops/s
[info] # Warmup Iteration   4: 1002247.966 ops/s
[info] # Warmup Iteration   5: 1011849.379 ops/s
[info] Iteration   1: 1008888.633 ops/s
[info]                  ·gc.alloc.rate:                   1246.644 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1331.166 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2075.803 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.065 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   2: 1000768.214 ops/s
[info]                  ·gc.alloc.rate:                   1236.612 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1339.195 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2105.265 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 1015203.098 ops/s
[info]                  ·gc.alloc.rate:               1254.411 MB/sec
[info]                  ·gc.alloc.rate.norm:          1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1007.943 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1562.041 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   4: 1009623.766 ops/s
[info]                  ·gc.alloc.rate:                   1247.544 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1348.805 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2101.792 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 1007777.553 ops/s
[info]                  ·gc.alloc.rate:                   1245.250 MB/sec
[info]                  ·gc.alloc.rate.norm:              1944.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.811 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2111.917 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson":
[info]   1008452.253 ±(99.9%) 19881.824 ops/s [Average]
[info]   (min, avg, max) = (1000768.214, 1008452.253, 1015203.098), stdev = 5163.247
[info]   CI (99.9%): [988570.429, 1028334.077] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate":
[info]   1246.092 ±(99.9%) 24.521 MB/sec [Average]
[info]   (min, avg, max) = (1236.612, 1246.092, 1254.411), stdev = 6.368
[info]   CI (99.9%): [1221.572, 1270.613] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm":
[info]   1944.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1944.000, 1944.000, 1944.000), stdev = 0.001
[info]   CI (99.9%): [1944.000, 1944.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1275.984 ±(99.9%) 577.892 MB/sec [Average]
[info]   (min, avg, max) = (1007.943, 1275.984, 1352.811), stdev = 150.077
[info]   CI (99.9%): [698.092, 1853.876] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1991.363 ±(99.9%) 925.656 B/op [Average]
[info]   (min, avg, max) = (1562.041, 1991.363, 2111.917), stdev = 240.390
[info]   CI (99.9%): [1065.708, 2917.019] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.121] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.046 ±(99.9%) 0.144 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.046, 0.098), stdev = 0.037
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count":
[info]   19.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.800, 4.000), stdev = 0.447
[info]   CI (99.9%): [19.000, 19.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time":
[info]   29.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.800, 10.000), stdev = 3.033
[info]   CI (99.9%): [29.000, 29.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter
[info] # Run progress: 70.49% complete, ETA 00:04:50
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2124079.989 ops/s
[info] # Warmup Iteration   2: 2343990.631 ops/s
[info] # Warmup Iteration   3: 2385084.333 ops/s
[info] # Warmup Iteration   4: 2403555.046 ops/s
[info] # Warmup Iteration   5: 2406666.444 ops/s
[info] Iteration   1: 2411212.180 ops/s
[info]                  ·gc.alloc.rate:                   429.130 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.403 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     425.030 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 2365468.234 ops/s
[info]                  ·gc.alloc.rate:               420.994 MB/sec
[info]                  ·gc.alloc.rate.norm:          280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 216.735 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   3: 2374366.212 ops/s
[info]                  ·gc.alloc.rate:                   422.592 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.217 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.144 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   4: 2375709.763 ops/s
[info]                  ·gc.alloc.rate:                   422.822 MB/sec
[info]                  ·gc.alloc.rate.norm:              280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.100 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     432.495 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.041 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 2360013.972 ops/s
[info]                  ·gc.alloc.rate:               420.024 MB/sec
[info]                  ·gc.alloc.rate.norm:          280.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.882 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 217.909 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter":
[info]   2377354.072 ±(99.9%) 77011.790 ops/s [Average]
[info]   (min, avg, max) = (2360013.972, 2377354.072, 2411212.180), stdev = 19999.717
[info]   CI (99.9%): [2300342.282, 2454365.863] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate":
[info]   423.112 ±(99.9%) 13.694 MB/sec [Average]
[info]   (min, avg, max) = (420.024, 423.112, 429.130), stdev = 3.556
[info]   CI (99.9%): [409.418, 436.806] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm":
[info]   280.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (280.000, 280.000, 280.000), stdev = 0.001
[info]   CI (99.9%): [280.000, 280.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   456.695 ±(99.9%) 687.415 MB/sec [Average]
[info]   (min, avg, max) = (325.872, 456.695, 653.100), stdev = 178.519
[info]   CI (99.9%): [≈ 0, 1144.109] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   301.663 ±(99.9%) 446.896 B/op [Average]
[info]   (min, avg, max) = (216.144, 301.663, 432.495), stdev = 116.057
[info]   CI (99.9%): [≈ 0, 748.558] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.025 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.025, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.069 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.041), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.085] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count":
[info]   7.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.400, 2.000), stdev = 0.548
[info]   CI (99.9%): [7.000, 7.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time":
[info]   10.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 2.000, 4.000), stdev = 1.414
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay
[info] # Run progress: 72.13% complete, ETA 00:04:34
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 108947.637 ops/s
[info] # Warmup Iteration   2: 242080.150 ops/s
[info] # Warmup Iteration   3: 246016.499 ops/s
[info] # Warmup Iteration   4: 247050.188 ops/s
[info] # Warmup Iteration   5: 247673.291 ops/s
[info] Iteration   1: 246991.650 ops/s
[info]                  ·gc.alloc.rate:                   968.322 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          983.934 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6267.447 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 248917.267 ops/s
[info]                  ·gc.alloc.rate:                   975.909 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.628 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6248.393 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.395 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 245793.132 ops/s
[info]                  ·gc.alloc.rate:                   963.647 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.980 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6362.154 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.533 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   4: 247936.060 ops/s
[info]                  ·gc.alloc.rate:                   972.034 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.590 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6336.516 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.264 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 249383.337 ops/s
[info]                  ·gc.alloc.rate:                   977.746 MB/sec
[info]                  ·gc.alloc.rate.norm:              6168.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.309 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6329.259 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.263 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay":
[info]   247804.289 ±(99.9%) 5598.223 ops/s [Average]
[info]   (min, avg, max) = (245793.132, 247804.289, 249383.337), stdev = 1453.841
[info]   CI (99.9%): [242206.066, 253402.512] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate":
[info]   971.532 ±(99.9%) 21.995 MB/sec [Average]
[info]   (min, avg, max) = (963.647, 971.532, 977.746), stdev = 5.712
[info]   CI (99.9%): [949.537, 993.526] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm":
[info]   6168.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6168.002, 6168.002, 6168.002), stdev = 0.001
[info]   CI (99.9%): [6168.002, 6168.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.688 ±(99.9%) 29.666 MB/sec [Average]
[info]   (min, avg, max) = (983.934, 993.688, 1003.309), stdev = 7.704
[info]   CI (99.9%): [964.022, 1023.354] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   6308.754 ±(99.9%) 186.591 B/op [Average]
[info]   (min, avg, max) = (6248.393, 6308.754, 6362.154), stdev = 48.457
[info]   CI (99.9%): [6122.162, 6495.345] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.058 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (0.042, 0.058, 0.083), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.371 ±(99.9%) 0.434 B/op [Average]
[info]   (min, avg, max) = (0.263, 0.371, 0.533), stdev = 0.113
[info]   CI (99.9%): [≈ 0, 0.804] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.200, 10.000), stdev = 3.962
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce
[info] # Run progress: 73.77% complete, ETA 00:04:17
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 405023.530 ops/s
[info] # Warmup Iteration   2: 578113.762 ops/s
[info] # Warmup Iteration   3: 597687.235 ops/s
[info] # Warmup Iteration   4: 588914.718 ops/s
[info] # Warmup Iteration   5: 597409.116 ops/s
[info] Iteration   1: 594888.717 ops/s
[info]                  ·gc.alloc.rate:                   1524.596 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1676.314 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4433.239 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.055 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   2: 589054.722 ops/s
[info]                  ·gc.alloc.rate:                   1509.585 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.446 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3598.938 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 596087.426 ops/s
[info]                  ·gc.alloc.rate:                   1527.672 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1690.642 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4462.130 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.165 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 581499.397 ops/s
[info]                  ·gc.alloc.rate:                   1490.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1355.450 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3667.339 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.113 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 592258.498 ops/s
[info]                  ·gc.alloc.rate:                   1517.831 MB/sec
[info]                  ·gc.alloc.rate.norm:              4032.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1697.345 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4508.866 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        5.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce":
[info]   590757.752 ±(99.9%) 22480.967 ops/s [Average]
[info]   (min, avg, max) = (581499.397, 590757.752, 596087.426), stdev = 5838.236
[info]   CI (99.9%): [568276.785, 613238.719] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate":
[info]   1513.983 ±(99.9%) 57.709 MB/sec [Average]
[info]   (min, avg, max) = (1490.229, 1513.983, 1527.672), stdev = 14.987
[info]   CI (99.9%): [1456.273, 1571.692] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm":
[info]   4032.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4032.001, 4032.001, 4032.001), stdev = 0.001
[info]   CI (99.9%): [4032.001, 4032.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space":
[info]   1553.439 ±(99.9%) 710.715 MB/sec [Average]
[info]   (min, avg, max) = (1347.446, 1553.439, 1697.345), stdev = 184.570
[info]   CI (99.9%): [842.725, 2264.154] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4134.103 ±(99.9%) 1766.478 B/op [Average]
[info]   (min, avg, max) = (3598.938, 4134.103, 4508.866), stdev = 458.749
[info]   CI (99.9%): [2367.625, 5900.580] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.050 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.050, 0.062), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.133 ±(99.9%) 0.190 B/op [Average]
[info]   (min, avg, max) = (0.055, 0.133, 0.167), stdev = 0.049
[info]   CI (99.9%): [≈ 0, 0.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.count":
[info]   23.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.600, 5.000), stdev = 0.548
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesCirce:·gc.time":
[info]   26.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.200, 8.000), stdev = 1.924
[info]   CI (99.9%): [26.000, 26.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson
[info] # Run progress: 75.41% complete, ETA 00:04:01
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 846220.042 ops/s
[info] # Warmup Iteration   2: 1221162.849 ops/s
[info] # Warmup Iteration   3: 1237804.935 ops/s
[info] # Warmup Iteration   4: 1230838.590 ops/s
[info] # Warmup Iteration   5: 1234532.983 ops/s
[info] Iteration   1: 1238260.620 ops/s
[info]                  ·gc.alloc.rate:                   761.865 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          656.394 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     833.993 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 1234804.312 ops/s
[info]                  ·gc.alloc.rate:               759.742 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      659.063 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 839.723 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   3: 1220786.662 ops/s
[info]                  ·gc.alloc.rate:                   751.116 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.284 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1280.095 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         12.000 ms
[info] Iteration   4: 1229542.243 ops/s
[info]                  ·gc.alloc.rate:                   756.509 MB/sec
[info]                  ·gc.alloc.rate.norm:              968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.725 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     851.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.027 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1231325.628 ops/s
[info]                  ·gc.alloc.rate:               757.603 MB/sec
[info]                  ·gc.alloc.rate.norm:          968.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      668.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 854.018 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson":
[info]   1230943.893 ±(99.9%) 25376.080 ops/s [Average]
[info]   (min, avg, max) = (1220786.662, 1230943.893, 1238260.620), stdev = 6590.087
[info]   CI (99.9%): [1205567.813, 1256319.973] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate":
[info]   757.367 ±(99.9%) 15.610 MB/sec [Average]
[info]   (min, avg, max) = (751.116, 757.367, 761.865), stdev = 4.054
[info]   CI (99.9%): [741.757, 772.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm":
[info]   968.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (968.000, 968.000, 968.000), stdev = 0.001
[info]   CI (99.9%): [968.000, 968.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space":
[info]   728.572 ±(99.9%) 570.119 MB/sec [Average]
[info]   (min, avg, max) = (656.394, 728.572, 993.284), stdev = 148.058
[info]   CI (99.9%): [158.453, 1298.691] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   931.933 ±(99.9%) 750.129 B/op [Average]
[info]   (min, avg, max) = (833.993, 931.933, 1280.095), stdev = 194.806
[info]   CI (99.9%): [181.804, 1682.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.021 ±(99.9%) 0.085 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.021, 0.053), stdev = 0.022
[info]   CI (99.9%): [≈ 0, 0.107] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.count":
[info]   11.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.200, 3.000), stdev = 0.447
[info]   CI (99.9%): [11.000, 11.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJackson:·gc.time":
[info]   22.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.400, 12.000), stdev = 4.506
[info]   CI (99.9%): [22.000, 22.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter
[info] # Run progress: 77.05% complete, ETA 00:03:45
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 4288882.112 ops/s
[info] # Warmup Iteration   2: 4759704.037 ops/s
[info] # Warmup Iteration   3: 4718995.082 ops/s
[info] # Warmup Iteration   4: 4682766.429 ops/s
[info] # Warmup Iteration   5: 4678000.517 ops/s
[info] Iteration   1: 4756909.954 ops/s
[info]                  ·gc.alloc.rate:                   798.230 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.738 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     216.543 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.007 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 4786963.018 ops/s
[info]                  ·gc.alloc.rate:                   803.266 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     323.927 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.104 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.034 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 4753507.919 ops/s
[info]                  ·gc.alloc.rate:                   797.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          660.395 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     218.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.021 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 4765427.118 ops/s
[info]                  ·gc.alloc.rate:                   799.661 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.252 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     328.573 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   5: 4773116.701 ops/s
[info]                  ·gc.alloc.rate:                   800.929 MB/sec
[info]                  ·gc.alloc.rate.norm:              264.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.735 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     219.438 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.014 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter":
[info]   4767184.942 ±(99.9%) 51736.533 ops/s [Average]
[info]   (min, avg, max) = (4753507.919, 4767184.942, 4786963.018), stdev = 13435.813
[info]   CI (99.9%): [4715448.408, 4818921.475] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate":
[info]   799.947 ±(99.9%) 8.674 MB/sec [Average]
[info]   (min, avg, max) = (797.648, 799.947, 803.266), stdev = 2.253
[info]   CI (99.9%): [791.272, 808.621] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm":
[info]   264.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (264.000, 264.000, 264.000), stdev = 0.001
[info]   CI (99.9%): [264.000, 264.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space":
[info]   792.345 ±(99.9%) 696.577 MB/sec [Average]
[info]   (min, avg, max) = (654.738, 792.345, 995.252), stdev = 180.899
[info]   CI (99.9%): [95.768, 1488.922] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   261.411 ±(99.9%) 228.043 B/op [Average]
[info]   (min, avg, max) = (216.543, 261.411, 328.573), stdev = 59.222
[info]   CI (99.9%): [33.368, 489.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.054 ±(99.9%) 0.122 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.054, 0.104), stdev = 0.032
[info]   CI (99.9%): [≈ 0, 0.176] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.018 ±(99.9%) 0.040 B/op [Average]
[info]   (min, avg, max) = (0.007, 0.018, 0.034), stdev = 0.010
[info]   CI (99.9%): [≈ 0, 0.058] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.count":
[info]   12.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.400, 3.000), stdev = 0.548
[info]   CI (99.9%): [12.000, 12.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesJsoniter:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 5.000, 10.000), stdev = 3.464
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay
[info] # Run progress: 78.69% complete, ETA 00:03:29
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 208568.177 ops/s
[info] # Warmup Iteration   2: 399075.855 ops/s
[info] # Warmup Iteration   3: 397948.777 ops/s
[info] # Warmup Iteration   4: 392113.455 ops/s
[info] # Warmup Iteration   5: 390785.312 ops/s
[info] Iteration   1: 395127.469 ops/s
[info]                  ·gc.alloc.rate:                   1368.257 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1326.154 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5280.360 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.166 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 393084.776 ops/s
[info]                  ·gc.alloc.rate:                   1361.229 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1334.835 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5342.366 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.250 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   3: 394415.405 ops/s
[info]                  ·gc.alloc.rate:                   1365.737 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1341.431 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5351.044 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.249 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   4: 389953.977 ops/s
[info]                  ·gc.alloc.rate:                   1350.351 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1347.436 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5436.240 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.084 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         11.000 ms
[info] Iteration   5: 395732.794 ops/s
[info]                  ·gc.alloc.rate:                   1370.336 MB/sec
[info]                  ·gc.alloc.rate.norm:              5448.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1350.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5370.153 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.083 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay":
[info]   393662.884 ±(99.9%) 8840.986 ops/s [Average]
[info]   (min, avg, max) = (389953.977, 393662.884, 395732.794), stdev = 2295.976
[info]   CI (99.9%): [384821.898, 402503.870] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate":
[info]   1363.182 ±(99.9%) 30.558 MB/sec [Average]
[info]   (min, avg, max) = (1350.351, 1363.182, 1370.336), stdev = 7.936
[info]   CI (99.9%): [1332.624, 1393.740] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm":
[info]   5448.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5448.001, 5448.001, 5448.001), stdev = 0.001
[info]   CI (99.9%): [5448.001, 5448.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space":
[info]   1340.122 ±(99.9%) 38.086 MB/sec [Average]
[info]   (min, avg, max) = (1326.154, 1340.122, 1350.755), stdev = 9.891
[info]   CI (99.9%): [1302.036, 1378.208] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5356.033 ±(99.9%) 215.865 B/op [Average]
[info]   (min, avg, max) = (5280.360, 5356.033, 5436.240), stdev = 56.059
[info]   CI (99.9%): [5140.167, 5571.898] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.080 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.062), stdev = 0.021
[info]   CI (99.9%): [≈ 0, 0.122] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.166 ±(99.9%) 0.320 B/op [Average]
[info]   (min, avg, max) = (0.083, 0.166, 0.250), stdev = 0.083
[info]   CI (99.9%): [≈ 0, 0.486] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.count":
[info]   20.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (4.000, 4.000, 4.000), stdev = 0.001
[info]   CI (99.9%): [20.000, 20.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeIterablesPlay:·gc.time":
[info]   36.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 7.200, 11.000), stdev = 3.271
[info]   CI (99.9%): [36.000, 36.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce
[info] # Run progress: 80.33% complete, ETA 00:03:13
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 145577.540 ops/s
[info] # Warmup Iteration   2: 338864.215 ops/s
[info] # Warmup Iteration   3: 349521.900 ops/s
[info] # Warmup Iteration   4: 350909.542 ops/s
[info] # Warmup Iteration   5: 352788.013 ops/s
[info] Iteration   1: 352971.534 ops/s
[info]                  ·gc.alloc.rate:               1050.111 MB/sec
[info]                  ·gc.alloc.rate.norm:          4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      986.086 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4394.661 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   2: 352070.924 ops/s
[info]                  ·gc.alloc.rate:                   1047.355 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.332 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4429.667 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.186 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 351377.557 ops/s
[info]                  ·gc.alloc.rate:                   1045.307 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.012 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4468.253 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.093 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   4: 348672.574 ops/s
[info]                  ·gc.alloc.rate:                   1037.255 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1337.248 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6033.540 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.188 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   5: 350197.406 ops/s
[info]                  ·gc.alloc.rate:                   1041.770 MB/sec
[info]                  ·gc.alloc.rate.norm:              4680.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1007.664 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4526.783 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.187 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce":
[info]   351057.999 ±(99.9%) 6449.289 ops/s [Average]
[info]   (min, avg, max) = (348672.574, 351057.999, 352971.534), stdev = 1674.860
[info]   CI (99.9%): [344608.710, 357507.288] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate":
[info]   1044.360 ±(99.9%) 19.266 MB/sec [Average]
[info]   (min, avg, max) = (1037.255, 1044.360, 1050.111), stdev = 5.003
[info]   CI (99.9%): [1025.094, 1063.625] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm":
[info]   4680.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4680.001, 4680.001, 4680.001), stdev = 0.001
[info]   CI (99.9%): [4680.001, 4680.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1064.068 ±(99.9%) 588.858 MB/sec [Average]
[info]   (min, avg, max) = (986.086, 1064.068, 1337.248), stdev = 152.925
[info]   CI (99.9%): [475.210, 1652.926] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4770.581 ±(99.9%) 2725.158 B/op [Average]
[info]   (min, avg, max) = (4394.661, 4770.581, 6033.540), stdev = 707.715
[info]   CI (99.9%): [2045.423, 7495.739] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.131 ±(99.9%) 0.322 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.131, 0.188), stdev = 0.084
[info]   CI (99.9%): [≈ 0, 0.453] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsCirce:·gc.time":
[info]   31.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 6.200, 9.000), stdev = 2.588
[info]   CI (99.9%): [31.000, 31.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson
[info] # Run progress: 81.97% complete, ETA 00:02:57
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 86403.371 ops/s
[info] # Warmup Iteration   2: 1014546.661 ops/s
[info] # Warmup Iteration   3: 1022301.060 ops/s
[info] # Warmup Iteration   4: 1024111.901 ops/s
[info] # Warmup Iteration   5: 1016894.144 ops/s
[info] Iteration   1: 1012692.742 ops/s
[info]                  ·gc.alloc.rate:                   1050.473 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.273 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1546.242 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.097 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         10.000 ms
[info] Iteration   2: 1023777.292 ops/s
[info]                  ·gc.alloc.rate:                   1062.019 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          999.956 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1536.628 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.096 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 1015050.821 ops/s
[info]                  ·gc.alloc.rate:               1052.947 MB/sec
[info]                  ·gc.alloc.rate.norm:          1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.961 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1556.076 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1021627.614 ops/s
[info]                  ·gc.alloc.rate:                   1059.767 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.826 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2070.980 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.064 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   5: 1015098.973 ops/s
[info]                  ·gc.alloc.rate:                   1053.007 MB/sec
[info]                  ·gc.alloc.rate.norm:              1632.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1011.974 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1568.404 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.032 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson":
[info]   1017649.488 ±(99.9%) 18386.875 ops/s [Average]
[info]   (min, avg, max) = (1012692.742, 1017649.488, 1023777.292), stdev = 4775.013
[info]   CI (99.9%): [999262.613, 1036036.363] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate":
[info]   1055.643 ±(99.9%) 19.119 MB/sec [Average]
[info]   (min, avg, max) = (1050.473, 1055.643, 1062.019), stdev = 4.965
[info]   CI (99.9%): [1036.523, 1074.762] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm":
[info]   1632.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1632.000, 1632.000, 1632.000), stdev = 0.001
[info]   CI (99.9%): [1632.000, 1632.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1071.198 ±(99.9%) 589.479 MB/sec [Average]
[info]   (min, avg, max) = (995.273, 1071.198, 1344.826), stdev = 153.086
[info]   CI (99.9%): [481.719, 1660.676] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1655.666 ±(99.9%) 895.146 B/op [Average]
[info]   (min, avg, max) = (1536.628, 1655.666, 2070.980), stdev = 232.466
[info]   CI (99.9%): [760.520, 2550.812] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.037 ±(99.9%) 0.105 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.037, 0.062), stdev = 0.027
[info]   CI (99.9%): [≈ 0, 0.142] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.058 ±(99.9%) 0.161 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.058, 0.097), stdev = 0.042
[info]   CI (99.9%): [≈ 0, 0.219] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJackson:·gc.time":
[info]   21.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 4.200, 10.000), stdev = 3.347
[info]   CI (99.9%): [21.000, 21.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter
[info] # Run progress: 83.61% complete, ETA 00:02:41
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 2257071.134 ops/s
[info] # Warmup Iteration   2: 2426407.517 ops/s
[info] # Warmup Iteration   3: 2477568.547 ops/s
[info] # Warmup Iteration   4: 2527374.774 ops/s
[info] # Warmup Iteration   5: 2549972.221 ops/s
[info] Iteration   1: 2538488.548 ops/s
[info]                  ·gc.alloc.rate:                   567.970 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          652.097 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     404.138 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 2534017.922 ops/s
[info]                  ·gc.alloc.rate:                   566.966 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.085 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     405.468 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 2511726.858 ops/s
[info]                  ·gc.alloc.rate:               561.997 MB/sec
[info]                  ·gc.alloc.rate.norm:          352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      655.106 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 410.318 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     1.000 ms
[info] Iteration   4: 2502945.743 ops/s
[info]                  ·gc.alloc.rate:                   560.017 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          328.201 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     206.291 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.013 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 2509458.532 ops/s
[info]                  ·gc.alloc.rate:                   561.454 MB/sec
[info]                  ·gc.alloc.rate.norm:              352.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.732 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     412.361 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.039 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter":
[info]   2519327.521 ±(99.9%) 61081.048 ops/s [Average]
[info]   (min, avg, max) = (2502945.743, 2519327.521, 2538488.548), stdev = 15862.554
[info]   CI (99.9%): [2458246.472, 2580408.569] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate":
[info]   563.681 ±(99.9%) 13.669 MB/sec [Average]
[info]   (min, avg, max) = (560.017, 563.681, 567.970), stdev = 3.550
[info]   CI (99.9%): [550.012, 577.350] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm":
[info]   352.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (352.000, 352.000, 352.000), stdev = 0.001
[info]   CI (99.9%): [352.000, 352.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   589.244 ±(99.9%) 561.978 MB/sec [Average]
[info]   (min, avg, max) = (328.201, 589.244, 657.732), stdev = 145.944
[info]   CI (99.9%): [27.267, 1151.222] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   367.715 ±(99.9%) 347.721 B/op [Average]
[info]   (min, avg, max) = (206.291, 367.715, 412.361), stdev = 90.302
[info]   CI (99.9%): [19.995, 715.436] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.026 ±(99.9%) 0.071 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.026, 0.039), stdev = 0.018
[info]   CI (99.9%): [≈ 0, 0.096] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.count":
[info]   9.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.800, 2.000), stdev = 0.447
[info]   CI (99.9%): [9.000, 9.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 5.000), stdev = 1.789
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay
[info] # Run progress: 85.25% complete, ETA 00:02:25
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115670.993 ops/s
[info] # Warmup Iteration   2: 264736.902 ops/s
[info] # Warmup Iteration   3: 267210.005 ops/s
[info] # Warmup Iteration   4: 272773.247 ops/s
[info] # Warmup Iteration   5: 268820.725 ops/s
[info] Iteration   1: 272283.135 ops/s
[info]                  ·gc.alloc.rate:               989.954 MB/sec
[info]                  ·gc.alloc.rate.norm:          5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      983.950 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5685.306 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 271565.843 ops/s
[info]                  ·gc.alloc.rate:                   987.353 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          988.637 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5727.445 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.362 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Iteration   3: 272281.720 ops/s
[info]                  ·gc.alloc.rate:               989.957 MB/sec
[info]                  ·gc.alloc.rate.norm:          5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      993.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 5743.000 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     4.000 ms
[info] Iteration   4: 271350.664 ops/s
[info]                  ·gc.alloc.rate:                   986.560 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          998.597 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5789.790 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.241 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 273030.041 ops/s
[info]                  ·gc.alloc.rate:                   992.668 MB/sec
[info]                  ·gc.alloc.rate.norm:              5720.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1003.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     5781.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.240 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay":
[info]   272102.281 ±(99.9%) 2567.501 ops/s [Average]
[info]   (min, avg, max) = (271350.664, 272102.281, 273030.041), stdev = 666.772
[info]   CI (99.9%): [269534.779, 274669.782] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate":
[info]   989.299 ±(99.9%) 9.334 MB/sec [Average]
[info]   (min, avg, max) = (986.560, 989.299, 992.668), stdev = 2.424
[info]   CI (99.9%): [979.965, 998.632] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm":
[info]   5720.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (5720.002, 5720.002, 5720.002), stdev = 0.001
[info]   CI (99.9%): [5720.001, 5720.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space":
[info]   993.682 ±(99.9%) 29.619 MB/sec [Average]
[info]   (min, avg, max) = (983.950, 993.682, 1003.288), stdev = 7.692
[info]   CI (99.9%): [964.063, 1023.301] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5745.348 ±(99.9%) 163.272 B/op [Average]
[info]   (min, avg, max) = (5685.306, 5745.348, 5789.790), stdev = 42.401
[info]   CI (99.9%): [5582.076, 5908.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.108 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.062), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.137] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.169 ±(99.9%) 0.623 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.169, 0.362), stdev = 0.162
[info]   CI (99.9%): [≈ 0, 0.792] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMapsPlay:·gc.time":
[info]   28.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.600, 9.000), stdev = 2.408
[info]   CI (99.9%): [28.000, 28.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce
[info] # Run progress: 86.89% complete, ETA 00:02:08
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 146512.448 ops/s
[info] # Warmup Iteration   2: 309332.054 ops/s
[info] # Warmup Iteration   3: 331683.263 ops/s
[info] # Warmup Iteration   4: 326693.224 ops/s
[info] # Warmup Iteration   5: 327792.580 ops/s
[info] Iteration   1: 330145.887 ops/s
[info]                  ·gc.alloc.rate:                   975.386 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.290 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4723.787 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 330788.018 ops/s
[info]                  ·gc.alloc.rate:                   977.286 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4743.132 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   3: 333857.633 ops/s
[info]                  ·gc.alloc.rate:               986.326 MB/sec
[info]                  ·gc.alloc.rate.norm:          4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1001.254 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 4718.350 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 332905.653 ops/s
[info]                  ·gc.alloc.rate:                   983.521 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1005.605 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4752.369 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.098 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   5: 332335.886 ops/s
[info]                  ·gc.alloc.rate:                   981.846 MB/sec
[info]                  ·gc.alloc.rate.norm:              4648.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.935 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4776.235 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.099 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce":
[info]   332006.615 ±(99.9%) 5868.362 ops/s [Average]
[info]   (min, avg, max) = (330145.887, 332006.615, 333857.633), stdev = 1523.995
[info]   CI (99.9%): [326138.254, 337874.977] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate":
[info]   980.873 ±(99.9%) 17.292 MB/sec [Average]
[info]   (min, avg, max) = (975.386, 980.873, 986.326), stdev = 4.491
[info]   CI (99.9%): [963.581, 998.165] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm":
[info]   4648.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (4648.001, 4648.001, 4648.001), stdev = 0.001
[info]   CI (99.9%): [4648.001, 4648.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space":
[info]   1000.874 ±(99.9%) 26.693 MB/sec [Average]
[info]   (min, avg, max) = (991.290, 1000.874, 1008.935), stdev = 6.932
[info]   CI (99.9%): [974.181, 1027.568] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm":
[info]   4742.775 ±(99.9%) 89.664 B/op [Average]
[info]   (min, avg, max) = (4718.350, 4742.775, 4776.235), stdev = 23.285
[info]   CI (99.9%): [4653.111, 4832.438] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.036 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.021), stdev = 0.009
[info]   CI (99.9%): [≈ 0, 0.053] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.079 ±(99.9%) 0.170 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.079, 0.099), stdev = 0.044
[info]   CI (99.9%): [≈ 0, 0.249] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.count":
[info]   15.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.000, 3.000), stdev = 0.001
[info]   CI (99.9%): [15.000, 15.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsCirce:·gc.time":
[info]   25.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 5.000, 9.000), stdev = 2.449
[info]   CI (99.9%): [25.000, 25.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson
[info] # Run progress: 88.52% complete, ETA 00:01:52
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 68645.278 ops/s
[info] # Warmup Iteration   2: 1016794.080 ops/s
[info] # Warmup Iteration   3: 1035190.117 ops/s
[info] # Warmup Iteration   4: 1010828.212 ops/s
[info] # Warmup Iteration   5: 1037725.445 ops/s
[info] Iteration   1: 1038806.913 ops/s
[info]                  ·gc.alloc.rate:                   1030.062 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          993.965 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1505.332 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   2: 1035950.790 ops/s
[info]                  ·gc.alloc.rate:                   1027.236 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1332.175 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2023.092 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.095 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   3: 1034941.226 ops/s
[info]                  ·gc.alloc.rate:               1026.220 MB/sec
[info]                  ·gc.alloc.rate.norm:          1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1003.937 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 1526.128 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     7.000 ms
[info] Iteration   4: 1042418.673 ops/s
[info]                  ·gc.alloc.rate:                   1033.638 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1008.266 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1521.707 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.063 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   5: 1051585.483 ops/s
[info]                  ·gc.alloc.rate:                   1042.742 MB/sec
[info]                  ·gc.alloc.rate.norm:              1560.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1010.953 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     1512.444 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.031 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson":
[info]   1040740.617 ±(99.9%) 25884.061 ops/s [Average]
[info]   (min, avg, max) = (1034941.226, 1040740.617, 1051585.483), stdev = 6722.008
[info]   CI (99.9%): [1014856.556, 1066624.678] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate":
[info]   1031.980 ±(99.9%) 25.682 MB/sec [Average]
[info]   (min, avg, max) = (1026.220, 1031.980, 1042.742), stdev = 6.669
[info]   CI (99.9%): [1006.298, 1057.661] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm":
[info]   1560.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (1560.000, 1560.000, 1560.000), stdev = 0.001
[info]   CI (99.9%): [1560.000, 1560.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space":
[info]   1069.859 ±(99.9%) 565.203 MB/sec [Average]
[info]   (min, avg, max) = (993.965, 1069.859, 1332.175), stdev = 146.781
[info]   CI (99.9%): [504.656, 1635.062] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm":
[info]   1617.741 ±(99.9%) 873.104 B/op [Average]
[info]   (min, avg, max) = (1505.332, 1617.741, 2023.092), stdev = 226.742
[info]   CI (99.9%): [744.637, 2490.844] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space":
[info]   0.033 ±(99.9%) 0.091 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.033, 0.062), stdev = 0.024
[info]   CI (99.9%): [≈ 0, 0.125] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.050 ±(99.9%) 0.139 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.050, 0.095), stdev = 0.036
[info]   CI (99.9%): [≈ 0, 0.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJackson:·gc.time":
[info]   24.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.800, 7.000), stdev = 1.483
[info]   CI (99.9%): [24.000, 24.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter
[info] # Run progress: 90.16% complete, ETA 00:01:36
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1716604.007 ops/s
[info] # Warmup Iteration   2: 1937549.039 ops/s
[info] # Warmup Iteration   3: 1970322.103 ops/s
[info] # Warmup Iteration   4: 1961272.383 ops/s
[info] # Warmup Iteration   5: 1974217.031 ops/s
[info] Iteration   1: 1968929.867 ops/s
[info]                  ·gc.alloc.rate:                   480.577 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          651.747 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     520.772 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.017 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   2: 1933460.765 ops/s
[info]                  ·gc.alloc.rate:               471.915 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.202 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 265.433 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     13.000 ms
[info] Iteration   3: 1972506.923 ops/s
[info]                  ·gc.alloc.rate:                   481.433 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          653.070 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     520.902 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.066 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 1963037.856 ops/s
[info]                  ·gc.alloc.rate:               479.137 MB/sec
[info]                  ·gc.alloc.rate.norm:          384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      326.873 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 261.969 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 1973006.611 ops/s
[info]                  ·gc.alloc.rate:                   481.719 MB/sec
[info]                  ·gc.alloc.rate.norm:              384.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          655.355 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     522.414 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.033 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter":
[info]   1962188.404 ±(99.9%) 63709.004 ops/s [Average]
[info]   (min, avg, max) = (1933460.765, 1962188.404, 1973006.611), stdev = 16545.026
[info]   CI (99.9%): [1898479.400, 2025897.408] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate":
[info]   478.956 ±(99.9%) 15.643 MB/sec [Average]
[info]   (min, avg, max) = (471.915, 478.956, 481.719), stdev = 4.062
[info]   CI (99.9%): [463.314, 494.599] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm":
[info]   384.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (384.000, 384.000, 384.000), stdev = 0.001
[info]   CI (99.9%): [384.000, 384.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space":
[info]   522.650 ±(99.9%) 689.380 MB/sec [Average]
[info]   (min, avg, max) = (326.202, 522.650, 655.355), stdev = 179.030
[info]   CI (99.9%): [≈ 0, 1212.030] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   418.298 ±(99.9%) 543.456 B/op [Average]
[info]   (min, avg, max) = (261.969, 418.298, 522.414), stdev = 141.134
[info]   CI (99.9%): [≈ 0, 961.754] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.134 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.083), stdev = 0.035
[info]   CI (99.9%): [≈ 0, 0.163] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.023 ±(99.9%) 0.107 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.023, 0.066), stdev = 0.028
[info]   CI (99.9%): [≈ 0, 0.130] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count":
[info]   8.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.600, 2.000), stdev = 0.548
[info]   CI (99.9%): [8.000, 8.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 4.600, 13.000), stdev = 4.930
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay
[info] # Run progress: 91.80% complete, ETA 00:01:20
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 115832.257 ops/s
[info] # Warmup Iteration   2: 246066.769 ops/s
[info] # Warmup Iteration   3: 249174.488 ops/s
[info] # Warmup Iteration   4: 248603.023 ops/s
[info] # Warmup Iteration   5: 250687.594 ops/s
[info] Iteration   1: 247791.041 ops/s
[info]                  ·gc.alloc.rate:                   985.314 MB/sec
[info]                  ·gc.alloc.rate.norm:              6256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          985.291 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6255.855 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.397 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         14.000 ms
[info] Iteration   2: 251707.250 ops/s
[info]                  ·gc.alloc.rate:                   1000.876 MB/sec
[info]                  ·gc.alloc.rate.norm:              6256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          989.925 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6187.549 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.390 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   3: 247090.187 ops/s
[info]                  ·gc.alloc.rate:                   982.535 MB/sec
[info]                  ·gc.alloc.rate.norm:              6256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          995.288 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     6337.198 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.062 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.398 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   4: 246948.210 ops/s
[info]                  ·gc.alloc.rate:               981.989 MB/sec
[info]                  ·gc.alloc.rate.norm:          6256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:      1000.634 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 6374.780 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     2.000 ms
[info] Iteration   5: 251300.495 ops/s
[info]                  ·gc.alloc.rate:                   999.270 MB/sec
[info]                  ·gc.alloc.rate.norm:              6256.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          669.060 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     4188.697 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.130 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay":
[info]   248967.437 ±(99.9%) 9017.206 ops/s [Average]
[info]   (min, avg, max) = (246948.210, 248967.437, 251707.250), stdev = 2341.740
[info]   CI (99.9%): [239950.230, 257984.643] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate":
[info]   989.997 ±(99.9%) 35.817 MB/sec [Average]
[info]   (min, avg, max) = (981.989, 989.997, 1000.876), stdev = 9.302
[info]   CI (99.9%): [954.180, 1025.814] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm":
[info]   6256.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (6256.002, 6256.002, 6256.002), stdev = 0.001
[info]   CI (99.9%): [6256.002, 6256.002] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space":
[info]   928.039 ±(99.9%) 557.913 MB/sec [Average]
[info]   (min, avg, max) = (669.060, 928.039, 1000.634), stdev = 144.888
[info]   CI (99.9%): [370.127, 1485.952] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm":
[info]   5868.816 ±(99.9%) 3627.365 B/op [Average]
[info]   (min, avg, max) = (4188.697, 5868.816, 6374.780), stdev = 942.015
[info]   CI (99.9%): [2241.450, 9496.181] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.113 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.042, 0.062), stdev = 0.029
[info]   CI (99.9%): [≈ 0, 0.155] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.263 ±(99.9%) 0.718 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.263, 0.398), stdev = 0.186
[info]   CI (99.9%): [≈ 0, 0.981] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.count":
[info]   14.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.800, 3.000), stdev = 0.447
[info]   CI (99.9%): [14.000, 14.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writeMutableMapsPlay:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (2.000, 6.000, 14.000), stdev = 5.099
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce
[info] # Run progress: 93.44% complete, ETA 00:01:04
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 372297.383 ops/s
[info] # Warmup Iteration   2: 594067.043 ops/s
[info] # Warmup Iteration   3: 622020.106 ops/s
[info] # Warmup Iteration   4: 620644.085 ops/s
[info] # Warmup Iteration   5: 614617.228 ops/s
[info] Iteration   1: 617539.811 ops/s
[info]                  ·gc.alloc.rate:               1209.006 MB/sec
[info]                  ·gc.alloc.rate.norm:          3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:      998.667 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 2544.152 B/op
[info]                  ·gc.count:                    3.000 counts
[info]                  ·gc.time:                     5.000 ms
[info] Iteration   2: 613621.926 ops/s
[info]                  ·gc.alloc.rate:                   1201.335 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1338.872 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3432.621 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.107 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         8.000 ms
[info] Iteration   3: 615102.292 ops/s
[info]                  ·gc.alloc.rate:                   1204.226 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1344.889 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3439.770 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.053 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   4: 615906.321 ops/s
[info]                  ·gc.alloc.rate:                   1205.784 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1012.305 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     2585.785 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         9.000 ms
[info] Iteration   5: 616511.305 ops/s
[info]                  ·gc.alloc.rate:                   1206.986 MB/sec
[info]                  ·gc.alloc.rate.norm:              3080.001 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1352.871 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     3452.273 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.106 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce":
[info]   615736.331 ±(99.9%) 5696.720 ops/s [Average]
[info]   (min, avg, max) = (613621.926, 615736.331, 617539.811), stdev = 1479.420
[info]   CI (99.9%): [610039.611, 621433.051] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate":
[info]   1205.467 ±(99.9%) 11.152 MB/sec [Average]
[info]   (min, avg, max) = (1201.335, 1205.467, 1209.006), stdev = 2.896
[info]   CI (99.9%): [1194.316, 1216.619] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm":
[info]   3080.001 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (3080.001, 3080.001, 3080.001), stdev = 0.001
[info]   CI (99.9%): [3080.001, 3080.001] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space":
[info]   1209.521 ±(99.9%) 717.707 MB/sec [Average]
[info]   (min, avg, max) = (998.667, 1209.521, 1352.871), stdev = 186.386
[info]   CI (99.9%): [491.814, 1927.228] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm":
[info]   3090.920 ±(99.9%) 1849.861 B/op [Average]
[info]   (min, avg, max) = (2544.152, 3090.920, 3452.273), stdev = 480.403
[info]   CI (99.9%): [1241.059, 4940.781] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space":
[info]   0.029 ±(99.9%) 0.072 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.029, 0.042), stdev = 0.019
[info]   CI (99.9%): [≈ 0, 0.101] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm":
[info]   0.075 ±(99.9%) 0.183 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.075, 0.107), stdev = 0.048
[info]   CI (99.9%): [≈ 0, 0.258] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.count":
[info]   18.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.600, 4.000), stdev = 0.548
[info]   CI (99.9%): [18.000, 18.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesCirce:·gc.time":
[info]   30.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (4.000, 6.000, 9.000), stdev = 2.345
[info]   CI (99.9%): [30.000, 30.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson
[info] # Run progress: 95.08% complete, ETA 00:00:48
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 1143154.341 ops/s
[info] # Warmup Iteration   2: 1578520.707 ops/s
[info] # Warmup Iteration   3: 1623896.670 ops/s
[info] # Warmup Iteration   4: 1645296.213 ops/s
[info] # Warmup Iteration   5: 1642717.572 ops/s
[info] Iteration   1: 1654311.164 ops/s
[info]                  ·gc.alloc.rate:                   689.837 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          654.456 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     622.355 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.040 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Iteration   2: 1648883.930 ops/s
[info]                  ·gc.alloc.rate:                   687.547 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          657.755 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     627.576 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 1650321.642 ops/s
[info]                  ·gc.alloc.rate:               688.117 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      660.388 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 629.566 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   4: 1648665.713 ops/s
[info]                  ·gc.alloc.rate:               687.446 MB/sec
[info]                  ·gc.alloc.rate.norm:          656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      663.066 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 632.736 B/op
[info]                  ·gc.count:                    2.000 counts
[info]                  ·gc.time:                     3.000 ms
[info] Iteration   5: 1644127.573 ops/s
[info]                  ·gc.alloc.rate:                   685.552 MB/sec
[info]                  ·gc.alloc.rate.norm:              656.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          665.071 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     636.401 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.020 B/op
[info]                  ·gc.count:                        2.000 counts
[info]                  ·gc.time:                         7.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson":
[info]   1649262.005 ±(99.9%) 14079.585 ops/s [Average]
[info]   (min, avg, max) = (1644127.573, 1649262.005, 1654311.164), stdev = 3656.423
[info]   CI (99.9%): [1635182.420, 1663341.589] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate":
[info]   687.700 ±(99.9%) 5.916 MB/sec [Average]
[info]   (min, avg, max) = (685.552, 687.700, 689.837), stdev = 1.536
[info]   CI (99.9%): [681.784, 693.616] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm":
[info]   656.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (656.000, 656.000, 656.000), stdev = 0.001
[info]   CI (99.9%): [656.000, 656.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space":
[info]   660.147 ±(99.9%) 16.215 MB/sec [Average]
[info]   (min, avg, max) = (654.456, 660.147, 665.071), stdev = 4.211
[info]   CI (99.9%): [643.933, 676.362] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm":
[info]   629.727 ±(99.9%) 20.431 B/op [Average]
[info]   (min, avg, max) = (622.355, 629.727, 636.401), stdev = 5.306
[info]   CI (99.9%): [609.296, 650.157] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space":
[info]   0.017 ±(99.9%) 0.067 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.017, 0.042), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.084] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm":
[info]   0.016 ±(99.9%) 0.064 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.016, 0.040), stdev = 0.017
[info]   CI (99.9%): [≈ 0, 0.080] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.count":
[info]   10.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (2.000, 2.000, 2.000), stdev = 0.001
[info]   CI (99.9%): [10.000, 10.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJackson:·gc.time":
[info]   17.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.400, 7.000), stdev = 2.191
[info]   CI (99.9%): [17.000, 17.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter
[info] # Run progress: 96.72% complete, ETA 00:00:32
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 3543593.325 ops/s
[info] # Warmup Iteration   2: 3958054.397 ops/s
[info] # Warmup Iteration   3: 3930062.263 ops/s
[info] # Warmup Iteration   4: 3992454.805 ops/s
[info] # Warmup Iteration   5: 4007380.555 ops/s
[info] Iteration   1: 4027535.607 ops/s
[info]                  ·gc.alloc.rate:                   327.671 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.530 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127.164 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      2.187 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.854 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   2: 4027127.335 ops/s
[info]                  ·gc.alloc.rate:                   327.648 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.540 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     127.177 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   3: 3965873.343 ops/s
[info]                  ·gc.alloc.rate:                   322.675 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          325.895 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     129.277 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         2.000 ms
[info] Iteration   4: 3957210.844 ops/s
[info]                  ·gc.alloc.rate:               321.971 MB/sec
[info]                  ·gc.alloc.rate.norm:          128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:      325.893 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm: 129.559 B/op
[info]                  ·gc.count:                    1.000 counts
[info]                  ·gc.time:                     8.000 ms
[info] Iteration   5: 3983501.943 ops/s
[info]                  ·gc.alloc.rate:                   324.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              128.000 B/op
[info]                  ·gc.churn.PS_Eden_Space:          326.221 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     128.837 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.008 B/op
[info]                  ·gc.count:                        1.000 counts
[info]                  ·gc.time:                         1.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter":
[info]   3992249.814 ±(99.9%) 128600.865 ops/s [Average]
[info]   (min, avg, max) = (3957210.844, 3992249.814, 4027535.607), stdev = 33397.236
[info]   CI (99.9%): [3863648.949, 4120850.679] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate":
[info]   324.814 ±(99.9%) 10.431 MB/sec [Average]
[info]   (min, avg, max) = (321.971, 324.814, 327.671), stdev = 2.709
[info]   CI (99.9%): [314.382, 335.245] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm":
[info]   128.000 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (128.000, 128.000, 128.000), stdev = 0.001
[info]   CI (99.9%): [128.000, 128.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space":
[info]   325.816 ±(99.9%) 1.113 MB/sec [Average]
[info]   (min, avg, max) = (325.530, 325.816, 326.221), stdev = 0.289
[info]   CI (99.9%): [324.703, 326.929] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm":
[info]   128.403 ±(99.9%) 4.444 B/op [Average]
[info]   (min, avg, max) = (127.164, 128.403, 129.559), stdev = 1.154
[info]   CI (99.9%): [123.959, 132.847] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space":
[info]   0.450 ±(99.9%) 3.739 MB/sec [Average]
[info]   (min, avg, max) = (≈ 0, 0.450, 2.187), stdev = 0.971
[info]   CI (99.9%): [≈ 0, 4.189] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm":
[info]   0.176 ±(99.9%) 1.460 B/op [Average]
[info]   (min, avg, max) = (≈ 0, 0.176, 0.854), stdev = 0.379
[info]   CI (99.9%): [≈ 0, 1.636] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count":
[info]   5.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (1.000, 1.000, 1.000), stdev = 0.001
[info]   CI (99.9%): [5.000, 5.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time":
[info]   16.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (1.000, 3.200, 8.000), stdev = 2.775
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] # JMH version: 1.19
[info] # VM version: JDK 1.8.0_152, VM 25.152-b16
[info] # VM invoker: /usr/lib/jvm/jdk1.8.0_152/jre/bin/java
[info] # VM options: -server -Xms1g -Xmx1g -XX:NewSize=512m -XX:MaxNewSize=512m -XX:InitialCodeCacheSize=256m -XX:ReservedCodeCacheSize=256m -XX:-UseBiasedLocking -XX:+AlwaysPreTouch
[info] # Warmup: 5 iterations, 1 s each
[info] # Measurement: 5 iterations, 1 s each
[info] # Timeout: 10 min per iteration
[info] # Threads: 1 thread, will synchronize iterations
[info] # Benchmark mode: Throughput, ops/time
[info] # Benchmark: com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay
[info] # Run progress: 98.36% complete, ETA 00:00:16
[info] # Fork: 1 of 1
[info] # Warmup Iteration   1: 99496.723 ops/s
[info] # Warmup Iteration   2: 192975.293 ops/s
[info] # Warmup Iteration   3: 193968.782 ops/s
[info] # Warmup Iteration   4: 188637.424 ops/s
[info] # Warmup Iteration   5: 196376.939 ops/s
[info] Iteration   1: 198773.484 ops/s
[info]                  ·gc.alloc.rate:                   1083.539 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          987.976 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7819.644 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         3.000 ms
[info] Iteration   2: 195386.820 ops/s
[info]                  ·gc.alloc.rate:                   1065.103 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          991.963 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7987.091 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.083 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.671 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         4.000 ms
[info] Iteration   3: 195802.442 ops/s
[info]                  ·gc.alloc.rate:                   1067.341 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          997.630 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     8015.883 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Iteration   4: 195893.807 ops/s
[info]                  ·gc.alloc.rate:                   1067.797 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1336.441 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     10733.615 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.021 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.167 B/op
[info]                  ·gc.count:                        4.000 counts
[info]                  ·gc.time:                         6.000 ms
[info] Iteration   5: 198681.649 ops/s
[info]                  ·gc.alloc.rate:                   1083.065 MB/sec
[info]                  ·gc.alloc.rate.norm:              8576.002 B/op
[info]                  ·gc.churn.PS_Eden_Space:          1006.627 MB/sec
[info]                  ·gc.churn.PS_Eden_Space.norm:     7970.742 B/op
[info]                  ·gc.churn.PS_Survivor_Space:      0.042 MB/sec
[info]                  ·gc.churn.PS_Survivor_Space.norm: 0.330 B/op
[info]                  ·gc.count:                        3.000 counts
[info]                  ·gc.time:                         5.000 ms
[info] Result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay":
[info]   196907.641 ±(99.9%) 6440.683 ops/s [Average]
[info]   (min, avg, max) = (195386.820, 196907.641, 198773.484), stdev = 1672.625
[info]   CI (99.9%): [190466.958, 203348.323] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate":
[info]   1073.369 ±(99.9%) 35.142 MB/sec [Average]
[info]   (min, avg, max) = (1065.103, 1073.369, 1083.539), stdev = 9.126
[info]   CI (99.9%): [1038.227, 1108.511] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm":
[info]   8576.002 ±(99.9%) 0.001 B/op [Average]
[info]   (min, avg, max) = (8576.002, 8576.002, 8576.002), stdev = 0.001
[info]   CI (99.9%): [8576.002, 8576.003] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space":
[info]   1064.127 ±(99.9%) 586.796 MB/sec [Average]
[info]   (min, avg, max) = (987.976, 1064.127, 1336.441), stdev = 152.389
[info]   CI (99.9%): [477.332, 1650.923] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm":
[info]   8505.395 ±(99.9%) 4805.341 B/op [Average]
[info]   (min, avg, max) = (7819.644, 8505.395, 10733.615), stdev = 1247.932
[info]   CI (99.9%): [3700.054, 13310.736] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space":
[info]   0.042 ±(99.9%) 0.098 MB/sec [Average]
[info]   (min, avg, max) = (0.021, 0.042, 0.083), stdev = 0.026
[info]   CI (99.9%): [≈ 0, 0.140] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm":
[info]   0.333 ±(99.9%) 0.791 B/op [Average]
[info]   (min, avg, max) = (0.167, 0.333, 0.671), stdev = 0.206
[info]   CI (99.9%): [≈ 0, 1.124] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.count":
[info]   16.000 ±(99.9%) 0.001 counts [Sum]
[info]   (min, avg, max) = (3.000, 3.200, 4.000), stdev = 0.447
[info]   CI (99.9%): [16.000, 16.000] (assumes normal distribution)
[info] Secondary result "com.github.plokhotnyuk.jsoniter_scala.JsonCodecBenchmark.writePrimitivesPlay:·gc.time":
[info]   23.000 ±(99.9%) 0.001 ms [Sum]
[info]   (min, avg, max) = (3.000, 4.600, 6.000), stdev = 1.140
[info]   CI (99.9%): [23.000, 23.000] (assumes normal distribution)
[info] # Run complete. Total time: 00:16:23
[info] Benchmark                                                                         Mode  Cnt         Score        Error   Units
[info] JsonCodecBenchmark.readAnyRefsCirce                                              thrpt    5   1212954.280 ±  50198.711   ops/s
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate                               thrpt    5      1899.672 ±     78.597  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.alloc.rate.norm                          thrpt    5      2464.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1898.696 ±    709.472  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2463.506 ±    950.822    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.044  MB/sec
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.065 ±      0.058    B/op
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.count                                    thrpt    5        28.000               counts
[info] JsonCodecBenchmark.readAnyRefsCirce:·gc.time                                     thrpt    5        58.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJackson                                            thrpt    5   1902853.774 ±  41222.133   ops/s
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate                             thrpt    5      1335.298 ±     28.881  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.alloc.rate.norm                        thrpt    5      1104.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1341.940 ±     37.780  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1109.522 ±     40.206    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.034 ±      0.081    B/op
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.count                                  thrpt    5        20.000               counts
[info] JsonCodecBenchmark.readAnyRefsJackson:·gc.time                                   thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readAnyRefsJsoniter                                           thrpt    5   6290426.976 ± 234392.119   ops/s
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate                            thrpt    5       799.673 ±     29.830  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.alloc.rate.norm                       thrpt    5       200.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       792.843 ±    685.588  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       198.056 ±    165.696    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.127  MB/sec
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.010 ±      0.031    B/op
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.count                                 thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readAnyRefsJsoniter:·gc.time                                  thrpt    5        20.000                   ms
[info] JsonCodecBenchmark.readAnyRefsPlay                                               thrpt    5    427488.438 ±   8381.656   ops/s
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate                                thrpt    5      1130.349 ±     22.180  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.alloc.rate.norm                           thrpt    5      4160.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1132.954 ±    712.627  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      4170.013 ±   2633.820    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.123 ±      0.338    B/op
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readAnyRefsPlay:·gc.time                                      thrpt    5        38.000                   ms
[info] JsonCodecBenchmark.readArraysCirce                                               thrpt    5    643760.187 ±   9671.082   ops/s
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate                                thrpt    5      2098.300 ±     31.618  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.alloc.rate.norm                           thrpt    5      5128.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space                       thrpt    5      2104.619 ±    579.104  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5143.230 ±   1396.409    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space                   thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readArraysCirce:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.112 ±      0.254    B/op
[info] JsonCodecBenchmark.readArraysCirce:·gc.count                                     thrpt    5        31.000               counts
[info] JsonCodecBenchmark.readArraysCirce:·gc.time                                      thrpt    5        54.000                   ms
[info] JsonCodecBenchmark.readArraysJackson                                             thrpt    5   1250927.371 ±  40226.550   ops/s
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate                              thrpt    5      1176.786 ±     37.844  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.alloc.rate.norm                         thrpt    5      1480.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space                     thrpt    5      1136.035 ±    707.634  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Eden_Space.norm                thrpt    5      1429.254 ±    904.550    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space                 thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readArraysJackson:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.032 ±      0.132    B/op
[info] JsonCodecBenchmark.readArraysJackson:·gc.count                                   thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJackson:·gc.time                                    thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.readArraysJsoniter                                            thrpt    5   2519823.984 ±  96750.867   ops/s
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate                             thrpt    5      1153.210 ±     44.276  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.alloc.rate.norm                        thrpt    5       720.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space                    thrpt    5      1135.319 ±    694.998  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Eden_Space.norm               thrpt    5       708.624 ±    426.181    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.031 ±      0.057    B/op
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.count                                  thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysJsoniter:·gc.time                                   thrpt    5        33.000                   ms
[info] JsonCodecBenchmark.readArraysPlay                                                thrpt    5    201565.029 ±   3802.275   ops/s
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate                                 thrpt    5      1185.876 ±     22.392  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.alloc.rate.norm                            thrpt    5      9256.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space                        thrpt    5      1134.356 ±    705.923  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Eden_Space.norm                   thrpt    5      8859.003 ±   5666.391    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space                    thrpt    5         0.037 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readArraysPlay:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.293 ±      0.932    B/op
[info] JsonCodecBenchmark.readArraysPlay:·gc.count                                      thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readArraysPlay:·gc.time                                       thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.readBitSetsJackson                                            thrpt    5   1616621.820 ±  66629.359   ops/s
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate                             thrpt    5      1027.592 ±     42.396  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.alloc.rate.norm                        thrpt    5      1000.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1063.477 ±    539.917  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5      1035.685 ±    555.289    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.028 ±      0.088    B/op
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.count                                  thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readBitSetsJackson:·gc.time                                   thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.readBitSetsJsoniter                                           thrpt    5   5748068.269 ± 157133.773   ops/s
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate                            thrpt    5       613.811 ±     16.784  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.alloc.rate.norm                       thrpt    5       168.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5       656.158 ±     12.298  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       179.596 ±      4.473    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.067 ±      0.088  MB/sec
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.018 ±      0.024    B/op
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.count                                 thrpt    5        10.000               counts
[info] JsonCodecBenchmark.readBitSetsJsoniter:·gc.time                                  thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readBitSetsPlay                                               thrpt    5    245013.699 ±   7093.874   ops/s
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate                                thrpt    5      1120.129 ±     32.351  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.alloc.rate.norm                           thrpt    5      7192.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1130.959 ±    680.233  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      7267.168 ±   4541.544    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.375 ±      0.775    B/op
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.count                                     thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readBitSetsPlay:·gc.time                                      thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsCirce                                        thrpt    5    551025.122 ±   7229.751   ops/s
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate                         thrpt    5      1829.688 ±     24.084  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.alloc.rate.norm                    thrpt    5      5224.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space                thrpt    5      1829.777 ±    719.058  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Eden_Space.norm           thrpt    5      5224.113 ±   2044.665    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space            thrpt    5         0.062 ±      0.160  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.178 ±      0.456    B/op
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.count                              thrpt    5        27.000               counts
[info] JsonCodecBenchmark.readExtractFieldsCirce:·gc.time                               thrpt    5        46.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJackson                                      thrpt    5    692515.598 ±   9902.426   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate                       thrpt    5       859.241 ±     12.369  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.alloc.rate.norm                  thrpt    5      1952.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space              thrpt    5       864.225 ±    707.364  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Eden_Space.norm         thrpt    5      1963.957 ±   1619.836    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space          thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.047 ±      0.130    B/op
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.count                            thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJackson:·gc.time                             thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsJsoniter                                     thrpt    5   4313166.876 ±  41329.215   ops/s
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate                      thrpt    5       197.391 ±      1.890  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.alloc.rate.norm                 thrpt    5        72.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space             thrpt    5       167.470 ±    598.775  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Eden_Space.norm        thrpt    5        61.177 ±    218.700    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space         thrpt    5         0.452 ±      3.780  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.churn.PS_Survivor_Space.norm    thrpt    5         0.165 ±      1.380    B/op
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.count                           thrpt    5         3.000               counts
[info] JsonCodecBenchmark.readExtractFieldsJsoniter:·gc.time                            thrpt    5         8.000                   ms
[info] JsonCodecBenchmark.readExtractFieldsPlay                                         thrpt    5    215383.263 ±   4095.897   ops/s
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate                          thrpt    5      1182.822 ±     22.545  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.alloc.rate.norm                     thrpt    5      8640.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space                 thrpt    5      1200.397 ±    703.925  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Eden_Space.norm            thrpt    5      8765.638 ±   5057.867    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space             thrpt    5         0.050 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.366 ±      0.900    B/op
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.count                               thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readExtractFieldsPlay:·gc.time                                thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter                                    thrpt    5   3263128.151 ± 113216.622   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate                     thrpt    5      1543.135 ±     53.681  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.alloc.rate.norm                thrpt    5       744.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space            thrpt    5      1550.049 ±    692.386  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm       thrpt    5       746.911 ±    315.613    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space        thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.028 ±      0.050    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.count                          thrpt    5        23.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsJsoniter:·gc.time                           thrpt    5        44.000                   ms
[info] JsonCodecBenchmark.readIntAndLongMapsPlay                                        thrpt    5    237592.048 ±  10051.480   ops/s
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate                         thrpt    5      1277.007 ±     54.069  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.alloc.rate.norm                    thrpt    5      8456.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space                thrpt    5      1270.934 ±    565.194  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm           thrpt    5      8417.659 ±   3799.242    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space            thrpt    5         0.067 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.442 ±      0.697    B/op
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.count                              thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readIntAndLongMapsPlay:·gc.time                               thrpt    5        52.000                   ms
[info] JsonCodecBenchmark.readIterablesCirce                                            thrpt    5    558588.129 ±  14891.910   ops/s
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate                             thrpt    5      1962.712 ±     52.280  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.alloc.rate.norm                        thrpt    5      5528.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space                    thrpt    5      1899.418 ±    721.876  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Eden_Space.norm               thrpt    5      5348.705 ±   1979.785    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space                thrpt    5         0.058 ±      0.036  MB/sec
[info] JsonCodecBenchmark.readIterablesCirce:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.164 ±      0.102    B/op
[info] JsonCodecBenchmark.readIterablesCirce:·gc.count                                  thrpt    5        28.000               counts
[info] JsonCodecBenchmark.readIterablesCirce:·gc.time                                   thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.readIterablesJackson                                          thrpt    5    521623.431 ±  22066.474   ops/s
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate                           thrpt    5       530.493 ±     22.427  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.alloc.rate.norm                      thrpt    5      1600.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space                  thrpt    5       526.123 ±    691.137  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Eden_Space.norm             thrpt    5      1584.405 ±   2053.970    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±      0.154  MB/sec
[info] JsonCodecBenchmark.readIterablesJackson:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.137 ±      0.462    B/op
[info] JsonCodecBenchmark.readIterablesJackson:·gc.count                                thrpt    5         8.000               counts
[info] JsonCodecBenchmark.readIterablesJackson:·gc.time                                 thrpt    5        17.000                   ms
[info] JsonCodecBenchmark.readIterablesJsoniter                                         thrpt    5   2924716.979 ±  33987.272   ops/s
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate                          thrpt    5       728.742 ±      8.419  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.alloc.rate.norm                     thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space                 thrpt    5       724.943 ±    561.441  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Eden_Space.norm            thrpt    5       390.036 ±    304.390    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space             thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.022 ±      0.053    B/op
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readIterablesJsoniter:·gc.time                                thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.readIterablesPlay                                             thrpt    5    165288.286 ±   6142.596   ops/s
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate                              thrpt    5      1132.126 ±     41.953  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.alloc.rate.norm                         thrpt    5     10776.003 ±      0.001    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space                     thrpt    5      1131.281 ±    681.985  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Eden_Space.norm                thrpt    5     10759.549 ±   6197.458    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space                 thrpt    5         0.050 ±      0.091  MB/sec
[info] JsonCodecBenchmark.readIterablesPlay:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.475 ±      0.866    B/op
[info] JsonCodecBenchmark.readIterablesPlay:·gc.count                                   thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readIterablesPlay:·gc.time                                    thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.readMapsCirce                                                 thrpt    5    457159.336 ±  15707.242   ops/s
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate                                  thrpt    5      1624.935 ±     55.680  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.alloc.rate.norm                             thrpt    5      5592.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space                         thrpt    5      1623.392 ±    589.537  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5588.228 ±   2088.932    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±      0.122  MB/sec
[info] JsonCodecBenchmark.readMapsCirce:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.101 ±      0.419    B/op
[info] JsonCodecBenchmark.readMapsCirce:·gc.count                                       thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMapsCirce:·gc.time                                        thrpt    5        44.000                   ms
[info] JsonCodecBenchmark.readMapsJackson                                               thrpt    5    852116.277 ±  33990.822   ops/s
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate                                thrpt    5      1005.712 ±     39.015  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.alloc.rate.norm                           thrpt    5      1856.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space                       thrpt    5      1069.540 ±    554.106  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Eden_Space.norm                  thrpt    5      1974.336 ±   1041.712    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space                   thrpt    5         0.058 ±      0.119  MB/sec
[info] JsonCodecBenchmark.readMapsJackson:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.107 ±      0.220    B/op
[info] JsonCodecBenchmark.readMapsJackson:·gc.count                                     thrpt    5        16.000               counts
[info] JsonCodecBenchmark.readMapsJackson:·gc.time                                      thrpt    5        49.000                   ms
[info] JsonCodecBenchmark.readMapsJsoniter                                              thrpt    5   3265838.120 ±  50904.503   ops/s
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate                               thrpt    5       813.721 ±     12.685  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.alloc.rate.norm                          thrpt    5       392.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space                      thrpt    5       792.616 ±    685.614  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Eden_Space.norm                 thrpt    5       382.074 ±    335.754    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space                  thrpt    5         0.050 ±      0.146  MB/sec
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.024 ±      0.070    B/op
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.count                                    thrpt    5        12.000               counts
[info] JsonCodecBenchmark.readMapsJsoniter:·gc.time                                     thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.readMapsPlay                                                  thrpt    5    247584.778 ±   5990.287   ops/s
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate                                   thrpt    5      1287.890 ±     31.369  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.alloc.rate.norm                              thrpt    5      8184.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space                          thrpt    5      1270.939 ±    576.064  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Eden_Space.norm                     thrpt    5      8075.024 ±   3615.652    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space                      thrpt    5         0.042 ±      0.188  MB/sec
[info] JsonCodecBenchmark.readMapsPlay:·gc.churn.PS_Survivor_Space.norm                 thrpt    5         0.264 ±      1.187    B/op
[info] JsonCodecBenchmark.readMapsPlay:·gc.count                                        thrpt    5        19.000               counts
[info] JsonCodecBenchmark.readMapsPlay:·gc.time                                         thrpt    5        40.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJackson                                        thrpt    5    647326.872 ±  18584.652   ops/s
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate                         thrpt    5       839.474 ±     24.217  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.alloc.rate.norm                    thrpt    5      2040.001 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space                thrpt    5       864.216 ±    708.934  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5      2098.896 ±   1695.566    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.054 ±      0.245  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.132 ±      0.598    B/op
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.count                              thrpt    5        13.000               counts
[info] JsonCodecBenchmark.readMutableMapsJackson:·gc.time                               thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.readMutableMapsJsoniter                                       thrpt    5   2385221.672 ±  53494.192   ops/s
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate                        thrpt    5      1625.248 ±     36.518  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.alloc.rate.norm                   thrpt    5      1072.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space               thrpt    5      1617.891 ±    563.018  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5      1066.874 ±    357.842    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.075 ±      0.072  MB/sec
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.049 ±      0.047    B/op
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.count                             thrpt    5        24.000               counts
[info] JsonCodecBenchmark.readMutableMapsJsoniter:·gc.time                              thrpt    5        27.000                   ms
[info] JsonCodecBenchmark.readMutableMapsPlay                                           thrpt    5    227392.302 ±   8616.599   ops/s
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate                            thrpt    5      1200.199 ±     45.373  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.alloc.rate.norm                       thrpt    5      8304.002 ±      0.001    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1201.918 ±    724.069  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8309.146 ±   4799.550    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.058 ±      0.105  MB/sec
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.403 ±      0.722    B/op
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.count                                 thrpt    5        18.000               counts
[info] JsonCodecBenchmark.readMutableMapsPlay:·gc.time                                  thrpt    5        40.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJackson                                         thrpt    5    994941.789 ±  21597.792   ops/s
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate                          thrpt    5       723.464 ±     15.669  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.alloc.rate.norm                     thrpt    5      1144.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       723.779 ±    557.519  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5      1145.370 ±    907.214    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.026 ±      0.107    B/op
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.readPrimitivesJackson:·gc.time                                thrpt    5        17.000                   ms
[info] JsonCodecBenchmark.readPrimitivesJsoniter                                        thrpt    5   2978125.715 ± 124007.848   ops/s
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate                         thrpt    5        90.863 ±      3.782  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.alloc.rate.norm                    thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       102.361 ±    539.722  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5        53.877 ±    284.088    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         1.150 ±      9.900  MB/sec
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.609 ±      5.243    B/op
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.count                              thrpt    5         2.000               counts
[info] JsonCodecBenchmark.readPrimitivesJsoniter:·gc.time                               thrpt    5         5.000                   ms
[info] JsonCodecBenchmark.readPrimitivesPlay                                            thrpt    5    165824.832 ±   3499.818   ops/s
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate                             thrpt    5      1101.240 ±     23.325  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.alloc.rate.norm                        thrpt    5     10448.003 ±      0.001    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1131.424 ±    692.327  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5     10735.902 ±   6613.969    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.475 ±      0.684    B/op
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.count                                  thrpt    5        17.000               counts
[info] JsonCodecBenchmark.readPrimitivesPlay:·gc.time                                   thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsCirce                                             thrpt    5   1317638.961 ±  51508.395   ops/s
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate                              thrpt    5      1474.041 ±     57.515  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.alloc.rate.norm                         thrpt    5      1760.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space                     thrpt    5      1417.497 ±    585.692  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Eden_Space.norm                thrpt    5      1692.442 ±    692.376    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space                 thrpt    5         0.021 ±      0.057  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.025 ±      0.067    B/op
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.count                                   thrpt    5        21.000               counts
[info] JsonCodecBenchmark.writeAnyRefsCirce:·gc.time                                    thrpt    5        34.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJackson                                           thrpt    5   3870423.330 ± 159418.275   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate                            thrpt    5      1062.776 ±     43.692  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.alloc.rate.norm                       thrpt    5       432.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1070.247 ±    567.166  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       435.120 ±    232.956    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.033 ±      0.044  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.014 ±      0.018    B/op
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.count                                 thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJackson:·gc.time                                  thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsJsoniter                                          thrpt    5  13985553.898 ± 446508.673   ops/s
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate                           thrpt    5       426.698 ±     13.628  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.alloc.rate.norm                      thrpt    5        48.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       456.684 ±    687.379  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5        51.393 ±     77.571    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.033 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.004 ±      0.014    B/op
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.count                                thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeAnyRefsJsoniter:·gc.time                                 thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.writeAnyRefsPlay                                              thrpt    5    879086.327 ±  31749.669   ops/s
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate                               thrpt    5      1323.153 ±     47.829  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.alloc.rate.norm                          thrpt    5      2368.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1272.701 ±    565.931  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      2278.009 ±   1022.274    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.046 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.082 ±      0.186    B/op
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.count                                    thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeAnyRefsPlay:·gc.time                                     thrpt    5        37.000                   ms
[info] JsonCodecBenchmark.writeArraysCirce                                              thrpt    5    748061.028 ±  22218.400   ops/s
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate                               thrpt    5      1810.611 ±     53.893  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.alloc.rate.norm                          thrpt    5      3808.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space                      thrpt    5      1825.953 ±    723.480  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Eden_Space.norm                 thrpt    5      3838.655 ±   1437.149    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space                  thrpt    5         0.054 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeArraysCirce:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.114 ±      0.152    B/op
[info] JsonCodecBenchmark.writeArraysCirce:·gc.count                                    thrpt    5        27.000               counts
[info] JsonCodecBenchmark.writeArraysCirce:·gc.time                                     thrpt    5        43.000                   ms
[info] JsonCodecBenchmark.writeArraysJackson                                            thrpt    5   2459038.877 ±  81993.657   ops/s
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate                             thrpt    5      1425.491 ±     47.548  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.alloc.rate.norm                        thrpt    5       912.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space                    thrpt    5      1416.392 ±    594.580  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Eden_Space.norm               thrpt    5       906.716 ±    405.167    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space                thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysJackson:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.021 ±      0.059    B/op
[info] JsonCodecBenchmark.writeArraysJackson:·gc.count                                  thrpt    5        21.000               counts
[info] JsonCodecBenchmark.writeArraysJackson:·gc.time                                   thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.writeArraysJsoniter                                           thrpt    5   5707440.920 ± 138181.973   ops/s
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate                            thrpt    5      1044.802 ±     25.322  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.alloc.rate.norm                       thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space                   thrpt    5      1064.794 ±    545.612  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Eden_Space.norm              thrpt    5       293.376 ±    144.330    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space               thrpt    5         0.071 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.019 ±      0.019    B/op
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.count                                 thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeArraysJsoniter:·gc.time                                  thrpt    5        23.000                   ms
[info] JsonCodecBenchmark.writeArraysPlay                                               thrpt    5    326961.861 ±   9003.501   ops/s
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate                                thrpt    5      1167.137 ±     32.146  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.alloc.rate.norm                           thrpt    5      5616.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space                       thrpt    5      1200.124 ±    703.079  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Eden_Space.norm                  thrpt    5      5775.837 ±   3415.243    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space                   thrpt    5         0.054 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeArraysPlay:·gc.churn.PS_Survivor_Space.norm              thrpt    5         0.261 ±      0.442    B/op
[info] JsonCodecBenchmark.writeArraysPlay:·gc.count                                     thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writeArraysPlay:·gc.time                                      thrpt    5        41.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJackson                                           thrpt    5   2699423.330 ±  60032.839   ops/s
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate                            thrpt    5      1153.058 ±     25.588  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.alloc.rate.norm                       thrpt    5       672.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space                   thrpt    5      1141.134 ±    724.148  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Eden_Space.norm              thrpt    5       665.263 ±    428.106    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space               thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.017 ±      0.054    B/op
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.count                                 thrpt    5        17.000               counts
[info] JsonCodecBenchmark.writeBitSetsJackson:·gc.time                                  thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeBitSetsJsoniter                                          thrpt    5   4480929.014 ±  79929.120   ops/s
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate                           thrpt    5       820.264 ±     14.643  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.alloc.rate.norm                      thrpt    5       288.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space                  thrpt    5       859.055 ±    697.522  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Eden_Space.norm             thrpt    5       301.673 ±    246.009    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space              thrpt    5         0.046 ±      0.132  MB/sec
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.016 ±      0.047    B/op
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.count                                thrpt    5        13.000               counts
[info] JsonCodecBenchmark.writeBitSetsJsoniter:·gc.time                                 thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeBitSetsPlay                                              thrpt    5    500203.742 ±  12474.450   ops/s
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate                               thrpt    5      1480.331 ±     36.908  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.alloc.rate.norm                          thrpt    5      4656.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space                      thrpt    5      1478.875 ±    733.360  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Eden_Space.norm                 thrpt    5      4652.377 ±   2339.524    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space                  thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.183 ±      0.208    B/op
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.count                                    thrpt    5        22.000               counts
[info] JsonCodecBenchmark.writeBitSetsPlay:·gc.time                                     thrpt    5        35.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson                                    thrpt    5   1008452.253 ±  19881.824   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate                     thrpt    5      1246.092 ±     24.521  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.alloc.rate.norm                thrpt    5      1944.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space            thrpt    5      1275.984 ±    577.892  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Eden_Space.norm       thrpt    5      1991.363 ±    925.656    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space        thrpt    5         0.029 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.churn.PS_Survivor_Space.norm   thrpt    5         0.046 ±      0.144    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.count                          thrpt    5        19.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJackson:·gc.time                           thrpt    5        29.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter                                   thrpt    5   2377354.072 ±  77011.790   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate                    thrpt    5       423.112 ±     13.694  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.alloc.rate.norm               thrpt    5       280.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space           thrpt    5       456.695 ±    687.415  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Eden_Space.norm      thrpt    5       301.663 ±    446.896    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space       thrpt    5         0.025 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.churn.PS_Survivor_Space.norm  thrpt    5         0.016 ±      0.069    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.count                         thrpt    5         7.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsJsoniter:·gc.time                          thrpt    5        10.000                   ms
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay                                       thrpt    5    247804.289 ±   5598.223   ops/s
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate                        thrpt    5       971.532 ±     21.995  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.alloc.rate.norm                   thrpt    5      6168.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space               thrpt    5       993.688 ±     29.666  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Eden_Space.norm          thrpt    5      6308.754 ±    186.591    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space           thrpt    5         0.058 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.371 ±      0.434    B/op
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.count                             thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeIntAndLongMapsPlay:·gc.time                              thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writeIterablesCirce                                           thrpt    5    590757.752 ±  22480.967   ops/s
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate                            thrpt    5      1513.983 ±     57.709  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.alloc.rate.norm                       thrpt    5      4032.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space                   thrpt    5      1553.439 ±    710.715  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Eden_Space.norm              thrpt    5      4134.103 ±   1766.478    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space               thrpt    5         0.050 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.133 ±      0.190    B/op
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.count                                 thrpt    5        23.000               counts
[info] JsonCodecBenchmark.writeIterablesCirce:·gc.time                                  thrpt    5        26.000                   ms
[info] JsonCodecBenchmark.writeIterablesJackson                                         thrpt    5   1230943.893 ±  25376.080   ops/s
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate                          thrpt    5       757.367 ±     15.610  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.alloc.rate.norm                     thrpt    5       968.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space                 thrpt    5       728.572 ±    570.119  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Eden_Space.norm            thrpt    5       931.933 ±    750.129    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.021 ±      0.085    B/op
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.count                               thrpt    5        11.000               counts
[info] JsonCodecBenchmark.writeIterablesJackson:·gc.time                                thrpt    5        22.000                   ms
[info] JsonCodecBenchmark.writeIterablesJsoniter                                        thrpt    5   4767184.942 ±  51736.533   ops/s
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate                         thrpt    5       799.947 ±      8.674  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.alloc.rate.norm                    thrpt    5       264.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space                thrpt    5       792.345 ±    696.577  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Eden_Space.norm           thrpt    5       261.411 ±    228.043    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space            thrpt    5         0.054 ±      0.122  MB/sec
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.018 ±      0.040    B/op
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.count                              thrpt    5        12.000               counts
[info] JsonCodecBenchmark.writeIterablesJsoniter:·gc.time                               thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.writeIterablesPlay                                            thrpt    5    393662.884 ±   8840.986   ops/s
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate                             thrpt    5      1363.182 ±     30.558  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.alloc.rate.norm                        thrpt    5      5448.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space                    thrpt    5      1340.122 ±     38.086  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Eden_Space.norm               thrpt    5      5356.033 ±    215.865    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space                thrpt    5         0.042 ±      0.080  MB/sec
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.churn.PS_Survivor_Space.norm           thrpt    5         0.166 ±      0.320    B/op
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.count                                  thrpt    5        20.000               counts
[info] JsonCodecBenchmark.writeIterablesPlay:·gc.time                                   thrpt    5        36.000                   ms
[info] JsonCodecBenchmark.writeMapsCirce                                                thrpt    5    351057.999 ±   6449.289   ops/s
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate                                 thrpt    5      1044.360 ±     19.266  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.alloc.rate.norm                            thrpt    5      4680.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space                        thrpt    5      1064.068 ±    588.858  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Eden_Space.norm                   thrpt    5      4770.581 ±   2725.158    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space                    thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writeMapsCirce:·gc.churn.PS_Survivor_Space.norm               thrpt    5         0.131 ±      0.322    B/op
[info] JsonCodecBenchmark.writeMapsCirce:·gc.count                                      thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsCirce:·gc.time                                       thrpt    5        31.000                   ms
[info] JsonCodecBenchmark.writeMapsJackson                                              thrpt    5   1017649.488 ±  18386.875   ops/s
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate                               thrpt    5      1055.643 ±     19.119  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.alloc.rate.norm                          thrpt    5      1632.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space                      thrpt    5      1071.198 ±    589.479  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Eden_Space.norm                 thrpt    5      1655.666 ±    895.146    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space                  thrpt    5         0.037 ±      0.105  MB/sec
[info] JsonCodecBenchmark.writeMapsJackson:·gc.churn.PS_Survivor_Space.norm             thrpt    5         0.058 ±      0.161    B/op
[info] JsonCodecBenchmark.writeMapsJackson:·gc.count                                    thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMapsJackson:·gc.time                                     thrpt    5        21.000                   ms
[info] JsonCodecBenchmark.writeMapsJsoniter                                             thrpt    5   2519327.521 ±  61081.048   ops/s
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate                              thrpt    5       563.681 ±     13.669  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.alloc.rate.norm                         thrpt    5       352.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space                     thrpt    5       589.244 ±    561.978  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Eden_Space.norm                thrpt    5       367.715 ±    347.721    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space                 thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.churn.PS_Survivor_Space.norm            thrpt    5         0.026 ±      0.071    B/op
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.count                                   thrpt    5         9.000               counts
[info] JsonCodecBenchmark.writeMapsJsoniter:·gc.time                                    thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.writeMapsPlay                                                 thrpt    5    272102.281 ±   2567.501   ops/s
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate                                  thrpt    5       989.299 ±      9.334  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.alloc.rate.norm                             thrpt    5      5720.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space                         thrpt    5       993.682 ±     29.619  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Eden_Space.norm                    thrpt    5      5745.348 ±    163.272    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space                     thrpt    5         0.029 ±      0.108  MB/sec
[info] JsonCodecBenchmark.writeMapsPlay:·gc.churn.PS_Survivor_Space.norm                thrpt    5         0.169 ±      0.623    B/op
[info] JsonCodecBenchmark.writeMapsPlay:·gc.count                                       thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMapsPlay:·gc.time                                        thrpt    5        28.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsCirce                                         thrpt    5    332006.615 ±   5868.362   ops/s
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate                          thrpt    5       980.873 ±     17.292  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.alloc.rate.norm                     thrpt    5      4648.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space                 thrpt    5      1000.874 ±     26.693  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Eden_Space.norm            thrpt    5      4742.775 ±     89.664    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space             thrpt    5         0.017 ±      0.036  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.churn.PS_Survivor_Space.norm        thrpt    5         0.079 ±      0.170    B/op
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.count                               thrpt    5        15.000               counts
[info] JsonCodecBenchmark.writeMutableMapsCirce:·gc.time                                thrpt    5        25.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJackson                                       thrpt    5   1040740.617 ±  25884.061   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate                        thrpt    5      1031.980 ±     25.682  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.alloc.rate.norm                   thrpt    5      1560.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space               thrpt    5      1069.859 ±    565.203  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Eden_Space.norm          thrpt    5      1617.741 ±    873.104    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space           thrpt    5         0.033 ±      0.091  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.050 ±      0.139    B/op
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.count                             thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJackson:·gc.time                              thrpt    5        24.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsJsoniter                                      thrpt    5   1962188.404 ±  63709.004   ops/s
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate                       thrpt    5       478.956 ±     15.643  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.alloc.rate.norm                  thrpt    5       384.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space              thrpt    5       522.650 ±    689.380  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Eden_Space.norm         thrpt    5       418.298 ±    543.456    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space          thrpt    5         0.029 ±      0.134  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.churn.PS_Survivor_Space.norm     thrpt    5         0.023 ±      0.107    B/op
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.count                            thrpt    5         8.000               counts
[info] JsonCodecBenchmark.writeMutableMapsJsoniter:·gc.time                             thrpt    5        23.000                   ms
[info] JsonCodecBenchmark.writeMutableMapsPlay                                          thrpt    5    248967.437 ±   9017.206   ops/s
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate                           thrpt    5       989.997 ±     35.817  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.alloc.rate.norm                      thrpt    5      6256.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space                  thrpt    5       928.039 ±    557.913  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Eden_Space.norm             thrpt    5      5868.816 ±   3627.365    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space              thrpt    5         0.042 ±      0.113  MB/sec
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.263 ±      0.718    B/op
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.count                                thrpt    5        14.000               counts
[info] JsonCodecBenchmark.writeMutableMapsPlay:·gc.time                                 thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.writePrimitivesCirce                                          thrpt    5    615736.331 ±   5696.720   ops/s
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate                           thrpt    5      1205.467 ±     11.152  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.alloc.rate.norm                      thrpt    5      3080.001 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space                  thrpt    5      1209.521 ±    717.707  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Eden_Space.norm             thrpt    5      3090.920 ±   1849.861    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space              thrpt    5         0.029 ±      0.072  MB/sec
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.churn.PS_Survivor_Space.norm         thrpt    5         0.075 ±      0.183    B/op
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.count                                thrpt    5        18.000               counts
[info] JsonCodecBenchmark.writePrimitivesCirce:·gc.time                                 thrpt    5        30.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJackson                                        thrpt    5   1649262.005 ±  14079.585   ops/s
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate                         thrpt    5       687.700 ±      5.916  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.alloc.rate.norm                    thrpt    5       656.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space                thrpt    5       660.147 ±     16.215  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Eden_Space.norm           thrpt    5       629.727 ±     20.431    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space            thrpt    5         0.017 ±      0.067  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.churn.PS_Survivor_Space.norm       thrpt    5         0.016 ±      0.064    B/op
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.count                              thrpt    5        10.000               counts
[info] JsonCodecBenchmark.writePrimitivesJackson:·gc.time                               thrpt    5        17.000                   ms
[info] JsonCodecBenchmark.writePrimitivesJsoniter                                       thrpt    5   3992249.814 ± 128600.865   ops/s
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate                        thrpt    5       324.814 ±     10.431  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.alloc.rate.norm                   thrpt    5       128.000 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space               thrpt    5       325.816 ±      1.113  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Eden_Space.norm          thrpt    5       128.403 ±      4.444    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space           thrpt    5         0.450 ±      3.739  MB/sec
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.churn.PS_Survivor_Space.norm      thrpt    5         0.176 ±      1.460    B/op
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.count                             thrpt    5         5.000               counts
[info] JsonCodecBenchmark.writePrimitivesJsoniter:·gc.time                              thrpt    5        16.000                   ms
[info] JsonCodecBenchmark.writePrimitivesPlay                                           thrpt    5    196907.641 ±   6440.683   ops/s
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate                            thrpt    5      1073.369 ±     35.142  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.alloc.rate.norm                       thrpt    5      8576.002 ±      0.001    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space                   thrpt    5      1064.127 ±    586.796  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Eden_Space.norm              thrpt    5      8505.395 ±   4805.341    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space               thrpt    5         0.042 ±      0.098  MB/sec
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.churn.PS_Survivor_Space.norm          thrpt    5         0.333 ±      0.791    B/op
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.count                                 thrpt    5        16.000               counts
[info] JsonCodecBenchmark.writePrimitivesPlay:·gc.time                                  thrpt    5        23.000                   ms
[success] Total time: 1015 s, completed Oct 31, 2017 8:01:58 PM
